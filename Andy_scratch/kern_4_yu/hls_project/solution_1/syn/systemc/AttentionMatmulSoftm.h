// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _AttentionMatmulSoftm_HH_
#define _AttentionMatmulSoftm_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "kernel_4_mul_mul_12ns_16ns_28_1_1.h"

namespace ap_rtl {

struct AttentionMatmulSoftm : public sc_module {
    // Port declarations 37
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<512> > in_V_data_V_dout;
    sc_in< sc_logic > in_V_data_V_empty_n;
    sc_out< sc_logic > in_V_data_V_read;
    sc_in< sc_lv<8> > in_V_id_V_dout;
    sc_in< sc_logic > in_V_id_V_empty_n;
    sc_out< sc_logic > in_V_id_V_read;
    sc_in< sc_lv<8> > in_V_dest_V_dout;
    sc_in< sc_logic > in_V_dest_V_empty_n;
    sc_out< sc_logic > in_V_dest_V_read;
    sc_in< sc_lv<16> > in_V_user_V_dout;
    sc_in< sc_logic > in_V_user_V_empty_n;
    sc_out< sc_logic > in_V_user_V_read;
    sc_in< sc_lv<1> > in_V_last_V_dout;
    sc_in< sc_logic > in_V_last_V_empty_n;
    sc_out< sc_logic > in_V_last_V_read;
    sc_out< sc_lv<512> > out_V_data_V_din;
    sc_in< sc_logic > out_V_data_V_full_n;
    sc_out< sc_logic > out_V_data_V_write;
    sc_out< sc_lv<8> > out_V_id_V_din;
    sc_in< sc_logic > out_V_id_V_full_n;
    sc_out< sc_logic > out_V_id_V_write;
    sc_out< sc_lv<8> > out_V_dest_V_din;
    sc_in< sc_logic > out_V_dest_V_full_n;
    sc_out< sc_logic > out_V_dest_V_write;
    sc_out< sc_lv<16> > out_V_user_V_din;
    sc_in< sc_logic > out_V_user_V_full_n;
    sc_out< sc_logic > out_V_user_V_write;
    sc_out< sc_lv<1> > out_V_last_V_din;
    sc_in< sc_logic > out_V_last_V_full_n;
    sc_out< sc_logic > out_V_last_V_write;


    // Module declarations
    AttentionMatmulSoftm(sc_module_name name);
    SC_HAS_PROCESS(AttentionMatmulSoftm);

    ~AttentionMatmulSoftm();

    sc_trace_file* mVcdFile;

    kernel_4_mul_mul_12ns_16ns_28_1_1<1,1,12,16,28>* kernel_4_mul_mul_12ns_16ns_28_1_1_U511;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > in_V_data_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln1126_reg_937;
    sc_signal< sc_logic > in_V_id_V_blk_n;
    sc_signal< sc_logic > in_V_dest_V_blk_n;
    sc_signal< sc_logic > in_V_user_V_blk_n;
    sc_signal< sc_logic > in_V_last_V_blk_n;
    sc_signal< sc_logic > out_V_data_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<1> > icmp_ln1126_reg_937_pp0_iter3_reg;
    sc_signal< sc_logic > out_V_id_V_blk_n;
    sc_signal< sc_logic > out_V_dest_V_blk_n;
    sc_signal< sc_logic > out_V_user_V_blk_n;
    sc_signal< sc_logic > out_V_last_V_blk_n;
    sc_signal< sc_lv<28> > indvar_flatten_reg_321;
    sc_signal< sc_lv<12> > i_op_assign_1_reg_332;
    sc_signal< sc_lv<12> > p_cast_fu_368_p4;
    sc_signal< sc_lv<12> > p_cast_reg_907;
    sc_signal< sc_logic > io_acc_block_signal_op18;
    sc_signal< sc_logic > io_acc_block_signal_op24;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<16> > empty_327_fu_378_p1;
    sc_signal< sc_lv<16> > empty_327_reg_912;
    sc_signal< sc_lv<28> > bound_fu_901_p2;
    sc_signal< sc_lv<28> > bound_reg_932;
    sc_signal< sc_lv<1> > icmp_ln1126_fu_390_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< sc_logic > io_acc_block_signal_op39;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< sc_logic > io_acc_block_signal_op112;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln1126_reg_937_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln1126_reg_937_pp0_iter2_reg;
    sc_signal< sc_lv<28> > add_ln1126_fu_395_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<12> > select_ln1598_fu_406_p3;
    sc_signal< sc_lv<12> > select_ln1598_reg_946;
    sc_signal< sc_lv<12> > j_fu_414_p2;
    sc_signal< sc_lv<8> > tmp_id_V_1_reg_956;
    sc_signal< sc_lv<8> > tmp_id_V_1_reg_956_pp0_iter2_reg;
    sc_signal< sc_lv<8> > tmp_id_V_1_reg_956_pp0_iter3_reg;
    sc_signal< sc_lv<8> > tmp_dest_V_1_reg_961;
    sc_signal< sc_lv<8> > tmp_dest_V_1_reg_961_pp0_iter2_reg;
    sc_signal< sc_lv<8> > tmp_dest_V_1_reg_961_pp0_iter3_reg;
    sc_signal< sc_lv<16> > tmp_user_V_3_reg_966;
    sc_signal< sc_lv<16> > tmp_user_V_3_reg_966_pp0_iter2_reg;
    sc_signal< sc_lv<16> > tmp_user_V_3_reg_966_pp0_iter3_reg;
    sc_signal< sc_lv<1> > tmp_last_V_1_reg_971;
    sc_signal< sc_lv<1> > tmp_last_V_1_reg_971_pp0_iter2_reg;
    sc_signal< sc_lv<1> > tmp_last_V_1_reg_971_pp0_iter3_reg;
    sc_signal< sc_lv<512> > select_ln891_3_fu_537_p3;
    sc_signal< sc_lv<512> > select_ln891_3_reg_976;
    sc_signal< sc_lv<1> > icmp_ln891_4_fu_551_p2;
    sc_signal< sc_lv<1> > icmp_ln891_4_reg_982;
    sc_signal< sc_lv<1> > icmp_ln891_5_fu_562_p2;
    sc_signal< sc_lv<1> > icmp_ln891_5_reg_987;
    sc_signal< sc_lv<1> > icmp_ln891_6_fu_573_p2;
    sc_signal< sc_lv<1> > icmp_ln891_6_reg_992;
    sc_signal< sc_lv<1> > icmp_ln891_7_fu_584_p2;
    sc_signal< sc_lv<1> > icmp_ln891_7_reg_997;
    sc_signal< sc_lv<1> > icmp_ln891_8_fu_595_p2;
    sc_signal< sc_lv<1> > icmp_ln891_8_reg_1002;
    sc_signal< sc_lv<1> > icmp_ln891_9_fu_606_p2;
    sc_signal< sc_lv<1> > icmp_ln891_9_reg_1007;
    sc_signal< sc_lv<1> > icmp_ln891_10_fu_617_p2;
    sc_signal< sc_lv<1> > icmp_ln891_10_reg_1012;
    sc_signal< sc_lv<1> > icmp_ln891_11_fu_628_p2;
    sc_signal< sc_lv<1> > icmp_ln891_11_reg_1017;
    sc_signal< sc_lv<1> > icmp_ln891_11_reg_1017_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln891_12_fu_639_p2;
    sc_signal< sc_lv<1> > icmp_ln891_12_reg_1022;
    sc_signal< sc_lv<1> > icmp_ln891_12_reg_1022_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln891_13_fu_650_p2;
    sc_signal< sc_lv<1> > icmp_ln891_13_reg_1027;
    sc_signal< sc_lv<1> > icmp_ln891_13_reg_1027_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln891_14_fu_661_p2;
    sc_signal< sc_lv<1> > icmp_ln891_14_reg_1032;
    sc_signal< sc_lv<1> > icmp_ln891_14_reg_1032_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln891_15_fu_672_p2;
    sc_signal< sc_lv<1> > icmp_ln891_15_reg_1037;
    sc_signal< sc_lv<1> > icmp_ln891_15_reg_1037_pp0_iter2_reg;
    sc_signal< sc_lv<512> > select_ln891_10_fu_801_p3;
    sc_signal< sc_lv<512> > select_ln891_10_reg_1042;
    sc_signal< sc_lv<512> > tmp_data_V_5_fu_894_p3;
    sc_signal< sc_lv<512> > tmp_data_V_5_reg_1048;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<1> > icmp_ln1128_fu_401_p2;
    sc_signal< sc_lv<16> > shl_ln_fu_420_p3;
    sc_signal< sc_lv<1> > icmp_ln891_fu_427_p2;
    sc_signal< sc_lv<512> > p_Result_s_fu_432_p5;
    sc_signal< sc_lv<16> > or_ln1136_fu_452_p2;
    sc_signal< sc_lv<512> > select_ln891_fu_444_p3;
    sc_signal< sc_lv<1> > icmp_ln891_1_fu_458_p2;
    sc_signal< sc_lv<512> > p_Result_35_1_fu_463_p5;
    sc_signal< sc_lv<16> > or_ln1136_1_fu_483_p2;
    sc_signal< sc_lv<512> > select_ln891_1_fu_475_p3;
    sc_signal< sc_lv<1> > icmp_ln891_2_fu_489_p2;
    sc_signal< sc_lv<512> > p_Result_35_2_fu_494_p5;
    sc_signal< sc_lv<16> > or_ln1136_2_fu_514_p2;
    sc_signal< sc_lv<512> > select_ln891_2_fu_506_p3;
    sc_signal< sc_lv<1> > icmp_ln891_3_fu_520_p2;
    sc_signal< sc_lv<512> > p_Result_35_3_fu_525_p5;
    sc_signal< sc_lv<16> > or_ln1136_3_fu_545_p2;
    sc_signal< sc_lv<16> > or_ln1136_4_fu_556_p2;
    sc_signal< sc_lv<16> > or_ln1136_5_fu_567_p2;
    sc_signal< sc_lv<16> > or_ln1136_6_fu_578_p2;
    sc_signal< sc_lv<16> > or_ln1136_7_fu_589_p2;
    sc_signal< sc_lv<16> > or_ln1136_8_fu_600_p2;
    sc_signal< sc_lv<16> > or_ln1136_9_fu_611_p2;
    sc_signal< sc_lv<16> > or_ln1136_10_fu_622_p2;
    sc_signal< sc_lv<16> > or_ln1136_11_fu_633_p2;
    sc_signal< sc_lv<16> > or_ln1136_12_fu_644_p2;
    sc_signal< sc_lv<16> > or_ln1136_13_fu_655_p2;
    sc_signal< sc_lv<16> > or_ln1136_14_fu_666_p2;
    sc_signal< sc_lv<512> > p_Result_35_4_fu_677_p5;
    sc_signal< sc_lv<512> > select_ln891_4_fu_688_p3;
    sc_signal< sc_lv<512> > p_Result_35_5_fu_694_p5;
    sc_signal< sc_lv<512> > select_ln891_5_fu_706_p3;
    sc_signal< sc_lv<512> > p_Result_35_6_fu_713_p5;
    sc_signal< sc_lv<512> > select_ln891_6_fu_725_p3;
    sc_signal< sc_lv<512> > p_Result_35_7_fu_732_p5;
    sc_signal< sc_lv<512> > select_ln891_7_fu_744_p3;
    sc_signal< sc_lv<512> > p_Result_35_8_fu_751_p5;
    sc_signal< sc_lv<512> > select_ln891_8_fu_763_p3;
    sc_signal< sc_lv<512> > p_Result_35_9_fu_770_p5;
    sc_signal< sc_lv<512> > select_ln891_9_fu_782_p3;
    sc_signal< sc_lv<512> > p_Result_35_s_fu_789_p5;
    sc_signal< sc_lv<512> > p_Result_35_10_fu_808_p5;
    sc_signal< sc_lv<512> > select_ln891_11_fu_819_p3;
    sc_signal< sc_lv<512> > p_Result_35_11_fu_825_p5;
    sc_signal< sc_lv<512> > select_ln891_12_fu_837_p3;
    sc_signal< sc_lv<512> > p_Result_35_12_fu_844_p5;
    sc_signal< sc_lv<512> > select_ln891_13_fu_856_p3;
    sc_signal< sc_lv<512> > p_Result_35_13_fu_863_p5;
    sc_signal< sc_lv<512> > select_ln891_14_fu_875_p3;
    sc_signal< sc_lv<512> > p_Result_35_14_fu_882_p5;
    sc_signal< sc_lv<12> > bound_fu_901_p0;
    sc_signal< sc_lv<16> > bound_fu_901_p1;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<28> > bound_fu_901_p00;
    sc_signal< sc_lv<28> > bound_fu_901_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<28> ap_const_lv28_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<32> ap_const_lv32_24;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<28> ap_const_lv28_1;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_80000000;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<16> ap_const_lv16_2;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_5F;
    static const sc_lv<16> ap_const_lv16_3;
    static const sc_lv<32> ap_const_lv32_60;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<16> ap_const_lv16_4;
    static const sc_lv<16> ap_const_lv16_5;
    static const sc_lv<16> ap_const_lv16_6;
    static const sc_lv<16> ap_const_lv16_7;
    static const sc_lv<16> ap_const_lv16_8;
    static const sc_lv<16> ap_const_lv16_9;
    static const sc_lv<16> ap_const_lv16_A;
    static const sc_lv<16> ap_const_lv16_B;
    static const sc_lv<16> ap_const_lv16_C;
    static const sc_lv<16> ap_const_lv16_D;
    static const sc_lv<16> ap_const_lv16_E;
    static const sc_lv<16> ap_const_lv16_F;
    static const sc_lv<32> ap_const_lv32_80;
    static const sc_lv<32> ap_const_lv32_9F;
    static const sc_lv<32> ap_const_lv32_A0;
    static const sc_lv<32> ap_const_lv32_BF;
    static const sc_lv<32> ap_const_lv32_C0;
    static const sc_lv<32> ap_const_lv32_DF;
    static const sc_lv<32> ap_const_lv32_E0;
    static const sc_lv<32> ap_const_lv32_FF;
    static const sc_lv<32> ap_const_lv32_100;
    static const sc_lv<32> ap_const_lv32_11F;
    static const sc_lv<32> ap_const_lv32_120;
    static const sc_lv<32> ap_const_lv32_13F;
    static const sc_lv<32> ap_const_lv32_140;
    static const sc_lv<32> ap_const_lv32_15F;
    static const sc_lv<32> ap_const_lv32_160;
    static const sc_lv<32> ap_const_lv32_17F;
    static const sc_lv<32> ap_const_lv32_180;
    static const sc_lv<32> ap_const_lv32_19F;
    static const sc_lv<32> ap_const_lv32_1A0;
    static const sc_lv<32> ap_const_lv32_1BF;
    static const sc_lv<32> ap_const_lv32_1C0;
    static const sc_lv<32> ap_const_lv32_1DF;
    static const sc_lv<32> ap_const_lv32_1E0;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln1126_fu_395_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_bound_fu_901_p0();
    void thread_bound_fu_901_p00();
    void thread_bound_fu_901_p1();
    void thread_bound_fu_901_p10();
    void thread_empty_327_fu_378_p1();
    void thread_icmp_ln1126_fu_390_p2();
    void thread_icmp_ln1128_fu_401_p2();
    void thread_icmp_ln891_10_fu_617_p2();
    void thread_icmp_ln891_11_fu_628_p2();
    void thread_icmp_ln891_12_fu_639_p2();
    void thread_icmp_ln891_13_fu_650_p2();
    void thread_icmp_ln891_14_fu_661_p2();
    void thread_icmp_ln891_15_fu_672_p2();
    void thread_icmp_ln891_1_fu_458_p2();
    void thread_icmp_ln891_2_fu_489_p2();
    void thread_icmp_ln891_3_fu_520_p2();
    void thread_icmp_ln891_4_fu_551_p2();
    void thread_icmp_ln891_5_fu_562_p2();
    void thread_icmp_ln891_6_fu_573_p2();
    void thread_icmp_ln891_7_fu_584_p2();
    void thread_icmp_ln891_8_fu_595_p2();
    void thread_icmp_ln891_9_fu_606_p2();
    void thread_icmp_ln891_fu_427_p2();
    void thread_in_V_data_V_blk_n();
    void thread_in_V_data_V_read();
    void thread_in_V_dest_V_blk_n();
    void thread_in_V_dest_V_read();
    void thread_in_V_id_V_blk_n();
    void thread_in_V_id_V_read();
    void thread_in_V_last_V_blk_n();
    void thread_in_V_last_V_read();
    void thread_in_V_user_V_blk_n();
    void thread_in_V_user_V_read();
    void thread_io_acc_block_signal_op112();
    void thread_io_acc_block_signal_op18();
    void thread_io_acc_block_signal_op24();
    void thread_io_acc_block_signal_op39();
    void thread_j_fu_414_p2();
    void thread_or_ln1136_10_fu_622_p2();
    void thread_or_ln1136_11_fu_633_p2();
    void thread_or_ln1136_12_fu_644_p2();
    void thread_or_ln1136_13_fu_655_p2();
    void thread_or_ln1136_14_fu_666_p2();
    void thread_or_ln1136_1_fu_483_p2();
    void thread_or_ln1136_2_fu_514_p2();
    void thread_or_ln1136_3_fu_545_p2();
    void thread_or_ln1136_4_fu_556_p2();
    void thread_or_ln1136_5_fu_567_p2();
    void thread_or_ln1136_6_fu_578_p2();
    void thread_or_ln1136_7_fu_589_p2();
    void thread_or_ln1136_8_fu_600_p2();
    void thread_or_ln1136_9_fu_611_p2();
    void thread_or_ln1136_fu_452_p2();
    void thread_out_V_data_V_blk_n();
    void thread_out_V_data_V_din();
    void thread_out_V_data_V_write();
    void thread_out_V_dest_V_blk_n();
    void thread_out_V_dest_V_din();
    void thread_out_V_dest_V_write();
    void thread_out_V_id_V_blk_n();
    void thread_out_V_id_V_din();
    void thread_out_V_id_V_write();
    void thread_out_V_last_V_blk_n();
    void thread_out_V_last_V_din();
    void thread_out_V_last_V_write();
    void thread_out_V_user_V_blk_n();
    void thread_out_V_user_V_din();
    void thread_out_V_user_V_write();
    void thread_p_Result_35_10_fu_808_p5();
    void thread_p_Result_35_11_fu_825_p5();
    void thread_p_Result_35_12_fu_844_p5();
    void thread_p_Result_35_13_fu_863_p5();
    void thread_p_Result_35_14_fu_882_p5();
    void thread_p_Result_35_1_fu_463_p5();
    void thread_p_Result_35_2_fu_494_p5();
    void thread_p_Result_35_3_fu_525_p5();
    void thread_p_Result_35_4_fu_677_p5();
    void thread_p_Result_35_5_fu_694_p5();
    void thread_p_Result_35_6_fu_713_p5();
    void thread_p_Result_35_7_fu_732_p5();
    void thread_p_Result_35_8_fu_751_p5();
    void thread_p_Result_35_9_fu_770_p5();
    void thread_p_Result_35_s_fu_789_p5();
    void thread_p_Result_s_fu_432_p5();
    void thread_p_cast_fu_368_p4();
    void thread_select_ln1598_fu_406_p3();
    void thread_select_ln891_10_fu_801_p3();
    void thread_select_ln891_11_fu_819_p3();
    void thread_select_ln891_12_fu_837_p3();
    void thread_select_ln891_13_fu_856_p3();
    void thread_select_ln891_14_fu_875_p3();
    void thread_select_ln891_1_fu_475_p3();
    void thread_select_ln891_2_fu_506_p3();
    void thread_select_ln891_3_fu_537_p3();
    void thread_select_ln891_4_fu_688_p3();
    void thread_select_ln891_5_fu_706_p3();
    void thread_select_ln891_6_fu_725_p3();
    void thread_select_ln891_7_fu_744_p3();
    void thread_select_ln891_8_fu_763_p3();
    void thread_select_ln891_9_fu_782_p3();
    void thread_select_ln891_fu_444_p3();
    void thread_shl_ln_fu_420_p3();
    void thread_tmp_data_V_5_fu_894_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
