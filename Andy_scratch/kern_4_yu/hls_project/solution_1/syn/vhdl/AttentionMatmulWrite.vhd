-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity AttentionMatmulWrite is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    in_n_r_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_n_r_V_V_empty_n : IN STD_LOGIC;
    in_n_r_V_V_read : OUT STD_LOGIC;
    in_n_c_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_n_c_V_V_empty_n : IN STD_LOGIC;
    in_n_c_V_V_read : OUT STD_LOGIC;
    in_0_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_0_V_V_empty_n : IN STD_LOGIC;
    in_0_V_V_read : OUT STD_LOGIC;
    in_1_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_1_V_V_empty_n : IN STD_LOGIC;
    in_1_V_V_read : OUT STD_LOGIC;
    out_V_data_V_din : OUT STD_LOGIC_VECTOR (511 downto 0);
    out_V_data_V_full_n : IN STD_LOGIC;
    out_V_data_V_write : OUT STD_LOGIC;
    out_V_id_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_V_id_V_full_n : IN STD_LOGIC;
    out_V_id_V_write : OUT STD_LOGIC;
    out_V_dest_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_V_dest_V_full_n : IN STD_LOGIC;
    out_V_dest_V_write : OUT STD_LOGIC;
    out_V_user_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_V_user_V_full_n : IN STD_LOGIC;
    out_V_user_V_write : OUT STD_LOGIC;
    out_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_V_last_V_full_n : IN STD_LOGIC;
    out_V_last_V_write : OUT STD_LOGIC );
end;


architecture behav of AttentionMatmulWrite is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_10 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv448_lc_1 : STD_LOGIC_VECTOR (447 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal in_n_r_V_V_blk_n : STD_LOGIC;
    signal in_n_c_V_V_blk_n : STD_LOGIC;
    signal in_0_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal in_1_V_V_blk_n : STD_LOGIC;
    signal out_V_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal icmp_ln1097_reg_1312 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1097_reg_1312_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_id_V_blk_n : STD_LOGIC;
    signal out_V_dest_V_blk_n : STD_LOGIC;
    signal out_V_user_V_blk_n : STD_LOGIC;
    signal out_V_last_V_blk_n : STD_LOGIC;
    signal i_op_assign_reg_314 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_V_reg_1261 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_V_53_reg_1266 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln6_reg_1271 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_3_reg_1276 : STD_LOGIC_VECTOR (30 downto 0);
    signal temp_user_V_fu_368_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_user_V_reg_1282 : STD_LOGIC_VECTOR (15 downto 0);
    signal io_acc_block_signal_op43 : STD_LOGIC;
    signal ret_V_2_fu_377_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_2_reg_1287 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1083_fu_383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal io_acc_block_signal_op171 : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_fu_388_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal index_fu_394_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal index_reg_1301 : STD_LOGIC_VECTOR (2 downto 0);
    signal index_reg_1301_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1097_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_last_V_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_last_V_reg_1316 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_last_V_reg_1316_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_54_reg_1321 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_55_reg_1333 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal out_data_14_V_1_fu_204 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_43_fu_761_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_1_fu_208 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_43_fu_1033_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_2_fu_212 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_42_fu_753_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_2_fu_216 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_42_fu_1025_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_3_fu_220 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_40_fu_738_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_3_fu_224 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_40_fu_1010_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_4_fu_228 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_37_fu_715_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_4_fu_232 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_37_fu_987_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_5_fu_236 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_33_fu_684_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_5_fu_240 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_33_fu_956_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_6_fu_244 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_28_fu_645_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_6_fu_248 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_28_fu_917_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_7_fu_252 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_22_fu_598_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_7_fu_256 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_22_fu_870_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_8_fu_260 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_15_fu_543_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_8_fu_264 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_15_fu_815_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_359_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_data_V_3_fu_1120_p17 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln302_fu_325_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln302_1_fu_329_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_fu_1157_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_1_fu_374_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln302_fu_398_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln180_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln180_1_fu_473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_data_14_V_fu_466_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln180_2_fu_486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_data_14_V_10_fu_478_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln180_3_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_data_14_V_11_fu_491_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln180_4_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_data_14_V_12_fu_504_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln180_5_fu_525_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_data_14_V_13_fu_517_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln180_6_fu_538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_data_14_V_14_fu_530_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_16_fu_551_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_17_fu_558_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_18_fu_566_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_19_fu_574_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_20_fu_582_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_21_fu_590_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_23_fu_606_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_24_fu_613_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_25_fu_621_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_26_fu_629_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_27_fu_637_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_29_fu_653_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_30_fu_660_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_31_fu_668_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_32_fu_676_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_34_fu_692_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_35_fu_699_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_36_fu_707_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_38_fu_723_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_39_fu_730_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_14_V_41_fu_746_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_fu_768_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_10_fu_775_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_11_fu_783_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_12_fu_791_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_13_fu_799_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_14_fu_807_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_16_fu_823_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_17_fu_830_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_18_fu_838_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_19_fu_846_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_20_fu_854_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_21_fu_862_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_23_fu_878_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_24_fu_885_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_25_fu_893_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_26_fu_901_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_27_fu_909_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_29_fu_925_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_30_fu_932_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_31_fu_940_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_32_fu_948_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_34_fu_964_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_35_fu_971_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_36_fu_979_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_38_fu_995_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_39_fu_1002_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_15_V_41_fu_1018_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_fu_1157_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_fu_1157_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ret_V_fu_1157_p00 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_fu_1157_p10 : STD_LOGIC_VECTOR (31 downto 0);

    component kernel_4_mul_mul_16ns_16ns_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    kernel_4_mul_mul_16ns_16ns_32_1_1_U500 : component kernel_4_mul_mul_16ns_16ns_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => ret_V_fu_1157_p0,
        din1 => ret_V_fu_1157_p1,
        dout => ret_V_fu_1157_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op43 = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op43 = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_op_assign_reg_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1083_fu_383_p2 = ap_const_lv1_0))) then 
                i_op_assign_reg_314 <= i_fu_388_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op43 = ap_const_logic_1))) then 
                i_op_assign_reg_314 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1083_fu_383_p2 = ap_const_lv1_0))) then
                icmp_ln1097_reg_1312 <= icmp_ln1097_fu_402_p2;
                index_reg_1301 <= index_fu_394_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln1097_reg_1312_pp0_iter1_reg <= icmp_ln1097_reg_1312;
                index_reg_1301_pp0_iter1_reg <= index_reg_1301;
                temp_last_V_reg_1316_pp0_iter1_reg <= temp_last_V_reg_1316;
                tmp_V_54_reg_1321 <= in_0_V_V_dout;
                tmp_V_55_reg_1333 <= in_1_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                out_data_14_V_1_fu_204 <= out_data_14_V_43_fu_761_p3;
                out_data_14_V_2_fu_212 <= out_data_14_V_42_fu_753_p3;
                out_data_14_V_3_fu_220 <= out_data_14_V_40_fu_738_p3;
                out_data_14_V_4_fu_228 <= out_data_14_V_37_fu_715_p3;
                out_data_14_V_5_fu_236 <= out_data_14_V_33_fu_684_p3;
                out_data_14_V_6_fu_244 <= out_data_14_V_28_fu_645_p3;
                out_data_14_V_7_fu_252 <= out_data_14_V_22_fu_598_p3;
                out_data_14_V_8_fu_260 <= out_data_14_V_15_fu_543_p3;
                out_data_15_V_1_fu_208 <= out_data_15_V_43_fu_1033_p3;
                out_data_15_V_2_fu_216 <= out_data_15_V_42_fu_1025_p3;
                out_data_15_V_3_fu_224 <= out_data_15_V_40_fu_1010_p3;
                out_data_15_V_4_fu_232 <= out_data_15_V_37_fu_987_p3;
                out_data_15_V_5_fu_240 <= out_data_15_V_33_fu_956_p3;
                out_data_15_V_6_fu_248 <= out_data_15_V_28_fu_917_p3;
                out_data_15_V_7_fu_256 <= out_data_15_V_22_fu_870_p3;
                out_data_15_V_8_fu_264 <= out_data_15_V_15_fu_815_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op43 = ap_const_logic_1))) then
                ret_V_2_reg_1287 <= ret_V_2_fu_377_p2;
                temp_user_V_reg_1282 <= temp_user_V_fu_368_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_n_c_V_V_empty_n = ap_const_logic_0) or (in_n_r_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                ret_V_3_reg_1276 <= ret_V_fu_1157_p2(31 downto 1);
                tmp_V_53_reg_1266 <= in_n_c_V_V_dout;
                tmp_V_reg_1261 <= in_n_r_V_V_dout;
                trunc_ln6_reg_1271 <= ret_V_fu_1157_p2(19 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1083_fu_383_p2 = ap_const_lv1_0) and (icmp_ln1097_fu_402_p2 = ap_const_lv1_1))) then
                temp_last_V_reg_1316 <= temp_last_V_fu_408_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, in_n_r_V_V_empty_n, in_n_c_V_V_empty_n, ap_enable_reg_pp0_iter1, ap_CS_fsm_state2, ap_enable_reg_pp0_iter2, io_acc_block_signal_op43, icmp_ln1083_fu_383_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((in_n_c_V_V_empty_n = ap_const_logic_0) or (in_n_r_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op43 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln1083_fu_383_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln1083_fu_383_p2 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(in_0_V_V_empty_n, in_1_V_V_empty_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, icmp_ln1097_reg_1312_pp0_iter1_reg, io_acc_block_signal_op171)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((in_1_V_V_empty_n = ap_const_logic_0) or (in_0_V_V_empty_n = ap_const_logic_0))) or ((io_acc_block_signal_op171 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1097_reg_1312_pp0_iter1_reg = ap_const_lv1_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(in_0_V_V_empty_n, in_1_V_V_empty_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, icmp_ln1097_reg_1312_pp0_iter1_reg, io_acc_block_signal_op171)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((in_1_V_V_empty_n = ap_const_logic_0) or (in_0_V_V_empty_n = ap_const_logic_0))) or ((io_acc_block_signal_op171 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1097_reg_1312_pp0_iter1_reg = ap_const_lv1_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(in_0_V_V_empty_n, in_1_V_V_empty_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, icmp_ln1097_reg_1312_pp0_iter1_reg, io_acc_block_signal_op171)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((in_1_V_V_empty_n = ap_const_logic_0) or (in_0_V_V_empty_n = ap_const_logic_0))) or ((io_acc_block_signal_op171 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1097_reg_1312_pp0_iter1_reg = ap_const_lv1_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, in_n_r_V_V_empty_n, in_n_c_V_V_empty_n)
    begin
                ap_block_state1 <= ((in_n_c_V_V_empty_n = ap_const_logic_0) or (in_n_r_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(in_0_V_V_empty_n, in_1_V_V_empty_n)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((in_1_V_V_empty_n = ap_const_logic_0) or (in_0_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state5_pp0_stage0_iter2_assign_proc : process(icmp_ln1097_reg_1312_pp0_iter1_reg, io_acc_block_signal_op171)
    begin
                ap_block_state5_pp0_stage0_iter2 <= ((io_acc_block_signal_op171 = ap_const_logic_0) and (icmp_ln1097_reg_1312_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln1083_fu_383_p2)
    begin
        if ((icmp_ln1083_fu_383_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    i_fu_388_p2 <= std_logic_vector(unsigned(i_op_assign_reg_314) + unsigned(ap_const_lv31_1));
    icmp_ln1083_fu_383_p2 <= "1" when (i_op_assign_reg_314 = ret_V_3_reg_1276) else "0";
    icmp_ln1097_fu_402_p2 <= "1" when (index_fu_394_p1 = ap_const_lv3_7) else "0";
    icmp_ln180_1_fu_473_p2 <= "1" when (index_reg_1301_pp0_iter1_reg = ap_const_lv3_5) else "0";
    icmp_ln180_2_fu_486_p2 <= "1" when (index_reg_1301_pp0_iter1_reg = ap_const_lv3_4) else "0";
    icmp_ln180_3_fu_499_p2 <= "1" when (index_reg_1301_pp0_iter1_reg = ap_const_lv3_3) else "0";
    icmp_ln180_4_fu_512_p2 <= "1" when (index_reg_1301_pp0_iter1_reg = ap_const_lv3_2) else "0";
    icmp_ln180_5_fu_525_p2 <= "1" when (index_reg_1301_pp0_iter1_reg = ap_const_lv3_1) else "0";
    icmp_ln180_6_fu_538_p2 <= "1" when (index_reg_1301_pp0_iter1_reg = ap_const_lv3_0) else "0";
    icmp_ln180_fu_461_p2 <= "1" when (index_reg_1301_pp0_iter1_reg = ap_const_lv3_6) else "0";

    in_0_V_V_blk_n_assign_proc : process(in_0_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_0_V_V_blk_n <= in_0_V_V_empty_n;
        else 
            in_0_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_0_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in_0_V_V_read <= ap_const_logic_1;
        else 
            in_0_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    in_1_V_V_blk_n_assign_proc : process(in_1_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_1_V_V_blk_n <= in_1_V_V_empty_n;
        else 
            in_1_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_1_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in_1_V_V_read <= ap_const_logic_1;
        else 
            in_1_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    in_n_c_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_n_c_V_V_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_n_c_V_V_blk_n <= in_n_c_V_V_empty_n;
        else 
            in_n_c_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_n_c_V_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_n_r_V_V_empty_n, in_n_c_V_V_empty_n)
    begin
        if ((not(((in_n_c_V_V_empty_n = ap_const_logic_0) or (in_n_r_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_n_c_V_V_read <= ap_const_logic_1;
        else 
            in_n_c_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    in_n_r_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_n_r_V_V_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_n_r_V_V_blk_n <= in_n_r_V_V_empty_n;
        else 
            in_n_r_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_n_r_V_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_n_r_V_V_empty_n, in_n_c_V_V_empty_n)
    begin
        if ((not(((in_n_c_V_V_empty_n = ap_const_logic_0) or (in_n_r_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_n_r_V_V_read <= ap_const_logic_1;
        else 
            in_n_r_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    index_fu_394_p1 <= i_op_assign_reg_314(3 - 1 downto 0);

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op171 <= (out_V_user_V_full_n and out_V_last_V_full_n and out_V_id_V_full_n and out_V_dest_V_full_n and out_V_data_V_full_n);
    io_acc_block_signal_op43 <= (out_V_user_V_full_n and out_V_last_V_full_n and out_V_id_V_full_n and out_V_dest_V_full_n and out_V_data_V_full_n);

    out_V_data_V_blk_n_assign_proc : process(out_V_data_V_full_n, ap_block_pp0_stage0, ap_CS_fsm_state2, ap_enable_reg_pp0_iter2, icmp_ln1097_reg_1312_pp0_iter1_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1097_reg_1312_pp0_iter1_reg = ap_const_lv1_1)))) then 
            out_V_data_V_blk_n <= out_V_data_V_full_n;
        else 
            out_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_V_data_V_din_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp0_iter2, icmp_ln1097_reg_1312_pp0_iter1_reg, io_acc_block_signal_op43, p_Result_s_fu_359_p4, tmp_data_V_3_fu_1120_p17, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1097_reg_1312_pp0_iter1_reg = ap_const_lv1_1))) then 
            out_V_data_V_din <= tmp_data_V_3_fu_1120_p17;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op43 = ap_const_logic_1))) then 
            out_V_data_V_din <= p_Result_s_fu_359_p4;
        else 
            out_V_data_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_V_data_V_write_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp0_iter2, icmp_ln1097_reg_1312_pp0_iter1_reg, io_acc_block_signal_op43, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1097_reg_1312_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op43 = ap_const_logic_1)))) then 
            out_V_data_V_write <= ap_const_logic_1;
        else 
            out_V_data_V_write <= ap_const_logic_0;
        end if; 
    end process;


    out_V_dest_V_blk_n_assign_proc : process(out_V_dest_V_full_n, ap_block_pp0_stage0, ap_CS_fsm_state2, ap_enable_reg_pp0_iter2, icmp_ln1097_reg_1312_pp0_iter1_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1097_reg_1312_pp0_iter1_reg = ap_const_lv1_1)))) then 
            out_V_dest_V_blk_n <= out_V_dest_V_full_n;
        else 
            out_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_V_dest_V_din <= ap_const_lv8_10;

    out_V_dest_V_write_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp0_iter2, icmp_ln1097_reg_1312_pp0_iter1_reg, io_acc_block_signal_op43, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1097_reg_1312_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op43 = ap_const_logic_1)))) then 
            out_V_dest_V_write <= ap_const_logic_1;
        else 
            out_V_dest_V_write <= ap_const_logic_0;
        end if; 
    end process;


    out_V_id_V_blk_n_assign_proc : process(out_V_id_V_full_n, ap_block_pp0_stage0, ap_CS_fsm_state2, ap_enable_reg_pp0_iter2, icmp_ln1097_reg_1312_pp0_iter1_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1097_reg_1312_pp0_iter1_reg = ap_const_lv1_1)))) then 
            out_V_id_V_blk_n <= out_V_id_V_full_n;
        else 
            out_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_V_id_V_din <= ap_const_lv8_4;

    out_V_id_V_write_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp0_iter2, icmp_ln1097_reg_1312_pp0_iter1_reg, io_acc_block_signal_op43, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1097_reg_1312_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op43 = ap_const_logic_1)))) then 
            out_V_id_V_write <= ap_const_logic_1;
        else 
            out_V_id_V_write <= ap_const_logic_0;
        end if; 
    end process;


    out_V_last_V_blk_n_assign_proc : process(out_V_last_V_full_n, ap_block_pp0_stage0, ap_CS_fsm_state2, ap_enable_reg_pp0_iter2, icmp_ln1097_reg_1312_pp0_iter1_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1097_reg_1312_pp0_iter1_reg = ap_const_lv1_1)))) then 
            out_V_last_V_blk_n <= out_V_last_V_full_n;
        else 
            out_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_V_last_V_din_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp0_iter2, icmp_ln1097_reg_1312_pp0_iter1_reg, io_acc_block_signal_op43, temp_last_V_reg_1316_pp0_iter1_reg, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1097_reg_1312_pp0_iter1_reg = ap_const_lv1_1))) then 
            out_V_last_V_din <= temp_last_V_reg_1316_pp0_iter1_reg;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op43 = ap_const_logic_1))) then 
            out_V_last_V_din <= ap_const_lv1_0;
        else 
            out_V_last_V_din <= "X";
        end if; 
    end process;


    out_V_last_V_write_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp0_iter2, icmp_ln1097_reg_1312_pp0_iter1_reg, io_acc_block_signal_op43, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1097_reg_1312_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op43 = ap_const_logic_1)))) then 
            out_V_last_V_write <= ap_const_logic_1;
        else 
            out_V_last_V_write <= ap_const_logic_0;
        end if; 
    end process;


    out_V_user_V_blk_n_assign_proc : process(out_V_user_V_full_n, ap_block_pp0_stage0, ap_CS_fsm_state2, ap_enable_reg_pp0_iter2, icmp_ln1097_reg_1312_pp0_iter1_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1097_reg_1312_pp0_iter1_reg = ap_const_lv1_1)))) then 
            out_V_user_V_blk_n <= out_V_user_V_full_n;
        else 
            out_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_V_user_V_din_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp0_iter2, icmp_ln1097_reg_1312_pp0_iter1_reg, temp_user_V_fu_368_p2, temp_user_V_reg_1282, io_acc_block_signal_op43, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1097_reg_1312_pp0_iter1_reg = ap_const_lv1_1))) then 
            out_V_user_V_din <= temp_user_V_reg_1282;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op43 = ap_const_logic_1))) then 
            out_V_user_V_din <= temp_user_V_fu_368_p2;
        else 
            out_V_user_V_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_V_user_V_write_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp0_iter2, icmp_ln1097_reg_1312_pp0_iter1_reg, io_acc_block_signal_op43, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1097_reg_1312_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op43 = ap_const_logic_1)))) then 
            out_V_user_V_write <= ap_const_logic_1;
        else 
            out_V_user_V_write <= ap_const_logic_0;
        end if; 
    end process;

    out_data_14_V_10_fu_478_p3 <= 
        out_data_14_V_8_fu_260 when (icmp_ln180_1_fu_473_p2(0) = '1') else 
        out_data_14_V_fu_466_p3;
    out_data_14_V_11_fu_491_p3 <= 
        out_data_14_V_8_fu_260 when (icmp_ln180_2_fu_486_p2(0) = '1') else 
        out_data_14_V_10_fu_478_p3;
    out_data_14_V_12_fu_504_p3 <= 
        out_data_14_V_8_fu_260 when (icmp_ln180_3_fu_499_p2(0) = '1') else 
        out_data_14_V_11_fu_491_p3;
    out_data_14_V_13_fu_517_p3 <= 
        out_data_14_V_8_fu_260 when (icmp_ln180_4_fu_512_p2(0) = '1') else 
        out_data_14_V_12_fu_504_p3;
    out_data_14_V_14_fu_530_p3 <= 
        out_data_14_V_8_fu_260 when (icmp_ln180_5_fu_525_p2(0) = '1') else 
        out_data_14_V_13_fu_517_p3;
    out_data_14_V_15_fu_543_p3 <= 
        out_data_14_V_8_fu_260 when (icmp_ln180_6_fu_538_p2(0) = '1') else 
        out_data_14_V_14_fu_530_p3;
    out_data_14_V_16_fu_551_p3 <= 
        tmp_V_54_reg_1321 when (icmp_ln180_fu_461_p2(0) = '1') else 
        out_data_14_V_7_fu_252;
    out_data_14_V_17_fu_558_p3 <= 
        out_data_14_V_7_fu_252 when (icmp_ln180_1_fu_473_p2(0) = '1') else 
        out_data_14_V_16_fu_551_p3;
    out_data_14_V_18_fu_566_p3 <= 
        out_data_14_V_7_fu_252 when (icmp_ln180_2_fu_486_p2(0) = '1') else 
        out_data_14_V_17_fu_558_p3;
    out_data_14_V_19_fu_574_p3 <= 
        out_data_14_V_7_fu_252 when (icmp_ln180_3_fu_499_p2(0) = '1') else 
        out_data_14_V_18_fu_566_p3;
    out_data_14_V_20_fu_582_p3 <= 
        out_data_14_V_7_fu_252 when (icmp_ln180_4_fu_512_p2(0) = '1') else 
        out_data_14_V_19_fu_574_p3;
    out_data_14_V_21_fu_590_p3 <= 
        out_data_14_V_7_fu_252 when (icmp_ln180_5_fu_525_p2(0) = '1') else 
        out_data_14_V_20_fu_582_p3;
    out_data_14_V_22_fu_598_p3 <= 
        out_data_14_V_7_fu_252 when (icmp_ln180_6_fu_538_p2(0) = '1') else 
        out_data_14_V_21_fu_590_p3;
    out_data_14_V_23_fu_606_p3 <= 
        tmp_V_54_reg_1321 when (icmp_ln180_1_fu_473_p2(0) = '1') else 
        out_data_14_V_6_fu_244;
    out_data_14_V_24_fu_613_p3 <= 
        out_data_14_V_6_fu_244 when (icmp_ln180_2_fu_486_p2(0) = '1') else 
        out_data_14_V_23_fu_606_p3;
    out_data_14_V_25_fu_621_p3 <= 
        out_data_14_V_6_fu_244 when (icmp_ln180_3_fu_499_p2(0) = '1') else 
        out_data_14_V_24_fu_613_p3;
    out_data_14_V_26_fu_629_p3 <= 
        out_data_14_V_6_fu_244 when (icmp_ln180_4_fu_512_p2(0) = '1') else 
        out_data_14_V_25_fu_621_p3;
    out_data_14_V_27_fu_637_p3 <= 
        out_data_14_V_6_fu_244 when (icmp_ln180_5_fu_525_p2(0) = '1') else 
        out_data_14_V_26_fu_629_p3;
    out_data_14_V_28_fu_645_p3 <= 
        out_data_14_V_6_fu_244 when (icmp_ln180_6_fu_538_p2(0) = '1') else 
        out_data_14_V_27_fu_637_p3;
    out_data_14_V_29_fu_653_p3 <= 
        tmp_V_54_reg_1321 when (icmp_ln180_2_fu_486_p2(0) = '1') else 
        out_data_14_V_5_fu_236;
    out_data_14_V_30_fu_660_p3 <= 
        out_data_14_V_5_fu_236 when (icmp_ln180_3_fu_499_p2(0) = '1') else 
        out_data_14_V_29_fu_653_p3;
    out_data_14_V_31_fu_668_p3 <= 
        out_data_14_V_5_fu_236 when (icmp_ln180_4_fu_512_p2(0) = '1') else 
        out_data_14_V_30_fu_660_p3;
    out_data_14_V_32_fu_676_p3 <= 
        out_data_14_V_5_fu_236 when (icmp_ln180_5_fu_525_p2(0) = '1') else 
        out_data_14_V_31_fu_668_p3;
    out_data_14_V_33_fu_684_p3 <= 
        out_data_14_V_5_fu_236 when (icmp_ln180_6_fu_538_p2(0) = '1') else 
        out_data_14_V_32_fu_676_p3;
    out_data_14_V_34_fu_692_p3 <= 
        tmp_V_54_reg_1321 when (icmp_ln180_3_fu_499_p2(0) = '1') else 
        out_data_14_V_4_fu_228;
    out_data_14_V_35_fu_699_p3 <= 
        out_data_14_V_4_fu_228 when (icmp_ln180_4_fu_512_p2(0) = '1') else 
        out_data_14_V_34_fu_692_p3;
    out_data_14_V_36_fu_707_p3 <= 
        out_data_14_V_4_fu_228 when (icmp_ln180_5_fu_525_p2(0) = '1') else 
        out_data_14_V_35_fu_699_p3;
    out_data_14_V_37_fu_715_p3 <= 
        out_data_14_V_4_fu_228 when (icmp_ln180_6_fu_538_p2(0) = '1') else 
        out_data_14_V_36_fu_707_p3;
    out_data_14_V_38_fu_723_p3 <= 
        tmp_V_54_reg_1321 when (icmp_ln180_4_fu_512_p2(0) = '1') else 
        out_data_14_V_3_fu_220;
    out_data_14_V_39_fu_730_p3 <= 
        out_data_14_V_3_fu_220 when (icmp_ln180_5_fu_525_p2(0) = '1') else 
        out_data_14_V_38_fu_723_p3;
    out_data_14_V_40_fu_738_p3 <= 
        out_data_14_V_3_fu_220 when (icmp_ln180_6_fu_538_p2(0) = '1') else 
        out_data_14_V_39_fu_730_p3;
    out_data_14_V_41_fu_746_p3 <= 
        tmp_V_54_reg_1321 when (icmp_ln180_5_fu_525_p2(0) = '1') else 
        out_data_14_V_2_fu_212;
    out_data_14_V_42_fu_753_p3 <= 
        out_data_14_V_2_fu_212 when (icmp_ln180_6_fu_538_p2(0) = '1') else 
        out_data_14_V_41_fu_746_p3;
    out_data_14_V_43_fu_761_p3 <= 
        tmp_V_54_reg_1321 when (icmp_ln180_6_fu_538_p2(0) = '1') else 
        out_data_14_V_1_fu_204;
    out_data_14_V_fu_466_p3 <= 
        out_data_14_V_8_fu_260 when (icmp_ln180_fu_461_p2(0) = '1') else 
        tmp_V_54_reg_1321;
    out_data_15_V_10_fu_775_p3 <= 
        out_data_15_V_8_fu_264 when (icmp_ln180_1_fu_473_p2(0) = '1') else 
        out_data_15_V_fu_768_p3;
    out_data_15_V_11_fu_783_p3 <= 
        out_data_15_V_8_fu_264 when (icmp_ln180_2_fu_486_p2(0) = '1') else 
        out_data_15_V_10_fu_775_p3;
    out_data_15_V_12_fu_791_p3 <= 
        out_data_15_V_8_fu_264 when (icmp_ln180_3_fu_499_p2(0) = '1') else 
        out_data_15_V_11_fu_783_p3;
    out_data_15_V_13_fu_799_p3 <= 
        out_data_15_V_8_fu_264 when (icmp_ln180_4_fu_512_p2(0) = '1') else 
        out_data_15_V_12_fu_791_p3;
    out_data_15_V_14_fu_807_p3 <= 
        out_data_15_V_8_fu_264 when (icmp_ln180_5_fu_525_p2(0) = '1') else 
        out_data_15_V_13_fu_799_p3;
    out_data_15_V_15_fu_815_p3 <= 
        out_data_15_V_8_fu_264 when (icmp_ln180_6_fu_538_p2(0) = '1') else 
        out_data_15_V_14_fu_807_p3;
    out_data_15_V_16_fu_823_p3 <= 
        tmp_V_55_reg_1333 when (icmp_ln180_fu_461_p2(0) = '1') else 
        out_data_15_V_7_fu_256;
    out_data_15_V_17_fu_830_p3 <= 
        out_data_15_V_7_fu_256 when (icmp_ln180_1_fu_473_p2(0) = '1') else 
        out_data_15_V_16_fu_823_p3;
    out_data_15_V_18_fu_838_p3 <= 
        out_data_15_V_7_fu_256 when (icmp_ln180_2_fu_486_p2(0) = '1') else 
        out_data_15_V_17_fu_830_p3;
    out_data_15_V_19_fu_846_p3 <= 
        out_data_15_V_7_fu_256 when (icmp_ln180_3_fu_499_p2(0) = '1') else 
        out_data_15_V_18_fu_838_p3;
    out_data_15_V_20_fu_854_p3 <= 
        out_data_15_V_7_fu_256 when (icmp_ln180_4_fu_512_p2(0) = '1') else 
        out_data_15_V_19_fu_846_p3;
    out_data_15_V_21_fu_862_p3 <= 
        out_data_15_V_7_fu_256 when (icmp_ln180_5_fu_525_p2(0) = '1') else 
        out_data_15_V_20_fu_854_p3;
    out_data_15_V_22_fu_870_p3 <= 
        out_data_15_V_7_fu_256 when (icmp_ln180_6_fu_538_p2(0) = '1') else 
        out_data_15_V_21_fu_862_p3;
    out_data_15_V_23_fu_878_p3 <= 
        tmp_V_55_reg_1333 when (icmp_ln180_1_fu_473_p2(0) = '1') else 
        out_data_15_V_6_fu_248;
    out_data_15_V_24_fu_885_p3 <= 
        out_data_15_V_6_fu_248 when (icmp_ln180_2_fu_486_p2(0) = '1') else 
        out_data_15_V_23_fu_878_p3;
    out_data_15_V_25_fu_893_p3 <= 
        out_data_15_V_6_fu_248 when (icmp_ln180_3_fu_499_p2(0) = '1') else 
        out_data_15_V_24_fu_885_p3;
    out_data_15_V_26_fu_901_p3 <= 
        out_data_15_V_6_fu_248 when (icmp_ln180_4_fu_512_p2(0) = '1') else 
        out_data_15_V_25_fu_893_p3;
    out_data_15_V_27_fu_909_p3 <= 
        out_data_15_V_6_fu_248 when (icmp_ln180_5_fu_525_p2(0) = '1') else 
        out_data_15_V_26_fu_901_p3;
    out_data_15_V_28_fu_917_p3 <= 
        out_data_15_V_6_fu_248 when (icmp_ln180_6_fu_538_p2(0) = '1') else 
        out_data_15_V_27_fu_909_p3;
    out_data_15_V_29_fu_925_p3 <= 
        tmp_V_55_reg_1333 when (icmp_ln180_2_fu_486_p2(0) = '1') else 
        out_data_15_V_5_fu_240;
    out_data_15_V_30_fu_932_p3 <= 
        out_data_15_V_5_fu_240 when (icmp_ln180_3_fu_499_p2(0) = '1') else 
        out_data_15_V_29_fu_925_p3;
    out_data_15_V_31_fu_940_p3 <= 
        out_data_15_V_5_fu_240 when (icmp_ln180_4_fu_512_p2(0) = '1') else 
        out_data_15_V_30_fu_932_p3;
    out_data_15_V_32_fu_948_p3 <= 
        out_data_15_V_5_fu_240 when (icmp_ln180_5_fu_525_p2(0) = '1') else 
        out_data_15_V_31_fu_940_p3;
    out_data_15_V_33_fu_956_p3 <= 
        out_data_15_V_5_fu_240 when (icmp_ln180_6_fu_538_p2(0) = '1') else 
        out_data_15_V_32_fu_948_p3;
    out_data_15_V_34_fu_964_p3 <= 
        tmp_V_55_reg_1333 when (icmp_ln180_3_fu_499_p2(0) = '1') else 
        out_data_15_V_4_fu_232;
    out_data_15_V_35_fu_971_p3 <= 
        out_data_15_V_4_fu_232 when (icmp_ln180_4_fu_512_p2(0) = '1') else 
        out_data_15_V_34_fu_964_p3;
    out_data_15_V_36_fu_979_p3 <= 
        out_data_15_V_4_fu_232 when (icmp_ln180_5_fu_525_p2(0) = '1') else 
        out_data_15_V_35_fu_971_p3;
    out_data_15_V_37_fu_987_p3 <= 
        out_data_15_V_4_fu_232 when (icmp_ln180_6_fu_538_p2(0) = '1') else 
        out_data_15_V_36_fu_979_p3;
    out_data_15_V_38_fu_995_p3 <= 
        tmp_V_55_reg_1333 when (icmp_ln180_4_fu_512_p2(0) = '1') else 
        out_data_15_V_3_fu_224;
    out_data_15_V_39_fu_1002_p3 <= 
        out_data_15_V_3_fu_224 when (icmp_ln180_5_fu_525_p2(0) = '1') else 
        out_data_15_V_38_fu_995_p3;
    out_data_15_V_40_fu_1010_p3 <= 
        out_data_15_V_3_fu_224 when (icmp_ln180_6_fu_538_p2(0) = '1') else 
        out_data_15_V_39_fu_1002_p3;
    out_data_15_V_41_fu_1018_p3 <= 
        tmp_V_55_reg_1333 when (icmp_ln180_5_fu_525_p2(0) = '1') else 
        out_data_15_V_2_fu_216;
    out_data_15_V_42_fu_1025_p3 <= 
        out_data_15_V_2_fu_216 when (icmp_ln180_6_fu_538_p2(0) = '1') else 
        out_data_15_V_41_fu_1018_p3;
    out_data_15_V_43_fu_1033_p3 <= 
        tmp_V_55_reg_1333 when (icmp_ln180_6_fu_538_p2(0) = '1') else 
        out_data_15_V_1_fu_208;
    out_data_15_V_fu_768_p3 <= 
        out_data_15_V_8_fu_264 when (icmp_ln180_fu_461_p2(0) = '1') else 
        tmp_V_55_reg_1333;
    p_Result_s_fu_359_p4 <= ((ap_const_lv448_lc_1 & tmp_V_53_reg_1266) & tmp_V_reg_1261);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_1_fu_374_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_3_reg_1276),32));
    ret_V_2_fu_377_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(ret_V_1_fu_374_p1));
    ret_V_fu_1157_p0 <= ret_V_fu_1157_p00(16 - 1 downto 0);
    ret_V_fu_1157_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln302_1_fu_329_p1),32));
    ret_V_fu_1157_p1 <= ret_V_fu_1157_p10(16 - 1 downto 0);
    ret_V_fu_1157_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln302_fu_325_p1),32));
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    temp_last_V_fu_408_p2 <= "1" when (zext_ln302_fu_398_p1 = ret_V_2_reg_1287) else "0";
    temp_user_V_fu_368_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(trunc_ln6_reg_1271));
    tmp_data_V_3_fu_1120_p17 <= (((((((((((((((out_data_15_V_15_fu_815_p3 & out_data_14_V_15_fu_543_p3) & out_data_15_V_22_fu_870_p3) & out_data_14_V_22_fu_598_p3) & out_data_15_V_28_fu_917_p3) & out_data_14_V_28_fu_645_p3) & out_data_15_V_33_fu_956_p3) & out_data_14_V_33_fu_684_p3) & out_data_15_V_37_fu_987_p3) & out_data_14_V_37_fu_715_p3) & out_data_15_V_40_fu_1010_p3) & out_data_14_V_40_fu_738_p3) & out_data_15_V_42_fu_1025_p3) & out_data_14_V_42_fu_753_p3) & out_data_15_V_43_fu_1033_p3) & out_data_14_V_43_fu_761_p3);
    trunc_ln302_1_fu_329_p1 <= in_n_c_V_V_dout(16 - 1 downto 0);
    trunc_ln302_fu_325_p1 <= in_n_r_V_V_dout(16 - 1 downto 0);
    zext_ln302_fu_398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_op_assign_reg_314),32));
end behav;
