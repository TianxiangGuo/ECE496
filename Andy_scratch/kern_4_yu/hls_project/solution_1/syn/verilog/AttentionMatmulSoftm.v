// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module AttentionMatmulSoftm (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_V_data_V_dout,
        in_V_data_V_empty_n,
        in_V_data_V_read,
        in_V_id_V_dout,
        in_V_id_V_empty_n,
        in_V_id_V_read,
        in_V_dest_V_dout,
        in_V_dest_V_empty_n,
        in_V_dest_V_read,
        in_V_user_V_dout,
        in_V_user_V_empty_n,
        in_V_user_V_read,
        in_V_last_V_dout,
        in_V_last_V_empty_n,
        in_V_last_V_read,
        out_V_data_V_din,
        out_V_data_V_full_n,
        out_V_data_V_write,
        out_V_id_V_din,
        out_V_id_V_full_n,
        out_V_id_V_write,
        out_V_dest_V_din,
        out_V_dest_V_full_n,
        out_V_dest_V_write,
        out_V_user_V_din,
        out_V_user_V_full_n,
        out_V_user_V_write,
        out_V_last_V_din,
        out_V_last_V_full_n,
        out_V_last_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [511:0] in_V_data_V_dout;
input   in_V_data_V_empty_n;
output   in_V_data_V_read;
input  [7:0] in_V_id_V_dout;
input   in_V_id_V_empty_n;
output   in_V_id_V_read;
input  [7:0] in_V_dest_V_dout;
input   in_V_dest_V_empty_n;
output   in_V_dest_V_read;
input  [15:0] in_V_user_V_dout;
input   in_V_user_V_empty_n;
output   in_V_user_V_read;
input  [0:0] in_V_last_V_dout;
input   in_V_last_V_empty_n;
output   in_V_last_V_read;
output  [511:0] out_V_data_V_din;
input   out_V_data_V_full_n;
output   out_V_data_V_write;
output  [7:0] out_V_id_V_din;
input   out_V_id_V_full_n;
output   out_V_id_V_write;
output  [7:0] out_V_dest_V_din;
input   out_V_dest_V_full_n;
output   out_V_dest_V_write;
output  [15:0] out_V_user_V_din;
input   out_V_user_V_full_n;
output   out_V_user_V_write;
output  [0:0] out_V_last_V_din;
input   out_V_last_V_full_n;
output   out_V_last_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_V_data_V_read;
reg in_V_id_V_read;
reg in_V_dest_V_read;
reg in_V_user_V_read;
reg in_V_last_V_read;
reg[511:0] out_V_data_V_din;
reg out_V_data_V_write;
reg[7:0] out_V_id_V_din;
reg out_V_id_V_write;
reg[7:0] out_V_dest_V_din;
reg out_V_dest_V_write;
reg[15:0] out_V_user_V_din;
reg out_V_user_V_write;
reg[0:0] out_V_last_V_din;
reg out_V_last_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    in_V_data_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln1126_reg_937;
reg    in_V_id_V_blk_n;
reg    in_V_dest_V_blk_n;
reg    in_V_user_V_blk_n;
reg    in_V_last_V_blk_n;
reg    out_V_data_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] icmp_ln1126_reg_937_pp0_iter3_reg;
reg    out_V_id_V_blk_n;
reg    out_V_dest_V_blk_n;
reg    out_V_user_V_blk_n;
reg    out_V_last_V_blk_n;
reg   [27:0] indvar_flatten_reg_321;
reg   [11:0] i_op_assign_1_reg_332;
wire   [11:0] p_cast_fu_368_p4;
reg   [11:0] p_cast_reg_907;
wire    io_acc_block_signal_op18;
wire    io_acc_block_signal_op24;
reg    ap_block_state1;
wire   [15:0] empty_327_fu_378_p1;
reg   [15:0] empty_327_reg_912;
wire   [27:0] bound_fu_901_p2;
reg   [27:0] bound_reg_932;
wire   [0:0] icmp_ln1126_fu_390_p2;
wire    ap_block_state2_pp0_stage0_iter0;
wire    io_acc_block_signal_op39;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    io_acc_block_signal_op112;
reg    ap_block_state6_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln1126_reg_937_pp0_iter1_reg;
reg   [0:0] icmp_ln1126_reg_937_pp0_iter2_reg;
wire   [27:0] add_ln1126_fu_395_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [11:0] select_ln1598_fu_406_p3;
reg   [11:0] select_ln1598_reg_946;
wire   [11:0] j_fu_414_p2;
reg   [7:0] tmp_id_V_1_reg_956;
reg   [7:0] tmp_id_V_1_reg_956_pp0_iter2_reg;
reg   [7:0] tmp_id_V_1_reg_956_pp0_iter3_reg;
reg   [7:0] tmp_dest_V_1_reg_961;
reg   [7:0] tmp_dest_V_1_reg_961_pp0_iter2_reg;
reg   [7:0] tmp_dest_V_1_reg_961_pp0_iter3_reg;
reg   [15:0] tmp_user_V_3_reg_966;
reg   [15:0] tmp_user_V_3_reg_966_pp0_iter2_reg;
reg   [15:0] tmp_user_V_3_reg_966_pp0_iter3_reg;
reg   [0:0] tmp_last_V_1_reg_971;
reg   [0:0] tmp_last_V_1_reg_971_pp0_iter2_reg;
reg   [0:0] tmp_last_V_1_reg_971_pp0_iter3_reg;
wire   [511:0] select_ln891_3_fu_537_p3;
reg   [511:0] select_ln891_3_reg_976;
wire   [0:0] icmp_ln891_4_fu_551_p2;
reg   [0:0] icmp_ln891_4_reg_982;
wire   [0:0] icmp_ln891_5_fu_562_p2;
reg   [0:0] icmp_ln891_5_reg_987;
wire   [0:0] icmp_ln891_6_fu_573_p2;
reg   [0:0] icmp_ln891_6_reg_992;
wire   [0:0] icmp_ln891_7_fu_584_p2;
reg   [0:0] icmp_ln891_7_reg_997;
wire   [0:0] icmp_ln891_8_fu_595_p2;
reg   [0:0] icmp_ln891_8_reg_1002;
wire   [0:0] icmp_ln891_9_fu_606_p2;
reg   [0:0] icmp_ln891_9_reg_1007;
wire   [0:0] icmp_ln891_10_fu_617_p2;
reg   [0:0] icmp_ln891_10_reg_1012;
wire   [0:0] icmp_ln891_11_fu_628_p2;
reg   [0:0] icmp_ln891_11_reg_1017;
reg   [0:0] icmp_ln891_11_reg_1017_pp0_iter2_reg;
wire   [0:0] icmp_ln891_12_fu_639_p2;
reg   [0:0] icmp_ln891_12_reg_1022;
reg   [0:0] icmp_ln891_12_reg_1022_pp0_iter2_reg;
wire   [0:0] icmp_ln891_13_fu_650_p2;
reg   [0:0] icmp_ln891_13_reg_1027;
reg   [0:0] icmp_ln891_13_reg_1027_pp0_iter2_reg;
wire   [0:0] icmp_ln891_14_fu_661_p2;
reg   [0:0] icmp_ln891_14_reg_1032;
reg   [0:0] icmp_ln891_14_reg_1032_pp0_iter2_reg;
wire   [0:0] icmp_ln891_15_fu_672_p2;
reg   [0:0] icmp_ln891_15_reg_1037;
reg   [0:0] icmp_ln891_15_reg_1037_pp0_iter2_reg;
wire   [511:0] select_ln891_10_fu_801_p3;
reg   [511:0] select_ln891_10_reg_1042;
wire   [511:0] tmp_data_V_5_fu_894_p3;
reg   [511:0] tmp_data_V_5_reg_1048;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln1128_fu_401_p2;
wire   [15:0] shl_ln_fu_420_p3;
wire   [0:0] icmp_ln891_fu_427_p2;
wire   [511:0] p_Result_s_fu_432_p5;
wire   [15:0] or_ln1136_fu_452_p2;
wire   [511:0] select_ln891_fu_444_p3;
wire   [0:0] icmp_ln891_1_fu_458_p2;
wire   [511:0] p_Result_35_1_fu_463_p5;
wire   [15:0] or_ln1136_1_fu_483_p2;
wire   [511:0] select_ln891_1_fu_475_p3;
wire   [0:0] icmp_ln891_2_fu_489_p2;
wire   [511:0] p_Result_35_2_fu_494_p5;
wire   [15:0] or_ln1136_2_fu_514_p2;
wire   [511:0] select_ln891_2_fu_506_p3;
wire   [0:0] icmp_ln891_3_fu_520_p2;
wire   [511:0] p_Result_35_3_fu_525_p5;
wire   [15:0] or_ln1136_3_fu_545_p2;
wire   [15:0] or_ln1136_4_fu_556_p2;
wire   [15:0] or_ln1136_5_fu_567_p2;
wire   [15:0] or_ln1136_6_fu_578_p2;
wire   [15:0] or_ln1136_7_fu_589_p2;
wire   [15:0] or_ln1136_8_fu_600_p2;
wire   [15:0] or_ln1136_9_fu_611_p2;
wire   [15:0] or_ln1136_10_fu_622_p2;
wire   [15:0] or_ln1136_11_fu_633_p2;
wire   [15:0] or_ln1136_12_fu_644_p2;
wire   [15:0] or_ln1136_13_fu_655_p2;
wire   [15:0] or_ln1136_14_fu_666_p2;
wire   [511:0] p_Result_35_4_fu_677_p5;
wire   [511:0] select_ln891_4_fu_688_p3;
wire   [511:0] p_Result_35_5_fu_694_p5;
wire   [511:0] select_ln891_5_fu_706_p3;
wire   [511:0] p_Result_35_6_fu_713_p5;
wire   [511:0] select_ln891_6_fu_725_p3;
wire   [511:0] p_Result_35_7_fu_732_p5;
wire   [511:0] select_ln891_7_fu_744_p3;
wire   [511:0] p_Result_35_8_fu_751_p5;
wire   [511:0] select_ln891_8_fu_763_p3;
wire   [511:0] p_Result_35_9_fu_770_p5;
wire   [511:0] select_ln891_9_fu_782_p3;
wire   [511:0] p_Result_35_s_fu_789_p5;
wire   [511:0] p_Result_35_10_fu_808_p5;
wire   [511:0] select_ln891_11_fu_819_p3;
wire   [511:0] p_Result_35_11_fu_825_p5;
wire   [511:0] select_ln891_12_fu_837_p3;
wire   [511:0] p_Result_35_12_fu_844_p5;
wire   [511:0] select_ln891_13_fu_856_p3;
wire   [511:0] p_Result_35_13_fu_863_p5;
wire   [511:0] select_ln891_14_fu_875_p3;
wire   [511:0] p_Result_35_14_fu_882_p5;
wire   [11:0] bound_fu_901_p0;
wire   [15:0] bound_fu_901_p1;
wire    ap_CS_fsm_state7;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [27:0] bound_fu_901_p00;
wire   [27:0] bound_fu_901_p10;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

kernel_4_mul_mul_12ns_16ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 28 ))
kernel_4_mul_mul_12ns_16ns_28_1_1_U511(
    .din0(bound_fu_901_p0),
    .din1(bound_fu_901_p1),
    .dout(bound_fu_901_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (io_acc_block_signal_op24 == 1'b0) | (io_acc_block_signal_op18 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((~((ap_start == 1'b0) | (io_acc_block_signal_op24 == 1'b0) | (io_acc_block_signal_op18 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1126_fu_390_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_op_assign_1_reg_332 <= j_fu_414_p2;
    end else if ((~((ap_start == 1'b0) | (io_acc_block_signal_op24 == 1'b0) | (io_acc_block_signal_op18 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_op_assign_1_reg_332 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1126_fu_390_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_321 <= add_ln1126_fu_395_p2;
    end else if ((~((ap_start == 1'b0) | (io_acc_block_signal_op24 == 1'b0) | (io_acc_block_signal_op18 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_321 <= 28'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op24 == 1'b0) | (io_acc_block_signal_op18 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        bound_reg_932 <= bound_fu_901_p2;
        empty_327_reg_912 <= empty_327_fu_378_p1;
        p_cast_reg_907 <= {{in_V_data_V_dout[47:36]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1126_reg_937 <= icmp_ln1126_fu_390_p2;
        icmp_ln1126_reg_937_pp0_iter1_reg <= icmp_ln1126_reg_937;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln1126_reg_937_pp0_iter2_reg <= icmp_ln1126_reg_937_pp0_iter1_reg;
        icmp_ln1126_reg_937_pp0_iter3_reg <= icmp_ln1126_reg_937_pp0_iter2_reg;
        icmp_ln891_11_reg_1017_pp0_iter2_reg <= icmp_ln891_11_reg_1017;
        icmp_ln891_12_reg_1022_pp0_iter2_reg <= icmp_ln891_12_reg_1022;
        icmp_ln891_13_reg_1027_pp0_iter2_reg <= icmp_ln891_13_reg_1027;
        icmp_ln891_14_reg_1032_pp0_iter2_reg <= icmp_ln891_14_reg_1032;
        icmp_ln891_15_reg_1037_pp0_iter2_reg <= icmp_ln891_15_reg_1037;
        tmp_dest_V_1_reg_961_pp0_iter2_reg <= tmp_dest_V_1_reg_961;
        tmp_dest_V_1_reg_961_pp0_iter3_reg <= tmp_dest_V_1_reg_961_pp0_iter2_reg;
        tmp_id_V_1_reg_956_pp0_iter2_reg <= tmp_id_V_1_reg_956;
        tmp_id_V_1_reg_956_pp0_iter3_reg <= tmp_id_V_1_reg_956_pp0_iter2_reg;
        tmp_last_V_1_reg_971_pp0_iter2_reg <= tmp_last_V_1_reg_971;
        tmp_last_V_1_reg_971_pp0_iter3_reg <= tmp_last_V_1_reg_971_pp0_iter2_reg;
        tmp_user_V_3_reg_966_pp0_iter2_reg <= tmp_user_V_3_reg_966;
        tmp_user_V_3_reg_966_pp0_iter3_reg <= tmp_user_V_3_reg_966_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1126_reg_937 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln891_10_reg_1012 <= icmp_ln891_10_fu_617_p2;
        icmp_ln891_11_reg_1017 <= icmp_ln891_11_fu_628_p2;
        icmp_ln891_12_reg_1022 <= icmp_ln891_12_fu_639_p2;
        icmp_ln891_13_reg_1027 <= icmp_ln891_13_fu_650_p2;
        icmp_ln891_14_reg_1032 <= icmp_ln891_14_fu_661_p2;
        icmp_ln891_15_reg_1037 <= icmp_ln891_15_fu_672_p2;
        icmp_ln891_4_reg_982 <= icmp_ln891_4_fu_551_p2;
        icmp_ln891_5_reg_987 <= icmp_ln891_5_fu_562_p2;
        icmp_ln891_6_reg_992 <= icmp_ln891_6_fu_573_p2;
        icmp_ln891_7_reg_997 <= icmp_ln891_7_fu_584_p2;
        icmp_ln891_8_reg_1002 <= icmp_ln891_8_fu_595_p2;
        icmp_ln891_9_reg_1007 <= icmp_ln891_9_fu_606_p2;
        select_ln891_3_reg_976 <= select_ln891_3_fu_537_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1126_fu_390_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln1598_reg_946 <= select_ln1598_fu_406_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1126_reg_937_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln891_10_reg_1042 <= select_ln891_10_fu_801_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1126_reg_937_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_V_5_reg_1048 <= tmp_data_V_5_fu_894_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1126_reg_937 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_dest_V_1_reg_961 <= in_V_dest_V_dout;
        tmp_id_V_1_reg_956 <= in_V_id_V_dout;
        tmp_last_V_1_reg_971 <= in_V_last_V_dout;
        tmp_user_V_3_reg_966 <= in_V_user_V_dout;
    end
end

always @ (*) begin
    if ((icmp_ln1126_fu_390_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1126_reg_937 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_V_data_V_blk_n = in_V_data_V_empty_n;
    end else begin
        in_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln1126_reg_937 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (io_acc_block_signal_op24 == 1'b0) | (io_acc_block_signal_op18 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_V_data_V_read = 1'b1;
    end else begin
        in_V_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1126_reg_937 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_V_dest_V_blk_n = in_V_dest_V_empty_n;
    end else begin
        in_V_dest_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln1126_reg_937 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (io_acc_block_signal_op24 == 1'b0) | (io_acc_block_signal_op18 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_V_dest_V_read = 1'b1;
    end else begin
        in_V_dest_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1126_reg_937 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_V_id_V_blk_n = in_V_id_V_empty_n;
    end else begin
        in_V_id_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln1126_reg_937 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (io_acc_block_signal_op24 == 1'b0) | (io_acc_block_signal_op18 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_V_id_V_read = 1'b1;
    end else begin
        in_V_id_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1126_reg_937 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_V_last_V_blk_n = in_V_last_V_empty_n;
    end else begin
        in_V_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln1126_reg_937 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (io_acc_block_signal_op24 == 1'b0) | (io_acc_block_signal_op18 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_V_last_V_read = 1'b1;
    end else begin
        in_V_last_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1126_reg_937 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_V_user_V_blk_n = in_V_user_V_empty_n;
    end else begin
        in_V_user_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln1126_reg_937 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (io_acc_block_signal_op24 == 1'b0) | (io_acc_block_signal_op18 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_V_user_V_read = 1'b1;
    end else begin
        in_V_user_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1126_reg_937_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_V_data_V_blk_n = out_V_data_V_full_n;
    end else begin
        out_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1126_reg_937_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_V_data_V_din = tmp_data_V_5_reg_1048;
    end else if ((~((ap_start == 1'b0) | (io_acc_block_signal_op24 == 1'b0) | (io_acc_block_signal_op18 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        out_V_data_V_din = in_V_data_V_dout;
    end else begin
        out_V_data_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1126_reg_937_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (io_acc_block_signal_op24 == 1'b0) | (io_acc_block_signal_op18 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_V_data_V_write = 1'b1;
    end else begin
        out_V_data_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1126_reg_937_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_V_dest_V_blk_n = out_V_dest_V_full_n;
    end else begin
        out_V_dest_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1126_reg_937_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_V_dest_V_din = tmp_dest_V_1_reg_961_pp0_iter3_reg;
    end else if ((~((ap_start == 1'b0) | (io_acc_block_signal_op24 == 1'b0) | (io_acc_block_signal_op18 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        out_V_dest_V_din = in_V_dest_V_dout;
    end else begin
        out_V_dest_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1126_reg_937_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (io_acc_block_signal_op24 == 1'b0) | (io_acc_block_signal_op18 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_V_dest_V_write = 1'b1;
    end else begin
        out_V_dest_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1126_reg_937_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_V_id_V_blk_n = out_V_id_V_full_n;
    end else begin
        out_V_id_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1126_reg_937_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_V_id_V_din = tmp_id_V_1_reg_956_pp0_iter3_reg;
    end else if ((~((ap_start == 1'b0) | (io_acc_block_signal_op24 == 1'b0) | (io_acc_block_signal_op18 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        out_V_id_V_din = in_V_id_V_dout;
    end else begin
        out_V_id_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1126_reg_937_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (io_acc_block_signal_op24 == 1'b0) | (io_acc_block_signal_op18 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_V_id_V_write = 1'b1;
    end else begin
        out_V_id_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1126_reg_937_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_V_last_V_blk_n = out_V_last_V_full_n;
    end else begin
        out_V_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1126_reg_937_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_V_last_V_din = tmp_last_V_1_reg_971_pp0_iter3_reg;
    end else if ((~((ap_start == 1'b0) | (io_acc_block_signal_op24 == 1'b0) | (io_acc_block_signal_op18 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        out_V_last_V_din = in_V_last_V_dout;
    end else begin
        out_V_last_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1126_reg_937_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (io_acc_block_signal_op24 == 1'b0) | (io_acc_block_signal_op18 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_V_last_V_write = 1'b1;
    end else begin
        out_V_last_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1126_reg_937_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_V_user_V_blk_n = out_V_user_V_full_n;
    end else begin
        out_V_user_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1126_reg_937_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_V_user_V_din = tmp_user_V_3_reg_966_pp0_iter3_reg;
    end else if ((~((ap_start == 1'b0) | (io_acc_block_signal_op24 == 1'b0) | (io_acc_block_signal_op18 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        out_V_user_V_din = in_V_user_V_dout;
    end else begin
        out_V_user_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1126_reg_937_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (io_acc_block_signal_op24 == 1'b0) | (io_acc_block_signal_op18 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_V_user_V_write = 1'b1;
    end else begin
        out_V_user_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (io_acc_block_signal_op24 == 1'b0) | (io_acc_block_signal_op18 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1126_fu_390_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1126_fu_390_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1126_fu_395_p2 = (indvar_flatten_reg_321 + 28'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln1126_reg_937_pp0_iter3_reg == 1'd0) & (io_acc_block_signal_op112 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((icmp_ln1126_reg_937 == 1'd0) & (io_acc_block_signal_op39 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln1126_reg_937_pp0_iter3_reg == 1'd0) & (io_acc_block_signal_op112 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((icmp_ln1126_reg_937 == 1'd0) & (io_acc_block_signal_op39 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln1126_reg_937_pp0_iter3_reg == 1'd0) & (io_acc_block_signal_op112 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((icmp_ln1126_reg_937 == 1'd0) & (io_acc_block_signal_op39 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (io_acc_block_signal_op24 == 1'b0) | (io_acc_block_signal_op18 == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln1126_reg_937 == 1'd0) & (io_acc_block_signal_op39 == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter4 = ((icmp_ln1126_reg_937_pp0_iter3_reg == 1'd0) & (io_acc_block_signal_op112 == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bound_fu_901_p0 = bound_fu_901_p00;

assign bound_fu_901_p00 = p_cast_fu_368_p4;

assign bound_fu_901_p1 = bound_fu_901_p10;

assign bound_fu_901_p10 = empty_327_fu_378_p1;

assign empty_327_fu_378_p1 = in_V_data_V_dout[15:0];

assign icmp_ln1126_fu_390_p2 = ((indvar_flatten_reg_321 == bound_reg_932) ? 1'b1 : 1'b0);

assign icmp_ln1128_fu_401_p2 = ((i_op_assign_1_reg_332 == p_cast_reg_907) ? 1'b1 : 1'b0);

assign icmp_ln891_10_fu_617_p2 = ((or_ln1136_9_fu_611_p2 < empty_327_reg_912) ? 1'b1 : 1'b0);

assign icmp_ln891_11_fu_628_p2 = ((or_ln1136_10_fu_622_p2 < empty_327_reg_912) ? 1'b1 : 1'b0);

assign icmp_ln891_12_fu_639_p2 = ((or_ln1136_11_fu_633_p2 < empty_327_reg_912) ? 1'b1 : 1'b0);

assign icmp_ln891_13_fu_650_p2 = ((or_ln1136_12_fu_644_p2 < empty_327_reg_912) ? 1'b1 : 1'b0);

assign icmp_ln891_14_fu_661_p2 = ((or_ln1136_13_fu_655_p2 < empty_327_reg_912) ? 1'b1 : 1'b0);

assign icmp_ln891_15_fu_672_p2 = ((or_ln1136_14_fu_666_p2 < empty_327_reg_912) ? 1'b1 : 1'b0);

assign icmp_ln891_1_fu_458_p2 = ((or_ln1136_fu_452_p2 < empty_327_reg_912) ? 1'b1 : 1'b0);

assign icmp_ln891_2_fu_489_p2 = ((or_ln1136_1_fu_483_p2 < empty_327_reg_912) ? 1'b1 : 1'b0);

assign icmp_ln891_3_fu_520_p2 = ((or_ln1136_2_fu_514_p2 < empty_327_reg_912) ? 1'b1 : 1'b0);

assign icmp_ln891_4_fu_551_p2 = ((or_ln1136_3_fu_545_p2 < empty_327_reg_912) ? 1'b1 : 1'b0);

assign icmp_ln891_5_fu_562_p2 = ((or_ln1136_4_fu_556_p2 < empty_327_reg_912) ? 1'b1 : 1'b0);

assign icmp_ln891_6_fu_573_p2 = ((or_ln1136_5_fu_567_p2 < empty_327_reg_912) ? 1'b1 : 1'b0);

assign icmp_ln891_7_fu_584_p2 = ((or_ln1136_6_fu_578_p2 < empty_327_reg_912) ? 1'b1 : 1'b0);

assign icmp_ln891_8_fu_595_p2 = ((or_ln1136_7_fu_589_p2 < empty_327_reg_912) ? 1'b1 : 1'b0);

assign icmp_ln891_9_fu_606_p2 = ((or_ln1136_8_fu_600_p2 < empty_327_reg_912) ? 1'b1 : 1'b0);

assign icmp_ln891_fu_427_p2 = ((shl_ln_fu_420_p3 < empty_327_reg_912) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op112 = (out_V_user_V_full_n & out_V_last_V_full_n & out_V_id_V_full_n & out_V_dest_V_full_n & out_V_data_V_full_n);

assign io_acc_block_signal_op18 = (in_V_user_V_empty_n & in_V_last_V_empty_n & in_V_id_V_empty_n & in_V_dest_V_empty_n & in_V_data_V_empty_n);

assign io_acc_block_signal_op24 = (out_V_user_V_full_n & out_V_last_V_full_n & out_V_id_V_full_n & out_V_dest_V_full_n & out_V_data_V_full_n);

assign io_acc_block_signal_op39 = (in_V_user_V_empty_n & in_V_last_V_empty_n & in_V_id_V_empty_n & in_V_dest_V_empty_n & in_V_data_V_empty_n);

assign j_fu_414_p2 = (select_ln1598_fu_406_p3 + 12'd1);

assign or_ln1136_10_fu_622_p2 = (shl_ln_fu_420_p3 | 16'd11);

assign or_ln1136_11_fu_633_p2 = (shl_ln_fu_420_p3 | 16'd12);

assign or_ln1136_12_fu_644_p2 = (shl_ln_fu_420_p3 | 16'd13);

assign or_ln1136_13_fu_655_p2 = (shl_ln_fu_420_p3 | 16'd14);

assign or_ln1136_14_fu_666_p2 = (shl_ln_fu_420_p3 | 16'd15);

assign or_ln1136_1_fu_483_p2 = (shl_ln_fu_420_p3 | 16'd2);

assign or_ln1136_2_fu_514_p2 = (shl_ln_fu_420_p3 | 16'd3);

assign or_ln1136_3_fu_545_p2 = (shl_ln_fu_420_p3 | 16'd4);

assign or_ln1136_4_fu_556_p2 = (shl_ln_fu_420_p3 | 16'd5);

assign or_ln1136_5_fu_567_p2 = (shl_ln_fu_420_p3 | 16'd6);

assign or_ln1136_6_fu_578_p2 = (shl_ln_fu_420_p3 | 16'd7);

assign or_ln1136_7_fu_589_p2 = (shl_ln_fu_420_p3 | 16'd8);

assign or_ln1136_8_fu_600_p2 = (shl_ln_fu_420_p3 | 16'd9);

assign or_ln1136_9_fu_611_p2 = (shl_ln_fu_420_p3 | 16'd10);

assign or_ln1136_fu_452_p2 = (shl_ln_fu_420_p3 | 16'd1);

assign p_Result_35_10_fu_808_p5 = {{select_ln891_10_reg_1042[511:384]}, {32'd2147483648}, {select_ln891_10_reg_1042[351:0]}};

assign p_Result_35_11_fu_825_p5 = {{select_ln891_11_fu_819_p3[511:416]}, {32'd2147483648}, {select_ln891_11_fu_819_p3[383:0]}};

assign p_Result_35_12_fu_844_p5 = {{select_ln891_12_fu_837_p3[511:448]}, {32'd2147483648}, {select_ln891_12_fu_837_p3[415:0]}};

assign p_Result_35_13_fu_863_p5 = {{select_ln891_13_fu_856_p3[511:480]}, {32'd2147483648}, {select_ln891_13_fu_856_p3[447:0]}};

assign p_Result_35_14_fu_882_p5 = {{32'd2147483648}, {select_ln891_14_fu_875_p3[479:0]}};

assign p_Result_35_1_fu_463_p5 = {{select_ln891_fu_444_p3[511:64]}, {32'd2147483648}, {select_ln891_fu_444_p3[31:0]}};

assign p_Result_35_2_fu_494_p5 = {{select_ln891_1_fu_475_p3[511:96]}, {32'd2147483648}, {select_ln891_1_fu_475_p3[63:0]}};

assign p_Result_35_3_fu_525_p5 = {{select_ln891_2_fu_506_p3[511:128]}, {32'd2147483648}, {select_ln891_2_fu_506_p3[95:0]}};

assign p_Result_35_4_fu_677_p5 = {{select_ln891_3_reg_976[511:160]}, {32'd2147483648}, {select_ln891_3_reg_976[127:0]}};

assign p_Result_35_5_fu_694_p5 = {{select_ln891_4_fu_688_p3[511:192]}, {32'd2147483648}, {select_ln891_4_fu_688_p3[159:0]}};

assign p_Result_35_6_fu_713_p5 = {{select_ln891_5_fu_706_p3[511:224]}, {32'd2147483648}, {select_ln891_5_fu_706_p3[191:0]}};

assign p_Result_35_7_fu_732_p5 = {{select_ln891_6_fu_725_p3[511:256]}, {32'd2147483648}, {select_ln891_6_fu_725_p3[223:0]}};

assign p_Result_35_8_fu_751_p5 = {{select_ln891_7_fu_744_p3[511:288]}, {32'd2147483648}, {select_ln891_7_fu_744_p3[255:0]}};

assign p_Result_35_9_fu_770_p5 = {{select_ln891_8_fu_763_p3[511:320]}, {32'd2147483648}, {select_ln891_8_fu_763_p3[287:0]}};

assign p_Result_35_s_fu_789_p5 = {{select_ln891_9_fu_782_p3[511:352]}, {32'd2147483648}, {select_ln891_9_fu_782_p3[319:0]}};

assign p_Result_s_fu_432_p5 = {{in_V_data_V_dout[511:32]}, {32'd2147483648}};

assign p_cast_fu_368_p4 = {{in_V_data_V_dout[47:36]}};

assign select_ln1598_fu_406_p3 = ((icmp_ln1128_fu_401_p2[0:0] === 1'b1) ? 12'd0 : i_op_assign_1_reg_332);

assign select_ln891_10_fu_801_p3 = ((icmp_ln891_10_reg_1012[0:0] === 1'b1) ? select_ln891_9_fu_782_p3 : p_Result_35_s_fu_789_p5);

assign select_ln891_11_fu_819_p3 = ((icmp_ln891_11_reg_1017_pp0_iter2_reg[0:0] === 1'b1) ? select_ln891_10_reg_1042 : p_Result_35_10_fu_808_p5);

assign select_ln891_12_fu_837_p3 = ((icmp_ln891_12_reg_1022_pp0_iter2_reg[0:0] === 1'b1) ? select_ln891_11_fu_819_p3 : p_Result_35_11_fu_825_p5);

assign select_ln891_13_fu_856_p3 = ((icmp_ln891_13_reg_1027_pp0_iter2_reg[0:0] === 1'b1) ? select_ln891_12_fu_837_p3 : p_Result_35_12_fu_844_p5);

assign select_ln891_14_fu_875_p3 = ((icmp_ln891_14_reg_1032_pp0_iter2_reg[0:0] === 1'b1) ? select_ln891_13_fu_856_p3 : p_Result_35_13_fu_863_p5);

assign select_ln891_1_fu_475_p3 = ((icmp_ln891_1_fu_458_p2[0:0] === 1'b1) ? select_ln891_fu_444_p3 : p_Result_35_1_fu_463_p5);

assign select_ln891_2_fu_506_p3 = ((icmp_ln891_2_fu_489_p2[0:0] === 1'b1) ? select_ln891_1_fu_475_p3 : p_Result_35_2_fu_494_p5);

assign select_ln891_3_fu_537_p3 = ((icmp_ln891_3_fu_520_p2[0:0] === 1'b1) ? select_ln891_2_fu_506_p3 : p_Result_35_3_fu_525_p5);

assign select_ln891_4_fu_688_p3 = ((icmp_ln891_4_reg_982[0:0] === 1'b1) ? select_ln891_3_reg_976 : p_Result_35_4_fu_677_p5);

assign select_ln891_5_fu_706_p3 = ((icmp_ln891_5_reg_987[0:0] === 1'b1) ? select_ln891_4_fu_688_p3 : p_Result_35_5_fu_694_p5);

assign select_ln891_6_fu_725_p3 = ((icmp_ln891_6_reg_992[0:0] === 1'b1) ? select_ln891_5_fu_706_p3 : p_Result_35_6_fu_713_p5);

assign select_ln891_7_fu_744_p3 = ((icmp_ln891_7_reg_997[0:0] === 1'b1) ? select_ln891_6_fu_725_p3 : p_Result_35_7_fu_732_p5);

assign select_ln891_8_fu_763_p3 = ((icmp_ln891_8_reg_1002[0:0] === 1'b1) ? select_ln891_7_fu_744_p3 : p_Result_35_8_fu_751_p5);

assign select_ln891_9_fu_782_p3 = ((icmp_ln891_9_reg_1007[0:0] === 1'b1) ? select_ln891_8_fu_763_p3 : p_Result_35_9_fu_770_p5);

assign select_ln891_fu_444_p3 = ((icmp_ln891_fu_427_p2[0:0] === 1'b1) ? in_V_data_V_dout : p_Result_s_fu_432_p5);

assign shl_ln_fu_420_p3 = {{select_ln1598_reg_946}, {4'd0}};

assign tmp_data_V_5_fu_894_p3 = ((icmp_ln891_15_reg_1037_pp0_iter2_reg[0:0] === 1'b1) ? select_ln891_14_fu_875_p3 : p_Result_35_14_fu_882_p5);

endmodule //AttentionMatmulSoftm
