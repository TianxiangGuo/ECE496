-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity AttentionMatmulQuant is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    in_V_data_V1_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    in_V_data_V1_empty_n : IN STD_LOGIC;
    in_V_data_V1_read : OUT STD_LOGIC;
    in_V_id_V2_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_V_id_V2_empty_n : IN STD_LOGIC;
    in_V_id_V2_read : OUT STD_LOGIC;
    in_V_dest_V3_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_V_dest_V3_empty_n : IN STD_LOGIC;
    in_V_dest_V3_read : OUT STD_LOGIC;
    in_V_user_V4_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_V_user_V4_empty_n : IN STD_LOGIC;
    in_V_user_V4_read : OUT STD_LOGIC;
    in_V_last_V5_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    in_V_last_V5_empty_n : IN STD_LOGIC;
    in_V_last_V5_read : OUT STD_LOGIC;
    out_V_data_V_din : OUT STD_LOGIC_VECTOR (511 downto 0);
    out_V_data_V_full_n : IN STD_LOGIC;
    out_V_data_V_write : OUT STD_LOGIC;
    out_V_id_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_V_id_V_full_n : IN STD_LOGIC;
    out_V_id_V_write : OUT STD_LOGIC;
    out_V_dest_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_V_dest_V_full_n : IN STD_LOGIC;
    out_V_dest_V_write : OUT STD_LOGIC;
    out_V_user_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_V_user_V_full_n : IN STD_LOGIC;
    out_V_user_V_write : OUT STD_LOGIC;
    out_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_V_last_V_full_n : IN STD_LOGIC;
    out_V_last_V_write : OUT STD_LOGIC );
end;


architecture behav of AttentionMatmulQuant is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal in_V_data_V1_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln841_reg_512 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_V_id_V2_blk_n : STD_LOGIC;
    signal in_V_dest_V3_blk_n : STD_LOGIC;
    signal in_V_user_V4_blk_n : STD_LOGIC;
    signal in_V_last_V5_blk_n : STD_LOGIC;
    signal out_V_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal out_V_id_V_blk_n : STD_LOGIC;
    signal out_V_dest_V_blk_n : STD_LOGIC;
    signal out_V_user_V_blk_n : STD_LOGIC;
    signal out_V_last_V_blk_n : STD_LOGIC;
    signal i_0_reg_246 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_9_reg_454 : STD_LOGIC_VECTOR (511 downto 0);
    signal io_acc_block_signal_op10 : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal tmp_id_V_2_reg_459 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_dest_V_2_reg_464 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_user_V_4_reg_469 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_last_V_2_reg_474 : STD_LOGIC_VECTOR (0 downto 0);
    signal Nc_2_fu_302_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Nc_2_reg_479 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln821_fu_320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln821_reg_487 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_493 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln824_fu_372_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln824_reg_498 : STD_LOGIC_VECTOR (31 downto 0);
    signal io_acc_block_signal_op44 : STD_LOGIC;
    signal icmp_ln836_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op60 : STD_LOGIC;
    signal io_acc_block_signal_op62 : STD_LOGIC;
    signal io_acc_block_signal_op68 : STD_LOGIC;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_fu_403_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal icmp_ln841_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal tmp_id_V_fu_196 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_dest_V_fu_200 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_user_V_fu_204 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_last_V_fu_208 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_386_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_16_fu_310_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln825_fu_306_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln827_fu_332_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_337_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal Nc_fu_347_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln821_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln824_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln821_fu_355_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_379_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op44 = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op44 = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_246_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln836_fu_398_p2 = ap_const_lv1_0))) then 
                i_0_reg_246 <= i_fu_403_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op44 = ap_const_logic_1))) then 
                i_0_reg_246 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op10 = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                Nc_2_reg_479 <= Nc_2_fu_302_p1;
                icmp_ln821_reg_487 <= icmp_ln821_fu_320_p2;
                icmp_ln824_reg_493 <= icmp_ln824_fu_326_p2;
                tmp_data_V_9_reg_454 <= in_V_data_V1_dout;
                tmp_dest_V_2_reg_464 <= in_V_dest_V3_dout;
                tmp_id_V_2_reg_459 <= in_V_id_V2_dout;
                tmp_last_V_2_reg_474 <= in_V_last_V5_dout;
                tmp_user_V_4_reg_469 <= in_V_user_V4_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln836_fu_398_p2 = ap_const_lv1_0))) then
                icmp_ln841_reg_512 <= icmp_ln841_fu_409_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op44 = ap_const_logic_1))) then
                select_ln824_reg_498 <= select_ln824_fu_372_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((io_acc_block_signal_op10 = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then
                tmp_dest_V_fu_200 <= in_V_dest_V3_dout;
                tmp_id_V_fu_196 <= in_V_id_V2_dout;
                tmp_last_V_fu_208 <= in_V_last_V5_dout;
                tmp_user_V_fu_204 <= in_V_user_V4_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, io_acc_block_signal_op10, io_acc_block_signal_op44, icmp_ln836_fu_398_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((io_acc_block_signal_op10 = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op44 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((icmp_ln836_fu_398_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((icmp_ln836_fu_398_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    Nc_2_fu_302_p1 <= in_V_data_V1_dout(32 - 1 downto 0);
    Nc_fu_347_p3 <= (tmp_1_fu_337_p4 & ap_const_lv4_0);
    add_ln827_fu_332_p2 <= std_logic_vector(unsigned(ap_const_lv32_10) + unsigned(Nc_2_reg_479));
    and_ln824_fu_367_p2 <= (xor_ln821_fu_362_p2 and icmp_ln824_reg_493);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln841_reg_512, io_acc_block_signal_op60, io_acc_block_signal_op62, io_acc_block_signal_op68)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln841_reg_512 = ap_const_lv1_0) and (io_acc_block_signal_op60 = ap_const_logic_0)) or ((icmp_ln841_reg_512 = ap_const_lv1_1) and (io_acc_block_signal_op68 = ap_const_logic_0)) or ((icmp_ln841_reg_512 = ap_const_lv1_1) and (io_acc_block_signal_op62 = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln841_reg_512, io_acc_block_signal_op60, io_acc_block_signal_op62, io_acc_block_signal_op68)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln841_reg_512 = ap_const_lv1_0) and (io_acc_block_signal_op60 = ap_const_logic_0)) or ((icmp_ln841_reg_512 = ap_const_lv1_1) and (io_acc_block_signal_op68 = ap_const_logic_0)) or ((icmp_ln841_reg_512 = ap_const_lv1_1) and (io_acc_block_signal_op62 = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln841_reg_512, io_acc_block_signal_op60, io_acc_block_signal_op62, io_acc_block_signal_op68)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln841_reg_512 = ap_const_lv1_0) and (io_acc_block_signal_op60 = ap_const_logic_0)) or ((icmp_ln841_reg_512 = ap_const_lv1_1) and (io_acc_block_signal_op68 = ap_const_logic_0)) or ((icmp_ln841_reg_512 = ap_const_lv1_1) and (io_acc_block_signal_op62 = ap_const_logic_0))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, io_acc_block_signal_op10)
    begin
                ap_block_state1 <= ((io_acc_block_signal_op10 = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(icmp_ln841_reg_512, io_acc_block_signal_op60, io_acc_block_signal_op62, io_acc_block_signal_op68)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((icmp_ln841_reg_512 = ap_const_lv1_0) and (io_acc_block_signal_op60 = ap_const_logic_0)) or ((icmp_ln841_reg_512 = ap_const_lv1_1) and (io_acc_block_signal_op68 = ap_const_logic_0)) or ((icmp_ln841_reg_512 = ap_const_lv1_1) and (io_acc_block_signal_op62 = ap_const_logic_0)));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln836_fu_398_p2)
    begin
        if ((icmp_ln836_fu_398_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    i_fu_403_p2 <= std_logic_vector(unsigned(i_0_reg_246) + unsigned(ap_const_lv32_1));
    icmp_ln821_fu_320_p2 <= "1" when (tmp_16_fu_310_p4 = ap_const_lv28_0) else "0";
    icmp_ln824_fu_326_p2 <= "1" when (trunc_ln825_fu_306_p1 = ap_const_lv4_0) else "0";
    icmp_ln836_fu_398_p2 <= "1" when (i_0_reg_246 = select_ln824_reg_498) else "0";
    icmp_ln841_fu_409_p2 <= "1" when (unsigned(i_0_reg_246) < unsigned(Nc_2_reg_479)) else "0";

    in_V_data_V1_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_data_V1_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln841_reg_512)
    begin
        if ((((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_data_V1_blk_n <= in_V_data_V1_empty_n;
        else 
            in_V_data_V1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_data_V1_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln841_reg_512, io_acc_block_signal_op10, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((io_acc_block_signal_op10 = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_data_V1_read <= ap_const_logic_1;
        else 
            in_V_data_V1_read <= ap_const_logic_0;
        end if; 
    end process;


    in_V_dest_V3_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_dest_V3_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln841_reg_512)
    begin
        if ((((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_dest_V3_blk_n <= in_V_dest_V3_empty_n;
        else 
            in_V_dest_V3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_dest_V3_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln841_reg_512, io_acc_block_signal_op10, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((io_acc_block_signal_op10 = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_dest_V3_read <= ap_const_logic_1;
        else 
            in_V_dest_V3_read <= ap_const_logic_0;
        end if; 
    end process;


    in_V_id_V2_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_id_V2_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln841_reg_512)
    begin
        if ((((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_id_V2_blk_n <= in_V_id_V2_empty_n;
        else 
            in_V_id_V2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_id_V2_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln841_reg_512, io_acc_block_signal_op10, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((io_acc_block_signal_op10 = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_id_V2_read <= ap_const_logic_1;
        else 
            in_V_id_V2_read <= ap_const_logic_0;
        end if; 
    end process;


    in_V_last_V5_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_last_V5_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln841_reg_512)
    begin
        if ((((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_last_V5_blk_n <= in_V_last_V5_empty_n;
        else 
            in_V_last_V5_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_last_V5_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln841_reg_512, io_acc_block_signal_op10, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((io_acc_block_signal_op10 = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_last_V5_read <= ap_const_logic_1;
        else 
            in_V_last_V5_read <= ap_const_logic_0;
        end if; 
    end process;


    in_V_user_V4_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_user_V4_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln841_reg_512)
    begin
        if ((((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_user_V4_blk_n <= in_V_user_V4_empty_n;
        else 
            in_V_user_V4_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_user_V4_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln841_reg_512, io_acc_block_signal_op10, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((io_acc_block_signal_op10 = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_user_V4_read <= ap_const_logic_1;
        else 
            in_V_user_V4_read <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op10 <= (in_V_user_V4_empty_n and in_V_last_V5_empty_n and in_V_id_V2_empty_n and in_V_dest_V3_empty_n and in_V_data_V1_empty_n);
    io_acc_block_signal_op44 <= (out_V_user_V_full_n and out_V_last_V_full_n and out_V_id_V_full_n and out_V_dest_V_full_n and out_V_data_V_full_n);
    io_acc_block_signal_op60 <= (out_V_user_V_full_n and out_V_last_V_full_n and out_V_id_V_full_n and out_V_dest_V_full_n and out_V_data_V_full_n);
    io_acc_block_signal_op62 <= (in_V_user_V4_empty_n and in_V_last_V5_empty_n and in_V_id_V2_empty_n and in_V_dest_V3_empty_n and in_V_data_V1_empty_n);
    io_acc_block_signal_op68 <= (out_V_user_V_full_n and out_V_last_V_full_n and out_V_id_V_full_n and out_V_dest_V_full_n and out_V_data_V_full_n);

    out_V_data_V_blk_n_assign_proc : process(out_V_data_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln841_reg_512, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln841_reg_512 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_V_data_V_blk_n <= out_V_data_V_full_n;
        else 
            out_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_V_data_V_din_assign_proc : process(in_V_data_V1_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln841_reg_512, ap_CS_fsm_state2, io_acc_block_signal_op44, p_Result_s_fu_386_p5, ap_block_pp0_stage0_01001)
    begin
        if (((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_V_data_V_din <= in_V_data_V1_dout;
        elsif (((icmp_ln841_reg_512 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_V_data_V_din <= ap_const_lv512_lc_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op44 = ap_const_logic_1))) then 
            out_V_data_V_din <= p_Result_s_fu_386_p5;
        else 
            out_V_data_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_V_data_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln841_reg_512, ap_CS_fsm_state2, io_acc_block_signal_op44, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln841_reg_512 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op44 = ap_const_logic_1)))) then 
            out_V_data_V_write <= ap_const_logic_1;
        else 
            out_V_data_V_write <= ap_const_logic_0;
        end if; 
    end process;


    out_V_dest_V_blk_n_assign_proc : process(out_V_dest_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln841_reg_512, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln841_reg_512 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_V_dest_V_blk_n <= out_V_dest_V_full_n;
        else 
            out_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_V_dest_V_din_assign_proc : process(in_V_dest_V3_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln841_reg_512, ap_CS_fsm_state2, tmp_dest_V_2_reg_464, io_acc_block_signal_op44, tmp_dest_V_fu_200, ap_block_pp0_stage0_01001)
    begin
        if (((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_V_dest_V_din <= in_V_dest_V3_dout;
        elsif (((icmp_ln841_reg_512 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_V_dest_V_din <= tmp_dest_V_fu_200;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op44 = ap_const_logic_1))) then 
            out_V_dest_V_din <= tmp_dest_V_2_reg_464;
        else 
            out_V_dest_V_din <= "XXXXXXXX";
        end if; 
    end process;


    out_V_dest_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln841_reg_512, ap_CS_fsm_state2, io_acc_block_signal_op44, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln841_reg_512 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op44 = ap_const_logic_1)))) then 
            out_V_dest_V_write <= ap_const_logic_1;
        else 
            out_V_dest_V_write <= ap_const_logic_0;
        end if; 
    end process;


    out_V_id_V_blk_n_assign_proc : process(out_V_id_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln841_reg_512, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln841_reg_512 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_V_id_V_blk_n <= out_V_id_V_full_n;
        else 
            out_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_V_id_V_din_assign_proc : process(in_V_id_V2_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln841_reg_512, ap_CS_fsm_state2, tmp_id_V_2_reg_459, io_acc_block_signal_op44, tmp_id_V_fu_196, ap_block_pp0_stage0_01001)
    begin
        if (((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_V_id_V_din <= in_V_id_V2_dout;
        elsif (((icmp_ln841_reg_512 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_V_id_V_din <= tmp_id_V_fu_196;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op44 = ap_const_logic_1))) then 
            out_V_id_V_din <= tmp_id_V_2_reg_459;
        else 
            out_V_id_V_din <= "XXXXXXXX";
        end if; 
    end process;


    out_V_id_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln841_reg_512, ap_CS_fsm_state2, io_acc_block_signal_op44, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln841_reg_512 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op44 = ap_const_logic_1)))) then 
            out_V_id_V_write <= ap_const_logic_1;
        else 
            out_V_id_V_write <= ap_const_logic_0;
        end if; 
    end process;


    out_V_last_V_blk_n_assign_proc : process(out_V_last_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln841_reg_512, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln841_reg_512 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_V_last_V_blk_n <= out_V_last_V_full_n;
        else 
            out_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_V_last_V_din_assign_proc : process(in_V_last_V5_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln841_reg_512, ap_CS_fsm_state2, tmp_last_V_2_reg_474, io_acc_block_signal_op44, tmp_last_V_fu_208, ap_block_pp0_stage0_01001)
    begin
        if (((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_V_last_V_din <= in_V_last_V5_dout;
        elsif (((icmp_ln841_reg_512 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_V_last_V_din <= tmp_last_V_fu_208;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op44 = ap_const_logic_1))) then 
            out_V_last_V_din <= tmp_last_V_2_reg_474;
        else 
            out_V_last_V_din <= "X";
        end if; 
    end process;


    out_V_last_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln841_reg_512, ap_CS_fsm_state2, io_acc_block_signal_op44, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln841_reg_512 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op44 = ap_const_logic_1)))) then 
            out_V_last_V_write <= ap_const_logic_1;
        else 
            out_V_last_V_write <= ap_const_logic_0;
        end if; 
    end process;


    out_V_user_V_blk_n_assign_proc : process(out_V_user_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln841_reg_512, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln841_reg_512 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_V_user_V_blk_n <= out_V_user_V_full_n;
        else 
            out_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_V_user_V_din_assign_proc : process(in_V_user_V4_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln841_reg_512, ap_CS_fsm_state2, tmp_user_V_4_reg_469, io_acc_block_signal_op44, tmp_user_V_fu_204, ap_block_pp0_stage0_01001)
    begin
        if (((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_V_user_V_din <= in_V_user_V4_dout;
        elsif (((icmp_ln841_reg_512 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_V_user_V_din <= tmp_user_V_fu_204;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op44 = ap_const_logic_1))) then 
            out_V_user_V_din <= tmp_user_V_4_reg_469;
        else 
            out_V_user_V_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_V_user_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln841_reg_512, ap_CS_fsm_state2, io_acc_block_signal_op44, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln841_reg_512 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln841_reg_512 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (io_acc_block_signal_op44 = ap_const_logic_1)))) then 
            out_V_user_V_write <= ap_const_logic_1;
        else 
            out_V_user_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_s_fu_386_p5 <= (tmp_data_V_9_reg_454(511 downto 64) & tmp_fu_379_p3);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    select_ln821_fu_355_p3 <= 
        ap_const_lv32_10 when (icmp_ln821_reg_487(0) = '1') else 
        Nc_fu_347_p3;
    select_ln824_fu_372_p3 <= 
        Nc_2_reg_479 when (and_ln824_fu_367_p2(0) = '1') else 
        select_ln821_fu_355_p3;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_16_fu_310_p4 <= in_V_data_V1_dout(31 downto 4);
    tmp_1_fu_337_p4 <= add_ln827_fu_332_p2(31 downto 4);
    tmp_fu_379_p3 <= (Nc_2_reg_479 & select_ln824_fu_372_p3);
    trunc_ln825_fu_306_p1 <= in_V_data_V1_dout(4 - 1 downto 0);
    xor_ln821_fu_362_p2 <= (icmp_ln821_reg_487 xor ap_const_lv1_1);
end behav;
