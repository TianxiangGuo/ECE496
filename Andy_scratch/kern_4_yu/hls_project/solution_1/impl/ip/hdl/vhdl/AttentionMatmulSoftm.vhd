-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity AttentionMatmulSoftm is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_V_data_V_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    in_V_data_V_empty_n : IN STD_LOGIC;
    in_V_data_V_read : OUT STD_LOGIC;
    in_V_id_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_V_id_V_empty_n : IN STD_LOGIC;
    in_V_id_V_read : OUT STD_LOGIC;
    in_V_dest_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_V_dest_V_empty_n : IN STD_LOGIC;
    in_V_dest_V_read : OUT STD_LOGIC;
    in_V_user_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_V_user_V_empty_n : IN STD_LOGIC;
    in_V_user_V_read : OUT STD_LOGIC;
    in_V_last_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    in_V_last_V_empty_n : IN STD_LOGIC;
    in_V_last_V_read : OUT STD_LOGIC;
    out_V_data_V_din : OUT STD_LOGIC_VECTOR (511 downto 0);
    out_V_data_V_full_n : IN STD_LOGIC;
    out_V_data_V_write : OUT STD_LOGIC;
    out_V_id_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_V_id_V_full_n : IN STD_LOGIC;
    out_V_id_V_write : OUT STD_LOGIC;
    out_V_dest_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_V_dest_V_full_n : IN STD_LOGIC;
    out_V_dest_V_write : OUT STD_LOGIC;
    out_V_user_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_V_user_V_full_n : IN STD_LOGIC;
    out_V_user_V_write : OUT STD_LOGIC;
    out_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_V_last_V_full_n : IN STD_LOGIC;
    out_V_last_V_write : OUT STD_LOGIC );
end;


architecture behav of AttentionMatmulSoftm is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv28_1 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv16_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000011";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv16_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_const_lv16_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000101";
    constant ap_const_lv16_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000110";
    constant ap_const_lv16_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000111";
    constant ap_const_lv16_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_const_lv16_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001001";
    constant ap_const_lv16_A : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001010";
    constant ap_const_lv16_B : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001011";
    constant ap_const_lv16_C : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001100";
    constant ap_const_lv16_D : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001101";
    constant ap_const_lv16_E : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001110";
    constant ap_const_lv16_F : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_19F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal in_V_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln1126_reg_937 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_V_id_V_blk_n : STD_LOGIC;
    signal in_V_dest_V_blk_n : STD_LOGIC;
    signal in_V_user_V_blk_n : STD_LOGIC;
    signal in_V_last_V_blk_n : STD_LOGIC;
    signal out_V_data_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal icmp_ln1126_reg_937_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_id_V_blk_n : STD_LOGIC;
    signal out_V_dest_V_blk_n : STD_LOGIC;
    signal out_V_user_V_blk_n : STD_LOGIC;
    signal out_V_last_V_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_321 : STD_LOGIC_VECTOR (27 downto 0);
    signal i_op_assign_1_reg_332 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_cast_fu_368_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_cast_reg_907 : STD_LOGIC_VECTOR (11 downto 0);
    signal io_acc_block_signal_op18 : STD_LOGIC;
    signal io_acc_block_signal_op24 : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal empty_327_fu_378_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_327_reg_912 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_fu_901_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal bound_reg_932 : STD_LOGIC_VECTOR (27 downto 0);
    signal icmp_ln1126_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op39 : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal io_acc_block_signal_op112 : STD_LOGIC;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln1126_reg_937_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1126_reg_937_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1126_fu_395_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln1598_fu_406_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln1598_reg_946 : STD_LOGIC_VECTOR (11 downto 0);
    signal j_fu_414_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_id_V_1_reg_956 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_id_V_1_reg_956_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_id_V_1_reg_956_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_dest_V_1_reg_961 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_dest_V_1_reg_961_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_dest_V_1_reg_961_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_user_V_3_reg_966 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_user_V_3_reg_966_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_user_V_3_reg_966_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_last_V_1_reg_971 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_1_reg_971_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_1_reg_971_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln891_3_fu_537_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal select_ln891_3_reg_976 : STD_LOGIC_VECTOR (511 downto 0);
    signal icmp_ln891_4_fu_551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_4_reg_982 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_5_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_5_reg_987 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_6_fu_573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_6_reg_992 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_7_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_7_reg_997 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_8_fu_595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_8_reg_1002 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_9_fu_606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_9_reg_1007 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_10_fu_617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_10_reg_1012 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_11_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_11_reg_1017 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_11_reg_1017_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_12_fu_639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_12_reg_1022 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_12_reg_1022_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_13_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_13_reg_1027 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_13_reg_1027_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_14_fu_661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_14_reg_1032 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_14_reg_1032_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_15_fu_672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_15_reg_1037 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_15_reg_1037_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln891_10_fu_801_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal select_ln891_10_reg_1042 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_data_V_5_fu_894_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_data_V_5_reg_1048 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln1128_fu_401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_420_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln891_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_432_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal or_ln1136_fu_452_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln891_fu_444_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal icmp_ln891_1_fu_458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_35_1_fu_463_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal or_ln1136_1_fu_483_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln891_1_fu_475_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal icmp_ln891_2_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_35_2_fu_494_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal or_ln1136_2_fu_514_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln891_2_fu_506_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal icmp_ln891_3_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_35_3_fu_525_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal or_ln1136_3_fu_545_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1136_4_fu_556_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1136_5_fu_567_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1136_6_fu_578_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1136_7_fu_589_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1136_8_fu_600_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1136_9_fu_611_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1136_10_fu_622_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1136_11_fu_633_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1136_12_fu_644_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1136_13_fu_655_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln1136_14_fu_666_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_35_4_fu_677_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal select_ln891_4_fu_688_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_35_5_fu_694_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal select_ln891_5_fu_706_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_35_6_fu_713_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal select_ln891_6_fu_725_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_35_7_fu_732_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal select_ln891_7_fu_744_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_35_8_fu_751_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal select_ln891_8_fu_763_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_35_9_fu_770_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal select_ln891_9_fu_782_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_35_s_fu_789_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_35_10_fu_808_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal select_ln891_11_fu_819_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_35_11_fu_825_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal select_ln891_12_fu_837_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_35_12_fu_844_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal select_ln891_13_fu_856_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_35_13_fu_863_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal select_ln891_14_fu_875_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_35_14_fu_882_p5 : STD_LOGIC_VECTOR (511 downto 0);
    signal bound_fu_901_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal bound_fu_901_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal bound_fu_901_p00 : STD_LOGIC_VECTOR (27 downto 0);
    signal bound_fu_901_p10 : STD_LOGIC_VECTOR (27 downto 0);

    component kernel_4_mul_mul_12ns_16ns_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;



begin
    kernel_4_mul_mul_12ns_16ns_28_1_1_U511 : component kernel_4_mul_mul_12ns_16ns_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 16,
        dout_WIDTH => 28)
    port map (
        din0 => bound_fu_901_p0,
        din1 => bound_fu_901_p1,
        dout => bound_fu_901_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (io_acc_block_signal_op24 = ap_const_logic_0) or (io_acc_block_signal_op18 = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif ((not(((ap_start = ap_const_logic_0) or (io_acc_block_signal_op24 = ap_const_logic_0) or (io_acc_block_signal_op18 = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_op_assign_1_reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1126_fu_390_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_op_assign_1_reg_332 <= j_fu_414_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (io_acc_block_signal_op24 = ap_const_logic_0) or (io_acc_block_signal_op18 = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_op_assign_1_reg_332 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_321_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1126_fu_390_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_reg_321 <= add_ln1126_fu_395_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (io_acc_block_signal_op24 = ap_const_logic_0) or (io_acc_block_signal_op18 = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_321 <= ap_const_lv28_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (io_acc_block_signal_op24 = ap_const_logic_0) or (io_acc_block_signal_op18 = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                bound_reg_932 <= bound_fu_901_p2;
                empty_327_reg_912 <= empty_327_fu_378_p1;
                p_cast_reg_907 <= in_V_data_V_dout(47 downto 36);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln1126_reg_937 <= icmp_ln1126_fu_390_p2;
                icmp_ln1126_reg_937_pp0_iter1_reg <= icmp_ln1126_reg_937;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln1126_reg_937_pp0_iter2_reg <= icmp_ln1126_reg_937_pp0_iter1_reg;
                icmp_ln1126_reg_937_pp0_iter3_reg <= icmp_ln1126_reg_937_pp0_iter2_reg;
                icmp_ln891_11_reg_1017_pp0_iter2_reg <= icmp_ln891_11_reg_1017;
                icmp_ln891_12_reg_1022_pp0_iter2_reg <= icmp_ln891_12_reg_1022;
                icmp_ln891_13_reg_1027_pp0_iter2_reg <= icmp_ln891_13_reg_1027;
                icmp_ln891_14_reg_1032_pp0_iter2_reg <= icmp_ln891_14_reg_1032;
                icmp_ln891_15_reg_1037_pp0_iter2_reg <= icmp_ln891_15_reg_1037;
                tmp_dest_V_1_reg_961_pp0_iter2_reg <= tmp_dest_V_1_reg_961;
                tmp_dest_V_1_reg_961_pp0_iter3_reg <= tmp_dest_V_1_reg_961_pp0_iter2_reg;
                tmp_id_V_1_reg_956_pp0_iter2_reg <= tmp_id_V_1_reg_956;
                tmp_id_V_1_reg_956_pp0_iter3_reg <= tmp_id_V_1_reg_956_pp0_iter2_reg;
                tmp_last_V_1_reg_971_pp0_iter2_reg <= tmp_last_V_1_reg_971;
                tmp_last_V_1_reg_971_pp0_iter3_reg <= tmp_last_V_1_reg_971_pp0_iter2_reg;
                tmp_user_V_3_reg_966_pp0_iter2_reg <= tmp_user_V_3_reg_966;
                tmp_user_V_3_reg_966_pp0_iter3_reg <= tmp_user_V_3_reg_966_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1126_reg_937 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln891_10_reg_1012 <= icmp_ln891_10_fu_617_p2;
                icmp_ln891_11_reg_1017 <= icmp_ln891_11_fu_628_p2;
                icmp_ln891_12_reg_1022 <= icmp_ln891_12_fu_639_p2;
                icmp_ln891_13_reg_1027 <= icmp_ln891_13_fu_650_p2;
                icmp_ln891_14_reg_1032 <= icmp_ln891_14_fu_661_p2;
                icmp_ln891_15_reg_1037 <= icmp_ln891_15_fu_672_p2;
                icmp_ln891_4_reg_982 <= icmp_ln891_4_fu_551_p2;
                icmp_ln891_5_reg_987 <= icmp_ln891_5_fu_562_p2;
                icmp_ln891_6_reg_992 <= icmp_ln891_6_fu_573_p2;
                icmp_ln891_7_reg_997 <= icmp_ln891_7_fu_584_p2;
                icmp_ln891_8_reg_1002 <= icmp_ln891_8_fu_595_p2;
                icmp_ln891_9_reg_1007 <= icmp_ln891_9_fu_606_p2;
                select_ln891_3_reg_976 <= select_ln891_3_fu_537_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1126_fu_390_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln1598_reg_946 <= select_ln1598_fu_406_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1126_reg_937_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln891_10_reg_1042 <= select_ln891_10_fu_801_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1126_reg_937_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_data_V_5_reg_1048 <= tmp_data_V_5_fu_894_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1126_reg_937 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_dest_V_1_reg_961 <= in_V_dest_V_dout;
                tmp_id_V_1_reg_956 <= in_V_id_V_dout;
                tmp_last_V_1_reg_971 <= in_V_last_V_dout;
                tmp_user_V_3_reg_966 <= in_V_user_V_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, io_acc_block_signal_op18, io_acc_block_signal_op24, icmp_ln1126_fu_390_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (io_acc_block_signal_op24 = ap_const_logic_0) or (io_acc_block_signal_op18 = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln1126_fu_390_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln1126_fu_390_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln1126_fu_395_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_321) + unsigned(ap_const_lv28_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state7 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln1126_reg_937, ap_enable_reg_pp0_iter4, icmp_ln1126_reg_937_pp0_iter3_reg, io_acc_block_signal_op39, io_acc_block_signal_op112)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln1126_reg_937_pp0_iter3_reg = ap_const_lv1_0) and (io_acc_block_signal_op112 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((icmp_ln1126_reg_937 = ap_const_lv1_0) and (io_acc_block_signal_op39 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln1126_reg_937, ap_enable_reg_pp0_iter4, icmp_ln1126_reg_937_pp0_iter3_reg, io_acc_block_signal_op39, io_acc_block_signal_op112)
    begin
                ap_block_pp0_stage0_11001 <= (((icmp_ln1126_reg_937_pp0_iter3_reg = ap_const_lv1_0) and (io_acc_block_signal_op112 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((icmp_ln1126_reg_937 = ap_const_lv1_0) and (io_acc_block_signal_op39 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln1126_reg_937, ap_enable_reg_pp0_iter4, icmp_ln1126_reg_937_pp0_iter3_reg, io_acc_block_signal_op39, io_acc_block_signal_op112)
    begin
                ap_block_pp0_stage0_subdone <= (((icmp_ln1126_reg_937_pp0_iter3_reg = ap_const_lv1_0) and (io_acc_block_signal_op112 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((icmp_ln1126_reg_937 = ap_const_lv1_0) and (io_acc_block_signal_op39 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, io_acc_block_signal_op18, io_acc_block_signal_op24)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (io_acc_block_signal_op24 = ap_const_logic_0) or (io_acc_block_signal_op18 = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(icmp_ln1126_reg_937, io_acc_block_signal_op39)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((icmp_ln1126_reg_937 = ap_const_lv1_0) and (io_acc_block_signal_op39 = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter4_assign_proc : process(icmp_ln1126_reg_937_pp0_iter3_reg, io_acc_block_signal_op112)
    begin
                ap_block_state6_pp0_stage0_iter4 <= ((icmp_ln1126_reg_937_pp0_iter3_reg = ap_const_lv1_0) and (io_acc_block_signal_op112 = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln1126_fu_390_p2)
    begin
        if ((icmp_ln1126_fu_390_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bound_fu_901_p0 <= bound_fu_901_p00(12 - 1 downto 0);
    bound_fu_901_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast_fu_368_p4),28));
    bound_fu_901_p1 <= bound_fu_901_p10(16 - 1 downto 0);
    bound_fu_901_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_327_fu_378_p1),28));
    empty_327_fu_378_p1 <= in_V_data_V_dout(16 - 1 downto 0);
    icmp_ln1126_fu_390_p2 <= "1" when (indvar_flatten_reg_321 = bound_reg_932) else "0";
    icmp_ln1128_fu_401_p2 <= "1" when (i_op_assign_1_reg_332 = p_cast_reg_907) else "0";
    icmp_ln891_10_fu_617_p2 <= "1" when (unsigned(or_ln1136_9_fu_611_p2) < unsigned(empty_327_reg_912)) else "0";
    icmp_ln891_11_fu_628_p2 <= "1" when (unsigned(or_ln1136_10_fu_622_p2) < unsigned(empty_327_reg_912)) else "0";
    icmp_ln891_12_fu_639_p2 <= "1" when (unsigned(or_ln1136_11_fu_633_p2) < unsigned(empty_327_reg_912)) else "0";
    icmp_ln891_13_fu_650_p2 <= "1" when (unsigned(or_ln1136_12_fu_644_p2) < unsigned(empty_327_reg_912)) else "0";
    icmp_ln891_14_fu_661_p2 <= "1" when (unsigned(or_ln1136_13_fu_655_p2) < unsigned(empty_327_reg_912)) else "0";
    icmp_ln891_15_fu_672_p2 <= "1" when (unsigned(or_ln1136_14_fu_666_p2) < unsigned(empty_327_reg_912)) else "0";
    icmp_ln891_1_fu_458_p2 <= "1" when (unsigned(or_ln1136_fu_452_p2) < unsigned(empty_327_reg_912)) else "0";
    icmp_ln891_2_fu_489_p2 <= "1" when (unsigned(or_ln1136_1_fu_483_p2) < unsigned(empty_327_reg_912)) else "0";
    icmp_ln891_3_fu_520_p2 <= "1" when (unsigned(or_ln1136_2_fu_514_p2) < unsigned(empty_327_reg_912)) else "0";
    icmp_ln891_4_fu_551_p2 <= "1" when (unsigned(or_ln1136_3_fu_545_p2) < unsigned(empty_327_reg_912)) else "0";
    icmp_ln891_5_fu_562_p2 <= "1" when (unsigned(or_ln1136_4_fu_556_p2) < unsigned(empty_327_reg_912)) else "0";
    icmp_ln891_6_fu_573_p2 <= "1" when (unsigned(or_ln1136_5_fu_567_p2) < unsigned(empty_327_reg_912)) else "0";
    icmp_ln891_7_fu_584_p2 <= "1" when (unsigned(or_ln1136_6_fu_578_p2) < unsigned(empty_327_reg_912)) else "0";
    icmp_ln891_8_fu_595_p2 <= "1" when (unsigned(or_ln1136_7_fu_589_p2) < unsigned(empty_327_reg_912)) else "0";
    icmp_ln891_9_fu_606_p2 <= "1" when (unsigned(or_ln1136_8_fu_600_p2) < unsigned(empty_327_reg_912)) else "0";
    icmp_ln891_fu_427_p2 <= "1" when (unsigned(shl_ln_fu_420_p3) < unsigned(empty_327_reg_912)) else "0";

    in_V_data_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_V_data_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln1126_reg_937)
    begin
        if ((((icmp_ln1126_reg_937 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_data_V_blk_n <= in_V_data_V_empty_n;
        else 
            in_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_data_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1126_reg_937, io_acc_block_signal_op18, io_acc_block_signal_op24, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln1126_reg_937 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((ap_start = ap_const_logic_0) or (io_acc_block_signal_op24 = ap_const_logic_0) or (io_acc_block_signal_op18 = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_data_V_read <= ap_const_logic_1;
        else 
            in_V_data_V_read <= ap_const_logic_0;
        end if; 
    end process;


    in_V_dest_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_V_dest_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln1126_reg_937)
    begin
        if ((((icmp_ln1126_reg_937 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_dest_V_blk_n <= in_V_dest_V_empty_n;
        else 
            in_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_dest_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1126_reg_937, io_acc_block_signal_op18, io_acc_block_signal_op24, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln1126_reg_937 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((ap_start = ap_const_logic_0) or (io_acc_block_signal_op24 = ap_const_logic_0) or (io_acc_block_signal_op18 = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_dest_V_read <= ap_const_logic_1;
        else 
            in_V_dest_V_read <= ap_const_logic_0;
        end if; 
    end process;


    in_V_id_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_V_id_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln1126_reg_937)
    begin
        if ((((icmp_ln1126_reg_937 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_id_V_blk_n <= in_V_id_V_empty_n;
        else 
            in_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_id_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1126_reg_937, io_acc_block_signal_op18, io_acc_block_signal_op24, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln1126_reg_937 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((ap_start = ap_const_logic_0) or (io_acc_block_signal_op24 = ap_const_logic_0) or (io_acc_block_signal_op18 = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_id_V_read <= ap_const_logic_1;
        else 
            in_V_id_V_read <= ap_const_logic_0;
        end if; 
    end process;


    in_V_last_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_V_last_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln1126_reg_937)
    begin
        if ((((icmp_ln1126_reg_937 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_last_V_blk_n <= in_V_last_V_empty_n;
        else 
            in_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_last_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1126_reg_937, io_acc_block_signal_op18, io_acc_block_signal_op24, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln1126_reg_937 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((ap_start = ap_const_logic_0) or (io_acc_block_signal_op24 = ap_const_logic_0) or (io_acc_block_signal_op18 = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_last_V_read <= ap_const_logic_1;
        else 
            in_V_last_V_read <= ap_const_logic_0;
        end if; 
    end process;


    in_V_user_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_V_user_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln1126_reg_937)
    begin
        if ((((icmp_ln1126_reg_937 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_user_V_blk_n <= in_V_user_V_empty_n;
        else 
            in_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_user_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1126_reg_937, io_acc_block_signal_op18, io_acc_block_signal_op24, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln1126_reg_937 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((ap_start = ap_const_logic_0) or (io_acc_block_signal_op24 = ap_const_logic_0) or (io_acc_block_signal_op18 = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_user_V_read <= ap_const_logic_1;
        else 
            in_V_user_V_read <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op112 <= (out_V_user_V_full_n and out_V_last_V_full_n and out_V_id_V_full_n and out_V_dest_V_full_n and out_V_data_V_full_n);
    io_acc_block_signal_op18 <= (in_V_user_V_empty_n and in_V_last_V_empty_n and in_V_id_V_empty_n and in_V_dest_V_empty_n and in_V_data_V_empty_n);
    io_acc_block_signal_op24 <= (out_V_user_V_full_n and out_V_last_V_full_n and out_V_id_V_full_n and out_V_dest_V_full_n and out_V_data_V_full_n);
    io_acc_block_signal_op39 <= (in_V_user_V_empty_n and in_V_last_V_empty_n and in_V_id_V_empty_n and in_V_dest_V_empty_n and in_V_data_V_empty_n);
    j_fu_414_p2 <= std_logic_vector(unsigned(select_ln1598_fu_406_p3) + unsigned(ap_const_lv12_1));
    or_ln1136_10_fu_622_p2 <= (shl_ln_fu_420_p3 or ap_const_lv16_B);
    or_ln1136_11_fu_633_p2 <= (shl_ln_fu_420_p3 or ap_const_lv16_C);
    or_ln1136_12_fu_644_p2 <= (shl_ln_fu_420_p3 or ap_const_lv16_D);
    or_ln1136_13_fu_655_p2 <= (shl_ln_fu_420_p3 or ap_const_lv16_E);
    or_ln1136_14_fu_666_p2 <= (shl_ln_fu_420_p3 or ap_const_lv16_F);
    or_ln1136_1_fu_483_p2 <= (shl_ln_fu_420_p3 or ap_const_lv16_2);
    or_ln1136_2_fu_514_p2 <= (shl_ln_fu_420_p3 or ap_const_lv16_3);
    or_ln1136_3_fu_545_p2 <= (shl_ln_fu_420_p3 or ap_const_lv16_4);
    or_ln1136_4_fu_556_p2 <= (shl_ln_fu_420_p3 or ap_const_lv16_5);
    or_ln1136_5_fu_567_p2 <= (shl_ln_fu_420_p3 or ap_const_lv16_6);
    or_ln1136_6_fu_578_p2 <= (shl_ln_fu_420_p3 or ap_const_lv16_7);
    or_ln1136_7_fu_589_p2 <= (shl_ln_fu_420_p3 or ap_const_lv16_8);
    or_ln1136_8_fu_600_p2 <= (shl_ln_fu_420_p3 or ap_const_lv16_9);
    or_ln1136_9_fu_611_p2 <= (shl_ln_fu_420_p3 or ap_const_lv16_A);
    or_ln1136_fu_452_p2 <= (shl_ln_fu_420_p3 or ap_const_lv16_1);

    out_V_data_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, out_V_data_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln1126_reg_937_pp0_iter3_reg)
    begin
        if ((((icmp_ln1126_reg_937_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            out_V_data_V_blk_n <= out_V_data_V_full_n;
        else 
            out_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_V_data_V_din_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_V_data_V_dout, ap_enable_reg_pp0_iter4, icmp_ln1126_reg_937_pp0_iter3_reg, io_acc_block_signal_op18, io_acc_block_signal_op24, tmp_data_V_5_reg_1048, ap_block_pp0_stage0_01001)
    begin
        if (((icmp_ln1126_reg_937_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            out_V_data_V_din <= tmp_data_V_5_reg_1048;
        elsif ((not(((ap_start = ap_const_logic_0) or (io_acc_block_signal_op24 = ap_const_logic_0) or (io_acc_block_signal_op18 = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_V_data_V_din <= in_V_data_V_dout;
        else 
            out_V_data_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_V_data_V_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_enable_reg_pp0_iter4, icmp_ln1126_reg_937_pp0_iter3_reg, io_acc_block_signal_op18, io_acc_block_signal_op24, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln1126_reg_937_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((ap_start = ap_const_logic_0) or (io_acc_block_signal_op24 = ap_const_logic_0) or (io_acc_block_signal_op18 = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            out_V_data_V_write <= ap_const_logic_1;
        else 
            out_V_data_V_write <= ap_const_logic_0;
        end if; 
    end process;


    out_V_dest_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, out_V_dest_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln1126_reg_937_pp0_iter3_reg)
    begin
        if ((((icmp_ln1126_reg_937_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            out_V_dest_V_blk_n <= out_V_dest_V_full_n;
        else 
            out_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_V_dest_V_din_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_V_dest_V_dout, ap_enable_reg_pp0_iter4, icmp_ln1126_reg_937_pp0_iter3_reg, io_acc_block_signal_op18, io_acc_block_signal_op24, tmp_dest_V_1_reg_961_pp0_iter3_reg, ap_block_pp0_stage0_01001)
    begin
        if (((icmp_ln1126_reg_937_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            out_V_dest_V_din <= tmp_dest_V_1_reg_961_pp0_iter3_reg;
        elsif ((not(((ap_start = ap_const_logic_0) or (io_acc_block_signal_op24 = ap_const_logic_0) or (io_acc_block_signal_op18 = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_V_dest_V_din <= in_V_dest_V_dout;
        else 
            out_V_dest_V_din <= "XXXXXXXX";
        end if; 
    end process;


    out_V_dest_V_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_enable_reg_pp0_iter4, icmp_ln1126_reg_937_pp0_iter3_reg, io_acc_block_signal_op18, io_acc_block_signal_op24, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln1126_reg_937_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((ap_start = ap_const_logic_0) or (io_acc_block_signal_op24 = ap_const_logic_0) or (io_acc_block_signal_op18 = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            out_V_dest_V_write <= ap_const_logic_1;
        else 
            out_V_dest_V_write <= ap_const_logic_0;
        end if; 
    end process;


    out_V_id_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, out_V_id_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln1126_reg_937_pp0_iter3_reg)
    begin
        if ((((icmp_ln1126_reg_937_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            out_V_id_V_blk_n <= out_V_id_V_full_n;
        else 
            out_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_V_id_V_din_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_V_id_V_dout, ap_enable_reg_pp0_iter4, icmp_ln1126_reg_937_pp0_iter3_reg, io_acc_block_signal_op18, io_acc_block_signal_op24, tmp_id_V_1_reg_956_pp0_iter3_reg, ap_block_pp0_stage0_01001)
    begin
        if (((icmp_ln1126_reg_937_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            out_V_id_V_din <= tmp_id_V_1_reg_956_pp0_iter3_reg;
        elsif ((not(((ap_start = ap_const_logic_0) or (io_acc_block_signal_op24 = ap_const_logic_0) or (io_acc_block_signal_op18 = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_V_id_V_din <= in_V_id_V_dout;
        else 
            out_V_id_V_din <= "XXXXXXXX";
        end if; 
    end process;


    out_V_id_V_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_enable_reg_pp0_iter4, icmp_ln1126_reg_937_pp0_iter3_reg, io_acc_block_signal_op18, io_acc_block_signal_op24, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln1126_reg_937_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((ap_start = ap_const_logic_0) or (io_acc_block_signal_op24 = ap_const_logic_0) or (io_acc_block_signal_op18 = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            out_V_id_V_write <= ap_const_logic_1;
        else 
            out_V_id_V_write <= ap_const_logic_0;
        end if; 
    end process;


    out_V_last_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, out_V_last_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln1126_reg_937_pp0_iter3_reg)
    begin
        if ((((icmp_ln1126_reg_937_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            out_V_last_V_blk_n <= out_V_last_V_full_n;
        else 
            out_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_V_last_V_din_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_V_last_V_dout, ap_enable_reg_pp0_iter4, icmp_ln1126_reg_937_pp0_iter3_reg, io_acc_block_signal_op18, io_acc_block_signal_op24, tmp_last_V_1_reg_971_pp0_iter3_reg, ap_block_pp0_stage0_01001)
    begin
        if (((icmp_ln1126_reg_937_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            out_V_last_V_din <= tmp_last_V_1_reg_971_pp0_iter3_reg;
        elsif ((not(((ap_start = ap_const_logic_0) or (io_acc_block_signal_op24 = ap_const_logic_0) or (io_acc_block_signal_op18 = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_V_last_V_din <= in_V_last_V_dout;
        else 
            out_V_last_V_din <= "X";
        end if; 
    end process;


    out_V_last_V_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_enable_reg_pp0_iter4, icmp_ln1126_reg_937_pp0_iter3_reg, io_acc_block_signal_op18, io_acc_block_signal_op24, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln1126_reg_937_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((ap_start = ap_const_logic_0) or (io_acc_block_signal_op24 = ap_const_logic_0) or (io_acc_block_signal_op18 = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            out_V_last_V_write <= ap_const_logic_1;
        else 
            out_V_last_V_write <= ap_const_logic_0;
        end if; 
    end process;


    out_V_user_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, out_V_user_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln1126_reg_937_pp0_iter3_reg)
    begin
        if ((((icmp_ln1126_reg_937_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            out_V_user_V_blk_n <= out_V_user_V_full_n;
        else 
            out_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_V_user_V_din_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_V_user_V_dout, ap_enable_reg_pp0_iter4, icmp_ln1126_reg_937_pp0_iter3_reg, io_acc_block_signal_op18, io_acc_block_signal_op24, tmp_user_V_3_reg_966_pp0_iter3_reg, ap_block_pp0_stage0_01001)
    begin
        if (((icmp_ln1126_reg_937_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            out_V_user_V_din <= tmp_user_V_3_reg_966_pp0_iter3_reg;
        elsif ((not(((ap_start = ap_const_logic_0) or (io_acc_block_signal_op24 = ap_const_logic_0) or (io_acc_block_signal_op18 = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_V_user_V_din <= in_V_user_V_dout;
        else 
            out_V_user_V_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_V_user_V_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_enable_reg_pp0_iter4, icmp_ln1126_reg_937_pp0_iter3_reg, io_acc_block_signal_op18, io_acc_block_signal_op24, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln1126_reg_937_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((ap_start = ap_const_logic_0) or (io_acc_block_signal_op24 = ap_const_logic_0) or (io_acc_block_signal_op18 = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            out_V_user_V_write <= ap_const_logic_1;
        else 
            out_V_user_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_35_10_fu_808_p5 <= (select_ln891_10_reg_1042(511 downto 384) & ap_const_lv32_80000000 & select_ln891_10_reg_1042(351 downto 0));
    p_Result_35_11_fu_825_p5 <= (select_ln891_11_fu_819_p3(511 downto 416) & ap_const_lv32_80000000 & select_ln891_11_fu_819_p3(383 downto 0));
    p_Result_35_12_fu_844_p5 <= (select_ln891_12_fu_837_p3(511 downto 448) & ap_const_lv32_80000000 & select_ln891_12_fu_837_p3(415 downto 0));
    p_Result_35_13_fu_863_p5 <= (select_ln891_13_fu_856_p3(511 downto 480) & ap_const_lv32_80000000 & select_ln891_13_fu_856_p3(447 downto 0));
    p_Result_35_14_fu_882_p5 <= (ap_const_lv32_80000000 & select_ln891_14_fu_875_p3(479 downto 0));
    p_Result_35_1_fu_463_p5 <= (select_ln891_fu_444_p3(511 downto 64) & ap_const_lv32_80000000 & select_ln891_fu_444_p3(31 downto 0));
    p_Result_35_2_fu_494_p5 <= (select_ln891_1_fu_475_p3(511 downto 96) & ap_const_lv32_80000000 & select_ln891_1_fu_475_p3(63 downto 0));
    p_Result_35_3_fu_525_p5 <= (select_ln891_2_fu_506_p3(511 downto 128) & ap_const_lv32_80000000 & select_ln891_2_fu_506_p3(95 downto 0));
    p_Result_35_4_fu_677_p5 <= (select_ln891_3_reg_976(511 downto 160) & ap_const_lv32_80000000 & select_ln891_3_reg_976(127 downto 0));
    p_Result_35_5_fu_694_p5 <= (select_ln891_4_fu_688_p3(511 downto 192) & ap_const_lv32_80000000 & select_ln891_4_fu_688_p3(159 downto 0));
    p_Result_35_6_fu_713_p5 <= (select_ln891_5_fu_706_p3(511 downto 224) & ap_const_lv32_80000000 & select_ln891_5_fu_706_p3(191 downto 0));
    p_Result_35_7_fu_732_p5 <= (select_ln891_6_fu_725_p3(511 downto 256) & ap_const_lv32_80000000 & select_ln891_6_fu_725_p3(223 downto 0));
    p_Result_35_8_fu_751_p5 <= (select_ln891_7_fu_744_p3(511 downto 288) & ap_const_lv32_80000000 & select_ln891_7_fu_744_p3(255 downto 0));
    p_Result_35_9_fu_770_p5 <= (select_ln891_8_fu_763_p3(511 downto 320) & ap_const_lv32_80000000 & select_ln891_8_fu_763_p3(287 downto 0));
    p_Result_35_s_fu_789_p5 <= (select_ln891_9_fu_782_p3(511 downto 352) & ap_const_lv32_80000000 & select_ln891_9_fu_782_p3(319 downto 0));
    p_Result_s_fu_432_p5 <= (in_V_data_V_dout(511 downto 32) & ap_const_lv32_80000000);
    p_cast_fu_368_p4 <= in_V_data_V_dout(47 downto 36);
    select_ln1598_fu_406_p3 <= 
        ap_const_lv12_0 when (icmp_ln1128_fu_401_p2(0) = '1') else 
        i_op_assign_1_reg_332;
    select_ln891_10_fu_801_p3 <= 
        select_ln891_9_fu_782_p3 when (icmp_ln891_10_reg_1012(0) = '1') else 
        p_Result_35_s_fu_789_p5;
    select_ln891_11_fu_819_p3 <= 
        select_ln891_10_reg_1042 when (icmp_ln891_11_reg_1017_pp0_iter2_reg(0) = '1') else 
        p_Result_35_10_fu_808_p5;
    select_ln891_12_fu_837_p3 <= 
        select_ln891_11_fu_819_p3 when (icmp_ln891_12_reg_1022_pp0_iter2_reg(0) = '1') else 
        p_Result_35_11_fu_825_p5;
    select_ln891_13_fu_856_p3 <= 
        select_ln891_12_fu_837_p3 when (icmp_ln891_13_reg_1027_pp0_iter2_reg(0) = '1') else 
        p_Result_35_12_fu_844_p5;
    select_ln891_14_fu_875_p3 <= 
        select_ln891_13_fu_856_p3 when (icmp_ln891_14_reg_1032_pp0_iter2_reg(0) = '1') else 
        p_Result_35_13_fu_863_p5;
    select_ln891_1_fu_475_p3 <= 
        select_ln891_fu_444_p3 when (icmp_ln891_1_fu_458_p2(0) = '1') else 
        p_Result_35_1_fu_463_p5;
    select_ln891_2_fu_506_p3 <= 
        select_ln891_1_fu_475_p3 when (icmp_ln891_2_fu_489_p2(0) = '1') else 
        p_Result_35_2_fu_494_p5;
    select_ln891_3_fu_537_p3 <= 
        select_ln891_2_fu_506_p3 when (icmp_ln891_3_fu_520_p2(0) = '1') else 
        p_Result_35_3_fu_525_p5;
    select_ln891_4_fu_688_p3 <= 
        select_ln891_3_reg_976 when (icmp_ln891_4_reg_982(0) = '1') else 
        p_Result_35_4_fu_677_p5;
    select_ln891_5_fu_706_p3 <= 
        select_ln891_4_fu_688_p3 when (icmp_ln891_5_reg_987(0) = '1') else 
        p_Result_35_5_fu_694_p5;
    select_ln891_6_fu_725_p3 <= 
        select_ln891_5_fu_706_p3 when (icmp_ln891_6_reg_992(0) = '1') else 
        p_Result_35_6_fu_713_p5;
    select_ln891_7_fu_744_p3 <= 
        select_ln891_6_fu_725_p3 when (icmp_ln891_7_reg_997(0) = '1') else 
        p_Result_35_7_fu_732_p5;
    select_ln891_8_fu_763_p3 <= 
        select_ln891_7_fu_744_p3 when (icmp_ln891_8_reg_1002(0) = '1') else 
        p_Result_35_8_fu_751_p5;
    select_ln891_9_fu_782_p3 <= 
        select_ln891_8_fu_763_p3 when (icmp_ln891_9_reg_1007(0) = '1') else 
        p_Result_35_9_fu_770_p5;
    select_ln891_fu_444_p3 <= 
        in_V_data_V_dout when (icmp_ln891_fu_427_p2(0) = '1') else 
        p_Result_s_fu_432_p5;
    shl_ln_fu_420_p3 <= (select_ln1598_reg_946 & ap_const_lv4_0);
    tmp_data_V_5_fu_894_p3 <= 
        select_ln891_14_fu_875_p3 when (icmp_ln891_15_reg_1037_pp0_iter2_reg(0) = '1') else 
        p_Result_35_14_fu_882_p5;
end behav;
