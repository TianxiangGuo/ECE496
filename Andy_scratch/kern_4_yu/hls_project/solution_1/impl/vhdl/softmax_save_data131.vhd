-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity softmax_save_data131 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    in_V_data_V_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    in_V_data_V_empty_n : IN STD_LOGIC;
    in_V_data_V_read : OUT STD_LOGIC;
    in_V_id_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_V_id_V_empty_n : IN STD_LOGIC;
    in_V_id_V_read : OUT STD_LOGIC;
    in_V_dest_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_V_dest_V_empty_n : IN STD_LOGIC;
    in_V_dest_V_read : OUT STD_LOGIC;
    in_V_user_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_V_user_V_empty_n : IN STD_LOGIC;
    in_V_user_V_read : OUT STD_LOGIC;
    in_V_last_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    in_V_last_V_empty_n : IN STD_LOGIC;
    in_V_last_V_read : OUT STD_LOGIC;
    out_n_V_V_din : OUT STD_LOGIC_VECTOR (95 downto 0);
    out_n_V_V_full_n : IN STD_LOGIC;
    out_n_V_V_write : OUT STD_LOGIC;
    out_iter_r_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_iter_r_V_V_full_n : IN STD_LOGIC;
    out_iter_r_V_V_write : OUT STD_LOGIC;
    out_iter_c_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_iter_c_V_V_full_n : IN STD_LOGIC;
    out_iter_c_V_V_write : OUT STD_LOGIC;
    out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_V_V_full_n : IN STD_LOGIC;
    out_V_V_write : OUT STD_LOGIC );
end;


architecture behav of softmax_save_data131 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_const_lv6_A : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_const_lv6_B : STD_LOGIC_VECTOR (5 downto 0) := "001011";
    constant ap_const_lv6_C : STD_LOGIC_VECTOR (5 downto 0) := "001100";
    constant ap_const_lv6_D : STD_LOGIC_VECTOR (5 downto 0) := "001101";
    constant ap_const_lv6_E : STD_LOGIC_VECTOR (5 downto 0) := "001110";
    constant ap_const_lv6_F : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv6_11 : STD_LOGIC_VECTOR (5 downto 0) := "010001";
    constant ap_const_lv6_12 : STD_LOGIC_VECTOR (5 downto 0) := "010010";
    constant ap_const_lv6_13 : STD_LOGIC_VECTOR (5 downto 0) := "010011";
    constant ap_const_lv6_14 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_const_lv6_15 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_const_lv6_16 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_const_lv6_17 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv6_19 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_const_lv6_1A : STD_LOGIC_VECTOR (5 downto 0) := "011010";
    constant ap_const_lv6_1B : STD_LOGIC_VECTOR (5 downto 0) := "011011";
    constant ap_const_lv6_1C : STD_LOGIC_VECTOR (5 downto 0) := "011100";
    constant ap_const_lv6_1D : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv6_1F : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_22 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_25 : STD_LOGIC_VECTOR (5 downto 0) := "100101";
    constant ap_const_lv6_26 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_const_lv6_27 : STD_LOGIC_VECTOR (5 downto 0) := "100111";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv6_29 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_const_lv6_2A : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_const_lv6_2B : STD_LOGIC_VECTOR (5 downto 0) := "101011";
    constant ap_const_lv6_2C : STD_LOGIC_VECTOR (5 downto 0) := "101100";
    constant ap_const_lv6_2D : STD_LOGIC_VECTOR (5 downto 0) := "101101";
    constant ap_const_lv6_2E : STD_LOGIC_VECTOR (5 downto 0) := "101110";
    constant ap_const_lv6_2F : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv6_31 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_const_lv6_32 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_const_lv6_33 : STD_LOGIC_VECTOR (5 downto 0) := "110011";
    constant ap_const_lv6_34 : STD_LOGIC_VECTOR (5 downto 0) := "110100";
    constant ap_const_lv6_35 : STD_LOGIC_VECTOR (5 downto 0) := "110101";
    constant ap_const_lv6_36 : STD_LOGIC_VECTOR (5 downto 0) := "110110";
    constant ap_const_lv6_37 : STD_LOGIC_VECTOR (5 downto 0) := "110111";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_lv6_39 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_const_lv6_3A : STD_LOGIC_VECTOR (5 downto 0) := "111010";
    constant ap_const_lv6_3B : STD_LOGIC_VECTOR (5 downto 0) := "111011";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv6_3D : STD_LOGIC_VECTOR (5 downto 0) := "111101";
    constant ap_const_lv6_3E : STD_LOGIC_VECTOR (5 downto 0) := "111110";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv28_1 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_19F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal in_V_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln1661_reg_4225 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_V_id_V_blk_n : STD_LOGIC;
    signal in_V_dest_V_blk_n : STD_LOGIC;
    signal in_V_user_V_blk_n : STD_LOGIC;
    signal in_V_last_V_blk_n : STD_LOGIC;
    signal out_n_V_V_blk_n : STD_LOGIC;
    signal out_iter_r_V_V_blk_n : STD_LOGIC;
    signal out_iter_c_V_V_blk_n : STD_LOGIC;
    signal out_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln1725_reg_4686 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_0_reg_1029 : STD_LOGIC_VECTOR (27 downto 0);
    signal l_0_reg_1040 : STD_LOGIC_VECTOR (30 downto 0);
    signal N_r_fu_1200_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal N_r_reg_4201 : STD_LOGIC_VECTOR (31 downto 0);
    signal io_acc_block_signal_op166 : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal ITER_fu_1205_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal ITER_reg_4206 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_6_reg_4211 : STD_LOGIC_VECTOR (27 downto 0);
    signal icmp_ln1659_fu_1240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_fu_1245_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_4220 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1661_fu_1251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op403 : STD_LOGIC;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln1661_reg_4225_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1661_reg_4225_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_1256_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal icmp_ln1667_fu_1262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1667_reg_4234 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln180_fu_1268_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln180_reg_4254 : STD_LOGIC_VECTOR (2 downto 0);
    signal buffer_118_V_load_reg_4258 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_116_V_load_reg_4263 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_114_V_load_reg_4268 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_112_V_load_reg_4273 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_126_V_load_reg_4278 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_124_V_load_reg_4283 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_112_V_1_load_reg_4288 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_114_V_1_load_reg_4293 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_116_V_1_load_reg_4298 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_118_V_1_load_reg_4303 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_120_V_load_reg_4308 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_122_V_load_reg_4313 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_124_V_1_load_reg_4318 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_126_V_1_load_reg_4323 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_112_V_2_load_reg_4328 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_114_V_2_load_reg_4333 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_116_V_2_load_reg_4338 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_118_V_2_load_reg_4343 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_120_V_1_load_reg_4348 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_122_V_1_load_reg_4353 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_124_V_2_load_reg_4358 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_126_V_2_load_reg_4363 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_112_V_3_load_reg_4368 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_114_V_3_load_reg_4373 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_116_V_3_load_reg_4378 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_118_V_3_load_reg_4383 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_120_V_2_load_reg_4388 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_122_V_2_load_reg_4393 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_124_V_3_load_reg_4398 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_126_V_3_load_reg_4403 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_112_V_4_load_reg_4408 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_114_V_4_load_reg_4413 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_116_V_4_load_reg_4418 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_118_V_4_load_reg_4423 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_120_V_3_load_reg_4428 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_122_V_3_load_reg_4433 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_120_V_4_load_reg_4438 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_122_V_4_load_reg_4443 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_124_V_4_load_reg_4448 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_126_V_4_load_reg_4453 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_112_V_5_load_reg_4458 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_114_V_5_load_reg_4463 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_116_V_5_load_reg_4468 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_118_V_5_load_reg_4473 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_120_V_5_load_reg_4478 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_122_V_5_load_reg_4483 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_124_V_5_load_reg_4488 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_126_V_5_load_reg_4493 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_112_V_6_load_reg_4498 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_114_V_6_load_reg_4503 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_116_V_6_load_reg_4508 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_118_V_6_load_reg_4513 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_120_V_6_load_reg_4518 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_122_V_6_load_reg_4523 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_124_V_6_load_reg_4528 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_126_V_6_load_reg_4533 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_112_V_7_load_reg_4538 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_114_V_7_load_reg_4543 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_116_V_7_load_reg_4548 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_118_V_7_load_reg_4553 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_120_V_7_load_reg_4558 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_122_V_7_load_reg_4563 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_124_V_7_load_reg_4568 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_126_V_7_load_reg_4573 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_fu_1674_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_reg_4578 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_1_fu_1738_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_1_reg_4584 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_2_fu_1802_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_2_reg_4590 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_3_fu_1866_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_3_reg_4596 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_4_fu_1930_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_4_reg_4602 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_5_fu_1994_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_5_reg_4608 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_6_fu_2058_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_6_reg_4614 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_7_fu_2122_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_7_reg_4620 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_8_fu_2186_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_8_reg_4626 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_9_fu_2250_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_9_reg_4632 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_10_fu_2314_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_10_reg_4638 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_11_fu_2378_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_11_reg_4644 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_12_fu_2442_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_12_reg_4650 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_13_fu_2506_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_13_reg_4656 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_14_fu_2570_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_14_reg_4662 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_15_fu_2634_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1683_15_reg_4668 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_3_0_V_fu_2864_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_3_0_V_reg_4674 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_val_V_fu_2878_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_val_V_reg_4680 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1725_fu_2901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state8_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal l_fu_2906_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal trunc_ln1734_fu_2912_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln1734_reg_4695 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter1_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state8 : STD_LOGIC;
    signal i_0_reg_1018 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_phi_reg_pp1_iter0_phi_ln1734_reg_1051 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_0205_3_0_phi_fu_1187_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_2944_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp1_iter1_p_0205_3_0_reg_1184 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln879_fu_2916_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_fu_2931_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal max_val_V_1_fu_392 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_val_V_4_fu_2890_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_fu_396 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_40_fu_3305_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal max_V_0_0_fu_400 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_V_1_0_fu_404 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_V_2_0_fu_408 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_V_3_0_fu_412 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_V_4_0_fu_416 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_V_5_0_fu_420 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_V_6_0_fu_424 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_V_7_0_fu_428 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_V_8_0_fu_432 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_V_9_0_fu_436 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_V_10_0_fu_440 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_V_11_0_fu_444 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_V_12_0_fu_448 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_V_13_0_fu_452 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_V_14_0_fu_456 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_V_15_0_fu_460 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_119_V_fu_464 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_7_V_fu_2066_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_118_V_fu_468 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_6_V_fu_2002_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_117_V_fu_472 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_5_V_fu_1938_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_116_V_fu_476 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_4_V_fu_1874_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_115_V_fu_480 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_3_V_fu_1810_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_114_V_fu_484 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_2_V_fu_1746_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_113_V_fu_488 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_1_V_fu_1682_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_112_V_fu_492 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_0_V_fu_1624_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_127_V_fu_496 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_15_V_fu_2578_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_126_V_fu_500 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_14_V_fu_2514_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_125_V_fu_504 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_13_V_fu_2450_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_124_V_fu_508 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_12_V_fu_2386_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_123_V_fu_512 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_11_V_fu_2322_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_112_V_1_fu_516 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_113_V_1_fu_520 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_114_V_1_fu_524 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_115_V_1_fu_528 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_116_V_1_fu_532 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_117_V_1_fu_536 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_118_V_1_fu_540 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_119_V_1_fu_544 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_120_V_fu_548 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_8_V_fu_2130_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_121_V_fu_552 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_9_V_fu_2194_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_122_V_fu_556 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_10_V_fu_2258_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_123_V_1_fu_560 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_124_V_1_fu_564 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_125_V_1_fu_568 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_126_V_1_fu_572 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_127_V_1_fu_576 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_112_V_2_fu_580 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_113_V_2_fu_584 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_114_V_2_fu_588 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_115_V_2_fu_592 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_116_V_2_fu_596 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_117_V_2_fu_600 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_118_V_2_fu_604 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_119_V_2_fu_608 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_120_V_1_fu_612 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_121_V_1_fu_616 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_122_V_1_fu_620 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_123_V_2_fu_624 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_124_V_2_fu_628 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_125_V_2_fu_632 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_126_V_2_fu_636 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_127_V_2_fu_640 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_112_V_3_fu_644 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_113_V_3_fu_648 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_114_V_3_fu_652 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_115_V_3_fu_656 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_116_V_3_fu_660 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_117_V_3_fu_664 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_118_V_3_fu_668 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_119_V_3_fu_672 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_120_V_2_fu_676 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_121_V_2_fu_680 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_122_V_2_fu_684 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_123_V_3_fu_688 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_124_V_3_fu_692 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_125_V_3_fu_696 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_126_V_3_fu_700 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_127_V_3_fu_704 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_112_V_4_fu_708 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_113_V_4_fu_712 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_114_V_4_fu_716 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_115_V_4_fu_720 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_116_V_4_fu_724 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_117_V_4_fu_728 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_118_V_4_fu_732 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_119_V_4_fu_736 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_120_V_3_fu_740 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_121_V_3_fu_744 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_122_V_3_fu_748 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_120_V_4_fu_752 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_121_V_4_fu_756 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_122_V_4_fu_760 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_123_V_4_fu_764 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_124_V_4_fu_768 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_125_V_4_fu_772 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_126_V_4_fu_776 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_127_V_4_fu_780 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_112_V_5_fu_784 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_113_V_5_fu_788 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_114_V_5_fu_792 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_115_V_5_fu_796 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_116_V_5_fu_800 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_117_V_5_fu_804 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_118_V_5_fu_808 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_119_V_5_fu_812 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_120_V_5_fu_816 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_121_V_5_fu_820 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_122_V_5_fu_824 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_123_V_5_fu_828 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_124_V_5_fu_832 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_125_V_5_fu_836 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_126_V_5_fu_840 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_127_V_5_fu_844 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_112_V_6_fu_848 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_113_V_6_fu_852 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_114_V_6_fu_856 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_115_V_6_fu_860 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_116_V_6_fu_864 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_117_V_6_fu_868 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_118_V_6_fu_872 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_119_V_6_fu_876 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_120_V_6_fu_880 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_121_V_6_fu_884 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_122_V_6_fu_888 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_123_V_6_fu_892 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_124_V_6_fu_896 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_125_V_6_fu_900 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_126_V_6_fu_904 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_127_V_6_fu_908 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_112_V_7_fu_912 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_113_V_7_fu_916 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_114_V_7_fu_920 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_115_V_7_fu_924 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_116_V_7_fu_928 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_117_V_7_fu_932 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_118_V_7_fu_936 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_119_V_7_fu_940 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_120_V_7_fu_944 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_121_V_7_fu_948 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_122_V_7_fu_952 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_123_V_7_fu_956 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_124_V_7_fu_960 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_125_V_7_fu_964 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_126_V_7_fu_968 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_127_V_7_fu_972 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal select_ln1667_15_fu_1617_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln895_fu_1668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1667_14_fu_1610_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln895_1_fu_1732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1667_13_fu_1603_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln895_2_fu_1796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1667_12_fu_1596_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln895_3_fu_1860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1667_11_fu_1589_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln895_4_fu_1924_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1667_10_fu_1582_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln895_5_fu_1988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1667_9_fu_1575_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln895_6_fu_2052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1667_8_fu_1568_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln895_7_fu_2116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1667_7_fu_1561_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln895_8_fu_2180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1667_6_fu_1554_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln895_9_fu_2244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1667_5_fu_1547_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln895_10_fu_2308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1667_4_fu_1540_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln895_11_fu_2372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1667_3_fu_1533_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln895_12_fu_2436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1667_2_fu_1526_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln895_13_fu_2500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1667_1_fu_1519_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln895_14_fu_2564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1667_fu_1512_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln895_15_fu_2628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_fu_2722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_1_fu_2732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_2_fu_2742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_3_fu_2752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_5_fu_2762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_8_fu_2772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_6_fu_2782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_7_fu_2792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_1_0_V_fu_2726_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_1_1_V_fu_2736_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln887_9_fu_2802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_1_2_V_fu_2746_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_1_3_V_fu_2756_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln887_10_fu_2816_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_1_4_V_fu_2766_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_1_5_V_fu_2776_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln887_11_fu_2830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_1_6_V_fu_2786_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_1_7_V_fu_2796_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln887_12_fu_2844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_2_0_V_fu_2808_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_2_1_V_fu_2822_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln887_13_fu_2858_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_2_2_V_fu_2836_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_2_3_V_fu_2850_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln887_14_fu_2872_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_4_fu_2886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln215_fu_2925_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln1734_1_fu_3152_p66 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln879_1_fu_3285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln215_1_fu_3291_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln879_fu_3297_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_123 : BOOLEAN;
    signal ap_condition_371 : BOOLEAN;

    component kernel_4_mux_646_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        din33_WIDTH : INTEGER;
        din34_WIDTH : INTEGER;
        din35_WIDTH : INTEGER;
        din36_WIDTH : INTEGER;
        din37_WIDTH : INTEGER;
        din38_WIDTH : INTEGER;
        din39_WIDTH : INTEGER;
        din40_WIDTH : INTEGER;
        din41_WIDTH : INTEGER;
        din42_WIDTH : INTEGER;
        din43_WIDTH : INTEGER;
        din44_WIDTH : INTEGER;
        din45_WIDTH : INTEGER;
        din46_WIDTH : INTEGER;
        din47_WIDTH : INTEGER;
        din48_WIDTH : INTEGER;
        din49_WIDTH : INTEGER;
        din50_WIDTH : INTEGER;
        din51_WIDTH : INTEGER;
        din52_WIDTH : INTEGER;
        din53_WIDTH : INTEGER;
        din54_WIDTH : INTEGER;
        din55_WIDTH : INTEGER;
        din56_WIDTH : INTEGER;
        din57_WIDTH : INTEGER;
        din58_WIDTH : INTEGER;
        din59_WIDTH : INTEGER;
        din60_WIDTH : INTEGER;
        din61_WIDTH : INTEGER;
        din62_WIDTH : INTEGER;
        din63_WIDTH : INTEGER;
        din64_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (31 downto 0);
        din30 : IN STD_LOGIC_VECTOR (31 downto 0);
        din31 : IN STD_LOGIC_VECTOR (31 downto 0);
        din32 : IN STD_LOGIC_VECTOR (31 downto 0);
        din33 : IN STD_LOGIC_VECTOR (31 downto 0);
        din34 : IN STD_LOGIC_VECTOR (31 downto 0);
        din35 : IN STD_LOGIC_VECTOR (31 downto 0);
        din36 : IN STD_LOGIC_VECTOR (31 downto 0);
        din37 : IN STD_LOGIC_VECTOR (31 downto 0);
        din38 : IN STD_LOGIC_VECTOR (31 downto 0);
        din39 : IN STD_LOGIC_VECTOR (31 downto 0);
        din40 : IN STD_LOGIC_VECTOR (31 downto 0);
        din41 : IN STD_LOGIC_VECTOR (31 downto 0);
        din42 : IN STD_LOGIC_VECTOR (31 downto 0);
        din43 : IN STD_LOGIC_VECTOR (31 downto 0);
        din44 : IN STD_LOGIC_VECTOR (31 downto 0);
        din45 : IN STD_LOGIC_VECTOR (31 downto 0);
        din46 : IN STD_LOGIC_VECTOR (31 downto 0);
        din47 : IN STD_LOGIC_VECTOR (31 downto 0);
        din48 : IN STD_LOGIC_VECTOR (31 downto 0);
        din49 : IN STD_LOGIC_VECTOR (31 downto 0);
        din50 : IN STD_LOGIC_VECTOR (31 downto 0);
        din51 : IN STD_LOGIC_VECTOR (31 downto 0);
        din52 : IN STD_LOGIC_VECTOR (31 downto 0);
        din53 : IN STD_LOGIC_VECTOR (31 downto 0);
        din54 : IN STD_LOGIC_VECTOR (31 downto 0);
        din55 : IN STD_LOGIC_VECTOR (31 downto 0);
        din56 : IN STD_LOGIC_VECTOR (31 downto 0);
        din57 : IN STD_LOGIC_VECTOR (31 downto 0);
        din58 : IN STD_LOGIC_VECTOR (31 downto 0);
        din59 : IN STD_LOGIC_VECTOR (31 downto 0);
        din60 : IN STD_LOGIC_VECTOR (31 downto 0);
        din61 : IN STD_LOGIC_VECTOR (31 downto 0);
        din62 : IN STD_LOGIC_VECTOR (31 downto 0);
        din63 : IN STD_LOGIC_VECTOR (31 downto 0);
        din64 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    kernel_4_mux_646_32_1_1_U758 : component kernel_4_mux_646_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 32,
        din33_WIDTH => 32,
        din34_WIDTH => 32,
        din35_WIDTH => 32,
        din36_WIDTH => 32,
        din37_WIDTH => 32,
        din38_WIDTH => 32,
        din39_WIDTH => 32,
        din40_WIDTH => 32,
        din41_WIDTH => 32,
        din42_WIDTH => 32,
        din43_WIDTH => 32,
        din44_WIDTH => 32,
        din45_WIDTH => 32,
        din46_WIDTH => 32,
        din47_WIDTH => 32,
        din48_WIDTH => 32,
        din49_WIDTH => 32,
        din50_WIDTH => 32,
        din51_WIDTH => 32,
        din52_WIDTH => 32,
        din53_WIDTH => 32,
        din54_WIDTH => 32,
        din55_WIDTH => 32,
        din56_WIDTH => 32,
        din57_WIDTH => 32,
        din58_WIDTH => 32,
        din59_WIDTH => 32,
        din60_WIDTH => 32,
        din61_WIDTH => 32,
        din62_WIDTH => 32,
        din63_WIDTH => 32,
        din64_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => buffer_113_V_1_fu_520,
        din1 => buffer_115_V_1_fu_528,
        din2 => buffer_117_V_1_fu_536,
        din3 => buffer_119_V_1_fu_544,
        din4 => buffer_121_V_fu_552,
        din5 => buffer_123_V_1_fu_560,
        din6 => buffer_125_V_1_fu_568,
        din7 => buffer_127_V_1_fu_576,
        din8 => buffer_113_V_2_fu_584,
        din9 => buffer_115_V_2_fu_592,
        din10 => buffer_117_V_2_fu_600,
        din11 => buffer_119_V_2_fu_608,
        din12 => buffer_121_V_1_fu_616,
        din13 => buffer_123_V_2_fu_624,
        din14 => buffer_125_V_2_fu_632,
        din15 => buffer_127_V_2_fu_640,
        din16 => buffer_113_V_3_fu_648,
        din17 => buffer_115_V_3_fu_656,
        din18 => buffer_117_V_3_fu_664,
        din19 => buffer_119_V_3_fu_672,
        din20 => buffer_121_V_2_fu_680,
        din21 => buffer_123_V_3_fu_688,
        din22 => buffer_125_V_3_fu_696,
        din23 => buffer_127_V_3_fu_704,
        din24 => buffer_113_V_4_fu_712,
        din25 => buffer_115_V_4_fu_720,
        din26 => buffer_117_V_4_fu_728,
        din27 => buffer_119_V_4_fu_736,
        din28 => buffer_121_V_3_fu_744,
        din29 => buffer_123_V_fu_512,
        din30 => buffer_125_V_fu_504,
        din31 => buffer_127_V_fu_496,
        din32 => buffer_113_V_fu_488,
        din33 => buffer_115_V_fu_480,
        din34 => buffer_117_V_fu_472,
        din35 => buffer_119_V_fu_464,
        din36 => buffer_121_V_4_fu_756,
        din37 => buffer_123_V_4_fu_764,
        din38 => buffer_125_V_4_fu_772,
        din39 => buffer_127_V_4_fu_780,
        din40 => buffer_113_V_5_fu_788,
        din41 => buffer_115_V_5_fu_796,
        din42 => buffer_117_V_5_fu_804,
        din43 => buffer_119_V_5_fu_812,
        din44 => buffer_121_V_5_fu_820,
        din45 => buffer_123_V_5_fu_828,
        din46 => buffer_125_V_5_fu_836,
        din47 => buffer_127_V_5_fu_844,
        din48 => buffer_113_V_6_fu_852,
        din49 => buffer_115_V_6_fu_860,
        din50 => buffer_117_V_6_fu_868,
        din51 => buffer_119_V_6_fu_876,
        din52 => buffer_121_V_6_fu_884,
        din53 => buffer_123_V_6_fu_892,
        din54 => buffer_125_V_6_fu_900,
        din55 => buffer_127_V_6_fu_908,
        din56 => buffer_113_V_7_fu_916,
        din57 => buffer_115_V_7_fu_924,
        din58 => buffer_117_V_7_fu_932,
        din59 => buffer_119_V_7_fu_940,
        din60 => buffer_121_V_7_fu_948,
        din61 => buffer_123_V_7_fu_956,
        din62 => buffer_125_V_7_fu_964,
        din63 => buffer_127_V_7_fu_972,
        din64 => trunc_ln1734_reg_4695,
        dout => phi_ln1734_1_fu_3152_p66);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1659_fu_1240_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1661_fu_1251_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln1659_fu_1240_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state4)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif (((icmp_ln1659_fu_1240_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state8) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state8))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state8);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_371)) then
                if (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_0))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_112_V_1_load_reg_4288;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_3F))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_126_V_7_load_reg_4573;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_3E))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_124_V_7_load_reg_4568;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_3D))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_122_V_7_load_reg_4563;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_3C))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_120_V_7_load_reg_4558;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_3B))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_118_V_7_load_reg_4553;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_3A))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_116_V_7_load_reg_4548;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_39))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_114_V_7_load_reg_4543;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_38))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_112_V_7_load_reg_4538;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_37))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_126_V_6_load_reg_4533;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_36))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_124_V_6_load_reg_4528;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_35))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_122_V_6_load_reg_4523;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_34))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_120_V_6_load_reg_4518;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_33))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_118_V_6_load_reg_4513;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_32))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_116_V_6_load_reg_4508;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_31))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_114_V_6_load_reg_4503;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_30))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_112_V_6_load_reg_4498;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_2F))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_126_V_5_load_reg_4493;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_2E))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_124_V_5_load_reg_4488;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_2D))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_122_V_5_load_reg_4483;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_2C))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_120_V_5_load_reg_4478;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_2B))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_118_V_5_load_reg_4473;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_2A))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_116_V_5_load_reg_4468;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_29))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_114_V_5_load_reg_4463;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_28))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_112_V_5_load_reg_4458;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_27))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_126_V_4_load_reg_4453;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_26))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_124_V_4_load_reg_4448;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_25))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_122_V_4_load_reg_4443;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_24))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_120_V_4_load_reg_4438;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_23))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_118_V_load_reg_4258;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_22))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_116_V_load_reg_4263;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_21))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_114_V_load_reg_4268;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_20))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_112_V_load_reg_4273;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_1F))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_126_V_load_reg_4278;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_1E))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_124_V_load_reg_4283;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_1D))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_122_V_3_load_reg_4433;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_1C))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_120_V_3_load_reg_4428;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_1B))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_118_V_4_load_reg_4423;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_1A))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_116_V_4_load_reg_4418;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_19))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_114_V_4_load_reg_4413;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_18))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_112_V_4_load_reg_4408;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_17))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_126_V_3_load_reg_4403;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_16))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_124_V_3_load_reg_4398;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_15))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_122_V_2_load_reg_4393;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_14))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_120_V_2_load_reg_4388;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_13))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_118_V_3_load_reg_4383;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_12))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_116_V_3_load_reg_4378;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_11))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_114_V_3_load_reg_4373;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_10))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_112_V_3_load_reg_4368;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_F))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_126_V_2_load_reg_4363;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_E))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_124_V_2_load_reg_4358;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_D))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_122_V_1_load_reg_4353;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_C))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_120_V_1_load_reg_4348;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_B))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_118_V_2_load_reg_4343;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_A))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_116_V_2_load_reg_4338;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_9))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_114_V_2_load_reg_4333;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_8))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_112_V_2_load_reg_4328;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_7))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_126_V_1_load_reg_4323;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_6))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_124_V_1_load_reg_4318;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_5))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_122_V_load_reg_4313;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_4))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_120_V_load_reg_4308;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_3))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_118_V_1_load_reg_4303;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_2))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_116_V_1_load_reg_4298;
                elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (trunc_ln1734_fu_2912_p1 = ap_const_lv6_1))) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= buffer_114_V_1_load_reg_4293;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 <= ap_phi_reg_pp1_iter0_phi_ln1734_reg_1051;
                end if;
            end if; 
        end if;
    end process;

    i_0_reg_1018_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                i_0_reg_1018 <= i_reg_4220;
            elsif ((not(((out_iter_c_V_V_full_n = ap_const_logic_0) or (out_iter_r_V_V_full_n = ap_const_logic_0) or (out_n_V_V_full_n = ap_const_logic_0) or (io_acc_block_signal_op166 = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_1018 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    j_0_reg_1029_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1661_fu_1251_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                j_0_reg_1029 <= j_fu_1256_p2;
            elsif (((icmp_ln1659_fu_1240_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_0_reg_1029 <= ap_const_lv28_0;
            end if; 
        end if;
    end process;

    l_0_reg_1040_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                l_0_reg_1040 <= ap_const_lv31_0;
            elsif (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                l_0_reg_1040 <= l_fu_2906_p2;
            end if; 
        end if;
    end process;

    max_V_0_0_fu_400_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                max_V_0_0_fu_400 <= select_ln1683_fu_1674_p3;
            elsif ((not(((out_iter_c_V_V_full_n = ap_const_logic_0) or (out_iter_r_V_V_full_n = ap_const_logic_0) or (out_n_V_V_full_n = ap_const_logic_0) or (io_acc_block_signal_op166 = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                max_V_0_0_fu_400 <= ap_const_lv32_80000000;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_iter_c_V_V_full_n = ap_const_logic_0) or (out_iter_r_V_V_full_n = ap_const_logic_0) or (out_n_V_V_full_n = ap_const_logic_0) or (io_acc_block_signal_op166 = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                ITER_reg_4206 <= in_V_data_V_dout(63 downto 33);
                N_r_reg_4201 <= N_r_fu_1200_p1;
                tmp_6_reg_4211 <= in_V_data_V_dout(63 downto 36);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln180_reg_4254 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buffer_112_V_1_fu_516 <= buffer_0_V_fu_1624_p1;
                buffer_113_V_1_fu_520 <= in_V_data_V_dout(63 downto 32);
                buffer_114_V_1_fu_524 <= in_V_data_V_dout(95 downto 64);
                buffer_115_V_1_fu_528 <= in_V_data_V_dout(127 downto 96);
                buffer_116_V_1_fu_532 <= in_V_data_V_dout(159 downto 128);
                buffer_117_V_1_fu_536 <= in_V_data_V_dout(191 downto 160);
                buffer_118_V_1_fu_540 <= in_V_data_V_dout(223 downto 192);
                buffer_119_V_1_fu_544 <= in_V_data_V_dout(255 downto 224);
                buffer_120_V_fu_548 <= in_V_data_V_dout(287 downto 256);
                buffer_121_V_fu_552 <= in_V_data_V_dout(319 downto 288);
                buffer_122_V_fu_556 <= in_V_data_V_dout(351 downto 320);
                buffer_123_V_1_fu_560 <= in_V_data_V_dout(383 downto 352);
                buffer_124_V_1_fu_564 <= in_V_data_V_dout(415 downto 384);
                buffer_125_V_1_fu_568 <= in_V_data_V_dout(447 downto 416);
                buffer_126_V_1_fu_572 <= in_V_data_V_dout(479 downto 448);
                buffer_127_V_1_fu_576 <= in_V_data_V_dout(511 downto 480);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buffer_112_V_1_load_reg_4288 <= buffer_112_V_1_fu_516;
                buffer_112_V_2_load_reg_4328 <= buffer_112_V_2_fu_580;
                buffer_112_V_3_load_reg_4368 <= buffer_112_V_3_fu_644;
                buffer_112_V_4_load_reg_4408 <= buffer_112_V_4_fu_708;
                buffer_112_V_5_load_reg_4458 <= buffer_112_V_5_fu_784;
                buffer_112_V_6_load_reg_4498 <= buffer_112_V_6_fu_848;
                buffer_112_V_7_load_reg_4538 <= buffer_112_V_7_fu_912;
                buffer_112_V_load_reg_4273 <= buffer_112_V_fu_492;
                buffer_114_V_1_load_reg_4293 <= buffer_114_V_1_fu_524;
                buffer_114_V_2_load_reg_4333 <= buffer_114_V_2_fu_588;
                buffer_114_V_3_load_reg_4373 <= buffer_114_V_3_fu_652;
                buffer_114_V_4_load_reg_4413 <= buffer_114_V_4_fu_716;
                buffer_114_V_5_load_reg_4463 <= buffer_114_V_5_fu_792;
                buffer_114_V_6_load_reg_4503 <= buffer_114_V_6_fu_856;
                buffer_114_V_7_load_reg_4543 <= buffer_114_V_7_fu_920;
                buffer_114_V_load_reg_4268 <= buffer_114_V_fu_484;
                buffer_116_V_1_load_reg_4298 <= buffer_116_V_1_fu_532;
                buffer_116_V_2_load_reg_4338 <= buffer_116_V_2_fu_596;
                buffer_116_V_3_load_reg_4378 <= buffer_116_V_3_fu_660;
                buffer_116_V_4_load_reg_4418 <= buffer_116_V_4_fu_724;
                buffer_116_V_5_load_reg_4468 <= buffer_116_V_5_fu_800;
                buffer_116_V_6_load_reg_4508 <= buffer_116_V_6_fu_864;
                buffer_116_V_7_load_reg_4548 <= buffer_116_V_7_fu_928;
                buffer_116_V_load_reg_4263 <= buffer_116_V_fu_476;
                buffer_118_V_1_load_reg_4303 <= buffer_118_V_1_fu_540;
                buffer_118_V_2_load_reg_4343 <= buffer_118_V_2_fu_604;
                buffer_118_V_3_load_reg_4383 <= buffer_118_V_3_fu_668;
                buffer_118_V_4_load_reg_4423 <= buffer_118_V_4_fu_732;
                buffer_118_V_5_load_reg_4473 <= buffer_118_V_5_fu_808;
                buffer_118_V_6_load_reg_4513 <= buffer_118_V_6_fu_872;
                buffer_118_V_7_load_reg_4553 <= buffer_118_V_7_fu_936;
                buffer_118_V_load_reg_4258 <= buffer_118_V_fu_468;
                buffer_120_V_1_load_reg_4348 <= buffer_120_V_1_fu_612;
                buffer_120_V_2_load_reg_4388 <= buffer_120_V_2_fu_676;
                buffer_120_V_3_load_reg_4428 <= buffer_120_V_3_fu_740;
                buffer_120_V_4_load_reg_4438 <= buffer_120_V_4_fu_752;
                buffer_120_V_5_load_reg_4478 <= buffer_120_V_5_fu_816;
                buffer_120_V_6_load_reg_4518 <= buffer_120_V_6_fu_880;
                buffer_120_V_7_load_reg_4558 <= buffer_120_V_7_fu_944;
                buffer_120_V_load_reg_4308 <= buffer_120_V_fu_548;
                buffer_122_V_1_load_reg_4353 <= buffer_122_V_1_fu_620;
                buffer_122_V_2_load_reg_4393 <= buffer_122_V_2_fu_684;
                buffer_122_V_3_load_reg_4433 <= buffer_122_V_3_fu_748;
                buffer_122_V_4_load_reg_4443 <= buffer_122_V_4_fu_760;
                buffer_122_V_5_load_reg_4483 <= buffer_122_V_5_fu_824;
                buffer_122_V_6_load_reg_4523 <= buffer_122_V_6_fu_888;
                buffer_122_V_7_load_reg_4563 <= buffer_122_V_7_fu_952;
                buffer_122_V_load_reg_4313 <= buffer_122_V_fu_556;
                buffer_124_V_1_load_reg_4318 <= buffer_124_V_1_fu_564;
                buffer_124_V_2_load_reg_4358 <= buffer_124_V_2_fu_628;
                buffer_124_V_3_load_reg_4398 <= buffer_124_V_3_fu_692;
                buffer_124_V_4_load_reg_4448 <= buffer_124_V_4_fu_768;
                buffer_124_V_5_load_reg_4488 <= buffer_124_V_5_fu_832;
                buffer_124_V_6_load_reg_4528 <= buffer_124_V_6_fu_896;
                buffer_124_V_7_load_reg_4568 <= buffer_124_V_7_fu_960;
                buffer_124_V_load_reg_4283 <= buffer_124_V_fu_508;
                buffer_126_V_1_load_reg_4323 <= buffer_126_V_1_fu_572;
                buffer_126_V_2_load_reg_4363 <= buffer_126_V_2_fu_636;
                buffer_126_V_3_load_reg_4403 <= buffer_126_V_3_fu_700;
                buffer_126_V_4_load_reg_4453 <= buffer_126_V_4_fu_776;
                buffer_126_V_5_load_reg_4493 <= buffer_126_V_5_fu_840;
                buffer_126_V_6_load_reg_4533 <= buffer_126_V_6_fu_904;
                buffer_126_V_7_load_reg_4573 <= buffer_126_V_7_fu_968;
                buffer_126_V_load_reg_4278 <= buffer_126_V_fu_500;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln180_reg_4254 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buffer_112_V_2_fu_580 <= buffer_0_V_fu_1624_p1;
                buffer_113_V_2_fu_584 <= in_V_data_V_dout(63 downto 32);
                buffer_114_V_2_fu_588 <= in_V_data_V_dout(95 downto 64);
                buffer_115_V_2_fu_592 <= in_V_data_V_dout(127 downto 96);
                buffer_116_V_2_fu_596 <= in_V_data_V_dout(159 downto 128);
                buffer_117_V_2_fu_600 <= in_V_data_V_dout(191 downto 160);
                buffer_118_V_2_fu_604 <= in_V_data_V_dout(223 downto 192);
                buffer_119_V_2_fu_608 <= in_V_data_V_dout(255 downto 224);
                buffer_120_V_1_fu_612 <= in_V_data_V_dout(287 downto 256);
                buffer_121_V_1_fu_616 <= in_V_data_V_dout(319 downto 288);
                buffer_122_V_1_fu_620 <= in_V_data_V_dout(351 downto 320);
                buffer_123_V_2_fu_624 <= in_V_data_V_dout(383 downto 352);
                buffer_124_V_2_fu_628 <= in_V_data_V_dout(415 downto 384);
                buffer_125_V_2_fu_632 <= in_V_data_V_dout(447 downto 416);
                buffer_126_V_2_fu_636 <= in_V_data_V_dout(479 downto 448);
                buffer_127_V_2_fu_640 <= in_V_data_V_dout(511 downto 480);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln180_reg_4254 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buffer_112_V_3_fu_644 <= buffer_0_V_fu_1624_p1;
                buffer_113_V_3_fu_648 <= in_V_data_V_dout(63 downto 32);
                buffer_114_V_3_fu_652 <= in_V_data_V_dout(95 downto 64);
                buffer_115_V_3_fu_656 <= in_V_data_V_dout(127 downto 96);
                buffer_116_V_3_fu_660 <= in_V_data_V_dout(159 downto 128);
                buffer_117_V_3_fu_664 <= in_V_data_V_dout(191 downto 160);
                buffer_118_V_3_fu_668 <= in_V_data_V_dout(223 downto 192);
                buffer_119_V_3_fu_672 <= in_V_data_V_dout(255 downto 224);
                buffer_120_V_2_fu_676 <= in_V_data_V_dout(287 downto 256);
                buffer_121_V_2_fu_680 <= in_V_data_V_dout(319 downto 288);
                buffer_122_V_2_fu_684 <= in_V_data_V_dout(351 downto 320);
                buffer_123_V_3_fu_688 <= in_V_data_V_dout(383 downto 352);
                buffer_124_V_3_fu_692 <= in_V_data_V_dout(415 downto 384);
                buffer_125_V_3_fu_696 <= in_V_data_V_dout(447 downto 416);
                buffer_126_V_3_fu_700 <= in_V_data_V_dout(479 downto 448);
                buffer_127_V_3_fu_704 <= in_V_data_V_dout(511 downto 480);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln180_reg_4254 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buffer_112_V_4_fu_708 <= buffer_0_V_fu_1624_p1;
                buffer_113_V_4_fu_712 <= in_V_data_V_dout(63 downto 32);
                buffer_114_V_4_fu_716 <= in_V_data_V_dout(95 downto 64);
                buffer_115_V_4_fu_720 <= in_V_data_V_dout(127 downto 96);
                buffer_116_V_4_fu_724 <= in_V_data_V_dout(159 downto 128);
                buffer_117_V_4_fu_728 <= in_V_data_V_dout(191 downto 160);
                buffer_118_V_4_fu_732 <= in_V_data_V_dout(223 downto 192);
                buffer_119_V_4_fu_736 <= in_V_data_V_dout(255 downto 224);
                buffer_120_V_3_fu_740 <= in_V_data_V_dout(287 downto 256);
                buffer_121_V_3_fu_744 <= in_V_data_V_dout(319 downto 288);
                buffer_122_V_3_fu_748 <= in_V_data_V_dout(351 downto 320);
                buffer_123_V_fu_512 <= in_V_data_V_dout(383 downto 352);
                buffer_124_V_fu_508 <= in_V_data_V_dout(415 downto 384);
                buffer_125_V_fu_504 <= in_V_data_V_dout(447 downto 416);
                buffer_126_V_fu_500 <= in_V_data_V_dout(479 downto 448);
                buffer_127_V_fu_496 <= in_V_data_V_dout(511 downto 480);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln180_reg_4254 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buffer_112_V_5_fu_784 <= buffer_0_V_fu_1624_p1;
                buffer_113_V_5_fu_788 <= in_V_data_V_dout(63 downto 32);
                buffer_114_V_5_fu_792 <= in_V_data_V_dout(95 downto 64);
                buffer_115_V_5_fu_796 <= in_V_data_V_dout(127 downto 96);
                buffer_116_V_5_fu_800 <= in_V_data_V_dout(159 downto 128);
                buffer_117_V_5_fu_804 <= in_V_data_V_dout(191 downto 160);
                buffer_118_V_5_fu_808 <= in_V_data_V_dout(223 downto 192);
                buffer_119_V_5_fu_812 <= in_V_data_V_dout(255 downto 224);
                buffer_120_V_5_fu_816 <= in_V_data_V_dout(287 downto 256);
                buffer_121_V_5_fu_820 <= in_V_data_V_dout(319 downto 288);
                buffer_122_V_5_fu_824 <= in_V_data_V_dout(351 downto 320);
                buffer_123_V_5_fu_828 <= in_V_data_V_dout(383 downto 352);
                buffer_124_V_5_fu_832 <= in_V_data_V_dout(415 downto 384);
                buffer_125_V_5_fu_836 <= in_V_data_V_dout(447 downto 416);
                buffer_126_V_5_fu_840 <= in_V_data_V_dout(479 downto 448);
                buffer_127_V_5_fu_844 <= in_V_data_V_dout(511 downto 480);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln180_reg_4254 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buffer_112_V_6_fu_848 <= buffer_0_V_fu_1624_p1;
                buffer_113_V_6_fu_852 <= in_V_data_V_dout(63 downto 32);
                buffer_114_V_6_fu_856 <= in_V_data_V_dout(95 downto 64);
                buffer_115_V_6_fu_860 <= in_V_data_V_dout(127 downto 96);
                buffer_116_V_6_fu_864 <= in_V_data_V_dout(159 downto 128);
                buffer_117_V_6_fu_868 <= in_V_data_V_dout(191 downto 160);
                buffer_118_V_6_fu_872 <= in_V_data_V_dout(223 downto 192);
                buffer_119_V_6_fu_876 <= in_V_data_V_dout(255 downto 224);
                buffer_120_V_6_fu_880 <= in_V_data_V_dout(287 downto 256);
                buffer_121_V_6_fu_884 <= in_V_data_V_dout(319 downto 288);
                buffer_122_V_6_fu_888 <= in_V_data_V_dout(351 downto 320);
                buffer_123_V_6_fu_892 <= in_V_data_V_dout(383 downto 352);
                buffer_124_V_6_fu_896 <= in_V_data_V_dout(415 downto 384);
                buffer_125_V_6_fu_900 <= in_V_data_V_dout(447 downto 416);
                buffer_126_V_6_fu_904 <= in_V_data_V_dout(479 downto 448);
                buffer_127_V_6_fu_908 <= in_V_data_V_dout(511 downto 480);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln180_reg_4254 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buffer_112_V_7_fu_912 <= buffer_0_V_fu_1624_p1;
                buffer_113_V_7_fu_916 <= in_V_data_V_dout(63 downto 32);
                buffer_114_V_7_fu_920 <= in_V_data_V_dout(95 downto 64);
                buffer_115_V_7_fu_924 <= in_V_data_V_dout(127 downto 96);
                buffer_116_V_7_fu_928 <= in_V_data_V_dout(159 downto 128);
                buffer_117_V_7_fu_932 <= in_V_data_V_dout(191 downto 160);
                buffer_118_V_7_fu_936 <= in_V_data_V_dout(223 downto 192);
                buffer_119_V_7_fu_940 <= in_V_data_V_dout(255 downto 224);
                buffer_120_V_7_fu_944 <= in_V_data_V_dout(287 downto 256);
                buffer_121_V_7_fu_948 <= in_V_data_V_dout(319 downto 288);
                buffer_122_V_7_fu_952 <= in_V_data_V_dout(351 downto 320);
                buffer_123_V_7_fu_956 <= in_V_data_V_dout(383 downto 352);
                buffer_124_V_7_fu_960 <= in_V_data_V_dout(415 downto 384);
                buffer_125_V_7_fu_964 <= in_V_data_V_dout(447 downto 416);
                buffer_126_V_7_fu_968 <= in_V_data_V_dout(479 downto 448);
                buffer_127_V_7_fu_972 <= in_V_data_V_dout(511 downto 480);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln180_reg_4254 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buffer_112_V_fu_492 <= buffer_0_V_fu_1624_p1;
                buffer_113_V_fu_488 <= in_V_data_V_dout(63 downto 32);
                buffer_114_V_fu_484 <= in_V_data_V_dout(95 downto 64);
                buffer_115_V_fu_480 <= in_V_data_V_dout(127 downto 96);
                buffer_116_V_fu_476 <= in_V_data_V_dout(159 downto 128);
                buffer_117_V_fu_472 <= in_V_data_V_dout(191 downto 160);
                buffer_118_V_fu_468 <= in_V_data_V_dout(223 downto 192);
                buffer_119_V_fu_464 <= in_V_data_V_dout(255 downto 224);
                buffer_120_V_4_fu_752 <= in_V_data_V_dout(287 downto 256);
                buffer_121_V_4_fu_756 <= in_V_data_V_dout(319 downto 288);
                buffer_122_V_4_fu_760 <= in_V_data_V_dout(351 downto 320);
                buffer_123_V_4_fu_764 <= in_V_data_V_dout(383 downto 352);
                buffer_124_V_4_fu_768 <= in_V_data_V_dout(415 downto 384);
                buffer_125_V_4_fu_772 <= in_V_data_V_dout(447 downto 416);
                buffer_126_V_4_fu_776 <= in_V_data_V_dout(479 downto 448);
                buffer_127_V_4_fu_780 <= in_V_data_V_dout(511 downto 480);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_4220 <= i_fu_1245_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln1661_reg_4225 <= icmp_ln1661_fu_1251_p2;
                icmp_ln1661_reg_4225_pp0_iter1_reg <= icmp_ln1661_reg_4225;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln1661_reg_4225_pp0_iter2_reg <= icmp_ln1661_reg_4225_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1661_fu_1251_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln1667_reg_4234 <= icmp_ln1667_fu_1262_p2;
                trunc_ln180_reg_4254 <= trunc_ln180_fu_1268_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln1725_reg_4686 <= icmp_ln1725_fu_2901_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1661_reg_4225_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                max_3_0_V_reg_4674 <= max_3_0_V_fu_2864_p3;
                max_val_V_reg_4680 <= max_val_V_fu_2878_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                max_V_10_0_fu_440 <= select_ln1683_10_fu_2314_p3;
                max_V_11_0_fu_444 <= select_ln1683_11_fu_2378_p3;
                max_V_12_0_fu_448 <= select_ln1683_12_fu_2442_p3;
                max_V_13_0_fu_452 <= select_ln1683_13_fu_2506_p3;
                max_V_14_0_fu_456 <= select_ln1683_14_fu_2570_p3;
                max_V_15_0_fu_460 <= select_ln1683_15_fu_2634_p3;
                max_V_1_0_fu_404 <= select_ln1683_1_fu_1738_p3;
                max_V_2_0_fu_408 <= select_ln1683_2_fu_1802_p3;
                max_V_3_0_fu_412 <= select_ln1683_3_fu_1866_p3;
                max_V_4_0_fu_416 <= select_ln1683_4_fu_1930_p3;
                max_V_5_0_fu_420 <= select_ln1683_5_fu_1994_p3;
                max_V_6_0_fu_424 <= select_ln1683_6_fu_2058_p3;
                max_V_7_0_fu_428 <= select_ln1683_7_fu_2122_p3;
                max_V_8_0_fu_432 <= select_ln1683_8_fu_2186_p3;
                max_V_9_0_fu_436 <= select_ln1683_9_fu_2250_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1661_reg_4225_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                max_val_V_1_fu_392 <= max_val_V_4_fu_2890_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln1683_10_reg_4638 <= select_ln1683_10_fu_2314_p3;
                select_ln1683_11_reg_4644 <= select_ln1683_11_fu_2378_p3;
                select_ln1683_12_reg_4650 <= select_ln1683_12_fu_2442_p3;
                select_ln1683_13_reg_4656 <= select_ln1683_13_fu_2506_p3;
                select_ln1683_14_reg_4662 <= select_ln1683_14_fu_2570_p3;
                select_ln1683_15_reg_4668 <= select_ln1683_15_fu_2634_p3;
                select_ln1683_1_reg_4584 <= select_ln1683_1_fu_1738_p3;
                select_ln1683_2_reg_4590 <= select_ln1683_2_fu_1802_p3;
                select_ln1683_3_reg_4596 <= select_ln1683_3_fu_1866_p3;
                select_ln1683_4_reg_4602 <= select_ln1683_4_fu_1930_p3;
                select_ln1683_5_reg_4608 <= select_ln1683_5_fu_1994_p3;
                select_ln1683_6_reg_4614 <= select_ln1683_6_fu_2058_p3;
                select_ln1683_7_reg_4620 <= select_ln1683_7_fu_2122_p3;
                select_ln1683_8_reg_4626 <= select_ln1683_8_fu_2186_p3;
                select_ln1683_9_reg_4632 <= select_ln1683_9_fu_2250_p3;
                select_ln1683_reg_4578 <= select_ln1683_fu_1674_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1725_reg_4686 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                tmp_V_fu_396 <= tmp_V_40_fu_3305_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1725_fu_2901_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                trunc_ln1734_reg_4695 <= trunc_ln1734_fu_2912_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, out_n_V_V_full_n, out_iter_r_V_V_full_n, out_iter_c_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, io_acc_block_signal_op166, icmp_ln1659_fu_1240_p2, ap_CS_fsm_state2, ap_enable_reg_pp0_iter0, icmp_ln1725_fu_2901_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp1_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((out_iter_c_V_V_full_n = ap_const_logic_0) or (out_iter_r_V_V_full_n = ap_const_logic_0) or (out_n_V_V_full_n = ap_const_logic_0) or (io_acc_block_signal_op166 = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1659_fu_1240_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln1725_fu_2901_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln1725_fu_2901_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    ITER_fu_1205_p4 <= in_V_data_V_dout(63 downto 33);
    N_r_fu_1200_p1 <= in_V_data_V_dout(32 - 1 downto 0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(5);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state7 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln1661_reg_4225, io_acc_block_signal_op403)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (io_acc_block_signal_op403 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln1661_reg_4225, io_acc_block_signal_op403)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (io_acc_block_signal_op403 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(out_V_V_full_n, ap_enable_reg_pp1_iter1, icmp_ln1725_reg_4686)
    begin
                ap_block_pp1_stage0_01001 <= ((icmp_ln1725_reg_4686 = ap_const_lv1_0) and (out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(out_V_V_full_n, ap_enable_reg_pp1_iter1, icmp_ln1725_reg_4686)
    begin
                ap_block_pp1_stage0_11001 <= ((icmp_ln1725_reg_4686 = ap_const_lv1_0) and (out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(out_V_V_full_n, ap_enable_reg_pp1_iter1, icmp_ln1725_reg_4686)
    begin
                ap_block_pp1_stage0_subdone <= ((icmp_ln1725_reg_4686 = ap_const_lv1_0) and (out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, out_n_V_V_full_n, out_iter_r_V_V_full_n, out_iter_c_V_V_full_n, io_acc_block_signal_op166)
    begin
                ap_block_state1 <= ((out_iter_c_V_V_full_n = ap_const_logic_0) or (out_iter_r_V_V_full_n = ap_const_logic_0) or (out_n_V_V_full_n = ap_const_logic_0) or (io_acc_block_signal_op166 = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(icmp_ln1661_reg_4225, io_acc_block_signal_op403)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (io_acc_block_signal_op403 = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp1_stage0_iter1_assign_proc : process(out_V_V_full_n, icmp_ln1725_reg_4686)
    begin
                ap_block_state9_pp1_stage0_iter1 <= ((icmp_ln1725_reg_4686 = ap_const_lv1_0) and (out_V_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_123_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln1725_reg_4686)
    begin
                ap_condition_123 <= ((icmp_ln1725_reg_4686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0));
    end process;


    ap_condition_371_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
                ap_condition_371 <= ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_pp0_exit_iter1_state4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state8_assign_proc : process(icmp_ln1725_fu_2901_p2)
    begin
        if ((icmp_ln1725_fu_2901_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln1659_fu_1240_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1659_fu_1240_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_0205_3_0_phi_fu_1187_p4_assign_proc : process(p_Result_s_fu_2944_p5, ap_phi_reg_pp1_iter1_p_0205_3_0_reg_1184, icmp_ln879_fu_2916_p2, p_Result_1_fu_2931_p5, ap_condition_123)
    begin
        if ((ap_const_boolean_1 = ap_condition_123)) then
            if ((icmp_ln879_fu_2916_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_p_0205_3_0_phi_fu_1187_p4 <= p_Result_1_fu_2931_p5;
            elsif ((icmp_ln879_fu_2916_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0205_3_0_phi_fu_1187_p4 <= p_Result_s_fu_2944_p5;
            else 
                ap_phi_mux_p_0205_3_0_phi_fu_1187_p4 <= ap_phi_reg_pp1_iter1_p_0205_3_0_reg_1184;
            end if;
        else 
            ap_phi_mux_p_0205_3_0_phi_fu_1187_p4 <= ap_phi_reg_pp1_iter1_p_0205_3_0_reg_1184;
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_phi_ln1734_reg_1051 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter1_p_0205_3_0_reg_1184 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;
    buffer_0_V_fu_1624_p1 <= in_V_data_V_dout(32 - 1 downto 0);
    buffer_10_V_fu_2258_p4 <= in_V_data_V_dout(351 downto 320);
    buffer_11_V_fu_2322_p4 <= in_V_data_V_dout(383 downto 352);
    buffer_12_V_fu_2386_p4 <= in_V_data_V_dout(415 downto 384);
    buffer_13_V_fu_2450_p4 <= in_V_data_V_dout(447 downto 416);
    buffer_14_V_fu_2514_p4 <= in_V_data_V_dout(479 downto 448);
    buffer_15_V_fu_2578_p4 <= in_V_data_V_dout(511 downto 480);
    buffer_1_V_fu_1682_p4 <= in_V_data_V_dout(63 downto 32);
    buffer_2_V_fu_1746_p4 <= in_V_data_V_dout(95 downto 64);
    buffer_3_V_fu_1810_p4 <= in_V_data_V_dout(127 downto 96);
    buffer_4_V_fu_1874_p4 <= in_V_data_V_dout(159 downto 128);
    buffer_5_V_fu_1938_p4 <= in_V_data_V_dout(191 downto 160);
    buffer_6_V_fu_2002_p4 <= in_V_data_V_dout(223 downto 192);
    buffer_7_V_fu_2066_p4 <= in_V_data_V_dout(255 downto 224);
    buffer_8_V_fu_2130_p4 <= in_V_data_V_dout(287 downto 256);
    buffer_9_V_fu_2194_p4 <= in_V_data_V_dout(319 downto 288);
    i_fu_1245_p2 <= std_logic_vector(unsigned(i_0_reg_1018) + unsigned(ap_const_lv32_1));
    icmp_ln1659_fu_1240_p2 <= "1" when (i_0_reg_1018 = N_r_reg_4201) else "0";
    icmp_ln1661_fu_1251_p2 <= "1" when (j_0_reg_1029 = tmp_6_reg_4211) else "0";
    icmp_ln1667_fu_1262_p2 <= "1" when (j_0_reg_1029 = ap_const_lv28_0) else "0";
    icmp_ln1725_fu_2901_p2 <= "1" when (l_0_reg_1040 = ITER_reg_4206) else "0";
    icmp_ln879_1_fu_3285_p2 <= "1" when (phi_ln1734_1_fu_3152_p66 = ap_const_lv32_80000000) else "0";
    icmp_ln879_fu_2916_p2 <= "1" when (ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051 = ap_const_lv32_80000000) else "0";
    icmp_ln887_10_fu_2816_p2 <= "1" when (signed(max_1_2_V_fu_2746_p3) < signed(max_1_3_V_fu_2756_p3)) else "0";
    icmp_ln887_11_fu_2830_p2 <= "1" when (signed(max_1_4_V_fu_2766_p3) < signed(max_1_5_V_fu_2776_p3)) else "0";
    icmp_ln887_12_fu_2844_p2 <= "1" when (signed(max_1_6_V_fu_2786_p3) < signed(max_1_7_V_fu_2796_p3)) else "0";
    icmp_ln887_13_fu_2858_p2 <= "1" when (signed(max_2_0_V_fu_2808_p3) < signed(max_2_1_V_fu_2822_p3)) else "0";
    icmp_ln887_14_fu_2872_p2 <= "1" when (signed(max_2_2_V_fu_2836_p3) < signed(max_2_3_V_fu_2850_p3)) else "0";
    icmp_ln887_1_fu_2732_p2 <= "1" when (signed(select_ln1683_2_reg_4590) < signed(select_ln1683_3_reg_4596)) else "0";
    icmp_ln887_2_fu_2742_p2 <= "1" when (signed(select_ln1683_4_reg_4602) < signed(select_ln1683_5_reg_4608)) else "0";
    icmp_ln887_3_fu_2752_p2 <= "1" when (signed(select_ln1683_6_reg_4614) < signed(select_ln1683_7_reg_4620)) else "0";
    icmp_ln887_4_fu_2886_p2 <= "1" when (signed(max_3_0_V_reg_4674) < signed(max_val_V_reg_4680)) else "0";
    icmp_ln887_5_fu_2762_p2 <= "1" when (signed(select_ln1683_8_reg_4626) < signed(select_ln1683_9_reg_4632)) else "0";
    icmp_ln887_6_fu_2782_p2 <= "1" when (signed(select_ln1683_12_reg_4650) < signed(select_ln1683_13_reg_4656)) else "0";
    icmp_ln887_7_fu_2792_p2 <= "1" when (signed(select_ln1683_14_reg_4662) < signed(select_ln1683_15_reg_4668)) else "0";
    icmp_ln887_8_fu_2772_p2 <= "1" when (signed(select_ln1683_10_reg_4638) < signed(select_ln1683_11_reg_4644)) else "0";
    icmp_ln887_9_fu_2802_p2 <= "1" when (signed(max_1_0_V_fu_2726_p3) < signed(max_1_1_V_fu_2736_p3)) else "0";
    icmp_ln887_fu_2722_p2 <= "1" when (signed(select_ln1683_reg_4578) < signed(select_ln1683_1_reg_4584)) else "0";
    icmp_ln895_10_fu_2308_p2 <= "1" when (signed(buffer_10_V_fu_2258_p4) > signed(select_ln1667_5_fu_1547_p3)) else "0";
    icmp_ln895_11_fu_2372_p2 <= "1" when (signed(buffer_11_V_fu_2322_p4) > signed(select_ln1667_4_fu_1540_p3)) else "0";
    icmp_ln895_12_fu_2436_p2 <= "1" when (signed(buffer_12_V_fu_2386_p4) > signed(select_ln1667_3_fu_1533_p3)) else "0";
    icmp_ln895_13_fu_2500_p2 <= "1" when (signed(buffer_13_V_fu_2450_p4) > signed(select_ln1667_2_fu_1526_p3)) else "0";
    icmp_ln895_14_fu_2564_p2 <= "1" when (signed(buffer_14_V_fu_2514_p4) > signed(select_ln1667_1_fu_1519_p3)) else "0";
    icmp_ln895_15_fu_2628_p2 <= "1" when (signed(buffer_15_V_fu_2578_p4) > signed(select_ln1667_fu_1512_p3)) else "0";
    icmp_ln895_1_fu_1732_p2 <= "1" when (signed(buffer_1_V_fu_1682_p4) > signed(select_ln1667_14_fu_1610_p3)) else "0";
    icmp_ln895_2_fu_1796_p2 <= "1" when (signed(buffer_2_V_fu_1746_p4) > signed(select_ln1667_13_fu_1603_p3)) else "0";
    icmp_ln895_3_fu_1860_p2 <= "1" when (signed(buffer_3_V_fu_1810_p4) > signed(select_ln1667_12_fu_1596_p3)) else "0";
    icmp_ln895_4_fu_1924_p2 <= "1" when (signed(buffer_4_V_fu_1874_p4) > signed(select_ln1667_11_fu_1589_p3)) else "0";
    icmp_ln895_5_fu_1988_p2 <= "1" when (signed(buffer_5_V_fu_1938_p4) > signed(select_ln1667_10_fu_1582_p3)) else "0";
    icmp_ln895_6_fu_2052_p2 <= "1" when (signed(buffer_6_V_fu_2002_p4) > signed(select_ln1667_9_fu_1575_p3)) else "0";
    icmp_ln895_7_fu_2116_p2 <= "1" when (signed(buffer_7_V_fu_2066_p4) > signed(select_ln1667_8_fu_1568_p3)) else "0";
    icmp_ln895_8_fu_2180_p2 <= "1" when (signed(buffer_8_V_fu_2130_p4) > signed(select_ln1667_7_fu_1561_p3)) else "0";
    icmp_ln895_9_fu_2244_p2 <= "1" when (signed(buffer_9_V_fu_2194_p4) > signed(select_ln1667_6_fu_1554_p3)) else "0";
    icmp_ln895_fu_1668_p2 <= "1" when (signed(buffer_0_V_fu_1624_p1) > signed(select_ln1667_15_fu_1617_p3)) else "0";

    in_V_data_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_data_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln1661_reg_4225)
    begin
        if ((((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_data_V_blk_n <= in_V_data_V_empty_n;
        else 
            in_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_data_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, out_n_V_V_full_n, out_iter_r_V_V_full_n, out_iter_c_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1661_reg_4225, io_acc_block_signal_op166, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((out_iter_c_V_V_full_n = ap_const_logic_0) or (out_iter_r_V_V_full_n = ap_const_logic_0) or (out_n_V_V_full_n = ap_const_logic_0) or (io_acc_block_signal_op166 = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_data_V_read <= ap_const_logic_1;
        else 
            in_V_data_V_read <= ap_const_logic_0;
        end if; 
    end process;


    in_V_dest_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_dest_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln1661_reg_4225)
    begin
        if ((((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_dest_V_blk_n <= in_V_dest_V_empty_n;
        else 
            in_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_dest_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, out_n_V_V_full_n, out_iter_r_V_V_full_n, out_iter_c_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1661_reg_4225, io_acc_block_signal_op166, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((out_iter_c_V_V_full_n = ap_const_logic_0) or (out_iter_r_V_V_full_n = ap_const_logic_0) or (out_n_V_V_full_n = ap_const_logic_0) or (io_acc_block_signal_op166 = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_dest_V_read <= ap_const_logic_1;
        else 
            in_V_dest_V_read <= ap_const_logic_0;
        end if; 
    end process;


    in_V_id_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_id_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln1661_reg_4225)
    begin
        if ((((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_id_V_blk_n <= in_V_id_V_empty_n;
        else 
            in_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_id_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, out_n_V_V_full_n, out_iter_r_V_V_full_n, out_iter_c_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1661_reg_4225, io_acc_block_signal_op166, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((out_iter_c_V_V_full_n = ap_const_logic_0) or (out_iter_r_V_V_full_n = ap_const_logic_0) or (out_n_V_V_full_n = ap_const_logic_0) or (io_acc_block_signal_op166 = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_id_V_read <= ap_const_logic_1;
        else 
            in_V_id_V_read <= ap_const_logic_0;
        end if; 
    end process;


    in_V_last_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_last_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln1661_reg_4225)
    begin
        if ((((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_last_V_blk_n <= in_V_last_V_empty_n;
        else 
            in_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_last_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, out_n_V_V_full_n, out_iter_r_V_V_full_n, out_iter_c_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1661_reg_4225, io_acc_block_signal_op166, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((out_iter_c_V_V_full_n = ap_const_logic_0) or (out_iter_r_V_V_full_n = ap_const_logic_0) or (out_n_V_V_full_n = ap_const_logic_0) or (io_acc_block_signal_op166 = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_last_V_read <= ap_const_logic_1;
        else 
            in_V_last_V_read <= ap_const_logic_0;
        end if; 
    end process;


    in_V_user_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_user_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln1661_reg_4225)
    begin
        if ((((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_user_V_blk_n <= in_V_user_V_empty_n;
        else 
            in_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_user_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, out_n_V_V_full_n, out_iter_r_V_V_full_n, out_iter_c_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1661_reg_4225, io_acc_block_signal_op166, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln1661_reg_4225 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((out_iter_c_V_V_full_n = ap_const_logic_0) or (out_iter_r_V_V_full_n = ap_const_logic_0) or (out_n_V_V_full_n = ap_const_logic_0) or (io_acc_block_signal_op166 = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_user_V_read <= ap_const_logic_1;
        else 
            in_V_user_V_read <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(icmp_ln1659_fu_1240_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1659_fu_1240_p2 = ap_const_lv1_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op166 <= (in_V_user_V_empty_n and in_V_last_V_empty_n and in_V_id_V_empty_n and in_V_dest_V_empty_n and in_V_data_V_empty_n);
    io_acc_block_signal_op403 <= (in_V_user_V_empty_n and in_V_last_V_empty_n and in_V_id_V_empty_n and in_V_dest_V_empty_n and in_V_data_V_empty_n);
    j_fu_1256_p2 <= std_logic_vector(unsigned(j_0_reg_1029) + unsigned(ap_const_lv28_1));
    l_fu_2906_p2 <= std_logic_vector(unsigned(l_0_reg_1040) + unsigned(ap_const_lv31_1));
    max_1_0_V_fu_2726_p3 <= 
        select_ln1683_1_reg_4584 when (icmp_ln887_fu_2722_p2(0) = '1') else 
        select_ln1683_reg_4578;
    max_1_1_V_fu_2736_p3 <= 
        select_ln1683_3_reg_4596 when (icmp_ln887_1_fu_2732_p2(0) = '1') else 
        select_ln1683_2_reg_4590;
    max_1_2_V_fu_2746_p3 <= 
        select_ln1683_5_reg_4608 when (icmp_ln887_2_fu_2742_p2(0) = '1') else 
        select_ln1683_4_reg_4602;
    max_1_3_V_fu_2756_p3 <= 
        select_ln1683_7_reg_4620 when (icmp_ln887_3_fu_2752_p2(0) = '1') else 
        select_ln1683_6_reg_4614;
    max_1_4_V_fu_2766_p3 <= 
        select_ln1683_9_reg_4632 when (icmp_ln887_5_fu_2762_p2(0) = '1') else 
        select_ln1683_8_reg_4626;
    max_1_5_V_fu_2776_p3 <= 
        select_ln1683_11_reg_4644 when (icmp_ln887_8_fu_2772_p2(0) = '1') else 
        select_ln1683_10_reg_4638;
    max_1_6_V_fu_2786_p3 <= 
        select_ln1683_13_reg_4656 when (icmp_ln887_6_fu_2782_p2(0) = '1') else 
        select_ln1683_12_reg_4650;
    max_1_7_V_fu_2796_p3 <= 
        select_ln1683_15_reg_4668 when (icmp_ln887_7_fu_2792_p2(0) = '1') else 
        select_ln1683_14_reg_4662;
    max_2_0_V_fu_2808_p3 <= 
        max_1_1_V_fu_2736_p3 when (icmp_ln887_9_fu_2802_p2(0) = '1') else 
        max_1_0_V_fu_2726_p3;
    max_2_1_V_fu_2822_p3 <= 
        max_1_3_V_fu_2756_p3 when (icmp_ln887_10_fu_2816_p2(0) = '1') else 
        max_1_2_V_fu_2746_p3;
    max_2_2_V_fu_2836_p3 <= 
        max_1_5_V_fu_2776_p3 when (icmp_ln887_11_fu_2830_p2(0) = '1') else 
        max_1_4_V_fu_2766_p3;
    max_2_3_V_fu_2850_p3 <= 
        max_1_7_V_fu_2796_p3 when (icmp_ln887_12_fu_2844_p2(0) = '1') else 
        max_1_6_V_fu_2786_p3;
    max_3_0_V_fu_2864_p3 <= 
        max_2_1_V_fu_2822_p3 when (icmp_ln887_13_fu_2858_p2(0) = '1') else 
        max_2_0_V_fu_2808_p3;
    max_val_V_4_fu_2890_p3 <= 
        max_val_V_reg_4680 when (icmp_ln887_4_fu_2886_p2(0) = '1') else 
        max_3_0_V_reg_4674;
    max_val_V_fu_2878_p3 <= 
        max_2_3_V_fu_2850_p3 when (icmp_ln887_14_fu_2872_p2(0) = '1') else 
        max_2_2_V_fu_2836_p3;

    out_V_V_blk_n_assign_proc : process(out_V_V_full_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln1725_reg_4686)
    begin
        if (((icmp_ln1725_reg_4686 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            out_V_V_blk_n <= out_V_V_full_n;
        else 
            out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_V_V_din <= (select_ln879_fu_3297_p3 & ap_phi_mux_p_0205_3_0_phi_fu_1187_p4(31 downto 0));

    out_V_V_write_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln1725_reg_4686, ap_block_pp1_stage0_11001)
    begin
        if (((icmp_ln1725_reg_4686 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            out_V_V_write <= ap_const_logic_1;
        else 
            out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    out_iter_c_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, out_iter_c_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_iter_c_V_V_blk_n <= out_iter_c_V_V_full_n;
        else 
            out_iter_c_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_iter_c_V_V_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ITER_fu_1205_p4),32));

    out_iter_c_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, out_n_V_V_full_n, out_iter_r_V_V_full_n, out_iter_c_V_V_full_n, io_acc_block_signal_op166)
    begin
        if ((not(((out_iter_c_V_V_full_n = ap_const_logic_0) or (out_iter_r_V_V_full_n = ap_const_logic_0) or (out_n_V_V_full_n = ap_const_logic_0) or (io_acc_block_signal_op166 = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_iter_c_V_V_write <= ap_const_logic_1;
        else 
            out_iter_c_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    out_iter_r_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, out_iter_r_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_iter_r_V_V_blk_n <= out_iter_r_V_V_full_n;
        else 
            out_iter_r_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_iter_r_V_V_din <= in_V_data_V_dout(32 - 1 downto 0);

    out_iter_r_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, out_n_V_V_full_n, out_iter_r_V_V_full_n, out_iter_c_V_V_full_n, io_acc_block_signal_op166)
    begin
        if ((not(((out_iter_c_V_V_full_n = ap_const_logic_0) or (out_iter_r_V_V_full_n = ap_const_logic_0) or (out_n_V_V_full_n = ap_const_logic_0) or (io_acc_block_signal_op166 = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_iter_r_V_V_write <= ap_const_logic_1;
        else 
            out_iter_r_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    out_n_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, out_n_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_n_V_V_blk_n <= out_n_V_V_full_n;
        else 
            out_n_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_n_V_V_din <= in_V_data_V_dout(96 - 1 downto 0);

    out_n_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, out_n_V_V_full_n, out_iter_r_V_V_full_n, out_iter_c_V_V_full_n, io_acc_block_signal_op166)
    begin
        if ((not(((out_iter_c_V_V_full_n = ap_const_logic_0) or (out_iter_r_V_V_full_n = ap_const_logic_0) or (out_n_V_V_full_n = ap_const_logic_0) or (io_acc_block_signal_op166 = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_n_V_V_write <= ap_const_logic_1;
        else 
            out_n_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_1_fu_2931_p5 <= (tmp_V_fu_396(63 downto 32) & sub_ln215_fu_2925_p2);
    p_Result_s_fu_2944_p5 <= (tmp_V_fu_396(63 downto 32) & ap_const_lv32_80000000);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    select_ln1667_10_fu_1582_p3 <= 
        ap_const_lv32_80000000 when (icmp_ln1667_reg_4234(0) = '1') else 
        max_V_5_0_fu_420;
    select_ln1667_11_fu_1589_p3 <= 
        ap_const_lv32_80000000 when (icmp_ln1667_reg_4234(0) = '1') else 
        max_V_4_0_fu_416;
    select_ln1667_12_fu_1596_p3 <= 
        ap_const_lv32_80000000 when (icmp_ln1667_reg_4234(0) = '1') else 
        max_V_3_0_fu_412;
    select_ln1667_13_fu_1603_p3 <= 
        ap_const_lv32_80000000 when (icmp_ln1667_reg_4234(0) = '1') else 
        max_V_2_0_fu_408;
    select_ln1667_14_fu_1610_p3 <= 
        ap_const_lv32_80000000 when (icmp_ln1667_reg_4234(0) = '1') else 
        max_V_1_0_fu_404;
    select_ln1667_15_fu_1617_p3 <= 
        ap_const_lv32_80000000 when (icmp_ln1667_reg_4234(0) = '1') else 
        max_V_0_0_fu_400;
    select_ln1667_1_fu_1519_p3 <= 
        ap_const_lv32_80000000 when (icmp_ln1667_reg_4234(0) = '1') else 
        max_V_14_0_fu_456;
    select_ln1667_2_fu_1526_p3 <= 
        ap_const_lv32_80000000 when (icmp_ln1667_reg_4234(0) = '1') else 
        max_V_13_0_fu_452;
    select_ln1667_3_fu_1533_p3 <= 
        ap_const_lv32_80000000 when (icmp_ln1667_reg_4234(0) = '1') else 
        max_V_12_0_fu_448;
    select_ln1667_4_fu_1540_p3 <= 
        ap_const_lv32_80000000 when (icmp_ln1667_reg_4234(0) = '1') else 
        max_V_11_0_fu_444;
    select_ln1667_5_fu_1547_p3 <= 
        ap_const_lv32_80000000 when (icmp_ln1667_reg_4234(0) = '1') else 
        max_V_10_0_fu_440;
    select_ln1667_6_fu_1554_p3 <= 
        ap_const_lv32_80000000 when (icmp_ln1667_reg_4234(0) = '1') else 
        max_V_9_0_fu_436;
    select_ln1667_7_fu_1561_p3 <= 
        ap_const_lv32_80000000 when (icmp_ln1667_reg_4234(0) = '1') else 
        max_V_8_0_fu_432;
    select_ln1667_8_fu_1568_p3 <= 
        ap_const_lv32_80000000 when (icmp_ln1667_reg_4234(0) = '1') else 
        max_V_7_0_fu_428;
    select_ln1667_9_fu_1575_p3 <= 
        ap_const_lv32_80000000 when (icmp_ln1667_reg_4234(0) = '1') else 
        max_V_6_0_fu_424;
    select_ln1667_fu_1512_p3 <= 
        ap_const_lv32_80000000 when (icmp_ln1667_reg_4234(0) = '1') else 
        max_V_15_0_fu_460;
    select_ln1683_10_fu_2314_p3 <= 
        buffer_10_V_fu_2258_p4 when (icmp_ln895_10_fu_2308_p2(0) = '1') else 
        select_ln1667_5_fu_1547_p3;
    select_ln1683_11_fu_2378_p3 <= 
        buffer_11_V_fu_2322_p4 when (icmp_ln895_11_fu_2372_p2(0) = '1') else 
        select_ln1667_4_fu_1540_p3;
    select_ln1683_12_fu_2442_p3 <= 
        buffer_12_V_fu_2386_p4 when (icmp_ln895_12_fu_2436_p2(0) = '1') else 
        select_ln1667_3_fu_1533_p3;
    select_ln1683_13_fu_2506_p3 <= 
        buffer_13_V_fu_2450_p4 when (icmp_ln895_13_fu_2500_p2(0) = '1') else 
        select_ln1667_2_fu_1526_p3;
    select_ln1683_14_fu_2570_p3 <= 
        buffer_14_V_fu_2514_p4 when (icmp_ln895_14_fu_2564_p2(0) = '1') else 
        select_ln1667_1_fu_1519_p3;
    select_ln1683_15_fu_2634_p3 <= 
        buffer_15_V_fu_2578_p4 when (icmp_ln895_15_fu_2628_p2(0) = '1') else 
        select_ln1667_fu_1512_p3;
    select_ln1683_1_fu_1738_p3 <= 
        buffer_1_V_fu_1682_p4 when (icmp_ln895_1_fu_1732_p2(0) = '1') else 
        select_ln1667_14_fu_1610_p3;
    select_ln1683_2_fu_1802_p3 <= 
        buffer_2_V_fu_1746_p4 when (icmp_ln895_2_fu_1796_p2(0) = '1') else 
        select_ln1667_13_fu_1603_p3;
    select_ln1683_3_fu_1866_p3 <= 
        buffer_3_V_fu_1810_p4 when (icmp_ln895_3_fu_1860_p2(0) = '1') else 
        select_ln1667_12_fu_1596_p3;
    select_ln1683_4_fu_1930_p3 <= 
        buffer_4_V_fu_1874_p4 when (icmp_ln895_4_fu_1924_p2(0) = '1') else 
        select_ln1667_11_fu_1589_p3;
    select_ln1683_5_fu_1994_p3 <= 
        buffer_5_V_fu_1938_p4 when (icmp_ln895_5_fu_1988_p2(0) = '1') else 
        select_ln1667_10_fu_1582_p3;
    select_ln1683_6_fu_2058_p3 <= 
        buffer_6_V_fu_2002_p4 when (icmp_ln895_6_fu_2052_p2(0) = '1') else 
        select_ln1667_9_fu_1575_p3;
    select_ln1683_7_fu_2122_p3 <= 
        buffer_7_V_fu_2066_p4 when (icmp_ln895_7_fu_2116_p2(0) = '1') else 
        select_ln1667_8_fu_1568_p3;
    select_ln1683_8_fu_2186_p3 <= 
        buffer_8_V_fu_2130_p4 when (icmp_ln895_8_fu_2180_p2(0) = '1') else 
        select_ln1667_7_fu_1561_p3;
    select_ln1683_9_fu_2250_p3 <= 
        buffer_9_V_fu_2194_p4 when (icmp_ln895_9_fu_2244_p2(0) = '1') else 
        select_ln1667_6_fu_1554_p3;
    select_ln1683_fu_1674_p3 <= 
        buffer_0_V_fu_1624_p1 when (icmp_ln895_fu_1668_p2(0) = '1') else 
        select_ln1667_15_fu_1617_p3;
    select_ln879_fu_3297_p3 <= 
        ap_const_lv32_80000000 when (icmp_ln879_1_fu_3285_p2(0) = '1') else 
        sub_ln215_1_fu_3291_p2;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln215_1_fu_3291_p2 <= std_logic_vector(unsigned(phi_ln1734_1_fu_3152_p66) - unsigned(max_val_V_1_fu_392));
    sub_ln215_fu_2925_p2 <= std_logic_vector(unsigned(ap_phi_reg_pp1_iter1_phi_ln1734_reg_1051) - unsigned(max_val_V_1_fu_392));
    tmp_V_40_fu_3305_p5 <= (select_ln879_fu_3297_p3 & ap_phi_mux_p_0205_3_0_phi_fu_1187_p4(31 downto 0));
    trunc_ln1734_fu_2912_p1 <= l_0_reg_1040(6 - 1 downto 0);
    trunc_ln180_fu_1268_p1 <= j_0_reg_1029(3 - 1 downto 0);
end behav;
