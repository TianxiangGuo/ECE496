// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "IdentityAdd.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic IdentityAdd::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic IdentityAdd::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> IdentityAdd::ap_ST_fsm_state1 = "1";
const sc_lv<3> IdentityAdd::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> IdentityAdd::ap_ST_fsm_state5 = "100";
const bool IdentityAdd::ap_const_boolean_1 = true;
const sc_lv<32> IdentityAdd::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> IdentityAdd::ap_const_lv32_1 = "1";
const bool IdentityAdd::ap_const_boolean_0 = false;
const sc_lv<1> IdentityAdd::ap_const_lv1_0 = "0";
const sc_lv<1> IdentityAdd::ap_const_lv1_1 = "1";
const sc_lv<38> IdentityAdd::ap_const_lv38_0 = "00000000000000000000000000000000000000";
const sc_lv<6> IdentityAdd::ap_const_lv6_0 = "000000";
const sc_lv<8> IdentityAdd::ap_const_lv8_1D = "11101";
const sc_lv<8> IdentityAdd::ap_const_lv8_1E = "11110";
const sc_lv<16> IdentityAdd::ap_const_lv16_31 = "110001";
const sc_lv<4> IdentityAdd::ap_const_lv4_0 = "0000";
const sc_lv<38> IdentityAdd::ap_const_lv38_1 = "1";
const sc_lv<6> IdentityAdd::ap_const_lv6_30 = "110000";
const sc_lv<6> IdentityAdd::ap_const_lv6_2F = "101111";
const sc_lv<6> IdentityAdd::ap_const_lv6_1 = "1";
const sc_lv<32> IdentityAdd::ap_const_lv32_20 = "100000";
const sc_lv<32> IdentityAdd::ap_const_lv32_3F = "111111";
const sc_lv<32> IdentityAdd::ap_const_lv32_40 = "1000000";
const sc_lv<32> IdentityAdd::ap_const_lv32_5F = "1011111";
const sc_lv<32> IdentityAdd::ap_const_lv32_60 = "1100000";
const sc_lv<32> IdentityAdd::ap_const_lv32_7F = "1111111";
const sc_lv<32> IdentityAdd::ap_const_lv32_80 = "10000000";
const sc_lv<32> IdentityAdd::ap_const_lv32_9F = "10011111";
const sc_lv<32> IdentityAdd::ap_const_lv32_A0 = "10100000";
const sc_lv<32> IdentityAdd::ap_const_lv32_BF = "10111111";
const sc_lv<32> IdentityAdd::ap_const_lv32_C0 = "11000000";
const sc_lv<32> IdentityAdd::ap_const_lv32_DF = "11011111";
const sc_lv<32> IdentityAdd::ap_const_lv32_E0 = "11100000";
const sc_lv<32> IdentityAdd::ap_const_lv32_FF = "11111111";
const sc_lv<32> IdentityAdd::ap_const_lv32_100 = "100000000";
const sc_lv<32> IdentityAdd::ap_const_lv32_11F = "100011111";
const sc_lv<32> IdentityAdd::ap_const_lv32_120 = "100100000";
const sc_lv<32> IdentityAdd::ap_const_lv32_13F = "100111111";
const sc_lv<32> IdentityAdd::ap_const_lv32_140 = "101000000";
const sc_lv<32> IdentityAdd::ap_const_lv32_15F = "101011111";
const sc_lv<32> IdentityAdd::ap_const_lv32_160 = "101100000";
const sc_lv<32> IdentityAdd::ap_const_lv32_17F = "101111111";
const sc_lv<32> IdentityAdd::ap_const_lv32_180 = "110000000";
const sc_lv<32> IdentityAdd::ap_const_lv32_19F = "110011111";
const sc_lv<32> IdentityAdd::ap_const_lv32_1A0 = "110100000";
const sc_lv<32> IdentityAdd::ap_const_lv32_1BF = "110111111";
const sc_lv<32> IdentityAdd::ap_const_lv32_1C0 = "111000000";
const sc_lv<32> IdentityAdd::ap_const_lv32_1DF = "111011111";
const sc_lv<32> IdentityAdd::ap_const_lv32_1E0 = "111100000";
const sc_lv<32> IdentityAdd::ap_const_lv32_1FF = "111111111";
const sc_lv<32> IdentityAdd::ap_const_lv32_2 = "10";

IdentityAdd::IdentityAdd(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_905 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_905_pp0_iter1_reg );
    sensitive << ( in1_0_V_id_V0_status );
    sensitive << ( in2_V_id_V0_status );
    sensitive << ( out_V_id_V1_status );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_905 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_905_pp0_iter1_reg );
    sensitive << ( in1_0_V_id_V0_status );
    sensitive << ( in2_V_id_V0_status );
    sensitive << ( out_V_id_V1_status );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_905 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_905_pp0_iter1_reg );
    sensitive << ( in1_0_V_id_V0_status );
    sensitive << ( in2_V_id_V0_status );
    sensitive << ( out_V_id_V1_status );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( in1_0_V_id_V0_status );
    sensitive << ( in2_V_id_V0_status );
    sensitive << ( out_V_id_V1_status );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( exitcond_flatten_reg_905 );
    sensitive << ( in1_0_V_id_V0_status );
    sensitive << ( in2_V_id_V0_status );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);
    sensitive << ( exitcond_flatten_reg_905_pp0_iter1_reg );
    sensitive << ( out_V_id_V1_status );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_434_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_bound_fu_428_p2);
    sensitive << ( p_shl_fu_408_p3 );
    sensitive << ( p_shl2_fu_424_p1 );

    SC_METHOD(thread_exitcond_flatten_fu_434_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_377 );
    sensitive << ( bound_reg_900 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_in1_0_V_data_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in1_0_V_data_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_905 );

    SC_METHOD(thread_in1_0_V_data_V_read);
    sensitive << ( in1_0_V_id_V0_update );

    SC_METHOD(thread_in1_0_V_dest_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in1_0_V_dest_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_905 );

    SC_METHOD(thread_in1_0_V_dest_V_read);
    sensitive << ( in1_0_V_id_V0_update );

    SC_METHOD(thread_in1_0_V_id_V0_status);
    sensitive << ( in1_0_V_data_V_empty_n );
    sensitive << ( in1_0_V_id_V_empty_n );
    sensitive << ( in1_0_V_dest_V_empty_n );
    sensitive << ( in1_0_V_user_V_empty_n );
    sensitive << ( in1_0_V_last_V_empty_n );

    SC_METHOD(thread_in1_0_V_id_V0_update);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_905 );
    sensitive << ( in1_0_V_id_V0_status );
    sensitive << ( in2_V_id_V0_status );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in1_0_V_id_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in1_0_V_id_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_905 );

    SC_METHOD(thread_in1_0_V_id_V_read);
    sensitive << ( in1_0_V_id_V0_update );

    SC_METHOD(thread_in1_0_V_last_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in1_0_V_last_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_905 );

    SC_METHOD(thread_in1_0_V_last_V_read);
    sensitive << ( in1_0_V_id_V0_update );

    SC_METHOD(thread_in1_0_V_user_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in1_0_V_user_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_905 );

    SC_METHOD(thread_in1_0_V_user_V_read);
    sensitive << ( in1_0_V_id_V0_update );

    SC_METHOD(thread_in2_V_data_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in2_V_data_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_905 );

    SC_METHOD(thread_in2_V_data_V_read);
    sensitive << ( in2_V_id_V0_update );

    SC_METHOD(thread_in2_V_dest_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in2_V_dest_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_905 );

    SC_METHOD(thread_in2_V_dest_V_read);
    sensitive << ( in2_V_id_V0_update );

    SC_METHOD(thread_in2_V_id_V0_status);
    sensitive << ( in2_V_data_V_empty_n );
    sensitive << ( in2_V_id_V_empty_n );
    sensitive << ( in2_V_dest_V_empty_n );
    sensitive << ( in2_V_user_V_empty_n );
    sensitive << ( in2_V_last_V_empty_n );

    SC_METHOD(thread_in2_V_id_V0_update);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_905 );
    sensitive << ( in1_0_V_id_V0_status );
    sensitive << ( in2_V_id_V0_status );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in2_V_id_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in2_V_id_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_905 );

    SC_METHOD(thread_in2_V_id_V_read);
    sensitive << ( in2_V_id_V0_update );

    SC_METHOD(thread_in2_V_last_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in2_V_last_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_905 );

    SC_METHOD(thread_in2_V_last_V_read);
    sensitive << ( in2_V_id_V0_update );

    SC_METHOD(thread_in2_V_user_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in2_V_user_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_905 );

    SC_METHOD(thread_in2_V_user_V_read);
    sensitive << ( in2_V_id_V0_update );

    SC_METHOD(thread_indvar_flatten_next_fu_439_p2);
    sensitive << ( indvar_flatten_reg_377 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_j_4_fu_465_p2);
    sensitive << ( j_mid2_fu_451_p3 );

    SC_METHOD(thread_j_mid2_fu_451_p3);
    sensitive << ( j_reg_388 );
    sensitive << ( tmp_3_fu_445_p2 );

    SC_METHOD(thread_out_V_data_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_V_data_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_905_pp0_iter1_reg );

    SC_METHOD(thread_out_V_data_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in1_0_V_data_V_dout );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_905_pp0_iter1_reg );
    sensitive << ( in1_0_V_id_V0_status );
    sensitive << ( in2_V_id_V0_status );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( tmp_data_V_15_fu_879_p17 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_V_data_V_write);
    sensitive << ( out_V_id_V1_update );

    SC_METHOD(thread_out_V_dest_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_V_dest_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_905_pp0_iter1_reg );

    SC_METHOD(thread_out_V_dest_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_905_pp0_iter1_reg );
    sensitive << ( in1_0_V_id_V0_status );
    sensitive << ( in2_V_id_V0_status );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_V_dest_V_write);
    sensitive << ( out_V_id_V1_update );

    SC_METHOD(thread_out_V_id_V1_status);
    sensitive << ( out_V_data_V_full_n );
    sensitive << ( out_V_id_V_full_n );
    sensitive << ( out_V_dest_V_full_n );
    sensitive << ( out_V_user_V_full_n );
    sensitive << ( out_V_last_V_full_n );

    SC_METHOD(thread_out_V_id_V1_update);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_905_pp0_iter1_reg );
    sensitive << ( in1_0_V_id_V0_status );
    sensitive << ( in2_V_id_V0_status );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_V_id_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_V_id_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_905_pp0_iter1_reg );

    SC_METHOD(thread_out_V_id_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_905_pp0_iter1_reg );
    sensitive << ( in1_0_V_id_V0_status );
    sensitive << ( in2_V_id_V0_status );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_V_id_V_write);
    sensitive << ( out_V_id_V1_update );

    SC_METHOD(thread_out_V_last_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_V_last_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_905_pp0_iter1_reg );

    SC_METHOD(thread_out_V_last_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_905_pp0_iter1_reg );
    sensitive << ( in1_0_V_id_V0_status );
    sensitive << ( in2_V_id_V0_status );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( out_data_last_V_reg_914_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_V_last_V_write);
    sensitive << ( out_V_id_V1_update );

    SC_METHOD(thread_out_V_user_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_V_user_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_905_pp0_iter1_reg );

    SC_METHOD(thread_out_V_user_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_905_pp0_iter1_reg );
    sensitive << ( in1_0_V_id_V0_status );
    sensitive << ( in2_V_id_V0_status );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_V_user_V_write);
    sensitive << ( out_V_id_V1_update );

    SC_METHOD(thread_out_data_last_V_fu_459_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_434_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( j_mid2_fu_451_p3 );

    SC_METHOD(thread_p_Result_22_10_fu_749_p4);
    sensitive << ( in1_0_V_data_V_dout );

    SC_METHOD(thread_p_Result_22_11_fu_775_p4);
    sensitive << ( in1_0_V_data_V_dout );

    SC_METHOD(thread_p_Result_22_12_fu_801_p4);
    sensitive << ( in1_0_V_data_V_dout );

    SC_METHOD(thread_p_Result_22_13_fu_827_p4);
    sensitive << ( in1_0_V_data_V_dout );

    SC_METHOD(thread_p_Result_22_14_fu_853_p4);
    sensitive << ( in1_0_V_data_V_dout );

    SC_METHOD(thread_p_Result_22_1_fu_489_p4);
    sensitive << ( in1_0_V_data_V_dout );

    SC_METHOD(thread_p_Result_22_2_fu_515_p4);
    sensitive << ( in1_0_V_data_V_dout );

    SC_METHOD(thread_p_Result_22_3_fu_541_p4);
    sensitive << ( in1_0_V_data_V_dout );

    SC_METHOD(thread_p_Result_22_4_fu_567_p4);
    sensitive << ( in1_0_V_data_V_dout );

    SC_METHOD(thread_p_Result_22_5_fu_593_p4);
    sensitive << ( in1_0_V_data_V_dout );

    SC_METHOD(thread_p_Result_22_6_fu_619_p4);
    sensitive << ( in1_0_V_data_V_dout );

    SC_METHOD(thread_p_Result_22_7_fu_645_p4);
    sensitive << ( in1_0_V_data_V_dout );

    SC_METHOD(thread_p_Result_22_8_fu_671_p4);
    sensitive << ( in1_0_V_data_V_dout );

    SC_METHOD(thread_p_Result_22_9_fu_697_p4);
    sensitive << ( in1_0_V_data_V_dout );

    SC_METHOD(thread_p_Result_22_s_fu_723_p4);
    sensitive << ( in1_0_V_data_V_dout );

    SC_METHOD(thread_p_Result_23_10_fu_759_p4);
    sensitive << ( in2_V_data_V_dout );

    SC_METHOD(thread_p_Result_23_11_fu_785_p4);
    sensitive << ( in2_V_data_V_dout );

    SC_METHOD(thread_p_Result_23_12_fu_811_p4);
    sensitive << ( in2_V_data_V_dout );

    SC_METHOD(thread_p_Result_23_13_fu_837_p4);
    sensitive << ( in2_V_data_V_dout );

    SC_METHOD(thread_p_Result_23_14_fu_863_p4);
    sensitive << ( in2_V_data_V_dout );

    SC_METHOD(thread_p_Result_23_1_fu_499_p4);
    sensitive << ( in2_V_data_V_dout );

    SC_METHOD(thread_p_Result_23_2_fu_525_p4);
    sensitive << ( in2_V_data_V_dout );

    SC_METHOD(thread_p_Result_23_3_fu_551_p4);
    sensitive << ( in2_V_data_V_dout );

    SC_METHOD(thread_p_Result_23_4_fu_577_p4);
    sensitive << ( in2_V_data_V_dout );

    SC_METHOD(thread_p_Result_23_5_fu_603_p4);
    sensitive << ( in2_V_data_V_dout );

    SC_METHOD(thread_p_Result_23_6_fu_629_p4);
    sensitive << ( in2_V_data_V_dout );

    SC_METHOD(thread_p_Result_23_7_fu_655_p4);
    sensitive << ( in2_V_data_V_dout );

    SC_METHOD(thread_p_Result_23_8_fu_681_p4);
    sensitive << ( in2_V_data_V_dout );

    SC_METHOD(thread_p_Result_23_9_fu_707_p4);
    sensitive << ( in2_V_data_V_dout );

    SC_METHOD(thread_p_Result_23_s_fu_733_p4);
    sensitive << ( in2_V_data_V_dout );

    SC_METHOD(thread_p_shl2_fu_424_p1);
    sensitive << ( tmp_s_fu_416_p3 );

    SC_METHOD(thread_p_shl_fu_408_p3);
    sensitive << ( tmp_142_fu_404_p1 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp_142_fu_404_p1);
    sensitive << ( in1_0_V_data_V_dout );

    SC_METHOD(thread_tmp_143_fu_475_p1);
    sensitive << ( in1_0_V_data_V_dout );

    SC_METHOD(thread_tmp_144_fu_479_p1);
    sensitive << ( in2_V_data_V_dout );

    SC_METHOD(thread_tmp_3_fu_445_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_reg_388 );
    sensitive << ( exitcond_flatten_fu_434_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_tmp_V_0_trunc_fu_483_p2);
    sensitive << ( tmp_143_fu_475_p1 );
    sensitive << ( tmp_144_fu_479_p1 );

    SC_METHOD(thread_tmp_V_10_trunc_fu_743_p2);
    sensitive << ( p_Result_22_s_fu_723_p4 );
    sensitive << ( p_Result_23_s_fu_733_p4 );

    SC_METHOD(thread_tmp_V_11_trunc_fu_769_p2);
    sensitive << ( p_Result_22_10_fu_749_p4 );
    sensitive << ( p_Result_23_10_fu_759_p4 );

    SC_METHOD(thread_tmp_V_12_trunc_fu_795_p2);
    sensitive << ( p_Result_22_11_fu_775_p4 );
    sensitive << ( p_Result_23_11_fu_785_p4 );

    SC_METHOD(thread_tmp_V_13_trunc_fu_821_p2);
    sensitive << ( p_Result_22_12_fu_801_p4 );
    sensitive << ( p_Result_23_12_fu_811_p4 );

    SC_METHOD(thread_tmp_V_14_trunc_fu_847_p2);
    sensitive << ( p_Result_22_13_fu_827_p4 );
    sensitive << ( p_Result_23_13_fu_837_p4 );

    SC_METHOD(thread_tmp_V_15_trunc_fu_873_p2);
    sensitive << ( p_Result_22_14_fu_853_p4 );
    sensitive << ( p_Result_23_14_fu_863_p4 );

    SC_METHOD(thread_tmp_V_1_trunc_fu_509_p2);
    sensitive << ( p_Result_22_1_fu_489_p4 );
    sensitive << ( p_Result_23_1_fu_499_p4 );

    SC_METHOD(thread_tmp_V_2_trunc_fu_535_p2);
    sensitive << ( p_Result_22_2_fu_515_p4 );
    sensitive << ( p_Result_23_2_fu_525_p4 );

    SC_METHOD(thread_tmp_V_3_trunc_fu_561_p2);
    sensitive << ( p_Result_22_3_fu_541_p4 );
    sensitive << ( p_Result_23_3_fu_551_p4 );

    SC_METHOD(thread_tmp_V_4_trunc_fu_587_p2);
    sensitive << ( p_Result_22_4_fu_567_p4 );
    sensitive << ( p_Result_23_4_fu_577_p4 );

    SC_METHOD(thread_tmp_V_5_trunc_fu_613_p2);
    sensitive << ( p_Result_22_5_fu_593_p4 );
    sensitive << ( p_Result_23_5_fu_603_p4 );

    SC_METHOD(thread_tmp_V_6_trunc_fu_639_p2);
    sensitive << ( p_Result_22_6_fu_619_p4 );
    sensitive << ( p_Result_23_6_fu_629_p4 );

    SC_METHOD(thread_tmp_V_7_trunc_fu_665_p2);
    sensitive << ( p_Result_22_7_fu_645_p4 );
    sensitive << ( p_Result_23_7_fu_655_p4 );

    SC_METHOD(thread_tmp_V_8_trunc_fu_691_p2);
    sensitive << ( p_Result_22_8_fu_671_p4 );
    sensitive << ( p_Result_23_8_fu_681_p4 );

    SC_METHOD(thread_tmp_V_9_trunc_fu_717_p2);
    sensitive << ( p_Result_22_9_fu_697_p4 );
    sensitive << ( p_Result_23_9_fu_707_p4 );

    SC_METHOD(thread_tmp_data_V_15_fu_879_p17);
    sensitive << ( tmp_V_0_trunc_reg_924 );
    sensitive << ( tmp_V_1_trunc_reg_929 );
    sensitive << ( tmp_V_2_trunc_reg_934 );
    sensitive << ( tmp_V_3_trunc_reg_939 );
    sensitive << ( tmp_V_4_trunc_reg_944 );
    sensitive << ( tmp_V_5_trunc_reg_949 );
    sensitive << ( tmp_V_6_trunc_reg_954 );
    sensitive << ( tmp_V_7_trunc_reg_959 );
    sensitive << ( tmp_V_8_trunc_reg_964 );
    sensitive << ( tmp_V_9_trunc_reg_969 );
    sensitive << ( tmp_V_10_trunc_reg_974 );
    sensitive << ( tmp_V_11_trunc_reg_979 );
    sensitive << ( tmp_V_12_trunc_reg_984 );
    sensitive << ( tmp_V_13_trunc_reg_989 );
    sensitive << ( tmp_V_14_trunc_reg_994 );
    sensitive << ( tmp_V_15_trunc_reg_999 );

    SC_METHOD(thread_tmp_s_fu_416_p3);
    sensitive << ( tmp_142_fu_404_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( in1_0_V_id_V0_status );
    sensitive << ( in2_V_id_V0_status );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( exitcond_flatten_fu_434_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "IdentityAdd_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, in1_0_V_data_V_dout, "(port)in1_0_V_data_V_dout");
    sc_trace(mVcdFile, in1_0_V_data_V_empty_n, "(port)in1_0_V_data_V_empty_n");
    sc_trace(mVcdFile, in1_0_V_data_V_read, "(port)in1_0_V_data_V_read");
    sc_trace(mVcdFile, in1_0_V_id_V_dout, "(port)in1_0_V_id_V_dout");
    sc_trace(mVcdFile, in1_0_V_id_V_empty_n, "(port)in1_0_V_id_V_empty_n");
    sc_trace(mVcdFile, in1_0_V_id_V_read, "(port)in1_0_V_id_V_read");
    sc_trace(mVcdFile, in1_0_V_dest_V_dout, "(port)in1_0_V_dest_V_dout");
    sc_trace(mVcdFile, in1_0_V_dest_V_empty_n, "(port)in1_0_V_dest_V_empty_n");
    sc_trace(mVcdFile, in1_0_V_dest_V_read, "(port)in1_0_V_dest_V_read");
    sc_trace(mVcdFile, in1_0_V_user_V_dout, "(port)in1_0_V_user_V_dout");
    sc_trace(mVcdFile, in1_0_V_user_V_empty_n, "(port)in1_0_V_user_V_empty_n");
    sc_trace(mVcdFile, in1_0_V_user_V_read, "(port)in1_0_V_user_V_read");
    sc_trace(mVcdFile, in1_0_V_last_V_dout, "(port)in1_0_V_last_V_dout");
    sc_trace(mVcdFile, in1_0_V_last_V_empty_n, "(port)in1_0_V_last_V_empty_n");
    sc_trace(mVcdFile, in1_0_V_last_V_read, "(port)in1_0_V_last_V_read");
    sc_trace(mVcdFile, in2_V_data_V_dout, "(port)in2_V_data_V_dout");
    sc_trace(mVcdFile, in2_V_data_V_empty_n, "(port)in2_V_data_V_empty_n");
    sc_trace(mVcdFile, in2_V_data_V_read, "(port)in2_V_data_V_read");
    sc_trace(mVcdFile, in2_V_id_V_dout, "(port)in2_V_id_V_dout");
    sc_trace(mVcdFile, in2_V_id_V_empty_n, "(port)in2_V_id_V_empty_n");
    sc_trace(mVcdFile, in2_V_id_V_read, "(port)in2_V_id_V_read");
    sc_trace(mVcdFile, in2_V_dest_V_dout, "(port)in2_V_dest_V_dout");
    sc_trace(mVcdFile, in2_V_dest_V_empty_n, "(port)in2_V_dest_V_empty_n");
    sc_trace(mVcdFile, in2_V_dest_V_read, "(port)in2_V_dest_V_read");
    sc_trace(mVcdFile, in2_V_user_V_dout, "(port)in2_V_user_V_dout");
    sc_trace(mVcdFile, in2_V_user_V_empty_n, "(port)in2_V_user_V_empty_n");
    sc_trace(mVcdFile, in2_V_user_V_read, "(port)in2_V_user_V_read");
    sc_trace(mVcdFile, in2_V_last_V_dout, "(port)in2_V_last_V_dout");
    sc_trace(mVcdFile, in2_V_last_V_empty_n, "(port)in2_V_last_V_empty_n");
    sc_trace(mVcdFile, in2_V_last_V_read, "(port)in2_V_last_V_read");
    sc_trace(mVcdFile, out_V_data_V_din, "(port)out_V_data_V_din");
    sc_trace(mVcdFile, out_V_data_V_full_n, "(port)out_V_data_V_full_n");
    sc_trace(mVcdFile, out_V_data_V_write, "(port)out_V_data_V_write");
    sc_trace(mVcdFile, out_V_id_V_din, "(port)out_V_id_V_din");
    sc_trace(mVcdFile, out_V_id_V_full_n, "(port)out_V_id_V_full_n");
    sc_trace(mVcdFile, out_V_id_V_write, "(port)out_V_id_V_write");
    sc_trace(mVcdFile, out_V_dest_V_din, "(port)out_V_dest_V_din");
    sc_trace(mVcdFile, out_V_dest_V_full_n, "(port)out_V_dest_V_full_n");
    sc_trace(mVcdFile, out_V_dest_V_write, "(port)out_V_dest_V_write");
    sc_trace(mVcdFile, out_V_user_V_din, "(port)out_V_user_V_din");
    sc_trace(mVcdFile, out_V_user_V_full_n, "(port)out_V_user_V_full_n");
    sc_trace(mVcdFile, out_V_user_V_write, "(port)out_V_user_V_write");
    sc_trace(mVcdFile, out_V_last_V_din, "(port)out_V_last_V_din");
    sc_trace(mVcdFile, out_V_last_V_full_n, "(port)out_V_last_V_full_n");
    sc_trace(mVcdFile, out_V_last_V_write, "(port)out_V_last_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, in1_0_V_data_V_blk_n, "in1_0_V_data_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_flatten_reg_905, "exitcond_flatten_reg_905");
    sc_trace(mVcdFile, in1_0_V_id_V_blk_n, "in1_0_V_id_V_blk_n");
    sc_trace(mVcdFile, in1_0_V_dest_V_blk_n, "in1_0_V_dest_V_blk_n");
    sc_trace(mVcdFile, in1_0_V_user_V_blk_n, "in1_0_V_user_V_blk_n");
    sc_trace(mVcdFile, in1_0_V_last_V_blk_n, "in1_0_V_last_V_blk_n");
    sc_trace(mVcdFile, in2_V_data_V_blk_n, "in2_V_data_V_blk_n");
    sc_trace(mVcdFile, in2_V_id_V_blk_n, "in2_V_id_V_blk_n");
    sc_trace(mVcdFile, in2_V_dest_V_blk_n, "in2_V_dest_V_blk_n");
    sc_trace(mVcdFile, in2_V_user_V_blk_n, "in2_V_user_V_blk_n");
    sc_trace(mVcdFile, in2_V_last_V_blk_n, "in2_V_last_V_blk_n");
    sc_trace(mVcdFile, out_V_data_V_blk_n, "out_V_data_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, exitcond_flatten_reg_905_pp0_iter1_reg, "exitcond_flatten_reg_905_pp0_iter1_reg");
    sc_trace(mVcdFile, out_V_id_V_blk_n, "out_V_id_V_blk_n");
    sc_trace(mVcdFile, out_V_dest_V_blk_n, "out_V_dest_V_blk_n");
    sc_trace(mVcdFile, out_V_user_V_blk_n, "out_V_user_V_blk_n");
    sc_trace(mVcdFile, out_V_last_V_blk_n, "out_V_last_V_blk_n");
    sc_trace(mVcdFile, indvar_flatten_reg_377, "indvar_flatten_reg_377");
    sc_trace(mVcdFile, j_reg_388, "j_reg_388");
    sc_trace(mVcdFile, bound_fu_428_p2, "bound_fu_428_p2");
    sc_trace(mVcdFile, bound_reg_900, "bound_reg_900");
    sc_trace(mVcdFile, in1_0_V_id_V0_status, "in1_0_V_id_V0_status");
    sc_trace(mVcdFile, in2_V_id_V0_status, "in2_V_id_V0_status");
    sc_trace(mVcdFile, out_V_id_V1_status, "out_V_id_V1_status");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, exitcond_flatten_fu_434_p2, "exitcond_flatten_fu_434_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, indvar_flatten_next_fu_439_p2, "indvar_flatten_next_fu_439_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, out_data_last_V_fu_459_p2, "out_data_last_V_fu_459_p2");
    sc_trace(mVcdFile, out_data_last_V_reg_914, "out_data_last_V_reg_914");
    sc_trace(mVcdFile, out_data_last_V_reg_914_pp0_iter1_reg, "out_data_last_V_reg_914_pp0_iter1_reg");
    sc_trace(mVcdFile, j_4_fu_465_p2, "j_4_fu_465_p2");
    sc_trace(mVcdFile, tmp_V_0_trunc_fu_483_p2, "tmp_V_0_trunc_fu_483_p2");
    sc_trace(mVcdFile, tmp_V_0_trunc_reg_924, "tmp_V_0_trunc_reg_924");
    sc_trace(mVcdFile, tmp_V_1_trunc_fu_509_p2, "tmp_V_1_trunc_fu_509_p2");
    sc_trace(mVcdFile, tmp_V_1_trunc_reg_929, "tmp_V_1_trunc_reg_929");
    sc_trace(mVcdFile, tmp_V_2_trunc_fu_535_p2, "tmp_V_2_trunc_fu_535_p2");
    sc_trace(mVcdFile, tmp_V_2_trunc_reg_934, "tmp_V_2_trunc_reg_934");
    sc_trace(mVcdFile, tmp_V_3_trunc_fu_561_p2, "tmp_V_3_trunc_fu_561_p2");
    sc_trace(mVcdFile, tmp_V_3_trunc_reg_939, "tmp_V_3_trunc_reg_939");
    sc_trace(mVcdFile, tmp_V_4_trunc_fu_587_p2, "tmp_V_4_trunc_fu_587_p2");
    sc_trace(mVcdFile, tmp_V_4_trunc_reg_944, "tmp_V_4_trunc_reg_944");
    sc_trace(mVcdFile, tmp_V_5_trunc_fu_613_p2, "tmp_V_5_trunc_fu_613_p2");
    sc_trace(mVcdFile, tmp_V_5_trunc_reg_949, "tmp_V_5_trunc_reg_949");
    sc_trace(mVcdFile, tmp_V_6_trunc_fu_639_p2, "tmp_V_6_trunc_fu_639_p2");
    sc_trace(mVcdFile, tmp_V_6_trunc_reg_954, "tmp_V_6_trunc_reg_954");
    sc_trace(mVcdFile, tmp_V_7_trunc_fu_665_p2, "tmp_V_7_trunc_fu_665_p2");
    sc_trace(mVcdFile, tmp_V_7_trunc_reg_959, "tmp_V_7_trunc_reg_959");
    sc_trace(mVcdFile, tmp_V_8_trunc_fu_691_p2, "tmp_V_8_trunc_fu_691_p2");
    sc_trace(mVcdFile, tmp_V_8_trunc_reg_964, "tmp_V_8_trunc_reg_964");
    sc_trace(mVcdFile, tmp_V_9_trunc_fu_717_p2, "tmp_V_9_trunc_fu_717_p2");
    sc_trace(mVcdFile, tmp_V_9_trunc_reg_969, "tmp_V_9_trunc_reg_969");
    sc_trace(mVcdFile, tmp_V_10_trunc_fu_743_p2, "tmp_V_10_trunc_fu_743_p2");
    sc_trace(mVcdFile, tmp_V_10_trunc_reg_974, "tmp_V_10_trunc_reg_974");
    sc_trace(mVcdFile, tmp_V_11_trunc_fu_769_p2, "tmp_V_11_trunc_fu_769_p2");
    sc_trace(mVcdFile, tmp_V_11_trunc_reg_979, "tmp_V_11_trunc_reg_979");
    sc_trace(mVcdFile, tmp_V_12_trunc_fu_795_p2, "tmp_V_12_trunc_fu_795_p2");
    sc_trace(mVcdFile, tmp_V_12_trunc_reg_984, "tmp_V_12_trunc_reg_984");
    sc_trace(mVcdFile, tmp_V_13_trunc_fu_821_p2, "tmp_V_13_trunc_fu_821_p2");
    sc_trace(mVcdFile, tmp_V_13_trunc_reg_989, "tmp_V_13_trunc_reg_989");
    sc_trace(mVcdFile, tmp_V_14_trunc_fu_847_p2, "tmp_V_14_trunc_fu_847_p2");
    sc_trace(mVcdFile, tmp_V_14_trunc_reg_994, "tmp_V_14_trunc_reg_994");
    sc_trace(mVcdFile, tmp_V_15_trunc_fu_873_p2, "tmp_V_15_trunc_fu_873_p2");
    sc_trace(mVcdFile, tmp_V_15_trunc_reg_999, "tmp_V_15_trunc_reg_999");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, in1_0_V_id_V0_update, "in1_0_V_id_V0_update");
    sc_trace(mVcdFile, in2_V_id_V0_update, "in2_V_id_V0_update");
    sc_trace(mVcdFile, out_V_id_V1_update, "out_V_id_V1_update");
    sc_trace(mVcdFile, tmp_data_V_15_fu_879_p17, "tmp_data_V_15_fu_879_p17");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_142_fu_404_p1, "tmp_142_fu_404_p1");
    sc_trace(mVcdFile, tmp_s_fu_416_p3, "tmp_s_fu_416_p3");
    sc_trace(mVcdFile, p_shl_fu_408_p3, "p_shl_fu_408_p3");
    sc_trace(mVcdFile, p_shl2_fu_424_p1, "p_shl2_fu_424_p1");
    sc_trace(mVcdFile, tmp_3_fu_445_p2, "tmp_3_fu_445_p2");
    sc_trace(mVcdFile, j_mid2_fu_451_p3, "j_mid2_fu_451_p3");
    sc_trace(mVcdFile, tmp_143_fu_475_p1, "tmp_143_fu_475_p1");
    sc_trace(mVcdFile, tmp_144_fu_479_p1, "tmp_144_fu_479_p1");
    sc_trace(mVcdFile, p_Result_22_1_fu_489_p4, "p_Result_22_1_fu_489_p4");
    sc_trace(mVcdFile, p_Result_23_1_fu_499_p4, "p_Result_23_1_fu_499_p4");
    sc_trace(mVcdFile, p_Result_22_2_fu_515_p4, "p_Result_22_2_fu_515_p4");
    sc_trace(mVcdFile, p_Result_23_2_fu_525_p4, "p_Result_23_2_fu_525_p4");
    sc_trace(mVcdFile, p_Result_22_3_fu_541_p4, "p_Result_22_3_fu_541_p4");
    sc_trace(mVcdFile, p_Result_23_3_fu_551_p4, "p_Result_23_3_fu_551_p4");
    sc_trace(mVcdFile, p_Result_22_4_fu_567_p4, "p_Result_22_4_fu_567_p4");
    sc_trace(mVcdFile, p_Result_23_4_fu_577_p4, "p_Result_23_4_fu_577_p4");
    sc_trace(mVcdFile, p_Result_22_5_fu_593_p4, "p_Result_22_5_fu_593_p4");
    sc_trace(mVcdFile, p_Result_23_5_fu_603_p4, "p_Result_23_5_fu_603_p4");
    sc_trace(mVcdFile, p_Result_22_6_fu_619_p4, "p_Result_22_6_fu_619_p4");
    sc_trace(mVcdFile, p_Result_23_6_fu_629_p4, "p_Result_23_6_fu_629_p4");
    sc_trace(mVcdFile, p_Result_22_7_fu_645_p4, "p_Result_22_7_fu_645_p4");
    sc_trace(mVcdFile, p_Result_23_7_fu_655_p4, "p_Result_23_7_fu_655_p4");
    sc_trace(mVcdFile, p_Result_22_8_fu_671_p4, "p_Result_22_8_fu_671_p4");
    sc_trace(mVcdFile, p_Result_23_8_fu_681_p4, "p_Result_23_8_fu_681_p4");
    sc_trace(mVcdFile, p_Result_22_9_fu_697_p4, "p_Result_22_9_fu_697_p4");
    sc_trace(mVcdFile, p_Result_23_9_fu_707_p4, "p_Result_23_9_fu_707_p4");
    sc_trace(mVcdFile, p_Result_22_s_fu_723_p4, "p_Result_22_s_fu_723_p4");
    sc_trace(mVcdFile, p_Result_23_s_fu_733_p4, "p_Result_23_s_fu_733_p4");
    sc_trace(mVcdFile, p_Result_22_10_fu_749_p4, "p_Result_22_10_fu_749_p4");
    sc_trace(mVcdFile, p_Result_23_10_fu_759_p4, "p_Result_23_10_fu_759_p4");
    sc_trace(mVcdFile, p_Result_22_11_fu_775_p4, "p_Result_22_11_fu_775_p4");
    sc_trace(mVcdFile, p_Result_23_11_fu_785_p4, "p_Result_23_11_fu_785_p4");
    sc_trace(mVcdFile, p_Result_22_12_fu_801_p4, "p_Result_22_12_fu_801_p4");
    sc_trace(mVcdFile, p_Result_23_12_fu_811_p4, "p_Result_23_12_fu_811_p4");
    sc_trace(mVcdFile, p_Result_22_13_fu_827_p4, "p_Result_22_13_fu_827_p4");
    sc_trace(mVcdFile, p_Result_23_13_fu_837_p4, "p_Result_23_13_fu_837_p4");
    sc_trace(mVcdFile, p_Result_22_14_fu_853_p4, "p_Result_22_14_fu_853_p4");
    sc_trace(mVcdFile, p_Result_23_14_fu_863_p4, "p_Result_23_14_fu_863_p4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

IdentityAdd::~IdentityAdd() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void IdentityAdd::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in1_0_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in2_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in1_0_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in2_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_434_p2.read()))) {
        indvar_flatten_reg_377 = indvar_flatten_next_fu_439_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in1_0_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in2_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())))) {
        indvar_flatten_reg_377 = ap_const_lv38_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_434_p2.read()))) {
        j_reg_388 = j_4_fu_465_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in1_0_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in2_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())))) {
        j_reg_388 = ap_const_lv6_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in1_0_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in2_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())))) {
        bound_reg_900 = bound_fu_428_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten_reg_905 = exitcond_flatten_fu_434_p2.read();
        exitcond_flatten_reg_905_pp0_iter1_reg = exitcond_flatten_reg_905.read();
        out_data_last_V_reg_914_pp0_iter1_reg = out_data_last_V_reg_914.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_434_p2.read()))) {
        out_data_last_V_reg_914 = out_data_last_V_fu_459_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_905.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_V_0_trunc_reg_924 = tmp_V_0_trunc_fu_483_p2.read();
        tmp_V_10_trunc_reg_974 = tmp_V_10_trunc_fu_743_p2.read();
        tmp_V_11_trunc_reg_979 = tmp_V_11_trunc_fu_769_p2.read();
        tmp_V_12_trunc_reg_984 = tmp_V_12_trunc_fu_795_p2.read();
        tmp_V_13_trunc_reg_989 = tmp_V_13_trunc_fu_821_p2.read();
        tmp_V_14_trunc_reg_994 = tmp_V_14_trunc_fu_847_p2.read();
        tmp_V_15_trunc_reg_999 = tmp_V_15_trunc_fu_873_p2.read();
        tmp_V_1_trunc_reg_929 = tmp_V_1_trunc_fu_509_p2.read();
        tmp_V_2_trunc_reg_934 = tmp_V_2_trunc_fu_535_p2.read();
        tmp_V_3_trunc_reg_939 = tmp_V_3_trunc_fu_561_p2.read();
        tmp_V_4_trunc_reg_944 = tmp_V_4_trunc_fu_587_p2.read();
        tmp_V_5_trunc_reg_949 = tmp_V_5_trunc_fu_613_p2.read();
        tmp_V_6_trunc_reg_954 = tmp_V_6_trunc_fu_639_p2.read();
        tmp_V_7_trunc_reg_959 = tmp_V_7_trunc_fu_665_p2.read();
        tmp_V_8_trunc_reg_964 = tmp_V_8_trunc_fu_691_p2.read();
        tmp_V_9_trunc_reg_969 = tmp_V_9_trunc_fu_717_p2.read();
    }
}

void IdentityAdd::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void IdentityAdd::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void IdentityAdd::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[2];
}

void IdentityAdd::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void IdentityAdd::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(exitcond_flatten_reg_905.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, in1_0_V_id_V0_status.read())) || 
   (esl_seteq<1,1,1>(exitcond_flatten_reg_905.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, in2_V_id_V0_status.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_905_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())));
}

void IdentityAdd::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(exitcond_flatten_reg_905.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, in1_0_V_id_V0_status.read())) || 
   (esl_seteq<1,1,1>(exitcond_flatten_reg_905.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, in2_V_id_V0_status.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_905_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())));
}

void IdentityAdd::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(exitcond_flatten_reg_905.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, in1_0_V_id_V0_status.read())) || 
   (esl_seteq<1,1,1>(exitcond_flatten_reg_905.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, in2_V_id_V0_status.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_905_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())));
}

void IdentityAdd::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in1_0_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in2_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read()));
}

void IdentityAdd::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void IdentityAdd::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(exitcond_flatten_reg_905.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in1_0_V_id_V0_status.read())) || (esl_seteq<1,1,1>(exitcond_flatten_reg_905.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in2_V_id_V0_status.read())));
}

void IdentityAdd::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_905_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read()));
}

void IdentityAdd::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_434_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void IdentityAdd::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void IdentityAdd::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void IdentityAdd::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void IdentityAdd::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void IdentityAdd::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void IdentityAdd::thread_bound_fu_428_p2() {
    bound_fu_428_p2 = (!p_shl_fu_408_p3.read().is_01() || !p_shl2_fu_424_p1.read().is_01())? sc_lv<38>(): (sc_biguint<38>(p_shl_fu_408_p3.read()) - sc_biguint<38>(p_shl2_fu_424_p1.read()));
}

void IdentityAdd::thread_exitcond_flatten_fu_434_p2() {
    exitcond_flatten_fu_434_p2 = (!indvar_flatten_reg_377.read().is_01() || !bound_reg_900.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_377.read() == bound_reg_900.read());
}

void IdentityAdd::thread_in1_0_V_data_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_905.read(), ap_const_lv1_0)))) {
        in1_0_V_data_V_blk_n = in1_0_V_data_V_empty_n.read();
    } else {
        in1_0_V_data_V_blk_n = ap_const_logic_1;
    }
}

void IdentityAdd::thread_in1_0_V_data_V_read() {
    in1_0_V_data_V_read = in1_0_V_id_V0_update.read();
}

void IdentityAdd::thread_in1_0_V_dest_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_905.read(), ap_const_lv1_0)))) {
        in1_0_V_dest_V_blk_n = in1_0_V_dest_V_empty_n.read();
    } else {
        in1_0_V_dest_V_blk_n = ap_const_logic_1;
    }
}

void IdentityAdd::thread_in1_0_V_dest_V_read() {
    in1_0_V_dest_V_read = in1_0_V_id_V0_update.read();
}

void IdentityAdd::thread_in1_0_V_id_V0_status() {
    in1_0_V_id_V0_status = (in1_0_V_data_V_empty_n.read() & in1_0_V_id_V_empty_n.read() & in1_0_V_dest_V_empty_n.read() & in1_0_V_user_V_empty_n.read() & in1_0_V_last_V_empty_n.read());
}

void IdentityAdd::thread_in1_0_V_id_V0_update() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in1_0_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in2_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_905.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        in1_0_V_id_V0_update = ap_const_logic_1;
    } else {
        in1_0_V_id_V0_update = ap_const_logic_0;
    }
}

void IdentityAdd::thread_in1_0_V_id_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_905.read(), ap_const_lv1_0)))) {
        in1_0_V_id_V_blk_n = in1_0_V_id_V_empty_n.read();
    } else {
        in1_0_V_id_V_blk_n = ap_const_logic_1;
    }
}

void IdentityAdd::thread_in1_0_V_id_V_read() {
    in1_0_V_id_V_read = in1_0_V_id_V0_update.read();
}

void IdentityAdd::thread_in1_0_V_last_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_905.read(), ap_const_lv1_0)))) {
        in1_0_V_last_V_blk_n = in1_0_V_last_V_empty_n.read();
    } else {
        in1_0_V_last_V_blk_n = ap_const_logic_1;
    }
}

void IdentityAdd::thread_in1_0_V_last_V_read() {
    in1_0_V_last_V_read = in1_0_V_id_V0_update.read();
}

void IdentityAdd::thread_in1_0_V_user_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_905.read(), ap_const_lv1_0)))) {
        in1_0_V_user_V_blk_n = in1_0_V_user_V_empty_n.read();
    } else {
        in1_0_V_user_V_blk_n = ap_const_logic_1;
    }
}

void IdentityAdd::thread_in1_0_V_user_V_read() {
    in1_0_V_user_V_read = in1_0_V_id_V0_update.read();
}

void IdentityAdd::thread_in2_V_data_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_905.read(), ap_const_lv1_0)))) {
        in2_V_data_V_blk_n = in2_V_data_V_empty_n.read();
    } else {
        in2_V_data_V_blk_n = ap_const_logic_1;
    }
}

void IdentityAdd::thread_in2_V_data_V_read() {
    in2_V_data_V_read = in2_V_id_V0_update.read();
}

void IdentityAdd::thread_in2_V_dest_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_905.read(), ap_const_lv1_0)))) {
        in2_V_dest_V_blk_n = in2_V_dest_V_empty_n.read();
    } else {
        in2_V_dest_V_blk_n = ap_const_logic_1;
    }
}

void IdentityAdd::thread_in2_V_dest_V_read() {
    in2_V_dest_V_read = in2_V_id_V0_update.read();
}

void IdentityAdd::thread_in2_V_id_V0_status() {
    in2_V_id_V0_status = (in2_V_data_V_empty_n.read() & in2_V_id_V_empty_n.read() & in2_V_dest_V_empty_n.read() & in2_V_user_V_empty_n.read() & in2_V_last_V_empty_n.read());
}

void IdentityAdd::thread_in2_V_id_V0_update() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in1_0_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in2_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_905.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        in2_V_id_V0_update = ap_const_logic_1;
    } else {
        in2_V_id_V0_update = ap_const_logic_0;
    }
}

void IdentityAdd::thread_in2_V_id_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_905.read(), ap_const_lv1_0)))) {
        in2_V_id_V_blk_n = in2_V_id_V_empty_n.read();
    } else {
        in2_V_id_V_blk_n = ap_const_logic_1;
    }
}

void IdentityAdd::thread_in2_V_id_V_read() {
    in2_V_id_V_read = in2_V_id_V0_update.read();
}

void IdentityAdd::thread_in2_V_last_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_905.read(), ap_const_lv1_0)))) {
        in2_V_last_V_blk_n = in2_V_last_V_empty_n.read();
    } else {
        in2_V_last_V_blk_n = ap_const_logic_1;
    }
}

void IdentityAdd::thread_in2_V_last_V_read() {
    in2_V_last_V_read = in2_V_id_V0_update.read();
}

void IdentityAdd::thread_in2_V_user_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_905.read(), ap_const_lv1_0)))) {
        in2_V_user_V_blk_n = in2_V_user_V_empty_n.read();
    } else {
        in2_V_user_V_blk_n = ap_const_logic_1;
    }
}

void IdentityAdd::thread_in2_V_user_V_read() {
    in2_V_user_V_read = in2_V_id_V0_update.read();
}

void IdentityAdd::thread_indvar_flatten_next_fu_439_p2() {
    indvar_flatten_next_fu_439_p2 = (!indvar_flatten_reg_377.read().is_01() || !ap_const_lv38_1.is_01())? sc_lv<38>(): (sc_biguint<38>(indvar_flatten_reg_377.read()) + sc_biguint<38>(ap_const_lv38_1));
}

void IdentityAdd::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void IdentityAdd::thread_j_4_fu_465_p2() {
    j_4_fu_465_p2 = (!ap_const_lv6_1.is_01() || !j_mid2_fu_451_p3.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(j_mid2_fu_451_p3.read()));
}

void IdentityAdd::thread_j_mid2_fu_451_p3() {
    j_mid2_fu_451_p3 = (!tmp_3_fu_445_p2.read()[0].is_01())? sc_lv<6>(): ((tmp_3_fu_445_p2.read()[0].to_bool())? ap_const_lv6_0: j_reg_388.read());
}

void IdentityAdd::thread_out_V_data_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_905_pp0_iter1_reg.read())))) {
        out_V_data_V_blk_n = out_V_data_V_full_n.read();
    } else {
        out_V_data_V_blk_n = ap_const_logic_1;
    }
}

void IdentityAdd::thread_out_V_data_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_905_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_V_data_V_din = tmp_data_V_15_fu_879_p17.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in1_0_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in2_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())))) {
        out_V_data_V_din = in1_0_V_data_V_dout.read();
    } else {
        out_V_data_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void IdentityAdd::thread_out_V_data_V_write() {
    out_V_data_V_write = out_V_id_V1_update.read();
}

void IdentityAdd::thread_out_V_dest_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_905_pp0_iter1_reg.read())))) {
        out_V_dest_V_blk_n = out_V_dest_V_full_n.read();
    } else {
        out_V_dest_V_blk_n = ap_const_logic_1;
    }
}

void IdentityAdd::thread_out_V_dest_V_din() {
    out_V_dest_V_din = ap_const_lv8_1E;
}

void IdentityAdd::thread_out_V_dest_V_write() {
    out_V_dest_V_write = out_V_id_V1_update.read();
}

void IdentityAdd::thread_out_V_id_V1_status() {
    out_V_id_V1_status = (out_V_data_V_full_n.read() & out_V_id_V_full_n.read() & out_V_dest_V_full_n.read() & out_V_user_V_full_n.read() & out_V_last_V_full_n.read());
}

void IdentityAdd::thread_out_V_id_V1_update() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in1_0_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in2_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_905_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        out_V_id_V1_update = ap_const_logic_1;
    } else {
        out_V_id_V1_update = ap_const_logic_0;
    }
}

void IdentityAdd::thread_out_V_id_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_905_pp0_iter1_reg.read())))) {
        out_V_id_V_blk_n = out_V_id_V_full_n.read();
    } else {
        out_V_id_V_blk_n = ap_const_logic_1;
    }
}

void IdentityAdd::thread_out_V_id_V_din() {
    out_V_id_V_din = ap_const_lv8_1D;
}

void IdentityAdd::thread_out_V_id_V_write() {
    out_V_id_V_write = out_V_id_V1_update.read();
}

void IdentityAdd::thread_out_V_last_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_905_pp0_iter1_reg.read())))) {
        out_V_last_V_blk_n = out_V_last_V_full_n.read();
    } else {
        out_V_last_V_blk_n = ap_const_logic_1;
    }
}

void IdentityAdd::thread_out_V_last_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_905_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_V_last_V_din = out_data_last_V_reg_914_pp0_iter1_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in1_0_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in2_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())))) {
        out_V_last_V_din = ap_const_lv1_0;
    } else {
        out_V_last_V_din =  (sc_lv<1>) ("X");
    }
}

void IdentityAdd::thread_out_V_last_V_write() {
    out_V_last_V_write = out_V_id_V1_update.read();
}

void IdentityAdd::thread_out_V_user_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_905_pp0_iter1_reg.read())))) {
        out_V_user_V_blk_n = out_V_user_V_full_n.read();
    } else {
        out_V_user_V_blk_n = ap_const_logic_1;
    }
}

void IdentityAdd::thread_out_V_user_V_din() {
    out_V_user_V_din = ap_const_lv16_31;
}

void IdentityAdd::thread_out_V_user_V_write() {
    out_V_user_V_write = out_V_id_V1_update.read();
}

void IdentityAdd::thread_out_data_last_V_fu_459_p2() {
    out_data_last_V_fu_459_p2 = (!j_mid2_fu_451_p3.read().is_01() || !ap_const_lv6_2F.is_01())? sc_lv<1>(): sc_lv<1>(j_mid2_fu_451_p3.read() == ap_const_lv6_2F);
}

void IdentityAdd::thread_p_Result_22_10_fu_749_p4() {
    p_Result_22_10_fu_749_p4 = in1_0_V_data_V_dout.read().range(383, 352);
}

void IdentityAdd::thread_p_Result_22_11_fu_775_p4() {
    p_Result_22_11_fu_775_p4 = in1_0_V_data_V_dout.read().range(415, 384);
}

void IdentityAdd::thread_p_Result_22_12_fu_801_p4() {
    p_Result_22_12_fu_801_p4 = in1_0_V_data_V_dout.read().range(447, 416);
}

void IdentityAdd::thread_p_Result_22_13_fu_827_p4() {
    p_Result_22_13_fu_827_p4 = in1_0_V_data_V_dout.read().range(479, 448);
}

void IdentityAdd::thread_p_Result_22_14_fu_853_p4() {
    p_Result_22_14_fu_853_p4 = in1_0_V_data_V_dout.read().range(511, 480);
}

void IdentityAdd::thread_p_Result_22_1_fu_489_p4() {
    p_Result_22_1_fu_489_p4 = in1_0_V_data_V_dout.read().range(63, 32);
}

void IdentityAdd::thread_p_Result_22_2_fu_515_p4() {
    p_Result_22_2_fu_515_p4 = in1_0_V_data_V_dout.read().range(95, 64);
}

void IdentityAdd::thread_p_Result_22_3_fu_541_p4() {
    p_Result_22_3_fu_541_p4 = in1_0_V_data_V_dout.read().range(127, 96);
}

void IdentityAdd::thread_p_Result_22_4_fu_567_p4() {
    p_Result_22_4_fu_567_p4 = in1_0_V_data_V_dout.read().range(159, 128);
}

void IdentityAdd::thread_p_Result_22_5_fu_593_p4() {
    p_Result_22_5_fu_593_p4 = in1_0_V_data_V_dout.read().range(191, 160);
}

void IdentityAdd::thread_p_Result_22_6_fu_619_p4() {
    p_Result_22_6_fu_619_p4 = in1_0_V_data_V_dout.read().range(223, 192);
}

void IdentityAdd::thread_p_Result_22_7_fu_645_p4() {
    p_Result_22_7_fu_645_p4 = in1_0_V_data_V_dout.read().range(255, 224);
}

void IdentityAdd::thread_p_Result_22_8_fu_671_p4() {
    p_Result_22_8_fu_671_p4 = in1_0_V_data_V_dout.read().range(287, 256);
}

void IdentityAdd::thread_p_Result_22_9_fu_697_p4() {
    p_Result_22_9_fu_697_p4 = in1_0_V_data_V_dout.read().range(319, 288);
}

void IdentityAdd::thread_p_Result_22_s_fu_723_p4() {
    p_Result_22_s_fu_723_p4 = in1_0_V_data_V_dout.read().range(351, 320);
}

void IdentityAdd::thread_p_Result_23_10_fu_759_p4() {
    p_Result_23_10_fu_759_p4 = in2_V_data_V_dout.read().range(383, 352);
}

void IdentityAdd::thread_p_Result_23_11_fu_785_p4() {
    p_Result_23_11_fu_785_p4 = in2_V_data_V_dout.read().range(415, 384);
}

void IdentityAdd::thread_p_Result_23_12_fu_811_p4() {
    p_Result_23_12_fu_811_p4 = in2_V_data_V_dout.read().range(447, 416);
}

void IdentityAdd::thread_p_Result_23_13_fu_837_p4() {
    p_Result_23_13_fu_837_p4 = in2_V_data_V_dout.read().range(479, 448);
}

void IdentityAdd::thread_p_Result_23_14_fu_863_p4() {
    p_Result_23_14_fu_863_p4 = in2_V_data_V_dout.read().range(511, 480);
}

void IdentityAdd::thread_p_Result_23_1_fu_499_p4() {
    p_Result_23_1_fu_499_p4 = in2_V_data_V_dout.read().range(63, 32);
}

void IdentityAdd::thread_p_Result_23_2_fu_525_p4() {
    p_Result_23_2_fu_525_p4 = in2_V_data_V_dout.read().range(95, 64);
}

void IdentityAdd::thread_p_Result_23_3_fu_551_p4() {
    p_Result_23_3_fu_551_p4 = in2_V_data_V_dout.read().range(127, 96);
}

void IdentityAdd::thread_p_Result_23_4_fu_577_p4() {
    p_Result_23_4_fu_577_p4 = in2_V_data_V_dout.read().range(159, 128);
}

void IdentityAdd::thread_p_Result_23_5_fu_603_p4() {
    p_Result_23_5_fu_603_p4 = in2_V_data_V_dout.read().range(191, 160);
}

void IdentityAdd::thread_p_Result_23_6_fu_629_p4() {
    p_Result_23_6_fu_629_p4 = in2_V_data_V_dout.read().range(223, 192);
}

void IdentityAdd::thread_p_Result_23_7_fu_655_p4() {
    p_Result_23_7_fu_655_p4 = in2_V_data_V_dout.read().range(255, 224);
}

void IdentityAdd::thread_p_Result_23_8_fu_681_p4() {
    p_Result_23_8_fu_681_p4 = in2_V_data_V_dout.read().range(287, 256);
}

void IdentityAdd::thread_p_Result_23_9_fu_707_p4() {
    p_Result_23_9_fu_707_p4 = in2_V_data_V_dout.read().range(319, 288);
}

void IdentityAdd::thread_p_Result_23_s_fu_733_p4() {
    p_Result_23_s_fu_733_p4 = in2_V_data_V_dout.read().range(351, 320);
}

void IdentityAdd::thread_p_shl2_fu_424_p1() {
    p_shl2_fu_424_p1 = esl_zext<38,36>(tmp_s_fu_416_p3.read());
}

void IdentityAdd::thread_p_shl_fu_408_p3() {
    p_shl_fu_408_p3 = esl_concat<32,6>(tmp_142_fu_404_p1.read(), ap_const_lv6_0);
}

void IdentityAdd::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void IdentityAdd::thread_start_out() {
    start_out = real_start.read();
}

void IdentityAdd::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void IdentityAdd::thread_tmp_142_fu_404_p1() {
    tmp_142_fu_404_p1 = in1_0_V_data_V_dout.read().range(32-1, 0);
}

void IdentityAdd::thread_tmp_143_fu_475_p1() {
    tmp_143_fu_475_p1 = in1_0_V_data_V_dout.read().range(32-1, 0);
}

void IdentityAdd::thread_tmp_144_fu_479_p1() {
    tmp_144_fu_479_p1 = in2_V_data_V_dout.read().range(32-1, 0);
}

void IdentityAdd::thread_tmp_3_fu_445_p2() {
    tmp_3_fu_445_p2 = (!j_reg_388.read().is_01() || !ap_const_lv6_30.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_388.read() == ap_const_lv6_30);
}

void IdentityAdd::thread_tmp_V_0_trunc_fu_483_p2() {
    tmp_V_0_trunc_fu_483_p2 = (!tmp_143_fu_475_p1.read().is_01() || !tmp_144_fu_479_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_143_fu_475_p1.read()) + sc_biguint<32>(tmp_144_fu_479_p1.read()));
}

void IdentityAdd::thread_tmp_V_10_trunc_fu_743_p2() {
    tmp_V_10_trunc_fu_743_p2 = (!p_Result_22_s_fu_723_p4.read().is_01() || !p_Result_23_s_fu_733_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_Result_22_s_fu_723_p4.read()) + sc_biguint<32>(p_Result_23_s_fu_733_p4.read()));
}

void IdentityAdd::thread_tmp_V_11_trunc_fu_769_p2() {
    tmp_V_11_trunc_fu_769_p2 = (!p_Result_22_10_fu_749_p4.read().is_01() || !p_Result_23_10_fu_759_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_Result_22_10_fu_749_p4.read()) + sc_biguint<32>(p_Result_23_10_fu_759_p4.read()));
}

void IdentityAdd::thread_tmp_V_12_trunc_fu_795_p2() {
    tmp_V_12_trunc_fu_795_p2 = (!p_Result_22_11_fu_775_p4.read().is_01() || !p_Result_23_11_fu_785_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_Result_22_11_fu_775_p4.read()) + sc_biguint<32>(p_Result_23_11_fu_785_p4.read()));
}

void IdentityAdd::thread_tmp_V_13_trunc_fu_821_p2() {
    tmp_V_13_trunc_fu_821_p2 = (!p_Result_22_12_fu_801_p4.read().is_01() || !p_Result_23_12_fu_811_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_Result_22_12_fu_801_p4.read()) + sc_biguint<32>(p_Result_23_12_fu_811_p4.read()));
}

void IdentityAdd::thread_tmp_V_14_trunc_fu_847_p2() {
    tmp_V_14_trunc_fu_847_p2 = (!p_Result_22_13_fu_827_p4.read().is_01() || !p_Result_23_13_fu_837_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_Result_22_13_fu_827_p4.read()) + sc_biguint<32>(p_Result_23_13_fu_837_p4.read()));
}

void IdentityAdd::thread_tmp_V_15_trunc_fu_873_p2() {
    tmp_V_15_trunc_fu_873_p2 = (!p_Result_22_14_fu_853_p4.read().is_01() || !p_Result_23_14_fu_863_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_Result_22_14_fu_853_p4.read()) + sc_biguint<32>(p_Result_23_14_fu_863_p4.read()));
}

void IdentityAdd::thread_tmp_V_1_trunc_fu_509_p2() {
    tmp_V_1_trunc_fu_509_p2 = (!p_Result_22_1_fu_489_p4.read().is_01() || !p_Result_23_1_fu_499_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_Result_22_1_fu_489_p4.read()) + sc_biguint<32>(p_Result_23_1_fu_499_p4.read()));
}

void IdentityAdd::thread_tmp_V_2_trunc_fu_535_p2() {
    tmp_V_2_trunc_fu_535_p2 = (!p_Result_22_2_fu_515_p4.read().is_01() || !p_Result_23_2_fu_525_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_Result_22_2_fu_515_p4.read()) + sc_biguint<32>(p_Result_23_2_fu_525_p4.read()));
}

void IdentityAdd::thread_tmp_V_3_trunc_fu_561_p2() {
    tmp_V_3_trunc_fu_561_p2 = (!p_Result_22_3_fu_541_p4.read().is_01() || !p_Result_23_3_fu_551_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_Result_22_3_fu_541_p4.read()) + sc_biguint<32>(p_Result_23_3_fu_551_p4.read()));
}

void IdentityAdd::thread_tmp_V_4_trunc_fu_587_p2() {
    tmp_V_4_trunc_fu_587_p2 = (!p_Result_22_4_fu_567_p4.read().is_01() || !p_Result_23_4_fu_577_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_Result_22_4_fu_567_p4.read()) + sc_biguint<32>(p_Result_23_4_fu_577_p4.read()));
}

void IdentityAdd::thread_tmp_V_5_trunc_fu_613_p2() {
    tmp_V_5_trunc_fu_613_p2 = (!p_Result_22_5_fu_593_p4.read().is_01() || !p_Result_23_5_fu_603_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_Result_22_5_fu_593_p4.read()) + sc_biguint<32>(p_Result_23_5_fu_603_p4.read()));
}

void IdentityAdd::thread_tmp_V_6_trunc_fu_639_p2() {
    tmp_V_6_trunc_fu_639_p2 = (!p_Result_22_6_fu_619_p4.read().is_01() || !p_Result_23_6_fu_629_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_Result_22_6_fu_619_p4.read()) + sc_biguint<32>(p_Result_23_6_fu_629_p4.read()));
}

void IdentityAdd::thread_tmp_V_7_trunc_fu_665_p2() {
    tmp_V_7_trunc_fu_665_p2 = (!p_Result_22_7_fu_645_p4.read().is_01() || !p_Result_23_7_fu_655_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_Result_22_7_fu_645_p4.read()) + sc_biguint<32>(p_Result_23_7_fu_655_p4.read()));
}

void IdentityAdd::thread_tmp_V_8_trunc_fu_691_p2() {
    tmp_V_8_trunc_fu_691_p2 = (!p_Result_22_8_fu_671_p4.read().is_01() || !p_Result_23_8_fu_681_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_Result_22_8_fu_671_p4.read()) + sc_biguint<32>(p_Result_23_8_fu_681_p4.read()));
}

void IdentityAdd::thread_tmp_V_9_trunc_fu_717_p2() {
    tmp_V_9_trunc_fu_717_p2 = (!p_Result_22_9_fu_697_p4.read().is_01() || !p_Result_23_9_fu_707_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_Result_22_9_fu_697_p4.read()) + sc_biguint<32>(p_Result_23_9_fu_707_p4.read()));
}

void IdentityAdd::thread_tmp_data_V_15_fu_879_p17() {
    tmp_data_V_15_fu_879_p17 = esl_concat<480,32>(esl_concat<448,32>(esl_concat<416,32>(esl_concat<384,32>(esl_concat<352,32>(esl_concat<320,32>(esl_concat<288,32>(esl_concat<256,32>(esl_concat<224,32>(esl_concat<192,32>(esl_concat<160,32>(esl_concat<128,32>(esl_concat<96,32>(esl_concat<64,32>(esl_concat<32,32>(tmp_V_15_trunc_reg_999.read(), tmp_V_14_trunc_reg_994.read()), tmp_V_13_trunc_reg_989.read()), tmp_V_12_trunc_reg_984.read()), tmp_V_11_trunc_reg_979.read()), tmp_V_10_trunc_reg_974.read()), tmp_V_9_trunc_reg_969.read()), tmp_V_8_trunc_reg_964.read()), tmp_V_7_trunc_reg_959.read()), tmp_V_6_trunc_reg_954.read()), tmp_V_5_trunc_reg_949.read()), tmp_V_4_trunc_reg_944.read()), tmp_V_3_trunc_reg_939.read()), tmp_V_2_trunc_reg_934.read()), tmp_V_1_trunc_reg_929.read()), tmp_V_0_trunc_reg_924.read());
}

void IdentityAdd::thread_tmp_s_fu_416_p3() {
    tmp_s_fu_416_p3 = esl_concat<32,4>(tmp_142_fu_404_p1.read(), ap_const_lv4_0);
}

void IdentityAdd::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in1_0_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in2_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_434_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_flatten_fu_434_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<3>) ("XXX");
            break;
    }
}

}

