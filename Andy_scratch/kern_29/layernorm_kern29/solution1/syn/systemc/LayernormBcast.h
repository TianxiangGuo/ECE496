// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _LayernormBcast_HH_
#define _LayernormBcast_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "fifo_w512_d12_A.h"

namespace ap_rtl {

struct LayernormBcast : public sc_module {
    // Port declarations 29
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<512> > in_V_data_V_dout;
    sc_in< sc_logic > in_V_data_V_empty_n;
    sc_out< sc_logic > in_V_data_V_read;
    sc_in< sc_lv<8> > in_V_id_V_dout;
    sc_in< sc_logic > in_V_id_V_empty_n;
    sc_out< sc_logic > in_V_id_V_read;
    sc_in< sc_lv<8> > in_V_dest_V_dout;
    sc_in< sc_logic > in_V_dest_V_empty_n;
    sc_out< sc_logic > in_V_dest_V_read;
    sc_in< sc_lv<16> > in_V_user_V_dout;
    sc_in< sc_logic > in_V_user_V_empty_n;
    sc_out< sc_logic > in_V_user_V_read;
    sc_in< sc_lv<1> > in_V_last_V_dout;
    sc_in< sc_logic > in_V_last_V_empty_n;
    sc_out< sc_logic > in_V_last_V_read;
    sc_out< sc_lv<512> > out_r_TDATA;
    sc_out< sc_logic > out_r_TVALID;
    sc_in< sc_logic > out_r_TREADY;
    sc_out< sc_lv<8> > out_r_TID;
    sc_out< sc_lv<8> > out_r_TDEST;
    sc_out< sc_lv<16> > out_r_TUSER;
    sc_out< sc_lv<1> > out_r_TLAST;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    LayernormBcast(sc_module_name name);
    SC_HAS_PROCESS(LayernormBcast);

    ~LayernormBcast();

    sc_trace_file* mVcdFile;

    fifo_w512_d12_A* fifo_V_V_fifo_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<512> > out_V_data_V_1_data_in;
    sc_signal< sc_lv<512> > out_V_data_V_1_data_out;
    sc_signal< sc_logic > out_V_data_V_1_vld_in;
    sc_signal< sc_logic > out_V_data_V_1_vld_out;
    sc_signal< sc_logic > out_V_data_V_1_ack_in;
    sc_signal< sc_logic > out_V_data_V_1_ack_out;
    sc_signal< sc_lv<512> > out_V_data_V_1_payload_A;
    sc_signal< sc_lv<512> > out_V_data_V_1_payload_B;
    sc_signal< sc_logic > out_V_data_V_1_sel_rd;
    sc_signal< sc_logic > out_V_data_V_1_sel_wr;
    sc_signal< sc_logic > out_V_data_V_1_sel;
    sc_signal< sc_logic > out_V_data_V_1_load_A;
    sc_signal< sc_logic > out_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > out_V_data_V_1_state;
    sc_signal< sc_logic > out_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<8> > out_V_id_V_1_data_out;
    sc_signal< sc_logic > out_V_id_V_1_vld_in;
    sc_signal< sc_logic > out_V_id_V_1_vld_out;
    sc_signal< sc_logic > out_V_id_V_1_ack_in;
    sc_signal< sc_logic > out_V_id_V_1_ack_out;
    sc_signal< sc_logic > out_V_id_V_1_sel_rd;
    sc_signal< sc_logic > out_V_id_V_1_sel;
    sc_signal< sc_lv<2> > out_V_id_V_1_state;
    sc_signal< sc_lv<8> > out_V_dest_V_1_data_in;
    sc_signal< sc_lv<8> > out_V_dest_V_1_data_out;
    sc_signal< sc_logic > out_V_dest_V_1_vld_in;
    sc_signal< sc_logic > out_V_dest_V_1_vld_out;
    sc_signal< sc_logic > out_V_dest_V_1_ack_in;
    sc_signal< sc_logic > out_V_dest_V_1_ack_out;
    sc_signal< sc_lv<8> > out_V_dest_V_1_payload_A;
    sc_signal< sc_lv<8> > out_V_dest_V_1_payload_B;
    sc_signal< sc_logic > out_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > out_V_dest_V_1_sel_wr;
    sc_signal< sc_logic > out_V_dest_V_1_sel;
    sc_signal< sc_logic > out_V_dest_V_1_load_A;
    sc_signal< sc_logic > out_V_dest_V_1_load_B;
    sc_signal< sc_lv<2> > out_V_dest_V_1_state;
    sc_signal< sc_logic > out_V_dest_V_1_state_cmp_full;
    sc_signal< sc_lv<16> > out_V_user_V_1_data_in;
    sc_signal< sc_lv<16> > out_V_user_V_1_data_out;
    sc_signal< sc_logic > out_V_user_V_1_vld_in;
    sc_signal< sc_logic > out_V_user_V_1_vld_out;
    sc_signal< sc_logic > out_V_user_V_1_ack_in;
    sc_signal< sc_logic > out_V_user_V_1_ack_out;
    sc_signal< sc_lv<16> > out_V_user_V_1_payload_A;
    sc_signal< sc_lv<16> > out_V_user_V_1_payload_B;
    sc_signal< sc_logic > out_V_user_V_1_sel_rd;
    sc_signal< sc_logic > out_V_user_V_1_sel_wr;
    sc_signal< sc_logic > out_V_user_V_1_sel;
    sc_signal< sc_logic > out_V_user_V_1_load_A;
    sc_signal< sc_logic > out_V_user_V_1_load_B;
    sc_signal< sc_lv<2> > out_V_user_V_1_state;
    sc_signal< sc_logic > out_V_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > out_V_last_V_1_data_in;
    sc_signal< sc_lv<1> > out_V_last_V_1_data_out;
    sc_signal< sc_logic > out_V_last_V_1_vld_in;
    sc_signal< sc_logic > out_V_last_V_1_vld_out;
    sc_signal< sc_logic > out_V_last_V_1_ack_in;
    sc_signal< sc_logic > out_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > out_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > out_V_last_V_1_payload_B;
    sc_signal< sc_logic > out_V_last_V_1_sel_rd;
    sc_signal< sc_logic > out_V_last_V_1_sel_wr;
    sc_signal< sc_logic > out_V_last_V_1_sel;
    sc_signal< sc_logic > out_V_last_V_1_load_A;
    sc_signal< sc_logic > out_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > out_V_last_V_1_state;
    sc_signal< sc_logic > out_V_last_V_1_state_cmp_full;
    sc_signal< sc_logic > in_V_data_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > tmp_2_reg_555;
    sc_signal< sc_lv<1> > tmp_9_reg_542;
    sc_signal< sc_logic > in_V_id_V_blk_n;
    sc_signal< sc_logic > in_V_dest_V_blk_n;
    sc_signal< sc_logic > in_V_user_V_blk_n;
    sc_signal< sc_logic > in_V_last_V_blk_n;
    sc_signal< sc_logic > out_r_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_341_p2;
    sc_signal< sc_lv<1> > tmp_mid2_fu_379_p3;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > tmp_mid2_reg_523;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > tmp_2_reg_555_pp0_iter1_reg;
    sc_signal< sc_lv<4> > j_reg_259;
    sc_signal< sc_lv<512> > temp_data_V_fu_301_p1;
    sc_signal< sc_lv<512> > temp_data_V_reg_497;
    sc_signal< sc_logic > in_V_id_V0_status;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<35> > bound_fu_321_p2;
    sc_signal< sc_lv<35> > bound_reg_502;
    sc_signal< sc_lv<35> > indvar_flatten_next_fu_346_p2;
    sc_signal< sc_lv<35> > indvar_flatten_next_reg_510;
    sc_signal< bool > ap_block_state2;
    sc_signal< bool > ap_predicate_op50_write_state2;
    sc_signal< bool > ap_block_state2_io;
    sc_signal< sc_lv<3> > iter_mid2_fu_358_p3;
    sc_signal< sc_lv<3> > iter_mid2_reg_515;
    sc_signal< sc_lv<16> > tmp_user_V_10_cast_fu_407_p1;
    sc_signal< sc_lv<16> > tmp_user_V_10_cast_reg_527;
    sc_signal< sc_lv<32> > i_mid2_fu_411_p3;
    sc_signal< sc_lv<32> > i_mid2_reg_532;
    sc_signal< sc_lv<8> > tmp_dest_V_1_fu_437_p1;
    sc_signal< sc_lv<1> > tmp_9_fu_442_p2;
    sc_signal< bool > ap_block_state3_io;
    sc_signal< sc_lv<1> > grp_fu_292_p2;
    sc_signal< sc_lv<1> > tmp_1_reg_546;
    sc_signal< sc_lv<8> > tmp_dest_V_3_fu_464_p1;
    sc_signal< sc_lv<8> > tmp_dest_V_3_reg_550;
    sc_signal< sc_lv<1> > tmp_2_fu_468_p2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter0;
    sc_signal< sc_lv<512> > fifo_V_V_dout;
    sc_signal< sc_logic > fifo_V_V_empty_n;
    sc_signal< sc_logic > fifo_V_V_read;
    sc_signal< bool > ap_predicate_op68_read_state5;
    sc_signal< sc_lv<512> > fifo_V_V_din;
    sc_signal< sc_logic > fifo_V_V_full_n;
    sc_signal< sc_logic > fifo_V_V_write;
    sc_signal< bool > ap_predicate_op70_write_state5;
    sc_signal< bool > ap_predicate_op72_read_state5;
    sc_signal< bool > ap_predicate_op74_write_state5;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_io;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state6_io;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<4> > j_2_fu_474_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > temp_last_V_fu_480_p2;
    sc_signal< sc_lv<1> > temp_last_V_reg_564;
    sc_signal< sc_lv<3> > iter_1_fu_486_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state4;
    sc_signal< sc_lv<35> > indvar_flatten_reg_226;
    sc_signal< sc_lv<32> > i_reg_237;
    sc_signal< sc_lv<3> > iter_reg_248;
    sc_signal< sc_lv<512> > ap_phi_mux_tmp_data_V_7_phi_fu_274_p6;
    sc_signal< sc_lv<512> > ap_phi_reg_pp0_iter1_tmp_data_V_7_reg_270;
    sc_signal< sc_logic > in_V_id_V0_update;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<3> > grp_fu_292_p0;
    sc_signal< sc_lv<32> > N_fu_297_p1;
    sc_signal< sc_lv<34> > tmp_10_fu_309_p3;
    sc_signal< sc_lv<35> > cast_fu_305_p1;
    sc_signal< sc_lv<35> > p_shl_fu_317_p1;
    sc_signal< sc_lv<1> > tmp_s_fu_327_p2;
    sc_signal< sc_lv<1> > tmp_11_fu_352_p2;
    sc_signal< sc_lv<32> > i_s_fu_367_p2;
    sc_signal< sc_lv<1> > tmp_mid1_fu_373_p2;
    sc_signal< sc_lv<3> > tmp_user_V_9_mid1_fu_387_p3;
    sc_signal< sc_lv<3> > tmp_user_V_fu_333_p3;
    sc_signal< sc_lv<3> > tmp_user_V_2_fu_395_p3;
    sc_signal< sc_lv<4> > tmp_user_V_10_cast8_fu_403_p1;
    sc_signal< sc_lv<6> > tmp_25_cast_fu_419_p1;
    sc_signal< sc_lv<6> > phitmp1_fu_423_p2;
    sc_signal< sc_lv<6> > temp_dest_V_fu_429_p3;
    sc_signal< sc_lv<6> > tmp_28_cast_fu_447_p1;
    sc_signal< sc_lv<6> > phitmp_fu_450_p2;
    sc_signal< sc_lv<6> > temp_dest_V_1_fu_456_p3;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_575;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_pp0_stage0;
    static const sc_lv<5> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<35> ap_const_lv35_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_1D;
    static const sc_lv<16> ap_const_lv16_D;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<35> ap_const_lv35_1;
    static const sc_lv<6> ap_const_lv6_1E;
    static const sc_lv<6> ap_const_lv6_26;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<3> ap_const_lv3_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_N_fu_297_p1();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2();
    void thread_ap_block_state2_io();
    void thread_ap_block_state3_io();
    void thread_ap_block_state4_pp0_stage0_iter0();
    void thread_ap_block_state5_io();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_block_state6_io();
    void thread_ap_block_state6_pp0_stage0_iter2();
    void thread_ap_condition_575();
    void thread_ap_condition_pp0_exit_iter0_state4();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_tmp_data_V_7_phi_fu_274_p6();
    void thread_ap_phi_reg_pp0_iter1_tmp_data_V_7_reg_270();
    void thread_ap_predicate_op50_write_state2();
    void thread_ap_predicate_op68_read_state5();
    void thread_ap_predicate_op70_write_state5();
    void thread_ap_predicate_op72_read_state5();
    void thread_ap_predicate_op74_write_state5();
    void thread_ap_ready();
    void thread_bound_fu_321_p2();
    void thread_cast_fu_305_p1();
    void thread_exitcond_flatten_fu_341_p2();
    void thread_fifo_V_V_din();
    void thread_fifo_V_V_read();
    void thread_fifo_V_V_write();
    void thread_grp_fu_292_p0();
    void thread_grp_fu_292_p2();
    void thread_i_mid2_fu_411_p3();
    void thread_i_s_fu_367_p2();
    void thread_in_V_data_V_blk_n();
    void thread_in_V_data_V_read();
    void thread_in_V_dest_V_blk_n();
    void thread_in_V_dest_V_read();
    void thread_in_V_id_V0_status();
    void thread_in_V_id_V0_update();
    void thread_in_V_id_V_blk_n();
    void thread_in_V_id_V_read();
    void thread_in_V_last_V_blk_n();
    void thread_in_V_last_V_read();
    void thread_in_V_user_V_blk_n();
    void thread_in_V_user_V_read();
    void thread_indvar_flatten_next_fu_346_p2();
    void thread_iter_1_fu_486_p2();
    void thread_iter_mid2_fu_358_p3();
    void thread_j_2_fu_474_p2();
    void thread_out_V_data_V_1_ack_in();
    void thread_out_V_data_V_1_ack_out();
    void thread_out_V_data_V_1_data_in();
    void thread_out_V_data_V_1_data_out();
    void thread_out_V_data_V_1_load_A();
    void thread_out_V_data_V_1_load_B();
    void thread_out_V_data_V_1_sel();
    void thread_out_V_data_V_1_state_cmp_full();
    void thread_out_V_data_V_1_vld_in();
    void thread_out_V_data_V_1_vld_out();
    void thread_out_V_dest_V_1_ack_in();
    void thread_out_V_dest_V_1_ack_out();
    void thread_out_V_dest_V_1_data_in();
    void thread_out_V_dest_V_1_data_out();
    void thread_out_V_dest_V_1_load_A();
    void thread_out_V_dest_V_1_load_B();
    void thread_out_V_dest_V_1_sel();
    void thread_out_V_dest_V_1_state_cmp_full();
    void thread_out_V_dest_V_1_vld_in();
    void thread_out_V_dest_V_1_vld_out();
    void thread_out_V_id_V_1_ack_in();
    void thread_out_V_id_V_1_ack_out();
    void thread_out_V_id_V_1_data_out();
    void thread_out_V_id_V_1_sel();
    void thread_out_V_id_V_1_vld_in();
    void thread_out_V_id_V_1_vld_out();
    void thread_out_V_last_V_1_ack_in();
    void thread_out_V_last_V_1_ack_out();
    void thread_out_V_last_V_1_data_in();
    void thread_out_V_last_V_1_data_out();
    void thread_out_V_last_V_1_load_A();
    void thread_out_V_last_V_1_load_B();
    void thread_out_V_last_V_1_sel();
    void thread_out_V_last_V_1_state_cmp_full();
    void thread_out_V_last_V_1_vld_in();
    void thread_out_V_last_V_1_vld_out();
    void thread_out_V_user_V_1_ack_in();
    void thread_out_V_user_V_1_ack_out();
    void thread_out_V_user_V_1_data_in();
    void thread_out_V_user_V_1_data_out();
    void thread_out_V_user_V_1_load_A();
    void thread_out_V_user_V_1_load_B();
    void thread_out_V_user_V_1_sel();
    void thread_out_V_user_V_1_state_cmp_full();
    void thread_out_V_user_V_1_vld_in();
    void thread_out_V_user_V_1_vld_out();
    void thread_out_r_TDATA();
    void thread_out_r_TDATA_blk_n();
    void thread_out_r_TDEST();
    void thread_out_r_TID();
    void thread_out_r_TLAST();
    void thread_out_r_TUSER();
    void thread_out_r_TVALID();
    void thread_p_shl_fu_317_p1();
    void thread_phitmp1_fu_423_p2();
    void thread_phitmp_fu_450_p2();
    void thread_temp_data_V_fu_301_p1();
    void thread_temp_dest_V_1_fu_456_p3();
    void thread_temp_dest_V_fu_429_p3();
    void thread_temp_last_V_fu_480_p2();
    void thread_tmp_10_fu_309_p3();
    void thread_tmp_11_fu_352_p2();
    void thread_tmp_25_cast_fu_419_p1();
    void thread_tmp_28_cast_fu_447_p1();
    void thread_tmp_2_fu_468_p2();
    void thread_tmp_9_fu_442_p2();
    void thread_tmp_dest_V_1_fu_437_p1();
    void thread_tmp_dest_V_3_fu_464_p1();
    void thread_tmp_mid1_fu_373_p2();
    void thread_tmp_mid2_fu_379_p3();
    void thread_tmp_s_fu_327_p2();
    void thread_tmp_user_V_10_cast8_fu_403_p1();
    void thread_tmp_user_V_10_cast_fu_407_p1();
    void thread_tmp_user_V_2_fu_395_p3();
    void thread_tmp_user_V_9_mid1_fu_387_p3();
    void thread_tmp_user_V_fu_333_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
