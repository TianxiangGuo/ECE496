// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "LayernormBcast.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic LayernormBcast::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic LayernormBcast::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> LayernormBcast::ap_ST_fsm_state1 = "1";
const sc_lv<5> LayernormBcast::ap_ST_fsm_state2 = "10";
const sc_lv<5> LayernormBcast::ap_ST_fsm_state3 = "100";
const sc_lv<5> LayernormBcast::ap_ST_fsm_pp0_stage0 = "1000";
const sc_lv<5> LayernormBcast::ap_ST_fsm_state7 = "10000";
const sc_lv<32> LayernormBcast::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool LayernormBcast::ap_const_boolean_1 = true;
const sc_lv<1> LayernormBcast::ap_const_lv1_0 = "0";
const sc_lv<1> LayernormBcast::ap_const_lv1_1 = "1";
const sc_lv<2> LayernormBcast::ap_const_lv2_0 = "00";
const sc_lv<2> LayernormBcast::ap_const_lv2_2 = "10";
const sc_lv<2> LayernormBcast::ap_const_lv2_3 = "11";
const sc_lv<2> LayernormBcast::ap_const_lv2_1 = "1";
const sc_lv<32> LayernormBcast::ap_const_lv32_3 = "11";
const bool LayernormBcast::ap_const_boolean_0 = false;
const sc_lv<32> LayernormBcast::ap_const_lv32_1 = "1";
const sc_lv<32> LayernormBcast::ap_const_lv32_2 = "10";
const sc_lv<32> LayernormBcast::ap_const_lv32_4 = "100";
const sc_lv<35> LayernormBcast::ap_const_lv35_0 = "00000000000000000000000000000000000";
const sc_lv<3> LayernormBcast::ap_const_lv3_0 = "000";
const sc_lv<4> LayernormBcast::ap_const_lv4_0 = "0000";
const sc_lv<8> LayernormBcast::ap_const_lv8_1D = "11101";
const sc_lv<16> LayernormBcast::ap_const_lv16_D = "1101";
const sc_lv<3> LayernormBcast::ap_const_lv3_4 = "100";
const sc_lv<3> LayernormBcast::ap_const_lv3_5 = "101";
const sc_lv<35> LayernormBcast::ap_const_lv35_1 = "1";
const sc_lv<6> LayernormBcast::ap_const_lv6_1E = "11110";
const sc_lv<6> LayernormBcast::ap_const_lv6_26 = "100110";
const sc_lv<4> LayernormBcast::ap_const_lv4_C = "1100";
const sc_lv<4> LayernormBcast::ap_const_lv4_1 = "1";
const sc_lv<4> LayernormBcast::ap_const_lv4_B = "1011";
const sc_lv<3> LayernormBcast::ap_const_lv3_1 = "1";

LayernormBcast::LayernormBcast(sc_module_name name) : sc_module(name), mVcdFile(0) {
    fifo_V_V_fifo_U = new fifo_w512_d12_A("fifo_V_V_fifo_U");
    fifo_V_V_fifo_U->clk(ap_clk);
    fifo_V_V_fifo_U->reset(ap_rst);
    fifo_V_V_fifo_U->if_read_ce(ap_var_for_const0);
    fifo_V_V_fifo_U->if_write_ce(ap_var_for_const0);
    fifo_V_V_fifo_U->if_din(fifo_V_V_din);
    fifo_V_V_fifo_U->if_full_n(fifo_V_V_full_n);
    fifo_V_V_fifo_U->if_write(fifo_V_V_write);
    fifo_V_V_fifo_U->if_dout(fifo_V_V_dout);
    fifo_V_V_fifo_U->if_empty_n(fifo_V_V_empty_n);
    fifo_V_V_fifo_U->if_read(fifo_V_V_read);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_N_fu_297_p1);
    sensitive << ( in_V_data_V_dout );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( in_V_id_V0_status );
    sensitive << ( fifo_V_V_empty_n );
    sensitive << ( ap_predicate_op68_read_state5 );
    sensitive << ( fifo_V_V_full_n );
    sensitive << ( ap_predicate_op70_write_state5 );
    sensitive << ( ap_predicate_op72_read_state5 );
    sensitive << ( ap_predicate_op74_write_state5 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( in_V_id_V0_status );
    sensitive << ( fifo_V_V_empty_n );
    sensitive << ( ap_predicate_op68_read_state5 );
    sensitive << ( fifo_V_V_full_n );
    sensitive << ( ap_predicate_op70_write_state5 );
    sensitive << ( ap_predicate_op72_read_state5 );
    sensitive << ( ap_predicate_op74_write_state5 );
    sensitive << ( ap_block_state5_io );
    sensitive << ( ap_block_state6_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( in_V_id_V0_status );
    sensitive << ( fifo_V_V_empty_n );
    sensitive << ( ap_predicate_op68_read_state5 );
    sensitive << ( fifo_V_V_full_n );
    sensitive << ( ap_predicate_op70_write_state5 );
    sensitive << ( ap_predicate_op72_read_state5 );
    sensitive << ( ap_predicate_op74_write_state5 );
    sensitive << ( ap_block_state5_io );
    sensitive << ( ap_block_state6_io );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( in_V_id_V0_status );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( out_V_id_V_1_ack_in );
    sensitive << ( out_V_dest_V_1_ack_in );
    sensitive << ( out_V_user_V_1_ack_in );
    sensitive << ( out_V_last_V_1_ack_in );

    SC_METHOD(thread_ap_block_state2_io);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( ap_predicate_op50_write_state2 );

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( tmp_mid2_reg_523 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state5_io);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( tmp_2_reg_555 );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter1);
    sensitive << ( in_V_id_V0_status );
    sensitive << ( fifo_V_V_empty_n );
    sensitive << ( ap_predicate_op68_read_state5 );
    sensitive << ( fifo_V_V_full_n );
    sensitive << ( ap_predicate_op70_write_state5 );
    sensitive << ( ap_predicate_op72_read_state5 );
    sensitive << ( ap_predicate_op74_write_state5 );

    SC_METHOD(thread_ap_block_state6_io);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( tmp_2_reg_555_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter2);

    SC_METHOD(thread_ap_condition_575);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state4);
    sensitive << ( tmp_2_fu_468_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( out_V_id_V_1_ack_in );
    sensitive << ( out_V_dest_V_1_ack_in );
    sensitive << ( out_V_user_V_1_ack_in );
    sensitive << ( out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_341_p2 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_phi_mux_tmp_data_V_7_phi_fu_274_p6);
    sensitive << ( in_V_data_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_2_reg_555 );
    sensitive << ( tmp_9_reg_542 );
    sensitive << ( tmp_1_reg_546 );
    sensitive << ( fifo_V_V_dout );
    sensitive << ( ap_phi_reg_pp0_iter1_tmp_data_V_7_reg_270 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter1_tmp_data_V_7_reg_270);

    SC_METHOD(thread_ap_predicate_op50_write_state2);
    sensitive << ( exitcond_flatten_fu_341_p2 );
    sensitive << ( tmp_mid2_fu_379_p3 );

    SC_METHOD(thread_ap_predicate_op68_read_state5);
    sensitive << ( tmp_2_reg_555 );
    sensitive << ( tmp_9_reg_542 );

    SC_METHOD(thread_ap_predicate_op70_write_state5);
    sensitive << ( tmp_2_reg_555 );
    sensitive << ( tmp_9_reg_542 );
    sensitive << ( tmp_1_reg_546 );

    SC_METHOD(thread_ap_predicate_op72_read_state5);
    sensitive << ( tmp_2_reg_555 );
    sensitive << ( tmp_9_reg_542 );

    SC_METHOD(thread_ap_predicate_op74_write_state5);
    sensitive << ( tmp_2_reg_555 );
    sensitive << ( tmp_9_reg_542 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( out_V_id_V_1_ack_in );
    sensitive << ( out_V_dest_V_1_ack_in );
    sensitive << ( out_V_user_V_1_ack_in );
    sensitive << ( out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_341_p2 );
    sensitive << ( ap_block_state2_io );

    SC_METHOD(thread_bound_fu_321_p2);
    sensitive << ( cast_fu_305_p1 );
    sensitive << ( p_shl_fu_317_p1 );

    SC_METHOD(thread_cast_fu_305_p1);
    sensitive << ( N_fu_297_p1 );

    SC_METHOD(thread_exitcond_flatten_fu_341_p2);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( out_V_id_V_1_ack_in );
    sensitive << ( out_V_dest_V_1_ack_in );
    sensitive << ( out_V_user_V_1_ack_in );
    sensitive << ( out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( bound_reg_502 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( indvar_flatten_reg_226 );

    SC_METHOD(thread_fifo_V_V_din);
    sensitive << ( in_V_data_V_dout );
    sensitive << ( fifo_V_V_dout );
    sensitive << ( ap_predicate_op70_write_state5 );
    sensitive << ( ap_predicate_op74_write_state5 );
    sensitive << ( ap_condition_575 );

    SC_METHOD(thread_fifo_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op68_read_state5 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_fifo_V_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op70_write_state5 );
    sensitive << ( ap_predicate_op74_write_state5 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_292_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( iter_mid2_fu_358_p3 );
    sensitive << ( iter_mid2_reg_515 );

    SC_METHOD(thread_grp_fu_292_p2);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( out_V_id_V_1_ack_in );
    sensitive << ( out_V_dest_V_1_ack_in );
    sensitive << ( out_V_user_V_1_ack_in );
    sensitive << ( out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_341_p2 );
    sensitive << ( tmp_mid2_fu_379_p3 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( grp_fu_292_p0 );

    SC_METHOD(thread_i_mid2_fu_411_p3);
    sensitive << ( i_reg_237 );
    sensitive << ( tmp_11_fu_352_p2 );
    sensitive << ( i_s_fu_367_p2 );

    SC_METHOD(thread_i_s_fu_367_p2);
    sensitive << ( i_reg_237 );

    SC_METHOD(thread_in_V_data_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_data_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_2_reg_555 );
    sensitive << ( tmp_9_reg_542 );

    SC_METHOD(thread_in_V_data_V_read);
    sensitive << ( in_V_id_V0_update );

    SC_METHOD(thread_in_V_dest_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_dest_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_2_reg_555 );
    sensitive << ( tmp_9_reg_542 );

    SC_METHOD(thread_in_V_dest_V_read);
    sensitive << ( in_V_id_V0_update );

    SC_METHOD(thread_in_V_id_V0_status);
    sensitive << ( in_V_data_V_empty_n );
    sensitive << ( in_V_id_V_empty_n );
    sensitive << ( in_V_dest_V_empty_n );
    sensitive << ( in_V_user_V_empty_n );
    sensitive << ( in_V_last_V_empty_n );

    SC_METHOD(thread_in_V_id_V0_update);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( in_V_id_V0_status );
    sensitive << ( ap_predicate_op72_read_state5 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_V_id_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_id_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_2_reg_555 );
    sensitive << ( tmp_9_reg_542 );

    SC_METHOD(thread_in_V_id_V_read);
    sensitive << ( in_V_id_V0_update );

    SC_METHOD(thread_in_V_last_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_last_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_2_reg_555 );
    sensitive << ( tmp_9_reg_542 );

    SC_METHOD(thread_in_V_last_V_read);
    sensitive << ( in_V_id_V0_update );

    SC_METHOD(thread_in_V_user_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_user_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_2_reg_555 );
    sensitive << ( tmp_9_reg_542 );

    SC_METHOD(thread_in_V_user_V_read);
    sensitive << ( in_V_id_V0_update );

    SC_METHOD(thread_indvar_flatten_next_fu_346_p2);
    sensitive << ( indvar_flatten_reg_226 );

    SC_METHOD(thread_iter_1_fu_486_p2);
    sensitive << ( iter_mid2_reg_515 );

    SC_METHOD(thread_iter_mid2_fu_358_p3);
    sensitive << ( iter_reg_248 );
    sensitive << ( tmp_11_fu_352_p2 );

    SC_METHOD(thread_j_2_fu_474_p2);
    sensitive << ( j_reg_259 );

    SC_METHOD(thread_out_V_data_V_1_ack_in);
    sensitive << ( out_V_data_V_1_state );

    SC_METHOD(thread_out_V_data_V_1_ack_out);
    sensitive << ( out_r_TREADY );

    SC_METHOD(thread_out_V_data_V_1_data_in);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( out_V_id_V_1_ack_in );
    sensitive << ( out_V_dest_V_1_ack_in );
    sensitive << ( out_V_user_V_1_ack_in );
    sensitive << ( out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_2_reg_555 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( temp_data_V_reg_497 );
    sensitive << ( ap_predicate_op50_write_state2 );
    sensitive << ( ap_phi_mux_tmp_data_V_7_phi_fu_274_p6 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_V_data_V_1_data_out);
    sensitive << ( out_V_data_V_1_payload_A );
    sensitive << ( out_V_data_V_1_payload_B );
    sensitive << ( out_V_data_V_1_sel );

    SC_METHOD(thread_out_V_data_V_1_load_A);
    sensitive << ( out_V_data_V_1_sel_wr );
    sensitive << ( out_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_out_V_data_V_1_load_B);
    sensitive << ( out_V_data_V_1_sel_wr );
    sensitive << ( out_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_out_V_data_V_1_sel);
    sensitive << ( out_V_data_V_1_sel_rd );

    SC_METHOD(thread_out_V_data_V_1_state_cmp_full);
    sensitive << ( out_V_data_V_1_state );

    SC_METHOD(thread_out_V_data_V_1_vld_in);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( out_V_id_V_1_ack_in );
    sensitive << ( out_V_dest_V_1_ack_in );
    sensitive << ( out_V_user_V_1_ack_in );
    sensitive << ( out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_2_reg_555 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_predicate_op50_write_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_V_data_V_1_vld_out);
    sensitive << ( out_V_data_V_1_state );

    SC_METHOD(thread_out_V_dest_V_1_ack_in);
    sensitive << ( out_V_dest_V_1_state );

    SC_METHOD(thread_out_V_dest_V_1_ack_out);
    sensitive << ( out_r_TREADY );

    SC_METHOD(thread_out_V_dest_V_1_data_in);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( out_V_id_V_1_ack_in );
    sensitive << ( out_V_dest_V_1_ack_in );
    sensitive << ( out_V_user_V_1_ack_in );
    sensitive << ( out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_2_reg_555 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_predicate_op50_write_state2 );
    sensitive << ( tmp_dest_V_1_fu_437_p1 );
    sensitive << ( tmp_dest_V_3_reg_550 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_V_dest_V_1_data_out);
    sensitive << ( out_V_dest_V_1_payload_A );
    sensitive << ( out_V_dest_V_1_payload_B );
    sensitive << ( out_V_dest_V_1_sel );

    SC_METHOD(thread_out_V_dest_V_1_load_A);
    sensitive << ( out_V_dest_V_1_sel_wr );
    sensitive << ( out_V_dest_V_1_state_cmp_full );

    SC_METHOD(thread_out_V_dest_V_1_load_B);
    sensitive << ( out_V_dest_V_1_sel_wr );
    sensitive << ( out_V_dest_V_1_state_cmp_full );

    SC_METHOD(thread_out_V_dest_V_1_sel);
    sensitive << ( out_V_dest_V_1_sel_rd );

    SC_METHOD(thread_out_V_dest_V_1_state_cmp_full);
    sensitive << ( out_V_dest_V_1_state );

    SC_METHOD(thread_out_V_dest_V_1_vld_in);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( out_V_id_V_1_ack_in );
    sensitive << ( out_V_dest_V_1_ack_in );
    sensitive << ( out_V_user_V_1_ack_in );
    sensitive << ( out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_2_reg_555 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_predicate_op50_write_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_V_dest_V_1_vld_out);
    sensitive << ( out_V_dest_V_1_state );

    SC_METHOD(thread_out_V_id_V_1_ack_in);
    sensitive << ( out_V_id_V_1_state );

    SC_METHOD(thread_out_V_id_V_1_ack_out);
    sensitive << ( out_r_TREADY );

    SC_METHOD(thread_out_V_id_V_1_data_out);
    sensitive << ( out_V_id_V_1_sel );

    SC_METHOD(thread_out_V_id_V_1_sel);
    sensitive << ( out_V_id_V_1_sel_rd );

    SC_METHOD(thread_out_V_id_V_1_vld_in);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( out_V_id_V_1_ack_in );
    sensitive << ( out_V_dest_V_1_ack_in );
    sensitive << ( out_V_user_V_1_ack_in );
    sensitive << ( out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_2_reg_555 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_predicate_op50_write_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_V_id_V_1_vld_out);
    sensitive << ( out_V_id_V_1_state );

    SC_METHOD(thread_out_V_last_V_1_ack_in);
    sensitive << ( out_V_last_V_1_state );

    SC_METHOD(thread_out_V_last_V_1_ack_out);
    sensitive << ( out_r_TREADY );

    SC_METHOD(thread_out_V_last_V_1_data_in);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( out_V_id_V_1_ack_in );
    sensitive << ( out_V_dest_V_1_ack_in );
    sensitive << ( out_V_user_V_1_ack_in );
    sensitive << ( out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_2_reg_555 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_predicate_op50_write_state2 );
    sensitive << ( temp_last_V_reg_564 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_V_last_V_1_data_out);
    sensitive << ( out_V_last_V_1_payload_A );
    sensitive << ( out_V_last_V_1_payload_B );
    sensitive << ( out_V_last_V_1_sel );

    SC_METHOD(thread_out_V_last_V_1_load_A);
    sensitive << ( out_V_last_V_1_sel_wr );
    sensitive << ( out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_out_V_last_V_1_load_B);
    sensitive << ( out_V_last_V_1_sel_wr );
    sensitive << ( out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_out_V_last_V_1_sel);
    sensitive << ( out_V_last_V_1_sel_rd );

    SC_METHOD(thread_out_V_last_V_1_state_cmp_full);
    sensitive << ( out_V_last_V_1_state );

    SC_METHOD(thread_out_V_last_V_1_vld_in);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( out_V_id_V_1_ack_in );
    sensitive << ( out_V_dest_V_1_ack_in );
    sensitive << ( out_V_user_V_1_ack_in );
    sensitive << ( out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_2_reg_555 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_predicate_op50_write_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_V_last_V_1_vld_out);
    sensitive << ( out_V_last_V_1_state );

    SC_METHOD(thread_out_V_user_V_1_ack_in);
    sensitive << ( out_V_user_V_1_state );

    SC_METHOD(thread_out_V_user_V_1_ack_out);
    sensitive << ( out_r_TREADY );

    SC_METHOD(thread_out_V_user_V_1_data_in);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( out_V_id_V_1_ack_in );
    sensitive << ( out_V_dest_V_1_ack_in );
    sensitive << ( out_V_user_V_1_ack_in );
    sensitive << ( out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_2_reg_555 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_predicate_op50_write_state2 );
    sensitive << ( tmp_user_V_10_cast_reg_527 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_V_user_V_1_data_out);
    sensitive << ( out_V_user_V_1_payload_A );
    sensitive << ( out_V_user_V_1_payload_B );
    sensitive << ( out_V_user_V_1_sel );

    SC_METHOD(thread_out_V_user_V_1_load_A);
    sensitive << ( out_V_user_V_1_sel_wr );
    sensitive << ( out_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_out_V_user_V_1_load_B);
    sensitive << ( out_V_user_V_1_sel_wr );
    sensitive << ( out_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_out_V_user_V_1_sel);
    sensitive << ( out_V_user_V_1_sel_rd );

    SC_METHOD(thread_out_V_user_V_1_state_cmp_full);
    sensitive << ( out_V_user_V_1_state );

    SC_METHOD(thread_out_V_user_V_1_vld_in);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( out_V_id_V_1_ack_in );
    sensitive << ( out_V_dest_V_1_ack_in );
    sensitive << ( out_V_user_V_1_ack_in );
    sensitive << ( out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_2_reg_555 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_predicate_op50_write_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_V_user_V_1_vld_out);
    sensitive << ( out_V_user_V_1_state );

    SC_METHOD(thread_out_r_TDATA);
    sensitive << ( out_V_data_V_1_data_out );

    SC_METHOD(thread_out_r_TDATA_blk_n);
    sensitive << ( out_V_data_V_1_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_2_reg_555 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_341_p2 );
    sensitive << ( tmp_mid2_fu_379_p3 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_mid2_reg_523 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_2_reg_555_pp0_iter1_reg );

    SC_METHOD(thread_out_r_TDEST);
    sensitive << ( out_V_dest_V_1_data_out );

    SC_METHOD(thread_out_r_TID);
    sensitive << ( out_V_id_V_1_data_out );

    SC_METHOD(thread_out_r_TLAST);
    sensitive << ( out_V_last_V_1_data_out );

    SC_METHOD(thread_out_r_TUSER);
    sensitive << ( out_V_user_V_1_data_out );

    SC_METHOD(thread_out_r_TVALID);
    sensitive << ( out_V_last_V_1_state );

    SC_METHOD(thread_p_shl_fu_317_p1);
    sensitive << ( tmp_10_fu_309_p3 );

    SC_METHOD(thread_phitmp1_fu_423_p2);
    sensitive << ( tmp_25_cast_fu_419_p1 );

    SC_METHOD(thread_phitmp_fu_450_p2);
    sensitive << ( tmp_28_cast_fu_447_p1 );

    SC_METHOD(thread_temp_data_V_fu_301_p1);
    sensitive << ( N_fu_297_p1 );

    SC_METHOD(thread_temp_dest_V_1_fu_456_p3);
    sensitive << ( grp_fu_292_p2 );
    sensitive << ( phitmp_fu_450_p2 );

    SC_METHOD(thread_temp_dest_V_fu_429_p3);
    sensitive << ( grp_fu_292_p2 );
    sensitive << ( phitmp1_fu_423_p2 );

    SC_METHOD(thread_temp_last_V_fu_480_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_reg_259 );
    sensitive << ( tmp_2_fu_468_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_tmp_10_fu_309_p3);
    sensitive << ( N_fu_297_p1 );

    SC_METHOD(thread_tmp_11_fu_352_p2);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( out_V_id_V_1_ack_in );
    sensitive << ( out_V_dest_V_1_ack_in );
    sensitive << ( out_V_user_V_1_ack_in );
    sensitive << ( out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_341_p2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( iter_reg_248 );

    SC_METHOD(thread_tmp_25_cast_fu_419_p1);
    sensitive << ( iter_mid2_fu_358_p3 );

    SC_METHOD(thread_tmp_28_cast_fu_447_p1);
    sensitive << ( iter_mid2_reg_515 );

    SC_METHOD(thread_tmp_2_fu_468_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_reg_259 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_tmp_9_fu_442_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( iter_mid2_reg_515 );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_tmp_dest_V_1_fu_437_p1);
    sensitive << ( temp_dest_V_fu_429_p3 );

    SC_METHOD(thread_tmp_dest_V_3_fu_464_p1);
    sensitive << ( temp_dest_V_1_fu_456_p3 );

    SC_METHOD(thread_tmp_mid1_fu_373_p2);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( out_V_id_V_1_ack_in );
    sensitive << ( out_V_dest_V_1_ack_in );
    sensitive << ( out_V_user_V_1_ack_in );
    sensitive << ( out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_341_p2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( i_s_fu_367_p2 );

    SC_METHOD(thread_tmp_mid2_fu_379_p3);
    sensitive << ( tmp_s_fu_327_p2 );
    sensitive << ( tmp_11_fu_352_p2 );
    sensitive << ( tmp_mid1_fu_373_p2 );

    SC_METHOD(thread_tmp_s_fu_327_p2);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( out_V_id_V_1_ack_in );
    sensitive << ( out_V_dest_V_1_ack_in );
    sensitive << ( out_V_user_V_1_ack_in );
    sensitive << ( out_V_last_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_io );
    sensitive << ( i_reg_237 );

    SC_METHOD(thread_tmp_user_V_10_cast8_fu_403_p1);
    sensitive << ( tmp_user_V_2_fu_395_p3 );

    SC_METHOD(thread_tmp_user_V_10_cast_fu_407_p1);
    sensitive << ( tmp_user_V_10_cast8_fu_403_p1 );

    SC_METHOD(thread_tmp_user_V_2_fu_395_p3);
    sensitive << ( tmp_11_fu_352_p2 );
    sensitive << ( tmp_user_V_9_mid1_fu_387_p3 );
    sensitive << ( tmp_user_V_fu_333_p3 );

    SC_METHOD(thread_tmp_user_V_9_mid1_fu_387_p3);
    sensitive << ( tmp_mid1_fu_373_p2 );

    SC_METHOD(thread_tmp_user_V_fu_333_p3);
    sensitive << ( tmp_s_fu_327_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( out_V_id_V_1_ack_in );
    sensitive << ( out_V_dest_V_1_ack_in );
    sensitive << ( out_V_user_V_1_ack_in );
    sensitive << ( out_V_last_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_flatten_fu_341_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( in_V_id_V0_status );
    sensitive << ( ap_block_state2_io );
    sensitive << ( ap_block_state3_io );
    sensitive << ( tmp_2_fu_468_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    SC_THREAD(thread_ap_var_for_const0);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00001";
    out_V_data_V_1_sel_rd = SC_LOGIC_0;
    out_V_data_V_1_sel_wr = SC_LOGIC_0;
    out_V_data_V_1_state = "00";
    out_V_id_V_1_sel_rd = SC_LOGIC_0;
    out_V_id_V_1_state = "00";
    out_V_dest_V_1_sel_rd = SC_LOGIC_0;
    out_V_dest_V_1_sel_wr = SC_LOGIC_0;
    out_V_dest_V_1_state = "00";
    out_V_user_V_1_sel_rd = SC_LOGIC_0;
    out_V_user_V_1_sel_wr = SC_LOGIC_0;
    out_V_user_V_1_state = "00";
    out_V_last_V_1_sel_rd = SC_LOGIC_0;
    out_V_last_V_1_sel_wr = SC_LOGIC_0;
    out_V_last_V_1_state = "00";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "LayernormBcast_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_V_data_V_dout, "(port)in_V_data_V_dout");
    sc_trace(mVcdFile, in_V_data_V_empty_n, "(port)in_V_data_V_empty_n");
    sc_trace(mVcdFile, in_V_data_V_read, "(port)in_V_data_V_read");
    sc_trace(mVcdFile, in_V_id_V_dout, "(port)in_V_id_V_dout");
    sc_trace(mVcdFile, in_V_id_V_empty_n, "(port)in_V_id_V_empty_n");
    sc_trace(mVcdFile, in_V_id_V_read, "(port)in_V_id_V_read");
    sc_trace(mVcdFile, in_V_dest_V_dout, "(port)in_V_dest_V_dout");
    sc_trace(mVcdFile, in_V_dest_V_empty_n, "(port)in_V_dest_V_empty_n");
    sc_trace(mVcdFile, in_V_dest_V_read, "(port)in_V_dest_V_read");
    sc_trace(mVcdFile, in_V_user_V_dout, "(port)in_V_user_V_dout");
    sc_trace(mVcdFile, in_V_user_V_empty_n, "(port)in_V_user_V_empty_n");
    sc_trace(mVcdFile, in_V_user_V_read, "(port)in_V_user_V_read");
    sc_trace(mVcdFile, in_V_last_V_dout, "(port)in_V_last_V_dout");
    sc_trace(mVcdFile, in_V_last_V_empty_n, "(port)in_V_last_V_empty_n");
    sc_trace(mVcdFile, in_V_last_V_read, "(port)in_V_last_V_read");
    sc_trace(mVcdFile, out_r_TDATA, "(port)out_r_TDATA");
    sc_trace(mVcdFile, out_r_TVALID, "(port)out_r_TVALID");
    sc_trace(mVcdFile, out_r_TREADY, "(port)out_r_TREADY");
    sc_trace(mVcdFile, out_r_TID, "(port)out_r_TID");
    sc_trace(mVcdFile, out_r_TDEST, "(port)out_r_TDEST");
    sc_trace(mVcdFile, out_r_TUSER, "(port)out_r_TUSER");
    sc_trace(mVcdFile, out_r_TLAST, "(port)out_r_TLAST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, out_V_data_V_1_data_in, "out_V_data_V_1_data_in");
    sc_trace(mVcdFile, out_V_data_V_1_data_out, "out_V_data_V_1_data_out");
    sc_trace(mVcdFile, out_V_data_V_1_vld_in, "out_V_data_V_1_vld_in");
    sc_trace(mVcdFile, out_V_data_V_1_vld_out, "out_V_data_V_1_vld_out");
    sc_trace(mVcdFile, out_V_data_V_1_ack_in, "out_V_data_V_1_ack_in");
    sc_trace(mVcdFile, out_V_data_V_1_ack_out, "out_V_data_V_1_ack_out");
    sc_trace(mVcdFile, out_V_data_V_1_payload_A, "out_V_data_V_1_payload_A");
    sc_trace(mVcdFile, out_V_data_V_1_payload_B, "out_V_data_V_1_payload_B");
    sc_trace(mVcdFile, out_V_data_V_1_sel_rd, "out_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, out_V_data_V_1_sel_wr, "out_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, out_V_data_V_1_sel, "out_V_data_V_1_sel");
    sc_trace(mVcdFile, out_V_data_V_1_load_A, "out_V_data_V_1_load_A");
    sc_trace(mVcdFile, out_V_data_V_1_load_B, "out_V_data_V_1_load_B");
    sc_trace(mVcdFile, out_V_data_V_1_state, "out_V_data_V_1_state");
    sc_trace(mVcdFile, out_V_data_V_1_state_cmp_full, "out_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, out_V_id_V_1_data_out, "out_V_id_V_1_data_out");
    sc_trace(mVcdFile, out_V_id_V_1_vld_in, "out_V_id_V_1_vld_in");
    sc_trace(mVcdFile, out_V_id_V_1_vld_out, "out_V_id_V_1_vld_out");
    sc_trace(mVcdFile, out_V_id_V_1_ack_in, "out_V_id_V_1_ack_in");
    sc_trace(mVcdFile, out_V_id_V_1_ack_out, "out_V_id_V_1_ack_out");
    sc_trace(mVcdFile, out_V_id_V_1_sel_rd, "out_V_id_V_1_sel_rd");
    sc_trace(mVcdFile, out_V_id_V_1_sel, "out_V_id_V_1_sel");
    sc_trace(mVcdFile, out_V_id_V_1_state, "out_V_id_V_1_state");
    sc_trace(mVcdFile, out_V_dest_V_1_data_in, "out_V_dest_V_1_data_in");
    sc_trace(mVcdFile, out_V_dest_V_1_data_out, "out_V_dest_V_1_data_out");
    sc_trace(mVcdFile, out_V_dest_V_1_vld_in, "out_V_dest_V_1_vld_in");
    sc_trace(mVcdFile, out_V_dest_V_1_vld_out, "out_V_dest_V_1_vld_out");
    sc_trace(mVcdFile, out_V_dest_V_1_ack_in, "out_V_dest_V_1_ack_in");
    sc_trace(mVcdFile, out_V_dest_V_1_ack_out, "out_V_dest_V_1_ack_out");
    sc_trace(mVcdFile, out_V_dest_V_1_payload_A, "out_V_dest_V_1_payload_A");
    sc_trace(mVcdFile, out_V_dest_V_1_payload_B, "out_V_dest_V_1_payload_B");
    sc_trace(mVcdFile, out_V_dest_V_1_sel_rd, "out_V_dest_V_1_sel_rd");
    sc_trace(mVcdFile, out_V_dest_V_1_sel_wr, "out_V_dest_V_1_sel_wr");
    sc_trace(mVcdFile, out_V_dest_V_1_sel, "out_V_dest_V_1_sel");
    sc_trace(mVcdFile, out_V_dest_V_1_load_A, "out_V_dest_V_1_load_A");
    sc_trace(mVcdFile, out_V_dest_V_1_load_B, "out_V_dest_V_1_load_B");
    sc_trace(mVcdFile, out_V_dest_V_1_state, "out_V_dest_V_1_state");
    sc_trace(mVcdFile, out_V_dest_V_1_state_cmp_full, "out_V_dest_V_1_state_cmp_full");
    sc_trace(mVcdFile, out_V_user_V_1_data_in, "out_V_user_V_1_data_in");
    sc_trace(mVcdFile, out_V_user_V_1_data_out, "out_V_user_V_1_data_out");
    sc_trace(mVcdFile, out_V_user_V_1_vld_in, "out_V_user_V_1_vld_in");
    sc_trace(mVcdFile, out_V_user_V_1_vld_out, "out_V_user_V_1_vld_out");
    sc_trace(mVcdFile, out_V_user_V_1_ack_in, "out_V_user_V_1_ack_in");
    sc_trace(mVcdFile, out_V_user_V_1_ack_out, "out_V_user_V_1_ack_out");
    sc_trace(mVcdFile, out_V_user_V_1_payload_A, "out_V_user_V_1_payload_A");
    sc_trace(mVcdFile, out_V_user_V_1_payload_B, "out_V_user_V_1_payload_B");
    sc_trace(mVcdFile, out_V_user_V_1_sel_rd, "out_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, out_V_user_V_1_sel_wr, "out_V_user_V_1_sel_wr");
    sc_trace(mVcdFile, out_V_user_V_1_sel, "out_V_user_V_1_sel");
    sc_trace(mVcdFile, out_V_user_V_1_load_A, "out_V_user_V_1_load_A");
    sc_trace(mVcdFile, out_V_user_V_1_load_B, "out_V_user_V_1_load_B");
    sc_trace(mVcdFile, out_V_user_V_1_state, "out_V_user_V_1_state");
    sc_trace(mVcdFile, out_V_user_V_1_state_cmp_full, "out_V_user_V_1_state_cmp_full");
    sc_trace(mVcdFile, out_V_last_V_1_data_in, "out_V_last_V_1_data_in");
    sc_trace(mVcdFile, out_V_last_V_1_data_out, "out_V_last_V_1_data_out");
    sc_trace(mVcdFile, out_V_last_V_1_vld_in, "out_V_last_V_1_vld_in");
    sc_trace(mVcdFile, out_V_last_V_1_vld_out, "out_V_last_V_1_vld_out");
    sc_trace(mVcdFile, out_V_last_V_1_ack_in, "out_V_last_V_1_ack_in");
    sc_trace(mVcdFile, out_V_last_V_1_ack_out, "out_V_last_V_1_ack_out");
    sc_trace(mVcdFile, out_V_last_V_1_payload_A, "out_V_last_V_1_payload_A");
    sc_trace(mVcdFile, out_V_last_V_1_payload_B, "out_V_last_V_1_payload_B");
    sc_trace(mVcdFile, out_V_last_V_1_sel_rd, "out_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, out_V_last_V_1_sel_wr, "out_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, out_V_last_V_1_sel, "out_V_last_V_1_sel");
    sc_trace(mVcdFile, out_V_last_V_1_load_A, "out_V_last_V_1_load_A");
    sc_trace(mVcdFile, out_V_last_V_1_load_B, "out_V_last_V_1_load_B");
    sc_trace(mVcdFile, out_V_last_V_1_state, "out_V_last_V_1_state");
    sc_trace(mVcdFile, out_V_last_V_1_state_cmp_full, "out_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, in_V_data_V_blk_n, "in_V_data_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_2_reg_555, "tmp_2_reg_555");
    sc_trace(mVcdFile, tmp_9_reg_542, "tmp_9_reg_542");
    sc_trace(mVcdFile, in_V_id_V_blk_n, "in_V_id_V_blk_n");
    sc_trace(mVcdFile, in_V_dest_V_blk_n, "in_V_dest_V_blk_n");
    sc_trace(mVcdFile, in_V_user_V_blk_n, "in_V_user_V_blk_n");
    sc_trace(mVcdFile, in_V_last_V_blk_n, "in_V_last_V_blk_n");
    sc_trace(mVcdFile, out_r_TDATA_blk_n, "out_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond_flatten_fu_341_p2, "exitcond_flatten_fu_341_p2");
    sc_trace(mVcdFile, tmp_mid2_fu_379_p3, "tmp_mid2_fu_379_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_mid2_reg_523, "tmp_mid2_reg_523");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, tmp_2_reg_555_pp0_iter1_reg, "tmp_2_reg_555_pp0_iter1_reg");
    sc_trace(mVcdFile, j_reg_259, "j_reg_259");
    sc_trace(mVcdFile, temp_data_V_fu_301_p1, "temp_data_V_fu_301_p1");
    sc_trace(mVcdFile, temp_data_V_reg_497, "temp_data_V_reg_497");
    sc_trace(mVcdFile, in_V_id_V0_status, "in_V_id_V0_status");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, bound_fu_321_p2, "bound_fu_321_p2");
    sc_trace(mVcdFile, bound_reg_502, "bound_reg_502");
    sc_trace(mVcdFile, indvar_flatten_next_fu_346_p2, "indvar_flatten_next_fu_346_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_510, "indvar_flatten_next_reg_510");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, ap_predicate_op50_write_state2, "ap_predicate_op50_write_state2");
    sc_trace(mVcdFile, ap_block_state2_io, "ap_block_state2_io");
    sc_trace(mVcdFile, iter_mid2_fu_358_p3, "iter_mid2_fu_358_p3");
    sc_trace(mVcdFile, iter_mid2_reg_515, "iter_mid2_reg_515");
    sc_trace(mVcdFile, tmp_user_V_10_cast_fu_407_p1, "tmp_user_V_10_cast_fu_407_p1");
    sc_trace(mVcdFile, tmp_user_V_10_cast_reg_527, "tmp_user_V_10_cast_reg_527");
    sc_trace(mVcdFile, i_mid2_fu_411_p3, "i_mid2_fu_411_p3");
    sc_trace(mVcdFile, i_mid2_reg_532, "i_mid2_reg_532");
    sc_trace(mVcdFile, tmp_dest_V_1_fu_437_p1, "tmp_dest_V_1_fu_437_p1");
    sc_trace(mVcdFile, tmp_9_fu_442_p2, "tmp_9_fu_442_p2");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, grp_fu_292_p2, "grp_fu_292_p2");
    sc_trace(mVcdFile, tmp_1_reg_546, "tmp_1_reg_546");
    sc_trace(mVcdFile, tmp_dest_V_3_fu_464_p1, "tmp_dest_V_3_fu_464_p1");
    sc_trace(mVcdFile, tmp_dest_V_3_reg_550, "tmp_dest_V_3_reg_550");
    sc_trace(mVcdFile, tmp_2_fu_468_p2, "tmp_2_fu_468_p2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter0, "ap_block_state4_pp0_stage0_iter0");
    sc_trace(mVcdFile, fifo_V_V_dout, "fifo_V_V_dout");
    sc_trace(mVcdFile, fifo_V_V_empty_n, "fifo_V_V_empty_n");
    sc_trace(mVcdFile, fifo_V_V_read, "fifo_V_V_read");
    sc_trace(mVcdFile, ap_predicate_op68_read_state5, "ap_predicate_op68_read_state5");
    sc_trace(mVcdFile, fifo_V_V_din, "fifo_V_V_din");
    sc_trace(mVcdFile, fifo_V_V_full_n, "fifo_V_V_full_n");
    sc_trace(mVcdFile, fifo_V_V_write, "fifo_V_V_write");
    sc_trace(mVcdFile, ap_predicate_op70_write_state5, "ap_predicate_op70_write_state5");
    sc_trace(mVcdFile, ap_predicate_op72_read_state5, "ap_predicate_op72_read_state5");
    sc_trace(mVcdFile, ap_predicate_op74_write_state5, "ap_predicate_op74_write_state5");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter1, "ap_block_state5_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state5_io, "ap_block_state5_io");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter2, "ap_block_state6_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state6_io, "ap_block_state6_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, j_2_fu_474_p2, "j_2_fu_474_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, temp_last_V_fu_480_p2, "temp_last_V_fu_480_p2");
    sc_trace(mVcdFile, temp_last_V_reg_564, "temp_last_V_reg_564");
    sc_trace(mVcdFile, iter_1_fu_486_p2, "iter_1_fu_486_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state4, "ap_condition_pp0_exit_iter0_state4");
    sc_trace(mVcdFile, indvar_flatten_reg_226, "indvar_flatten_reg_226");
    sc_trace(mVcdFile, i_reg_237, "i_reg_237");
    sc_trace(mVcdFile, iter_reg_248, "iter_reg_248");
    sc_trace(mVcdFile, ap_phi_mux_tmp_data_V_7_phi_fu_274_p6, "ap_phi_mux_tmp_data_V_7_phi_fu_274_p6");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_tmp_data_V_7_reg_270, "ap_phi_reg_pp0_iter1_tmp_data_V_7_reg_270");
    sc_trace(mVcdFile, in_V_id_V0_update, "in_V_id_V0_update");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, grp_fu_292_p0, "grp_fu_292_p0");
    sc_trace(mVcdFile, N_fu_297_p1, "N_fu_297_p1");
    sc_trace(mVcdFile, tmp_10_fu_309_p3, "tmp_10_fu_309_p3");
    sc_trace(mVcdFile, cast_fu_305_p1, "cast_fu_305_p1");
    sc_trace(mVcdFile, p_shl_fu_317_p1, "p_shl_fu_317_p1");
    sc_trace(mVcdFile, tmp_s_fu_327_p2, "tmp_s_fu_327_p2");
    sc_trace(mVcdFile, tmp_11_fu_352_p2, "tmp_11_fu_352_p2");
    sc_trace(mVcdFile, i_s_fu_367_p2, "i_s_fu_367_p2");
    sc_trace(mVcdFile, tmp_mid1_fu_373_p2, "tmp_mid1_fu_373_p2");
    sc_trace(mVcdFile, tmp_user_V_9_mid1_fu_387_p3, "tmp_user_V_9_mid1_fu_387_p3");
    sc_trace(mVcdFile, tmp_user_V_fu_333_p3, "tmp_user_V_fu_333_p3");
    sc_trace(mVcdFile, tmp_user_V_2_fu_395_p3, "tmp_user_V_2_fu_395_p3");
    sc_trace(mVcdFile, tmp_user_V_10_cast8_fu_403_p1, "tmp_user_V_10_cast8_fu_403_p1");
    sc_trace(mVcdFile, tmp_25_cast_fu_419_p1, "tmp_25_cast_fu_419_p1");
    sc_trace(mVcdFile, phitmp1_fu_423_p2, "phitmp1_fu_423_p2");
    sc_trace(mVcdFile, temp_dest_V_fu_429_p3, "temp_dest_V_fu_429_p3");
    sc_trace(mVcdFile, tmp_28_cast_fu_447_p1, "tmp_28_cast_fu_447_p1");
    sc_trace(mVcdFile, phitmp_fu_450_p2, "phitmp_fu_450_p2");
    sc_trace(mVcdFile, temp_dest_V_1_fu_456_p3, "temp_dest_V_1_fu_456_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_575, "ap_condition_575");
#endif

    }
}

LayernormBcast::~LayernormBcast() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete fifo_V_V_fifo_U;
}

void LayernormBcast::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void LayernormBcast::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_341_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state4.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                    esl_seteq<1,1,1>(ap_block_state3_io.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state4.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state4.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                    esl_seteq<1,1,1>(ap_block_state3_io.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_reg_237 = i_mid2_reg_532.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read())))) {
        i_reg_237 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        indvar_flatten_reg_226 = indvar_flatten_next_reg_510.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read())))) {
        indvar_flatten_reg_226 = ap_const_lv35_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        iter_reg_248 = iter_1_fu_486_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read())))) {
        iter_reg_248 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_468_p2.read()))) {
        j_reg_259 = j_2_fu_474_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_block_state3_io.read(), ap_const_boolean_0))) {
        j_reg_259 = ap_const_lv4_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_vld_out.read()))) {
            out_V_data_V_1_sel_rd =  (sc_logic) (~out_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_ack_in.read()))) {
            out_V_data_V_1_sel_wr =  (sc_logic) (~out_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(out_V_data_V_1_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(out_V_data_V_1_state.read(), ap_const_lv2_2)))) {
            out_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(out_V_data_V_1_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(out_V_data_V_1_state.read(), ap_const_lv2_1)))) {
            out_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(out_V_data_V_1_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(out_V_data_V_1_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(out_V_data_V_1_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_ack_out.read()))))) {
            out_V_data_V_1_state = ap_const_lv2_3;
        } else {
            out_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_vld_out.read()))) {
            out_V_dest_V_1_sel_rd =  (sc_logic) (~out_V_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_dest_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_ack_in.read()))) {
            out_V_dest_V_1_sel_wr =  (sc_logic) (~out_V_dest_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_V_dest_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_V_dest_V_1_state.read())))) {
            out_V_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_dest_V_1_state.read())))) {
            out_V_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_V_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_ack_out.read()))))) {
            out_V_dest_V_1_state = ap_const_lv2_3;
        } else {
            out_V_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_id_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_id_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_id_V_1_vld_out.read()))) {
            out_V_id_V_1_sel_rd =  (sc_logic) (~out_V_id_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_id_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_V_id_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_V_id_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_V_id_V_1_state.read())))) {
            out_V_id_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_id_V_1_state.read())))) {
            out_V_id_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_id_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_V_id_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_V_id_V_1_ack_out.read()))))) {
            out_V_id_V_1_state = ap_const_lv2_3;
        } else {
            out_V_id_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_vld_out.read()))) {
            out_V_last_V_1_sel_rd =  (sc_logic) (~out_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_ack_in.read()))) {
            out_V_last_V_1_sel_wr =  (sc_logic) (~out_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_V_last_V_1_state.read())))) {
            out_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_last_V_1_state.read())))) {
            out_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_ack_out.read()))))) {
            out_V_last_V_1_state = ap_const_lv2_3;
        } else {
            out_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_user_V_1_vld_out.read()))) {
            out_V_user_V_1_sel_rd =  (sc_logic) (~out_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_user_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_user_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_user_V_1_ack_in.read()))) {
            out_V_user_V_1_sel_wr =  (sc_logic) (~out_V_user_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        out_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_V_user_V_1_state.read())))) {
            out_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_user_V_1_state.read())))) {
            out_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_V_user_V_1_ack_out.read()))))) {
            out_V_user_V_1_state = ap_const_lv2_3;
        } else {
            out_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read())))) {
        bound_reg_502 = bound_fu_321_p2.read();
        temp_data_V_reg_497 = temp_data_V_fu_301_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_341_p2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))) {
        i_mid2_reg_532 = i_mid2_fu_411_p3.read();
        iter_mid2_reg_515 = iter_mid2_fu_358_p3.read();
        tmp_mid2_reg_523 = tmp_mid2_fu_379_p3.read();
        tmp_user_V_10_cast_reg_527 = tmp_user_V_10_cast_fu_407_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))) {
        indvar_flatten_next_reg_510 = indvar_flatten_next_fu_346_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_load_A.read())) {
        out_V_data_V_1_payload_A = out_V_data_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_load_B.read())) {
        out_V_data_V_1_payload_B = out_V_data_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_load_A.read())) {
        out_V_dest_V_1_payload_A = out_V_dest_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_load_B.read())) {
        out_V_dest_V_1_payload_B = out_V_dest_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_load_A.read())) {
        out_V_last_V_1_payload_A = out_V_last_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_load_B.read())) {
        out_V_last_V_1_payload_B = out_V_last_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_user_V_1_load_A.read())) {
        out_V_user_V_1_payload_A = out_V_user_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_user_V_1_load_B.read())) {
        out_V_user_V_1_payload_B = out_V_user_V_1_data_in.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_468_p2.read()))) {
        temp_last_V_reg_564 = temp_last_V_fu_480_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_block_state3_io.read(), ap_const_boolean_0))) {
        tmp_1_reg_546 = grp_fu_292_p2.read();
        tmp_9_reg_542 = tmp_9_fu_442_p2.read();
        tmp_dest_V_3_reg_550 = tmp_dest_V_3_fu_464_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_2_reg_555 = tmp_2_fu_468_p2.read();
        tmp_2_reg_555_pp0_iter1_reg = tmp_2_reg_555.read();
    }
}

void LayernormBcast::thread_N_fu_297_p1() {
    N_fu_297_p1 = in_V_data_V_dout.read().range(32-1, 0);
}

void LayernormBcast::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[3];
}

void LayernormBcast::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void LayernormBcast::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void LayernormBcast::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void LayernormBcast::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[4];
}

void LayernormBcast::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void LayernormBcast::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_logic_0, fifo_V_V_empty_n.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op68_read_state5.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, fifo_V_V_full_n.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op70_write_state5.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_read_state5.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, fifo_V_V_full_n.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op74_write_state5.read()))));
}

void LayernormBcast::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, fifo_V_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op68_read_state5.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, fifo_V_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op70_write_state5.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_read_state5.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, fifo_V_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op74_write_state5.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())));
}

void LayernormBcast::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, fifo_V_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op68_read_state5.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, fifo_V_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op70_write_state5.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_read_state5.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, fifo_V_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op74_write_state5.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())));
}

void LayernormBcast::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read()));
}

void LayernormBcast::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_in.read()));
}

void LayernormBcast::thread_ap_block_state2_io() {
    ap_block_state2_io = (esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_write_state2.read()));
}

void LayernormBcast::thread_ap_block_state3_io() {
    ap_block_state3_io = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_mid2_reg_523.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()));
}

void LayernormBcast::thread_ap_block_state4_pp0_stage0_iter0() {
    ap_block_state4_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void LayernormBcast::thread_ap_block_state5_io() {
    ap_block_state5_io = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()));
}

void LayernormBcast::thread_ap_block_state5_pp0_stage0_iter1() {
    ap_block_state5_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(ap_const_logic_0, fifo_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op68_read_state5.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op70_write_state5.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_read_state5.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op74_write_state5.read())));
}

void LayernormBcast::thread_ap_block_state6_io() {
    ap_block_state6_io = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()));
}

void LayernormBcast::thread_ap_block_state6_pp0_stage0_iter2() {
    ap_block_state6_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void LayernormBcast::thread_ap_condition_575() {
    ap_condition_575 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0));
}

void LayernormBcast::thread_ap_condition_pp0_exit_iter0_state4() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_468_p2.read())) {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_0;
    }
}

void LayernormBcast::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_341_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void LayernormBcast::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void LayernormBcast::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void LayernormBcast::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void LayernormBcast::thread_ap_phi_mux_tmp_data_V_7_phi_fu_274_p6() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_542.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_546.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_542.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_546.read())))) {
        ap_phi_mux_tmp_data_V_7_phi_fu_274_p6 = fifo_V_V_dout.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_542.read()))) {
        ap_phi_mux_tmp_data_V_7_phi_fu_274_p6 = in_V_data_V_dout.read();
    } else {
        ap_phi_mux_tmp_data_V_7_phi_fu_274_p6 = ap_phi_reg_pp0_iter1_tmp_data_V_7_reg_270.read();
    }
}

void LayernormBcast::thread_ap_phi_reg_pp0_iter1_tmp_data_V_7_reg_270() {
    ap_phi_reg_pp0_iter1_tmp_data_V_7_reg_270 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
}

void LayernormBcast::thread_ap_predicate_op50_write_state2() {
    ap_predicate_op50_write_state2 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_341_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_mid2_fu_379_p3.read()));
}

void LayernormBcast::thread_ap_predicate_op68_read_state5() {
    ap_predicate_op68_read_state5 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_542.read()));
}

void LayernormBcast::thread_ap_predicate_op70_write_state5() {
    ap_predicate_op70_write_state5 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_542.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_546.read()));
}

void LayernormBcast::thread_ap_predicate_op72_read_state5() {
    ap_predicate_op72_read_state5 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_542.read()));
}

void LayernormBcast::thread_ap_predicate_op74_write_state5() {
    ap_predicate_op74_write_state5 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_542.read()));
}

void LayernormBcast::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_341_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void LayernormBcast::thread_bound_fu_321_p2() {
    bound_fu_321_p2 = (!cast_fu_305_p1.read().is_01() || !p_shl_fu_317_p1.read().is_01())? sc_lv<35>(): (sc_biguint<35>(cast_fu_305_p1.read()) + sc_biguint<35>(p_shl_fu_317_p1.read()));
}

void LayernormBcast::thread_cast_fu_305_p1() {
    cast_fu_305_p1 = esl_zext<35,32>(N_fu_297_p1.read());
}

void LayernormBcast::thread_exitcond_flatten_fu_341_p2() {
    exitcond_flatten_fu_341_p2 = (!indvar_flatten_reg_226.read().is_01() || !bound_reg_502.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_226.read() == bound_reg_502.read());
}

void LayernormBcast::thread_fifo_V_V_din() {
    if (esl_seteq<1,1,1>(ap_condition_575.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op74_write_state5.read())) {
            fifo_V_V_din = in_V_data_V_dout.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op70_write_state5.read())) {
            fifo_V_V_din = fifo_V_V_dout.read();
        } else {
            fifo_V_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        fifo_V_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void LayernormBcast::thread_fifo_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op68_read_state5.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        fifo_V_V_read = ap_const_logic_1;
    } else {
        fifo_V_V_read = ap_const_logic_0;
    }
}

void LayernormBcast::thread_fifo_V_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op70_write_state5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op74_write_state5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        fifo_V_V_write = ap_const_logic_1;
    } else {
        fifo_V_V_write = ap_const_logic_0;
    }
}

void LayernormBcast::thread_grp_fu_292_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_292_p0 = iter_mid2_reg_515.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_fu_292_p0 = iter_mid2_fu_358_p3.read();
    } else {
        grp_fu_292_p0 =  (sc_lv<3>) ("XXX");
    }
}

void LayernormBcast::thread_grp_fu_292_p2() {
    grp_fu_292_p2 = (!grp_fu_292_p0.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(grp_fu_292_p0.read() == ap_const_lv3_4);
}

void LayernormBcast::thread_i_mid2_fu_411_p3() {
    i_mid2_fu_411_p3 = (!tmp_11_fu_352_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_11_fu_352_p2.read()[0].to_bool())? i_s_fu_367_p2.read(): i_reg_237.read());
}

void LayernormBcast::thread_i_s_fu_367_p2() {
    i_s_fu_367_p2 = (!i_reg_237.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_reg_237.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void LayernormBcast::thread_in_V_data_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_542.read())))) {
        in_V_data_V_blk_n = in_V_data_V_empty_n.read();
    } else {
        in_V_data_V_blk_n = ap_const_logic_1;
    }
}

void LayernormBcast::thread_in_V_data_V_read() {
    in_V_data_V_read = in_V_id_V0_update.read();
}

void LayernormBcast::thread_in_V_dest_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_542.read())))) {
        in_V_dest_V_blk_n = in_V_dest_V_empty_n.read();
    } else {
        in_V_dest_V_blk_n = ap_const_logic_1;
    }
}

void LayernormBcast::thread_in_V_dest_V_read() {
    in_V_dest_V_read = in_V_id_V0_update.read();
}

void LayernormBcast::thread_in_V_id_V0_status() {
    in_V_id_V0_status = (in_V_data_V_empty_n.read() & in_V_id_V_empty_n.read() & in_V_dest_V_empty_n.read() & in_V_user_V_empty_n.read() & in_V_last_V_empty_n.read());
}

void LayernormBcast::thread_in_V_id_V0_update() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op72_read_state5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        in_V_id_V0_update = ap_const_logic_1;
    } else {
        in_V_id_V0_update = ap_const_logic_0;
    }
}

void LayernormBcast::thread_in_V_id_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_542.read())))) {
        in_V_id_V_blk_n = in_V_id_V_empty_n.read();
    } else {
        in_V_id_V_blk_n = ap_const_logic_1;
    }
}

void LayernormBcast::thread_in_V_id_V_read() {
    in_V_id_V_read = in_V_id_V0_update.read();
}

void LayernormBcast::thread_in_V_last_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_542.read())))) {
        in_V_last_V_blk_n = in_V_last_V_empty_n.read();
    } else {
        in_V_last_V_blk_n = ap_const_logic_1;
    }
}

void LayernormBcast::thread_in_V_last_V_read() {
    in_V_last_V_read = in_V_id_V0_update.read();
}

void LayernormBcast::thread_in_V_user_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_542.read())))) {
        in_V_user_V_blk_n = in_V_user_V_empty_n.read();
    } else {
        in_V_user_V_blk_n = ap_const_logic_1;
    }
}

void LayernormBcast::thread_in_V_user_V_read() {
    in_V_user_V_read = in_V_id_V0_update.read();
}

void LayernormBcast::thread_indvar_flatten_next_fu_346_p2() {
    indvar_flatten_next_fu_346_p2 = (!indvar_flatten_reg_226.read().is_01() || !ap_const_lv35_1.is_01())? sc_lv<35>(): (sc_biguint<35>(indvar_flatten_reg_226.read()) + sc_biguint<35>(ap_const_lv35_1));
}

void LayernormBcast::thread_iter_1_fu_486_p2() {
    iter_1_fu_486_p2 = (!iter_mid2_reg_515.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(iter_mid2_reg_515.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void LayernormBcast::thread_iter_mid2_fu_358_p3() {
    iter_mid2_fu_358_p3 = (!tmp_11_fu_352_p2.read()[0].is_01())? sc_lv<3>(): ((tmp_11_fu_352_p2.read()[0].to_bool())? ap_const_lv3_0: iter_reg_248.read());
}

void LayernormBcast::thread_j_2_fu_474_p2() {
    j_2_fu_474_p2 = (!j_reg_259.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_reg_259.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void LayernormBcast::thread_out_V_data_V_1_ack_in() {
    out_V_data_V_1_ack_in = out_V_data_V_1_state.read()[1];
}

void LayernormBcast::thread_out_V_data_V_1_ack_out() {
    out_V_data_V_1_ack_out = out_r_TREADY.read();
}

void LayernormBcast::thread_out_V_data_V_1_data_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_V_data_V_1_data_in = ap_phi_mux_tmp_data_V_7_phi_fu_274_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_write_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_in.read())))) {
        out_V_data_V_1_data_in = temp_data_V_reg_497.read();
    } else {
        out_V_data_V_1_data_in = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void LayernormBcast::thread_out_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_sel.read())) {
        out_V_data_V_1_data_out = out_V_data_V_1_payload_B.read();
    } else {
        out_V_data_V_1_data_out = out_V_data_V_1_payload_A.read();
    }
}

void LayernormBcast::thread_out_V_data_V_1_load_A() {
    out_V_data_V_1_load_A = (out_V_data_V_1_state_cmp_full.read() & ~out_V_data_V_1_sel_wr.read());
}

void LayernormBcast::thread_out_V_data_V_1_load_B() {
    out_V_data_V_1_load_B = (out_V_data_V_1_sel_wr.read() & out_V_data_V_1_state_cmp_full.read());
}

void LayernormBcast::thread_out_V_data_V_1_sel() {
    out_V_data_V_1_sel = out_V_data_V_1_sel_rd.read();
}

void LayernormBcast::thread_out_V_data_V_1_state_cmp_full() {
    out_V_data_V_1_state_cmp_full =  (sc_logic) ((!out_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void LayernormBcast::thread_out_V_data_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        out_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        out_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void LayernormBcast::thread_out_V_data_V_1_vld_out() {
    out_V_data_V_1_vld_out = out_V_data_V_1_state.read()[0];
}

void LayernormBcast::thread_out_V_dest_V_1_ack_in() {
    out_V_dest_V_1_ack_in = out_V_dest_V_1_state.read()[1];
}

void LayernormBcast::thread_out_V_dest_V_1_ack_out() {
    out_V_dest_V_1_ack_out = out_r_TREADY.read();
}

void LayernormBcast::thread_out_V_dest_V_1_data_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_V_dest_V_1_data_in = tmp_dest_V_3_reg_550.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_write_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_in.read())))) {
        out_V_dest_V_1_data_in = tmp_dest_V_1_fu_437_p1.read();
    } else {
        out_V_dest_V_1_data_in =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void LayernormBcast::thread_out_V_dest_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_sel.read())) {
        out_V_dest_V_1_data_out = out_V_dest_V_1_payload_B.read();
    } else {
        out_V_dest_V_1_data_out = out_V_dest_V_1_payload_A.read();
    }
}

void LayernormBcast::thread_out_V_dest_V_1_load_A() {
    out_V_dest_V_1_load_A = (out_V_dest_V_1_state_cmp_full.read() & ~out_V_dest_V_1_sel_wr.read());
}

void LayernormBcast::thread_out_V_dest_V_1_load_B() {
    out_V_dest_V_1_load_B = (out_V_dest_V_1_sel_wr.read() & out_V_dest_V_1_state_cmp_full.read());
}

void LayernormBcast::thread_out_V_dest_V_1_sel() {
    out_V_dest_V_1_sel = out_V_dest_V_1_sel_rd.read();
}

void LayernormBcast::thread_out_V_dest_V_1_state_cmp_full() {
    out_V_dest_V_1_state_cmp_full =  (sc_logic) ((!out_V_dest_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_V_dest_V_1_state.read() != ap_const_lv2_1))[0];
}

void LayernormBcast::thread_out_V_dest_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        out_V_dest_V_1_vld_in = ap_const_logic_1;
    } else {
        out_V_dest_V_1_vld_in = ap_const_logic_0;
    }
}

void LayernormBcast::thread_out_V_dest_V_1_vld_out() {
    out_V_dest_V_1_vld_out = out_V_dest_V_1_state.read()[0];
}

void LayernormBcast::thread_out_V_id_V_1_ack_in() {
    out_V_id_V_1_ack_in = out_V_id_V_1_state.read()[1];
}

void LayernormBcast::thread_out_V_id_V_1_ack_out() {
    out_V_id_V_1_ack_out = out_r_TREADY.read();
}

void LayernormBcast::thread_out_V_id_V_1_data_out() {
    out_V_id_V_1_data_out = ap_const_lv8_1D;
}

void LayernormBcast::thread_out_V_id_V_1_sel() {
    out_V_id_V_1_sel = out_V_id_V_1_sel_rd.read();
}

void LayernormBcast::thread_out_V_id_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        out_V_id_V_1_vld_in = ap_const_logic_1;
    } else {
        out_V_id_V_1_vld_in = ap_const_logic_0;
    }
}

void LayernormBcast::thread_out_V_id_V_1_vld_out() {
    out_V_id_V_1_vld_out = out_V_id_V_1_state.read()[0];
}

void LayernormBcast::thread_out_V_last_V_1_ack_in() {
    out_V_last_V_1_ack_in = out_V_last_V_1_state.read()[1];
}

void LayernormBcast::thread_out_V_last_V_1_ack_out() {
    out_V_last_V_1_ack_out = out_r_TREADY.read();
}

void LayernormBcast::thread_out_V_last_V_1_data_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_V_last_V_1_data_in = temp_last_V_reg_564.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_write_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_in.read())))) {
        out_V_last_V_1_data_in = ap_const_lv1_0;
    } else {
        out_V_last_V_1_data_in =  (sc_lv<1>) ("X");
    }
}

void LayernormBcast::thread_out_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_sel.read())) {
        out_V_last_V_1_data_out = out_V_last_V_1_payload_B.read();
    } else {
        out_V_last_V_1_data_out = out_V_last_V_1_payload_A.read();
    }
}

void LayernormBcast::thread_out_V_last_V_1_load_A() {
    out_V_last_V_1_load_A = (out_V_last_V_1_state_cmp_full.read() & ~out_V_last_V_1_sel_wr.read());
}

void LayernormBcast::thread_out_V_last_V_1_load_B() {
    out_V_last_V_1_load_B = (out_V_last_V_1_sel_wr.read() & out_V_last_V_1_state_cmp_full.read());
}

void LayernormBcast::thread_out_V_last_V_1_sel() {
    out_V_last_V_1_sel = out_V_last_V_1_sel_rd.read();
}

void LayernormBcast::thread_out_V_last_V_1_state_cmp_full() {
    out_V_last_V_1_state_cmp_full =  (sc_logic) ((!out_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void LayernormBcast::thread_out_V_last_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        out_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        out_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void LayernormBcast::thread_out_V_last_V_1_vld_out() {
    out_V_last_V_1_vld_out = out_V_last_V_1_state.read()[0];
}

void LayernormBcast::thread_out_V_user_V_1_ack_in() {
    out_V_user_V_1_ack_in = out_V_user_V_1_state.read()[1];
}

void LayernormBcast::thread_out_V_user_V_1_ack_out() {
    out_V_user_V_1_ack_out = out_r_TREADY.read();
}

void LayernormBcast::thread_out_V_user_V_1_data_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_V_user_V_1_data_in = tmp_user_V_10_cast_reg_527.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_write_state2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_in.read())))) {
        out_V_user_V_1_data_in = ap_const_lv16_D;
    } else {
        out_V_user_V_1_data_in =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void LayernormBcast::thread_out_V_user_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_user_V_1_sel.read())) {
        out_V_user_V_1_data_out = out_V_user_V_1_payload_B.read();
    } else {
        out_V_user_V_1_data_out = out_V_user_V_1_payload_A.read();
    }
}

void LayernormBcast::thread_out_V_user_V_1_load_A() {
    out_V_user_V_1_load_A = (out_V_user_V_1_state_cmp_full.read() & ~out_V_user_V_1_sel_wr.read());
}

void LayernormBcast::thread_out_V_user_V_1_load_B() {
    out_V_user_V_1_load_B = (out_V_user_V_1_sel_wr.read() & out_V_user_V_1_state_cmp_full.read());
}

void LayernormBcast::thread_out_V_user_V_1_sel() {
    out_V_user_V_1_sel = out_V_user_V_1_sel_rd.read();
}

void LayernormBcast::thread_out_V_user_V_1_state_cmp_full() {
    out_V_user_V_1_state_cmp_full =  (sc_logic) ((!out_V_user_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_V_user_V_1_state.read() != ap_const_lv2_1))[0];
}

void LayernormBcast::thread_out_V_user_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_write_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        out_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        out_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void LayernormBcast::thread_out_V_user_V_1_vld_out() {
    out_V_user_V_1_vld_out = out_V_user_V_1_state.read()[0];
}

void LayernormBcast::thread_out_r_TDATA() {
    out_r_TDATA = out_V_data_V_1_data_out.read();
}

void LayernormBcast::thread_out_r_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_341_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_mid2_fu_379_p3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_mid2_reg_523.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_555_pp0_iter1_reg.read())))) {
        out_r_TDATA_blk_n = out_V_data_V_1_state.read()[1];
    } else {
        out_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void LayernormBcast::thread_out_r_TDEST() {
    out_r_TDEST = out_V_dest_V_1_data_out.read();
}

void LayernormBcast::thread_out_r_TID() {
    out_r_TID = out_V_id_V_1_data_out.read();
}

void LayernormBcast::thread_out_r_TLAST() {
    out_r_TLAST = out_V_last_V_1_data_out.read();
}

void LayernormBcast::thread_out_r_TUSER() {
    out_r_TUSER = out_V_user_V_1_data_out.read();
}

void LayernormBcast::thread_out_r_TVALID() {
    out_r_TVALID = out_V_last_V_1_state.read()[0];
}

void LayernormBcast::thread_p_shl_fu_317_p1() {
    p_shl_fu_317_p1 = esl_zext<35,34>(tmp_10_fu_309_p3.read());
}

void LayernormBcast::thread_phitmp1_fu_423_p2() {
    phitmp1_fu_423_p2 = (!tmp_25_cast_fu_419_p1.read().is_01() || !ap_const_lv6_1E.is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_25_cast_fu_419_p1.read()) + sc_biguint<6>(ap_const_lv6_1E));
}

void LayernormBcast::thread_phitmp_fu_450_p2() {
    phitmp_fu_450_p2 = (!tmp_28_cast_fu_447_p1.read().is_01() || !ap_const_lv6_1E.is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_28_cast_fu_447_p1.read()) + sc_biguint<6>(ap_const_lv6_1E));
}

void LayernormBcast::thread_temp_data_V_fu_301_p1() {
    temp_data_V_fu_301_p1 = esl_zext<512,32>(N_fu_297_p1.read());
}

void LayernormBcast::thread_temp_dest_V_1_fu_456_p3() {
    temp_dest_V_1_fu_456_p3 = (!grp_fu_292_p2.read()[0].is_01())? sc_lv<6>(): ((grp_fu_292_p2.read()[0].to_bool())? ap_const_lv6_26: phitmp_fu_450_p2.read());
}

void LayernormBcast::thread_temp_dest_V_fu_429_p3() {
    temp_dest_V_fu_429_p3 = (!grp_fu_292_p2.read()[0].is_01())? sc_lv<6>(): ((grp_fu_292_p2.read()[0].to_bool())? ap_const_lv6_26: phitmp1_fu_423_p2.read());
}

void LayernormBcast::thread_temp_last_V_fu_480_p2() {
    temp_last_V_fu_480_p2 = (!j_reg_259.read().is_01() || !ap_const_lv4_B.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_259.read() == ap_const_lv4_B);
}

void LayernormBcast::thread_tmp_10_fu_309_p3() {
    tmp_10_fu_309_p3 = esl_concat<32,2>(N_fu_297_p1.read(), ap_const_lv2_0);
}

void LayernormBcast::thread_tmp_11_fu_352_p2() {
    tmp_11_fu_352_p2 = (!iter_reg_248.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(iter_reg_248.read() == ap_const_lv3_5);
}

void LayernormBcast::thread_tmp_25_cast_fu_419_p1() {
    tmp_25_cast_fu_419_p1 = esl_zext<6,3>(iter_mid2_fu_358_p3.read());
}

void LayernormBcast::thread_tmp_28_cast_fu_447_p1() {
    tmp_28_cast_fu_447_p1 = esl_zext<6,3>(iter_mid2_reg_515.read());
}

void LayernormBcast::thread_tmp_2_fu_468_p2() {
    tmp_2_fu_468_p2 = (!j_reg_259.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_259.read() == ap_const_lv4_C);
}

void LayernormBcast::thread_tmp_9_fu_442_p2() {
    tmp_9_fu_442_p2 = (!iter_mid2_reg_515.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(iter_mid2_reg_515.read() == ap_const_lv3_0);
}

void LayernormBcast::thread_tmp_dest_V_1_fu_437_p1() {
    tmp_dest_V_1_fu_437_p1 = esl_zext<8,6>(temp_dest_V_fu_429_p3.read());
}

void LayernormBcast::thread_tmp_dest_V_3_fu_464_p1() {
    tmp_dest_V_3_fu_464_p1 = esl_zext<8,6>(temp_dest_V_1_fu_456_p3.read());
}

void LayernormBcast::thread_tmp_mid1_fu_373_p2() {
    tmp_mid1_fu_373_p2 = (!i_s_fu_367_p2.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(i_s_fu_367_p2.read() == ap_const_lv32_0);
}

void LayernormBcast::thread_tmp_mid2_fu_379_p3() {
    tmp_mid2_fu_379_p3 = (!tmp_11_fu_352_p2.read()[0].is_01())? sc_lv<1>(): ((tmp_11_fu_352_p2.read()[0].to_bool())? tmp_mid1_fu_373_p2.read(): tmp_s_fu_327_p2.read());
}

void LayernormBcast::thread_tmp_s_fu_327_p2() {
    tmp_s_fu_327_p2 = (!i_reg_237.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_237.read() == ap_const_lv32_0);
}

void LayernormBcast::thread_tmp_user_V_10_cast8_fu_403_p1() {
    tmp_user_V_10_cast8_fu_403_p1 = esl_sext<4,3>(tmp_user_V_2_fu_395_p3.read());
}

void LayernormBcast::thread_tmp_user_V_10_cast_fu_407_p1() {
    tmp_user_V_10_cast_fu_407_p1 = esl_zext<16,4>(tmp_user_V_10_cast8_fu_403_p1.read());
}

void LayernormBcast::thread_tmp_user_V_2_fu_395_p3() {
    tmp_user_V_2_fu_395_p3 = (!tmp_11_fu_352_p2.read()[0].is_01())? sc_lv<3>(): ((tmp_11_fu_352_p2.read()[0].to_bool())? tmp_user_V_9_mid1_fu_387_p3.read(): tmp_user_V_fu_333_p3.read());
}

void LayernormBcast::thread_tmp_user_V_9_mid1_fu_387_p3() {
    tmp_user_V_9_mid1_fu_387_p3 = (!tmp_mid1_fu_373_p2.read()[0].is_01())? sc_lv<3>(): ((tmp_mid1_fu_373_p2.read()[0].to_bool())? ap_const_lv3_5: ap_const_lv3_4);
}

void LayernormBcast::thread_tmp_user_V_fu_333_p3() {
    tmp_user_V_fu_333_p3 = (!tmp_s_fu_327_p2.read()[0].is_01())? sc_lv<3>(): ((tmp_s_fu_327_p2.read()[0].to_bool())? ap_const_lv3_5: ap_const_lv3_4);
}

void LayernormBcast::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_341_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_341_p2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state2_io.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_block_state3_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_468_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_468_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

}

