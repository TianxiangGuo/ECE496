// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _layernorm_sqrt_alg_b_HH_
#define _layernorm_sqrt_alg_b_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "kernel_29_udiv_32s_32ns_32_36_seq_1.h"

namespace ap_rtl {

struct layernorm_sqrt_alg_b : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > n_pipe2_V_V_dout;
    sc_in< sc_logic > n_pipe2_V_V_empty_n;
    sc_out< sc_logic > n_pipe2_V_V_read;
    sc_out< sc_lv<32> > n_pipe3_V_V_din;
    sc_in< sc_logic > n_pipe3_V_V_full_n;
    sc_out< sc_logic > n_pipe3_V_V_write;
    sc_in< sc_lv<32> > in_sqrt_V_V_dout;
    sc_in< sc_logic > in_sqrt_V_V_empty_n;
    sc_out< sc_logic > in_sqrt_V_V_read;
    sc_out< sc_lv<32> > in_compute_y_factor_s_0_din;
    sc_in< sc_logic > in_compute_y_factor_s_0_full_n;
    sc_out< sc_logic > in_compute_y_factor_s_0_write;
    sc_signal< sc_lv<32> > ap_var_for_const0;


    // Module declarations
    layernorm_sqrt_alg_b(sc_module_name name);
    SC_HAS_PROCESS(layernorm_sqrt_alg_b);

    ~layernorm_sqrt_alg_b();

    sc_trace_file* mVcdFile;

    kernel_29_udiv_32s_32ns_32_36_seq_1<1,36,32,32,32>* kernel_29_udiv_32s_32ns_32_36_seq_1_U157;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<39> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > n_pipe2_V_V_blk_n;
    sc_signal< sc_logic > n_pipe3_V_V_blk_n;
    sc_signal< sc_logic > in_sqrt_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond_i_fu_188_p2;
    sc_signal< sc_logic > in_compute_y_factor_s_0_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state39;
    sc_signal< sc_lv<32> > tmp_V_reg_331;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > i_fu_193_p2;
    sc_signal< sc_lv<32> > i_reg_339;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<32> > tmp_V_19_reg_344;
    sc_signal< sc_lv<31> > d_V_2_fu_218_p1;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > tmp_i_21_fu_203_p2;
    sc_signal< sc_lv<32> > x_V_2_fu_288_p3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > tmp_1_i_fu_226_p2;
    sc_signal< sc_lv<32> > c_V_1_fu_296_p3;
    sc_signal< sc_lv<31> > d_V_3_fu_314_p1;
    sc_signal< sc_lv<32> > i_i_reg_135;
    sc_signal< sc_lv<31> > p_i_reg_146;
    sc_signal< sc_lv<32> > p_1_i_reg_158;
    sc_signal< sc_lv<32> > p_2_i_reg_167;
    sc_signal< sc_lv<31> > p_082_2_i_reg_178;
    sc_signal< sc_lv<32> > grp_fu_324_p2;
    sc_signal< sc_lv<32> > p_cast_i_fu_199_p1;
    sc_signal< sc_lv<29> > d_V_fu_208_p4;
    sc_signal< sc_lv<33> > lhs_V_fu_232_p1;
    sc_signal< sc_lv<33> > rhs_V_fu_236_p1;
    sc_signal< sc_lv<33> > tmp_2_i_fu_246_p1;
    sc_signal< sc_lv<33> > ret_V_fu_240_p2;
    sc_signal< sc_lv<31> > c_V_2_fu_256_p4;
    sc_signal< sc_lv<32> > p_neg_i_fu_270_p2;
    sc_signal< sc_lv<32> > p_082_2_cast_i_fu_222_p1;
    sc_signal< sc_lv<32> > c_V_4_fu_266_p1;
    sc_signal< sc_lv<1> > tmp_3_i_fu_250_p2;
    sc_signal< sc_lv<32> > x_V_1_fu_276_p2;
    sc_signal< sc_lv<32> > c_V_fu_282_p2;
    sc_signal< sc_lv<29> > d_V_1_fu_304_p4;
    sc_signal< sc_lv<32> > grp_fu_324_p1;
    sc_signal< sc_logic > grp_fu_324_ap_start;
    sc_signal< sc_logic > grp_fu_324_ap_done;
    sc_signal< sc_logic > grp_fu_324_ce;
    sc_signal< sc_lv<39> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<39> ap_ST_fsm_state1;
    static const sc_lv<39> ap_ST_fsm_state2;
    static const sc_lv<39> ap_ST_fsm_state3;
    static const sc_lv<39> ap_ST_fsm_state4;
    static const sc_lv<39> ap_ST_fsm_state5;
    static const sc_lv<39> ap_ST_fsm_state6;
    static const sc_lv<39> ap_ST_fsm_state7;
    static const sc_lv<39> ap_ST_fsm_state8;
    static const sc_lv<39> ap_ST_fsm_state9;
    static const sc_lv<39> ap_ST_fsm_state10;
    static const sc_lv<39> ap_ST_fsm_state11;
    static const sc_lv<39> ap_ST_fsm_state12;
    static const sc_lv<39> ap_ST_fsm_state13;
    static const sc_lv<39> ap_ST_fsm_state14;
    static const sc_lv<39> ap_ST_fsm_state15;
    static const sc_lv<39> ap_ST_fsm_state16;
    static const sc_lv<39> ap_ST_fsm_state17;
    static const sc_lv<39> ap_ST_fsm_state18;
    static const sc_lv<39> ap_ST_fsm_state19;
    static const sc_lv<39> ap_ST_fsm_state20;
    static const sc_lv<39> ap_ST_fsm_state21;
    static const sc_lv<39> ap_ST_fsm_state22;
    static const sc_lv<39> ap_ST_fsm_state23;
    static const sc_lv<39> ap_ST_fsm_state24;
    static const sc_lv<39> ap_ST_fsm_state25;
    static const sc_lv<39> ap_ST_fsm_state26;
    static const sc_lv<39> ap_ST_fsm_state27;
    static const sc_lv<39> ap_ST_fsm_state28;
    static const sc_lv<39> ap_ST_fsm_state29;
    static const sc_lv<39> ap_ST_fsm_state30;
    static const sc_lv<39> ap_ST_fsm_state31;
    static const sc_lv<39> ap_ST_fsm_state32;
    static const sc_lv<39> ap_ST_fsm_state33;
    static const sc_lv<39> ap_ST_fsm_state34;
    static const sc_lv<39> ap_ST_fsm_state35;
    static const sc_lv<39> ap_ST_fsm_state36;
    static const sc_lv<39> ap_ST_fsm_state37;
    static const sc_lv<39> ap_ST_fsm_state38;
    static const sc_lv<39> ap_ST_fsm_state39;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_26;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<31> ap_const_lv31_40000000;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_80000000;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state39();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_state1();
    void thread_ap_block_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_V_1_fu_296_p3();
    void thread_c_V_2_fu_256_p4();
    void thread_c_V_4_fu_266_p1();
    void thread_c_V_fu_282_p2();
    void thread_d_V_1_fu_304_p4();
    void thread_d_V_2_fu_218_p1();
    void thread_d_V_3_fu_314_p1();
    void thread_d_V_fu_208_p4();
    void thread_exitcond_i_fu_188_p2();
    void thread_grp_fu_324_ap_start();
    void thread_grp_fu_324_ce();
    void thread_grp_fu_324_p1();
    void thread_i_fu_193_p2();
    void thread_in_compute_y_factor_s_0_blk_n();
    void thread_in_compute_y_factor_s_0_din();
    void thread_in_compute_y_factor_s_0_write();
    void thread_in_sqrt_V_V_blk_n();
    void thread_in_sqrt_V_V_read();
    void thread_lhs_V_fu_232_p1();
    void thread_n_pipe2_V_V_blk_n();
    void thread_n_pipe2_V_V_read();
    void thread_n_pipe3_V_V_blk_n();
    void thread_n_pipe3_V_V_din();
    void thread_n_pipe3_V_V_write();
    void thread_p_082_2_cast_i_fu_222_p1();
    void thread_p_cast_i_fu_199_p1();
    void thread_p_neg_i_fu_270_p2();
    void thread_ret_V_fu_240_p2();
    void thread_rhs_V_fu_236_p1();
    void thread_tmp_1_i_fu_226_p2();
    void thread_tmp_2_i_fu_246_p1();
    void thread_tmp_3_i_fu_250_p2();
    void thread_tmp_i_21_fu_203_p2();
    void thread_x_V_1_fu_276_p2();
    void thread_x_V_2_fu_288_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
