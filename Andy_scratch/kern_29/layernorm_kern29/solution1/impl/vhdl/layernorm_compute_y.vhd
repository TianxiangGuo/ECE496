-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity layernorm_compute_y is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    n_pipe3_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    n_pipe3_V_V_empty_n : IN STD_LOGIC;
    n_pipe3_V_V_read : OUT STD_LOGIC;
    n_pipe4_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    n_pipe4_V_V_full_n : IN STD_LOGIC;
    n_pipe4_V_V_write : OUT STD_LOGIC;
    mean_pipe2_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    mean_pipe2_V_V_empty_n : IN STD_LOGIC;
    mean_pipe2_V_V_read : OUT STD_LOGIC;
    in_compute_y_factor_s_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_compute_y_factor_s_0_empty_n : IN STD_LOGIC;
    in_compute_y_factor_s_0_read : OUT STD_LOGIC;
    in_compute_y_V_V_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_compute_y_V_V_0_empty_n : IN STD_LOGIC;
    in_compute_y_V_V_0_read : OUT STD_LOGIC;
    in_write_V_V_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_write_V_V_0_full_n : IN STD_LOGIC;
    in_write_V_V_0_write : OUT STD_LOGIC;
    in_compute_y_V_V_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_compute_y_V_V_1_empty_n : IN STD_LOGIC;
    in_compute_y_V_V_1_read : OUT STD_LOGIC;
    in_write_V_V_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_write_V_V_1_full_n : IN STD_LOGIC;
    in_write_V_V_1_write : OUT STD_LOGIC;
    in_compute_y_V_V_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_compute_y_V_V_2_empty_n : IN STD_LOGIC;
    in_compute_y_V_V_2_read : OUT STD_LOGIC;
    in_write_V_V_2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_write_V_V_2_full_n : IN STD_LOGIC;
    in_write_V_V_2_write : OUT STD_LOGIC;
    in_compute_y_V_V_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_compute_y_V_V_3_empty_n : IN STD_LOGIC;
    in_compute_y_V_V_3_read : OUT STD_LOGIC;
    in_write_V_V_3_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_write_V_V_3_full_n : IN STD_LOGIC;
    in_write_V_V_3_write : OUT STD_LOGIC;
    in_compute_y_V_V_4_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_compute_y_V_V_4_empty_n : IN STD_LOGIC;
    in_compute_y_V_V_4_read : OUT STD_LOGIC;
    in_write_V_V_4_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_write_V_V_4_full_n : IN STD_LOGIC;
    in_write_V_V_4_write : OUT STD_LOGIC;
    in_compute_y_V_V_5_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_compute_y_V_V_5_empty_n : IN STD_LOGIC;
    in_compute_y_V_V_5_read : OUT STD_LOGIC;
    in_write_V_V_5_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_write_V_V_5_full_n : IN STD_LOGIC;
    in_write_V_V_5_write : OUT STD_LOGIC;
    in_compute_y_V_V_6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_compute_y_V_V_6_empty_n : IN STD_LOGIC;
    in_compute_y_V_V_6_read : OUT STD_LOGIC;
    in_write_V_V_6_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_write_V_V_6_full_n : IN STD_LOGIC;
    in_write_V_V_6_write : OUT STD_LOGIC;
    in_compute_y_V_V_7_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_compute_y_V_V_7_empty_n : IN STD_LOGIC;
    in_compute_y_V_V_7_read : OUT STD_LOGIC;
    in_write_V_V_7_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_write_V_V_7_full_n : IN STD_LOGIC;
    in_write_V_V_7_write : OUT STD_LOGIC;
    in_compute_y_V_V_8_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_compute_y_V_V_8_empty_n : IN STD_LOGIC;
    in_compute_y_V_V_8_read : OUT STD_LOGIC;
    in_write_V_V_8_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_write_V_V_8_full_n : IN STD_LOGIC;
    in_write_V_V_8_write : OUT STD_LOGIC;
    in_compute_y_V_V_9_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_compute_y_V_V_9_empty_n : IN STD_LOGIC;
    in_compute_y_V_V_9_read : OUT STD_LOGIC;
    in_write_V_V_9_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_write_V_V_9_full_n : IN STD_LOGIC;
    in_write_V_V_9_write : OUT STD_LOGIC;
    in_compute_y_V_V_10_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_compute_y_V_V_10_empty_n : IN STD_LOGIC;
    in_compute_y_V_V_10_read : OUT STD_LOGIC;
    in_write_V_V_10_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_write_V_V_10_full_n : IN STD_LOGIC;
    in_write_V_V_10_write : OUT STD_LOGIC;
    in_compute_y_V_V_11_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_compute_y_V_V_11_empty_n : IN STD_LOGIC;
    in_compute_y_V_V_11_read : OUT STD_LOGIC;
    in_write_V_V_11_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_write_V_V_11_full_n : IN STD_LOGIC;
    in_write_V_V_11_write : OUT STD_LOGIC;
    in_compute_y_V_V_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_compute_y_V_V_12_empty_n : IN STD_LOGIC;
    in_compute_y_V_V_12_read : OUT STD_LOGIC;
    in_write_V_V_12_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_write_V_V_12_full_n : IN STD_LOGIC;
    in_write_V_V_12_write : OUT STD_LOGIC;
    in_compute_y_V_V_13_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_compute_y_V_V_13_empty_n : IN STD_LOGIC;
    in_compute_y_V_V_13_read : OUT STD_LOGIC;
    in_write_V_V_13_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_write_V_V_13_full_n : IN STD_LOGIC;
    in_write_V_V_13_write : OUT STD_LOGIC;
    in_compute_y_V_V_14_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_compute_y_V_V_14_empty_n : IN STD_LOGIC;
    in_compute_y_V_V_14_read : OUT STD_LOGIC;
    in_write_V_V_14_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_write_V_V_14_full_n : IN STD_LOGIC;
    in_write_V_V_14_write : OUT STD_LOGIC;
    in_compute_y_V_V_15_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_compute_y_V_V_15_empty_n : IN STD_LOGIC;
    in_compute_y_V_V_15_read : OUT STD_LOGIC;
    in_write_V_V_15_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_write_V_V_15_full_n : IN STD_LOGIC;
    in_write_V_V_15_write : OUT STD_LOGIC );
end;


architecture behav of layernorm_compute_y is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv38_0 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv38_1 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000000000001";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv10_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000011";
    constant ap_const_lv10_4 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_const_lv10_5 : STD_LOGIC_VECTOR (9 downto 0) := "0000000101";
    constant ap_const_lv10_6 : STD_LOGIC_VECTOR (9 downto 0) := "0000000110";
    constant ap_const_lv10_7 : STD_LOGIC_VECTOR (9 downto 0) := "0000000111";
    constant ap_const_lv10_8 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_const_lv10_9 : STD_LOGIC_VECTOR (9 downto 0) := "0000001001";
    constant ap_const_lv10_A : STD_LOGIC_VECTOR (9 downto 0) := "0000001010";
    constant ap_const_lv10_B : STD_LOGIC_VECTOR (9 downto 0) := "0000001011";
    constant ap_const_lv10_C : STD_LOGIC_VECTOR (9 downto 0) := "0000001100";
    constant ap_const_lv10_D : STD_LOGIC_VECTOR (9 downto 0) := "0000001101";
    constant ap_const_lv10_E : STD_LOGIC_VECTOR (9 downto 0) := "0000001110";
    constant ap_const_lv10_F : STD_LOGIC_VECTOR (9 downto 0) := "0000001111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal bias_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_ce0 : STD_LOGIC;
    signal bias_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal bias_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_ce1 : STD_LOGIC;
    signal bias_q1 : STD_LOGIC_VECTOR (26 downto 0);
    signal bias_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_ce2 : STD_LOGIC;
    signal bias_q2 : STD_LOGIC_VECTOR (26 downto 0);
    signal bias_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_ce3 : STD_LOGIC;
    signal bias_q3 : STD_LOGIC_VECTOR (26 downto 0);
    signal bias_address4 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_ce4 : STD_LOGIC;
    signal bias_q4 : STD_LOGIC_VECTOR (26 downto 0);
    signal bias_address5 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_ce5 : STD_LOGIC;
    signal bias_q5 : STD_LOGIC_VECTOR (26 downto 0);
    signal bias_address6 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_ce6 : STD_LOGIC;
    signal bias_q6 : STD_LOGIC_VECTOR (26 downto 0);
    signal bias_address7 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_ce7 : STD_LOGIC;
    signal bias_q7 : STD_LOGIC_VECTOR (26 downto 0);
    signal bias_address8 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_ce8 : STD_LOGIC;
    signal bias_q8 : STD_LOGIC_VECTOR (26 downto 0);
    signal bias_address9 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_ce9 : STD_LOGIC;
    signal bias_q9 : STD_LOGIC_VECTOR (26 downto 0);
    signal bias_address10 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_ce10 : STD_LOGIC;
    signal bias_q10 : STD_LOGIC_VECTOR (26 downto 0);
    signal bias_address11 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_ce11 : STD_LOGIC;
    signal bias_q11 : STD_LOGIC_VECTOR (26 downto 0);
    signal bias_address12 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_ce12 : STD_LOGIC;
    signal bias_q12 : STD_LOGIC_VECTOR (26 downto 0);
    signal bias_address13 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_ce13 : STD_LOGIC;
    signal bias_q13 : STD_LOGIC_VECTOR (26 downto 0);
    signal bias_address14 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_ce14 : STD_LOGIC;
    signal bias_q14 : STD_LOGIC_VECTOR (26 downto 0);
    signal bias_address15 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_ce15 : STD_LOGIC;
    signal bias_q15 : STD_LOGIC_VECTOR (26 downto 0);
    signal n_pipe3_V_V_blk_n : STD_LOGIC;
    signal n_pipe4_V_V_blk_n : STD_LOGIC;
    signal mean_pipe2_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_16_i_reg_1905 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_compute_y_factor_s_0_blk_n : STD_LOGIC;
    signal in_compute_y_V_V_0_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1891 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1891_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_write_V_V_0_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1891_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_compute_y_V_V_1_blk_n : STD_LOGIC;
    signal in_write_V_V_1_blk_n : STD_LOGIC;
    signal in_compute_y_V_V_2_blk_n : STD_LOGIC;
    signal in_write_V_V_2_blk_n : STD_LOGIC;
    signal in_compute_y_V_V_3_blk_n : STD_LOGIC;
    signal in_write_V_V_3_blk_n : STD_LOGIC;
    signal in_compute_y_V_V_4_blk_n : STD_LOGIC;
    signal in_write_V_V_4_blk_n : STD_LOGIC;
    signal in_compute_y_V_V_5_blk_n : STD_LOGIC;
    signal in_write_V_V_5_blk_n : STD_LOGIC;
    signal in_compute_y_V_V_6_blk_n : STD_LOGIC;
    signal in_write_V_V_6_blk_n : STD_LOGIC;
    signal in_compute_y_V_V_7_blk_n : STD_LOGIC;
    signal in_write_V_V_7_blk_n : STD_LOGIC;
    signal in_compute_y_V_V_8_blk_n : STD_LOGIC;
    signal in_write_V_V_8_blk_n : STD_LOGIC;
    signal in_compute_y_V_V_9_blk_n : STD_LOGIC;
    signal in_write_V_V_9_blk_n : STD_LOGIC;
    signal in_compute_y_V_V_10_blk_n : STD_LOGIC;
    signal in_write_V_V_10_blk_n : STD_LOGIC;
    signal in_compute_y_V_V_11_blk_n : STD_LOGIC;
    signal in_write_V_V_11_blk_n : STD_LOGIC;
    signal in_compute_y_V_V_12_blk_n : STD_LOGIC;
    signal in_write_V_V_12_blk_n : STD_LOGIC;
    signal in_compute_y_V_V_13_blk_n : STD_LOGIC;
    signal in_write_V_V_13_blk_n : STD_LOGIC;
    signal in_compute_y_V_V_14_blk_n : STD_LOGIC;
    signal in_write_V_V_14_blk_n : STD_LOGIC;
    signal in_compute_y_V_V_15_blk_n : STD_LOGIC;
    signal in_write_V_V_15_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_1029 : STD_LOGIC_VECTOR (37 downto 0);
    signal j_i_reg_1040 : STD_LOGIC_VECTOR (5 downto 0);
    signal bound_fu_1071_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal bound_reg_1886 : STD_LOGIC_VECTOR (37 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal exitcond_flatten_fu_1077_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_flatten_reg_1891_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_1082_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal j_i_mid2_fu_1094_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_i_mid2_reg_1900 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_i_mid2_reg_1900_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal j_i_mid2_reg_1900_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_16_i_fu_1102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_1108_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_V_51_load_reg_1914 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_i_fu_1138_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_i_reg_1919 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_1_i_fu_1148_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_1_i_reg_1924 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_2_i_fu_1158_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_2_i_reg_1929 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_3_i_fu_1168_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_3_i_reg_1934 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_4_i_fu_1178_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_4_i_reg_1939 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_5_i_fu_1188_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_5_i_reg_1944 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_6_i_fu_1198_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_6_i_reg_1949 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_7_i_fu_1208_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_7_i_reg_1954 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_8_i_fu_1218_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_8_i_reg_1959 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_i_30_fu_1228_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_i_30_reg_1964 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_10_i_fu_1238_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_10_i_reg_1969 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_11_i_fu_1248_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_11_i_reg_1974 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_12_i_fu_1258_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_12_i_reg_1979 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_13_i_fu_1268_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_13_i_reg_1984 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_14_i_fu_1278_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_14_i_reg_1989 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_15_i_fu_1288_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_15_i_reg_1994 : STD_LOGIC_VECTOR (32 downto 0);
    signal phitmp_i_reg_1999 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp_1_i_reg_2009 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp_2_i_reg_2019 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp_3_i_reg_2029 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp_4_i_reg_2039 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp_5_i_reg_2049 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp_6_i_reg_2059 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp_7_i_reg_2069 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp_8_i_reg_2079 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp_9_i_reg_2089 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp_i_32_reg_2099 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp_10_i_reg_2109 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp_11_i_reg_2119 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp_12_i_reg_2129 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp_13_i_reg_2139 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp_14_i_reg_2149 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal tmp_29_i_fu_1319_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_1_i_fu_1345_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_2_i_fu_1371_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_3_i_fu_1397_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_4_i_fu_1423_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_5_i_fu_1449_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_6_i_fu_1475_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_7_i_fu_1501_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_8_i_fu_1527_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_9_i_fu_1553_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_i_33_fu_1579_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_10_i_fu_1605_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_11_i_fu_1631_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_12_i_fu_1657_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_13_i_fu_1683_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_14_i_fu_1709_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_V_fu_594 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_51_fu_598 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1059_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl_fu_1051_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal p_shl2_fu_1067_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal tmp_i_fu_1088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lhs_V_i_fu_1134_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal rhs_V_fu_1130_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal lhs_V_i_29_fu_1144_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal lhs_V_2_i_fu_1154_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal lhs_V_3_i_fu_1164_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal lhs_V_4_i_fu_1174_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal lhs_V_5_i_fu_1184_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal lhs_V_6_i_fu_1194_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal lhs_V_7_i_fu_1204_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal lhs_V_8_i_fu_1214_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal lhs_V_9_i_fu_1224_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal lhs_V_10_i_fu_1234_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal lhs_V_11_i_fu_1244_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal lhs_V_12_i_fu_1254_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal lhs_V_13_i_fu_1264_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal lhs_V_14_i_fu_1274_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal lhs_V_15_i_fu_1284_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_9_i_fu_1304_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rhs_V_1_cast_i_fu_1294_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_9_i_fu_1304_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_17_i_fu_1297_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_9_1_i_fu_1324_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_9_1_i_fu_1324_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_28_i_fu_1339_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_9_2_i_fu_1350_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_9_2_i_fu_1350_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_28_1_i_fu_1365_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_9_3_i_fu_1376_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_9_3_i_fu_1376_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_28_2_i_fu_1391_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_9_4_i_fu_1402_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_9_4_i_fu_1402_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_28_3_i_fu_1417_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_9_5_i_fu_1428_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_9_5_i_fu_1428_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_28_4_i_fu_1443_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_9_6_i_fu_1454_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_9_6_i_fu_1454_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_28_5_i_fu_1469_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_9_7_i_fu_1480_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_9_7_i_fu_1480_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_28_6_i_fu_1495_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_9_8_i_fu_1506_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_9_8_i_fu_1506_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_28_7_i_fu_1521_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_9_9_i_fu_1532_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_9_9_i_fu_1532_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_28_8_i_fu_1547_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_9_i_31_fu_1558_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_9_i_31_fu_1558_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_28_9_i_fu_1573_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_9_10_i_fu_1584_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_9_10_i_fu_1584_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_28_10_i_fu_1599_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_9_11_i_fu_1610_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_9_11_i_fu_1610_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_28_11_i_fu_1625_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_9_12_i_fu_1636_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_9_12_i_fu_1636_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_28_12_i_fu_1651_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_9_13_i_fu_1662_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_9_13_i_fu_1662_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_28_13_i_fu_1677_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_9_14_i_fu_1688_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_9_14_i_fu_1688_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_28_14_i_fu_1703_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal bias_load_cast_i_fu_1714_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_load_1_cast_i_fu_1724_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_load_2_cast_i_fu_1734_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_load_3_cast_i_fu_1744_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_load_4_cast_i_fu_1754_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_load_5_cast_i_fu_1764_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_load_6_cast_i_fu_1774_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_load_7_cast_i_fu_1784_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_load_8_cast_i_fu_1794_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_load_9_cast_i_fu_1804_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_load_10_cast_i_fu_1814_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_load_11_cast_i_fu_1824_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_load_12_cast_i_fu_1834_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_load_13_cast_i_fu_1844_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_load_14_cast_i_fu_1854_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_load_15_cast_i_fu_1864_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component layernorm_compute_y_bias IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (26 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (26 downto 0);
        address4 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (26 downto 0);
        address5 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (26 downto 0);
        address6 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (26 downto 0);
        address7 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (26 downto 0);
        address8 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce8 : IN STD_LOGIC;
        q8 : OUT STD_LOGIC_VECTOR (26 downto 0);
        address9 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce9 : IN STD_LOGIC;
        q9 : OUT STD_LOGIC_VECTOR (26 downto 0);
        address10 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce10 : IN STD_LOGIC;
        q10 : OUT STD_LOGIC_VECTOR (26 downto 0);
        address11 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce11 : IN STD_LOGIC;
        q11 : OUT STD_LOGIC_VECTOR (26 downto 0);
        address12 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce12 : IN STD_LOGIC;
        q12 : OUT STD_LOGIC_VECTOR (26 downto 0);
        address13 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce13 : IN STD_LOGIC;
        q13 : OUT STD_LOGIC_VECTOR (26 downto 0);
        address14 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce14 : IN STD_LOGIC;
        q14 : OUT STD_LOGIC_VECTOR (26 downto 0);
        address15 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce15 : IN STD_LOGIC;
        q15 : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;



begin
    bias_U : component layernorm_compute_y_bias
    generic map (
        DataWidth => 27,
        AddressRange => 768,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => bias_address0,
        ce0 => bias_ce0,
        q0 => bias_q0,
        address1 => bias_address1,
        ce1 => bias_ce1,
        q1 => bias_q1,
        address2 => bias_address2,
        ce2 => bias_ce2,
        q2 => bias_q2,
        address3 => bias_address3,
        ce3 => bias_ce3,
        q3 => bias_q3,
        address4 => bias_address4,
        ce4 => bias_ce4,
        q4 => bias_q4,
        address5 => bias_address5,
        ce5 => bias_ce5,
        q5 => bias_q5,
        address6 => bias_address6,
        ce6 => bias_ce6,
        q6 => bias_q6,
        address7 => bias_address7,
        ce7 => bias_ce7,
        q7 => bias_q7,
        address8 => bias_address8,
        ce8 => bias_ce8,
        q8 => bias_q8,
        address9 => bias_address9,
        ce9 => bias_ce9,
        q9 => bias_q9,
        address10 => bias_address10,
        ce10 => bias_ce10,
        q10 => bias_q10,
        address11 => bias_address11,
        ce11 => bias_ce11,
        q11 => bias_q11,
        address12 => bias_address12,
        ce12 => bias_ce12,
        q12 => bias_q12,
        address13 => bias_address13,
        ce13 => bias_ce13,
        q13 => bias_q13,
        address14 => bias_address14,
        ce14 => bias_ce14,
        q14 => bias_q14,
        address15 => bias_address15,
        ce15 => bias_ce15,
        q15 => bias_q15);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (n_pipe4_V_V_full_n = ap_const_logic_0) or (n_pipe3_V_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif ((not(((real_start = ap_const_logic_0) or (n_pipe4_V_V_full_n = ap_const_logic_0) or (n_pipe3_V_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_1029_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_1077_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_1029 <= indvar_flatten_next_fu_1082_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (n_pipe4_V_V_full_n = ap_const_logic_0) or (n_pipe3_V_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_1029 <= ap_const_lv38_0;
            end if; 
        end if;
    end process;

    j_i_reg_1040_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_1077_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j_i_reg_1040 <= j_fu_1108_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (n_pipe4_V_V_full_n = ap_const_logic_0) or (n_pipe3_V_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_i_reg_1040 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (n_pipe4_V_V_full_n = ap_const_logic_0) or (n_pipe3_V_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    bound_reg_1886(37 downto 4) <= bound_fu_1071_p2(37 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten_reg_1891 <= exitcond_flatten_fu_1077_p2;
                exitcond_flatten_reg_1891_pp0_iter1_reg <= exitcond_flatten_reg_1891;
                j_i_mid2_reg_1900_pp0_iter1_reg <= j_i_mid2_reg_1900;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond_flatten_reg_1891_pp0_iter2_reg <= exitcond_flatten_reg_1891_pp0_iter1_reg;
                exitcond_flatten_reg_1891_pp0_iter3_reg <= exitcond_flatten_reg_1891_pp0_iter2_reg;
                j_i_mid2_reg_1900_pp0_iter2_reg <= j_i_mid2_reg_1900_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_1077_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                j_i_mid2_reg_1900 <= j_i_mid2_fu_1094_p3;
                tmp_16_i_reg_1905 <= tmp_16_i_fu_1102_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter2_reg = ap_const_lv1_0))) then
                phitmp_10_i_reg_2109 <= ret_V_9_10_i_fu_1584_p2(32 downto 1);
                phitmp_11_i_reg_2119 <= ret_V_9_11_i_fu_1610_p2(32 downto 1);
                phitmp_12_i_reg_2129 <= ret_V_9_12_i_fu_1636_p2(32 downto 1);
                phitmp_13_i_reg_2139 <= ret_V_9_13_i_fu_1662_p2(32 downto 1);
                phitmp_14_i_reg_2149 <= ret_V_9_14_i_fu_1688_p2(32 downto 1);
                phitmp_1_i_reg_2009 <= ret_V_9_1_i_fu_1324_p2(32 downto 1);
                phitmp_2_i_reg_2019 <= ret_V_9_2_i_fu_1350_p2(32 downto 1);
                phitmp_3_i_reg_2029 <= ret_V_9_3_i_fu_1376_p2(32 downto 1);
                phitmp_4_i_reg_2039 <= ret_V_9_4_i_fu_1402_p2(32 downto 1);
                phitmp_5_i_reg_2049 <= ret_V_9_5_i_fu_1428_p2(32 downto 1);
                phitmp_6_i_reg_2059 <= ret_V_9_6_i_fu_1454_p2(32 downto 1);
                phitmp_7_i_reg_2069 <= ret_V_9_7_i_fu_1480_p2(32 downto 1);
                phitmp_8_i_reg_2079 <= ret_V_9_8_i_fu_1506_p2(32 downto 1);
                phitmp_9_i_reg_2089 <= ret_V_9_9_i_fu_1532_p2(32 downto 1);
                phitmp_i_32_reg_2099 <= ret_V_9_i_31_fu_1558_p2(32 downto 1);
                phitmp_i_reg_1999 <= ret_V_9_i_fu_1304_p2(32 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0))) then
                ret_V_10_i_reg_1969 <= ret_V_10_i_fu_1238_p2;
                ret_V_11_i_reg_1974 <= ret_V_11_i_fu_1248_p2;
                ret_V_12_i_reg_1979 <= ret_V_12_i_fu_1258_p2;
                ret_V_13_i_reg_1984 <= ret_V_13_i_fu_1268_p2;
                ret_V_14_i_reg_1989 <= ret_V_14_i_fu_1278_p2;
                ret_V_15_i_reg_1994 <= ret_V_15_i_fu_1288_p2;
                ret_V_1_i_reg_1924 <= ret_V_1_i_fu_1148_p2;
                ret_V_2_i_reg_1929 <= ret_V_2_i_fu_1158_p2;
                ret_V_3_i_reg_1934 <= ret_V_3_i_fu_1168_p2;
                ret_V_4_i_reg_1939 <= ret_V_4_i_fu_1178_p2;
                ret_V_5_i_reg_1944 <= ret_V_5_i_fu_1188_p2;
                ret_V_6_i_reg_1949 <= ret_V_6_i_fu_1198_p2;
                ret_V_7_i_reg_1954 <= ret_V_7_i_fu_1208_p2;
                ret_V_8_i_reg_1959 <= ret_V_8_i_fu_1218_p2;
                ret_V_i_30_reg_1964 <= ret_V_i_30_fu_1228_p2;
                ret_V_i_reg_1919 <= ret_V_i_fu_1138_p2;
                tmp_V_51_load_reg_1914 <= tmp_V_51_fu_598;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_16_i_reg_1905 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_V_51_fu_598 <= in_compute_y_factor_s_0_dout;
                tmp_V_fu_594 <= mean_pipe2_V_V_dout;
            end if;
        end if;
    end process;
    bound_reg_1886(3 downto 0) <= "0000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, n_pipe3_V_V_empty_n, n_pipe4_V_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, exitcond_flatten_fu_1077_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (n_pipe4_V_V_full_n = ap_const_logic_0) or (n_pipe3_V_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_flatten_fu_1077_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_flatten_fu_1077_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state7 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(mean_pipe2_V_V_empty_n, in_compute_y_factor_s_0_empty_n, in_compute_y_V_V_0_empty_n, in_write_V_V_0_full_n, in_compute_y_V_V_1_empty_n, in_write_V_V_1_full_n, in_compute_y_V_V_2_empty_n, in_write_V_V_2_full_n, in_compute_y_V_V_3_empty_n, in_write_V_V_3_full_n, in_compute_y_V_V_4_empty_n, in_write_V_V_4_full_n, in_compute_y_V_V_5_empty_n, in_write_V_V_5_full_n, in_compute_y_V_V_6_empty_n, in_write_V_V_6_full_n, in_compute_y_V_V_7_empty_n, in_write_V_V_7_full_n, in_compute_y_V_V_8_empty_n, in_write_V_V_8_full_n, in_compute_y_V_V_9_empty_n, in_write_V_V_9_full_n, in_compute_y_V_V_10_empty_n, in_write_V_V_10_full_n, in_compute_y_V_V_11_empty_n, in_write_V_V_11_full_n, in_compute_y_V_V_12_empty_n, in_write_V_V_12_full_n, in_compute_y_V_V_13_empty_n, in_write_V_V_13_full_n, in_compute_y_V_V_14_empty_n, in_write_V_V_14_full_n, in_compute_y_V_V_15_empty_n, in_write_V_V_15_full_n, ap_enable_reg_pp0_iter1, tmp_16_i_reg_1905, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (((in_write_V_V_15_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_14_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_13_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_12_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_11_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_10_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_9_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_8_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_7_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_6_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_5_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_4_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_3_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_2_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_1_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_0_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((in_compute_y_V_V_15_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_14_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_13_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_12_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_11_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_10_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_9_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_8_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_7_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_6_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_5_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_4_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_3_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_2_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_1_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_0_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((in_compute_y_factor_s_0_empty_n = ap_const_logic_0) and (tmp_16_i_reg_1905 = ap_const_lv1_1)) or ((mean_pipe2_V_V_empty_n = ap_const_logic_0) and (tmp_16_i_reg_1905 = ap_const_lv1_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(mean_pipe2_V_V_empty_n, in_compute_y_factor_s_0_empty_n, in_compute_y_V_V_0_empty_n, in_write_V_V_0_full_n, in_compute_y_V_V_1_empty_n, in_write_V_V_1_full_n, in_compute_y_V_V_2_empty_n, in_write_V_V_2_full_n, in_compute_y_V_V_3_empty_n, in_write_V_V_3_full_n, in_compute_y_V_V_4_empty_n, in_write_V_V_4_full_n, in_compute_y_V_V_5_empty_n, in_write_V_V_5_full_n, in_compute_y_V_V_6_empty_n, in_write_V_V_6_full_n, in_compute_y_V_V_7_empty_n, in_write_V_V_7_full_n, in_compute_y_V_V_8_empty_n, in_write_V_V_8_full_n, in_compute_y_V_V_9_empty_n, in_write_V_V_9_full_n, in_compute_y_V_V_10_empty_n, in_write_V_V_10_full_n, in_compute_y_V_V_11_empty_n, in_write_V_V_11_full_n, in_compute_y_V_V_12_empty_n, in_write_V_V_12_full_n, in_compute_y_V_V_13_empty_n, in_write_V_V_13_full_n, in_compute_y_V_V_14_empty_n, in_write_V_V_14_full_n, in_compute_y_V_V_15_empty_n, in_write_V_V_15_full_n, ap_enable_reg_pp0_iter1, tmp_16_i_reg_1905, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (((in_write_V_V_15_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_14_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_13_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_12_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_11_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_10_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_9_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_8_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_7_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_6_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_5_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_4_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_3_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_2_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_1_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_0_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((in_compute_y_V_V_15_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_14_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_13_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_12_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_11_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_10_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_9_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_8_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_7_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_6_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_5_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_4_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_3_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_2_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_1_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_0_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((in_compute_y_factor_s_0_empty_n = ap_const_logic_0) and (tmp_16_i_reg_1905 = ap_const_lv1_1)) or ((mean_pipe2_V_V_empty_n = ap_const_logic_0) and (tmp_16_i_reg_1905 = ap_const_lv1_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(mean_pipe2_V_V_empty_n, in_compute_y_factor_s_0_empty_n, in_compute_y_V_V_0_empty_n, in_write_V_V_0_full_n, in_compute_y_V_V_1_empty_n, in_write_V_V_1_full_n, in_compute_y_V_V_2_empty_n, in_write_V_V_2_full_n, in_compute_y_V_V_3_empty_n, in_write_V_V_3_full_n, in_compute_y_V_V_4_empty_n, in_write_V_V_4_full_n, in_compute_y_V_V_5_empty_n, in_write_V_V_5_full_n, in_compute_y_V_V_6_empty_n, in_write_V_V_6_full_n, in_compute_y_V_V_7_empty_n, in_write_V_V_7_full_n, in_compute_y_V_V_8_empty_n, in_write_V_V_8_full_n, in_compute_y_V_V_9_empty_n, in_write_V_V_9_full_n, in_compute_y_V_V_10_empty_n, in_write_V_V_10_full_n, in_compute_y_V_V_11_empty_n, in_write_V_V_11_full_n, in_compute_y_V_V_12_empty_n, in_write_V_V_12_full_n, in_compute_y_V_V_13_empty_n, in_write_V_V_13_full_n, in_compute_y_V_V_14_empty_n, in_write_V_V_14_full_n, in_compute_y_V_V_15_empty_n, in_write_V_V_15_full_n, ap_enable_reg_pp0_iter1, tmp_16_i_reg_1905, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (((in_write_V_V_15_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_14_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_13_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_12_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_11_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_10_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_9_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_8_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_7_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_6_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_5_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_4_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_3_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_2_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_1_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_0_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((in_compute_y_V_V_15_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_14_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_13_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_12_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_11_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_10_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_9_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_8_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_7_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_6_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_5_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_4_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_3_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_2_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_1_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_0_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((in_compute_y_factor_s_0_empty_n = ap_const_logic_0) and (tmp_16_i_reg_1905 = ap_const_lv1_1)) or ((mean_pipe2_V_V_empty_n = ap_const_logic_0) and (tmp_16_i_reg_1905 = ap_const_lv1_1)))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, n_pipe3_V_V_empty_n, n_pipe4_V_V_full_n)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (n_pipe4_V_V_full_n = ap_const_logic_0) or (n_pipe3_V_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(mean_pipe2_V_V_empty_n, in_compute_y_factor_s_0_empty_n, tmp_16_i_reg_1905)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (((in_compute_y_factor_s_0_empty_n = ap_const_logic_0) and (tmp_16_i_reg_1905 = ap_const_lv1_1)) or ((mean_pipe2_V_V_empty_n = ap_const_logic_0) and (tmp_16_i_reg_1905 = ap_const_lv1_1)));
    end process;


    ap_block_state4_pp0_stage0_iter2_assign_proc : process(in_compute_y_V_V_0_empty_n, in_compute_y_V_V_1_empty_n, in_compute_y_V_V_2_empty_n, in_compute_y_V_V_3_empty_n, in_compute_y_V_V_4_empty_n, in_compute_y_V_V_5_empty_n, in_compute_y_V_V_6_empty_n, in_compute_y_V_V_7_empty_n, in_compute_y_V_V_8_empty_n, in_compute_y_V_V_9_empty_n, in_compute_y_V_V_10_empty_n, in_compute_y_V_V_11_empty_n, in_compute_y_V_V_12_empty_n, in_compute_y_V_V_13_empty_n, in_compute_y_V_V_14_empty_n, in_compute_y_V_V_15_empty_n, exitcond_flatten_reg_1891_pp0_iter1_reg)
    begin
                ap_block_state4_pp0_stage0_iter2 <= (((in_compute_y_V_V_15_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_14_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_13_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_12_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_11_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_10_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_9_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_8_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_7_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_6_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_5_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_4_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_3_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_2_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_1_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)) or ((in_compute_y_V_V_0_empty_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0)));
    end process;

        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter4_assign_proc : process(in_write_V_V_0_full_n, in_write_V_V_1_full_n, in_write_V_V_2_full_n, in_write_V_V_3_full_n, in_write_V_V_4_full_n, in_write_V_V_5_full_n, in_write_V_V_6_full_n, in_write_V_V_7_full_n, in_write_V_V_8_full_n, in_write_V_V_9_full_n, in_write_V_V_10_full_n, in_write_V_V_11_full_n, in_write_V_V_12_full_n, in_write_V_V_13_full_n, in_write_V_V_14_full_n, in_write_V_V_15_full_n, exitcond_flatten_reg_1891_pp0_iter3_reg)
    begin
                ap_block_state6_pp0_stage0_iter4 <= (((in_write_V_V_15_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_14_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_13_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_12_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_11_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_10_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_9_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_8_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_7_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_6_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_5_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_4_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_3_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_2_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_1_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)) or ((in_write_V_V_0_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0)));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_1077_p2)
    begin
        if ((exitcond_flatten_fu_1077_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    bias_address0 <= tmp_29_i_fu_1319_p1(10 - 1 downto 0);
    bias_address1 <= tmp_29_1_i_fu_1345_p1(10 - 1 downto 0);
    bias_address10 <= tmp_29_i_33_fu_1579_p1(10 - 1 downto 0);
    bias_address11 <= tmp_29_10_i_fu_1605_p1(10 - 1 downto 0);
    bias_address12 <= tmp_29_11_i_fu_1631_p1(10 - 1 downto 0);
    bias_address13 <= tmp_29_12_i_fu_1657_p1(10 - 1 downto 0);
    bias_address14 <= tmp_29_13_i_fu_1683_p1(10 - 1 downto 0);
    bias_address15 <= tmp_29_14_i_fu_1709_p1(10 - 1 downto 0);
    bias_address2 <= tmp_29_2_i_fu_1371_p1(10 - 1 downto 0);
    bias_address3 <= tmp_29_3_i_fu_1397_p1(10 - 1 downto 0);
    bias_address4 <= tmp_29_4_i_fu_1423_p1(10 - 1 downto 0);
    bias_address5 <= tmp_29_5_i_fu_1449_p1(10 - 1 downto 0);
    bias_address6 <= tmp_29_6_i_fu_1475_p1(10 - 1 downto 0);
    bias_address7 <= tmp_29_7_i_fu_1501_p1(10 - 1 downto 0);
    bias_address8 <= tmp_29_8_i_fu_1527_p1(10 - 1 downto 0);
    bias_address9 <= tmp_29_9_i_fu_1553_p1(10 - 1 downto 0);

    bias_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            bias_ce0 <= ap_const_logic_1;
        else 
            bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            bias_ce1 <= ap_const_logic_1;
        else 
            bias_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    bias_ce10_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            bias_ce10 <= ap_const_logic_1;
        else 
            bias_ce10 <= ap_const_logic_0;
        end if; 
    end process;


    bias_ce11_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            bias_ce11 <= ap_const_logic_1;
        else 
            bias_ce11 <= ap_const_logic_0;
        end if; 
    end process;


    bias_ce12_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            bias_ce12 <= ap_const_logic_1;
        else 
            bias_ce12 <= ap_const_logic_0;
        end if; 
    end process;


    bias_ce13_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            bias_ce13 <= ap_const_logic_1;
        else 
            bias_ce13 <= ap_const_logic_0;
        end if; 
    end process;


    bias_ce14_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            bias_ce14 <= ap_const_logic_1;
        else 
            bias_ce14 <= ap_const_logic_0;
        end if; 
    end process;


    bias_ce15_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            bias_ce15 <= ap_const_logic_1;
        else 
            bias_ce15 <= ap_const_logic_0;
        end if; 
    end process;


    bias_ce2_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            bias_ce2 <= ap_const_logic_1;
        else 
            bias_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    bias_ce3_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            bias_ce3 <= ap_const_logic_1;
        else 
            bias_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    bias_ce4_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            bias_ce4 <= ap_const_logic_1;
        else 
            bias_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    bias_ce5_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            bias_ce5 <= ap_const_logic_1;
        else 
            bias_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    bias_ce6_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            bias_ce6 <= ap_const_logic_1;
        else 
            bias_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    bias_ce7_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            bias_ce7 <= ap_const_logic_1;
        else 
            bias_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    bias_ce8_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            bias_ce8 <= ap_const_logic_1;
        else 
            bias_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    bias_ce9_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            bias_ce9 <= ap_const_logic_1;
        else 
            bias_ce9 <= ap_const_logic_0;
        end if; 
    end process;

        bias_load_10_cast_i_fu_1814_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_q10),32));

        bias_load_11_cast_i_fu_1824_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_q11),32));

        bias_load_12_cast_i_fu_1834_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_q12),32));

        bias_load_13_cast_i_fu_1844_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_q13),32));

        bias_load_14_cast_i_fu_1854_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_q14),32));

        bias_load_15_cast_i_fu_1864_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_q15),32));

        bias_load_1_cast_i_fu_1724_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_q1),32));

        bias_load_2_cast_i_fu_1734_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_q2),32));

        bias_load_3_cast_i_fu_1744_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_q3),32));

        bias_load_4_cast_i_fu_1754_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_q4),32));

        bias_load_5_cast_i_fu_1764_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_q5),32));

        bias_load_6_cast_i_fu_1774_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_q6),32));

        bias_load_7_cast_i_fu_1784_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_q7),32));

        bias_load_8_cast_i_fu_1794_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_q8),32));

        bias_load_9_cast_i_fu_1804_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_q9),32));

        bias_load_cast_i_fu_1714_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_q0),32));

    bound_fu_1071_p2 <= std_logic_vector(unsigned(p_shl_fu_1051_p3) - unsigned(p_shl2_fu_1067_p1));
    exitcond_flatten_fu_1077_p2 <= "1" when (indvar_flatten_reg_1029 = bound_reg_1886) else "0";

    in_compute_y_V_V_0_blk_n_assign_proc : process(in_compute_y_V_V_0_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_0_blk_n <= in_compute_y_V_V_0_empty_n;
        else 
            in_compute_y_V_V_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_compute_y_V_V_0_read_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_0_read <= ap_const_logic_1;
        else 
            in_compute_y_V_V_0_read <= ap_const_logic_0;
        end if; 
    end process;


    in_compute_y_V_V_10_blk_n_assign_proc : process(in_compute_y_V_V_10_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_10_blk_n <= in_compute_y_V_V_10_empty_n;
        else 
            in_compute_y_V_V_10_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_compute_y_V_V_10_read_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_10_read <= ap_const_logic_1;
        else 
            in_compute_y_V_V_10_read <= ap_const_logic_0;
        end if; 
    end process;


    in_compute_y_V_V_11_blk_n_assign_proc : process(in_compute_y_V_V_11_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_11_blk_n <= in_compute_y_V_V_11_empty_n;
        else 
            in_compute_y_V_V_11_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_compute_y_V_V_11_read_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_11_read <= ap_const_logic_1;
        else 
            in_compute_y_V_V_11_read <= ap_const_logic_0;
        end if; 
    end process;


    in_compute_y_V_V_12_blk_n_assign_proc : process(in_compute_y_V_V_12_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_12_blk_n <= in_compute_y_V_V_12_empty_n;
        else 
            in_compute_y_V_V_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_compute_y_V_V_12_read_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_12_read <= ap_const_logic_1;
        else 
            in_compute_y_V_V_12_read <= ap_const_logic_0;
        end if; 
    end process;


    in_compute_y_V_V_13_blk_n_assign_proc : process(in_compute_y_V_V_13_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_13_blk_n <= in_compute_y_V_V_13_empty_n;
        else 
            in_compute_y_V_V_13_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_compute_y_V_V_13_read_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_13_read <= ap_const_logic_1;
        else 
            in_compute_y_V_V_13_read <= ap_const_logic_0;
        end if; 
    end process;


    in_compute_y_V_V_14_blk_n_assign_proc : process(in_compute_y_V_V_14_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_14_blk_n <= in_compute_y_V_V_14_empty_n;
        else 
            in_compute_y_V_V_14_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_compute_y_V_V_14_read_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_14_read <= ap_const_logic_1;
        else 
            in_compute_y_V_V_14_read <= ap_const_logic_0;
        end if; 
    end process;


    in_compute_y_V_V_15_blk_n_assign_proc : process(in_compute_y_V_V_15_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_15_blk_n <= in_compute_y_V_V_15_empty_n;
        else 
            in_compute_y_V_V_15_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_compute_y_V_V_15_read_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_15_read <= ap_const_logic_1;
        else 
            in_compute_y_V_V_15_read <= ap_const_logic_0;
        end if; 
    end process;


    in_compute_y_V_V_1_blk_n_assign_proc : process(in_compute_y_V_V_1_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_1_blk_n <= in_compute_y_V_V_1_empty_n;
        else 
            in_compute_y_V_V_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_compute_y_V_V_1_read_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_1_read <= ap_const_logic_1;
        else 
            in_compute_y_V_V_1_read <= ap_const_logic_0;
        end if; 
    end process;


    in_compute_y_V_V_2_blk_n_assign_proc : process(in_compute_y_V_V_2_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_2_blk_n <= in_compute_y_V_V_2_empty_n;
        else 
            in_compute_y_V_V_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_compute_y_V_V_2_read_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_2_read <= ap_const_logic_1;
        else 
            in_compute_y_V_V_2_read <= ap_const_logic_0;
        end if; 
    end process;


    in_compute_y_V_V_3_blk_n_assign_proc : process(in_compute_y_V_V_3_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_3_blk_n <= in_compute_y_V_V_3_empty_n;
        else 
            in_compute_y_V_V_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_compute_y_V_V_3_read_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_3_read <= ap_const_logic_1;
        else 
            in_compute_y_V_V_3_read <= ap_const_logic_0;
        end if; 
    end process;


    in_compute_y_V_V_4_blk_n_assign_proc : process(in_compute_y_V_V_4_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_4_blk_n <= in_compute_y_V_V_4_empty_n;
        else 
            in_compute_y_V_V_4_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_compute_y_V_V_4_read_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_4_read <= ap_const_logic_1;
        else 
            in_compute_y_V_V_4_read <= ap_const_logic_0;
        end if; 
    end process;


    in_compute_y_V_V_5_blk_n_assign_proc : process(in_compute_y_V_V_5_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_5_blk_n <= in_compute_y_V_V_5_empty_n;
        else 
            in_compute_y_V_V_5_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_compute_y_V_V_5_read_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_5_read <= ap_const_logic_1;
        else 
            in_compute_y_V_V_5_read <= ap_const_logic_0;
        end if; 
    end process;


    in_compute_y_V_V_6_blk_n_assign_proc : process(in_compute_y_V_V_6_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_6_blk_n <= in_compute_y_V_V_6_empty_n;
        else 
            in_compute_y_V_V_6_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_compute_y_V_V_6_read_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_6_read <= ap_const_logic_1;
        else 
            in_compute_y_V_V_6_read <= ap_const_logic_0;
        end if; 
    end process;


    in_compute_y_V_V_7_blk_n_assign_proc : process(in_compute_y_V_V_7_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_7_blk_n <= in_compute_y_V_V_7_empty_n;
        else 
            in_compute_y_V_V_7_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_compute_y_V_V_7_read_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_7_read <= ap_const_logic_1;
        else 
            in_compute_y_V_V_7_read <= ap_const_logic_0;
        end if; 
    end process;


    in_compute_y_V_V_8_blk_n_assign_proc : process(in_compute_y_V_V_8_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_8_blk_n <= in_compute_y_V_V_8_empty_n;
        else 
            in_compute_y_V_V_8_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_compute_y_V_V_8_read_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_8_read <= ap_const_logic_1;
        else 
            in_compute_y_V_V_8_read <= ap_const_logic_0;
        end if; 
    end process;


    in_compute_y_V_V_9_blk_n_assign_proc : process(in_compute_y_V_V_9_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_9_blk_n <= in_compute_y_V_V_9_empty_n;
        else 
            in_compute_y_V_V_9_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_compute_y_V_V_9_read_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_1891_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_compute_y_V_V_9_read <= ap_const_logic_1;
        else 
            in_compute_y_V_V_9_read <= ap_const_logic_0;
        end if; 
    end process;


    in_compute_y_factor_s_0_blk_n_assign_proc : process(in_compute_y_factor_s_0_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_16_i_reg_1905)
    begin
        if (((tmp_16_i_reg_1905 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_compute_y_factor_s_0_blk_n <= in_compute_y_factor_s_0_empty_n;
        else 
            in_compute_y_factor_s_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_compute_y_factor_s_0_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_16_i_reg_1905, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_16_i_reg_1905 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_compute_y_factor_s_0_read <= ap_const_logic_1;
        else 
            in_compute_y_factor_s_0_read <= ap_const_logic_0;
        end if; 
    end process;


    in_write_V_V_0_blk_n_assign_proc : process(in_write_V_V_0_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_0_blk_n <= in_write_V_V_0_full_n;
        else 
            in_write_V_V_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_write_V_V_0_din <= std_logic_vector(signed(bias_load_cast_i_fu_1714_p1) + signed(phitmp_i_reg_1999));

    in_write_V_V_0_write_assign_proc : process(ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_0_write <= ap_const_logic_1;
        else 
            in_write_V_V_0_write <= ap_const_logic_0;
        end if; 
    end process;


    in_write_V_V_10_blk_n_assign_proc : process(in_write_V_V_10_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_10_blk_n <= in_write_V_V_10_full_n;
        else 
            in_write_V_V_10_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_write_V_V_10_din <= std_logic_vector(signed(bias_load_10_cast_i_fu_1814_p1) + signed(phitmp_i_32_reg_2099));

    in_write_V_V_10_write_assign_proc : process(ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_10_write <= ap_const_logic_1;
        else 
            in_write_V_V_10_write <= ap_const_logic_0;
        end if; 
    end process;


    in_write_V_V_11_blk_n_assign_proc : process(in_write_V_V_11_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_11_blk_n <= in_write_V_V_11_full_n;
        else 
            in_write_V_V_11_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_write_V_V_11_din <= std_logic_vector(signed(bias_load_11_cast_i_fu_1824_p1) + signed(phitmp_10_i_reg_2109));

    in_write_V_V_11_write_assign_proc : process(ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_11_write <= ap_const_logic_1;
        else 
            in_write_V_V_11_write <= ap_const_logic_0;
        end if; 
    end process;


    in_write_V_V_12_blk_n_assign_proc : process(in_write_V_V_12_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_12_blk_n <= in_write_V_V_12_full_n;
        else 
            in_write_V_V_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_write_V_V_12_din <= std_logic_vector(signed(bias_load_12_cast_i_fu_1834_p1) + signed(phitmp_11_i_reg_2119));

    in_write_V_V_12_write_assign_proc : process(ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_12_write <= ap_const_logic_1;
        else 
            in_write_V_V_12_write <= ap_const_logic_0;
        end if; 
    end process;


    in_write_V_V_13_blk_n_assign_proc : process(in_write_V_V_13_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_13_blk_n <= in_write_V_V_13_full_n;
        else 
            in_write_V_V_13_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_write_V_V_13_din <= std_logic_vector(signed(bias_load_13_cast_i_fu_1844_p1) + signed(phitmp_12_i_reg_2129));

    in_write_V_V_13_write_assign_proc : process(ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_13_write <= ap_const_logic_1;
        else 
            in_write_V_V_13_write <= ap_const_logic_0;
        end if; 
    end process;


    in_write_V_V_14_blk_n_assign_proc : process(in_write_V_V_14_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_14_blk_n <= in_write_V_V_14_full_n;
        else 
            in_write_V_V_14_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_write_V_V_14_din <= std_logic_vector(signed(bias_load_14_cast_i_fu_1854_p1) + signed(phitmp_13_i_reg_2139));

    in_write_V_V_14_write_assign_proc : process(ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_14_write <= ap_const_logic_1;
        else 
            in_write_V_V_14_write <= ap_const_logic_0;
        end if; 
    end process;


    in_write_V_V_15_blk_n_assign_proc : process(in_write_V_V_15_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_15_blk_n <= in_write_V_V_15_full_n;
        else 
            in_write_V_V_15_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_write_V_V_15_din <= std_logic_vector(signed(bias_load_15_cast_i_fu_1864_p1) + signed(phitmp_14_i_reg_2149));

    in_write_V_V_15_write_assign_proc : process(ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_15_write <= ap_const_logic_1;
        else 
            in_write_V_V_15_write <= ap_const_logic_0;
        end if; 
    end process;


    in_write_V_V_1_blk_n_assign_proc : process(in_write_V_V_1_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_1_blk_n <= in_write_V_V_1_full_n;
        else 
            in_write_V_V_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_write_V_V_1_din <= std_logic_vector(signed(bias_load_1_cast_i_fu_1724_p1) + signed(phitmp_1_i_reg_2009));

    in_write_V_V_1_write_assign_proc : process(ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_1_write <= ap_const_logic_1;
        else 
            in_write_V_V_1_write <= ap_const_logic_0;
        end if; 
    end process;


    in_write_V_V_2_blk_n_assign_proc : process(in_write_V_V_2_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_2_blk_n <= in_write_V_V_2_full_n;
        else 
            in_write_V_V_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_write_V_V_2_din <= std_logic_vector(signed(bias_load_2_cast_i_fu_1734_p1) + signed(phitmp_2_i_reg_2019));

    in_write_V_V_2_write_assign_proc : process(ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_2_write <= ap_const_logic_1;
        else 
            in_write_V_V_2_write <= ap_const_logic_0;
        end if; 
    end process;


    in_write_V_V_3_blk_n_assign_proc : process(in_write_V_V_3_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_3_blk_n <= in_write_V_V_3_full_n;
        else 
            in_write_V_V_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_write_V_V_3_din <= std_logic_vector(signed(bias_load_3_cast_i_fu_1744_p1) + signed(phitmp_3_i_reg_2029));

    in_write_V_V_3_write_assign_proc : process(ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_3_write <= ap_const_logic_1;
        else 
            in_write_V_V_3_write <= ap_const_logic_0;
        end if; 
    end process;


    in_write_V_V_4_blk_n_assign_proc : process(in_write_V_V_4_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_4_blk_n <= in_write_V_V_4_full_n;
        else 
            in_write_V_V_4_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_write_V_V_4_din <= std_logic_vector(signed(bias_load_4_cast_i_fu_1754_p1) + signed(phitmp_4_i_reg_2039));

    in_write_V_V_4_write_assign_proc : process(ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_4_write <= ap_const_logic_1;
        else 
            in_write_V_V_4_write <= ap_const_logic_0;
        end if; 
    end process;


    in_write_V_V_5_blk_n_assign_proc : process(in_write_V_V_5_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_5_blk_n <= in_write_V_V_5_full_n;
        else 
            in_write_V_V_5_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_write_V_V_5_din <= std_logic_vector(signed(bias_load_5_cast_i_fu_1764_p1) + signed(phitmp_5_i_reg_2049));

    in_write_V_V_5_write_assign_proc : process(ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_5_write <= ap_const_logic_1;
        else 
            in_write_V_V_5_write <= ap_const_logic_0;
        end if; 
    end process;


    in_write_V_V_6_blk_n_assign_proc : process(in_write_V_V_6_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_6_blk_n <= in_write_V_V_6_full_n;
        else 
            in_write_V_V_6_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_write_V_V_6_din <= std_logic_vector(signed(bias_load_6_cast_i_fu_1774_p1) + signed(phitmp_6_i_reg_2059));

    in_write_V_V_6_write_assign_proc : process(ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_6_write <= ap_const_logic_1;
        else 
            in_write_V_V_6_write <= ap_const_logic_0;
        end if; 
    end process;


    in_write_V_V_7_blk_n_assign_proc : process(in_write_V_V_7_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_7_blk_n <= in_write_V_V_7_full_n;
        else 
            in_write_V_V_7_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_write_V_V_7_din <= std_logic_vector(signed(bias_load_7_cast_i_fu_1784_p1) + signed(phitmp_7_i_reg_2069));

    in_write_V_V_7_write_assign_proc : process(ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_7_write <= ap_const_logic_1;
        else 
            in_write_V_V_7_write <= ap_const_logic_0;
        end if; 
    end process;


    in_write_V_V_8_blk_n_assign_proc : process(in_write_V_V_8_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_8_blk_n <= in_write_V_V_8_full_n;
        else 
            in_write_V_V_8_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_write_V_V_8_din <= std_logic_vector(signed(bias_load_8_cast_i_fu_1794_p1) + signed(phitmp_8_i_reg_2079));

    in_write_V_V_8_write_assign_proc : process(ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_8_write <= ap_const_logic_1;
        else 
            in_write_V_V_8_write <= ap_const_logic_0;
        end if; 
    end process;


    in_write_V_V_9_blk_n_assign_proc : process(in_write_V_V_9_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg)
    begin
        if (((exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_9_blk_n <= in_write_V_V_9_full_n;
        else 
            in_write_V_V_9_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_write_V_V_9_din <= std_logic_vector(signed(bias_load_9_cast_i_fu_1804_p1) + signed(phitmp_9_i_reg_2089));

    in_write_V_V_9_write_assign_proc : process(ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1891_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1891_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            in_write_V_V_9_write <= ap_const_logic_1;
        else 
            in_write_V_V_9_write <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next_fu_1082_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_1029) + unsigned(ap_const_lv38_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_1108_p2 <= std_logic_vector(unsigned(j_i_mid2_fu_1094_p3) + unsigned(ap_const_lv6_1));
    j_i_mid2_fu_1094_p3 <= 
        ap_const_lv6_0 when (tmp_i_fu_1088_p2(0) = '1') else 
        j_i_reg_1040;
        lhs_V_10_i_fu_1234_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in_compute_y_V_V_10_dout),33));

        lhs_V_11_i_fu_1244_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in_compute_y_V_V_11_dout),33));

        lhs_V_12_i_fu_1254_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in_compute_y_V_V_12_dout),33));

        lhs_V_13_i_fu_1264_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in_compute_y_V_V_13_dout),33));

        lhs_V_14_i_fu_1274_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in_compute_y_V_V_14_dout),33));

        lhs_V_15_i_fu_1284_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in_compute_y_V_V_15_dout),33));

        lhs_V_2_i_fu_1154_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in_compute_y_V_V_2_dout),33));

        lhs_V_3_i_fu_1164_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in_compute_y_V_V_3_dout),33));

        lhs_V_4_i_fu_1174_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in_compute_y_V_V_4_dout),33));

        lhs_V_5_i_fu_1184_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in_compute_y_V_V_5_dout),33));

        lhs_V_6_i_fu_1194_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in_compute_y_V_V_6_dout),33));

        lhs_V_7_i_fu_1204_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in_compute_y_V_V_7_dout),33));

        lhs_V_8_i_fu_1214_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in_compute_y_V_V_8_dout),33));

        lhs_V_9_i_fu_1224_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in_compute_y_V_V_9_dout),33));

        lhs_V_i_29_fu_1144_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in_compute_y_V_V_1_dout),33));

        lhs_V_i_fu_1134_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in_compute_y_V_V_0_dout),33));


    mean_pipe2_V_V_blk_n_assign_proc : process(mean_pipe2_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_16_i_reg_1905)
    begin
        if (((tmp_16_i_reg_1905 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mean_pipe2_V_V_blk_n <= mean_pipe2_V_V_empty_n;
        else 
            mean_pipe2_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    mean_pipe2_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_16_i_reg_1905, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_16_i_reg_1905 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mean_pipe2_V_V_read <= ap_const_logic_1;
        else 
            mean_pipe2_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    n_pipe3_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, n_pipe3_V_V_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            n_pipe3_V_V_blk_n <= n_pipe3_V_V_empty_n;
        else 
            n_pipe3_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    n_pipe3_V_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, n_pipe3_V_V_empty_n, n_pipe4_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (n_pipe4_V_V_full_n = ap_const_logic_0) or (n_pipe3_V_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            n_pipe3_V_V_read <= ap_const_logic_1;
        else 
            n_pipe3_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    n_pipe4_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, n_pipe4_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            n_pipe4_V_V_blk_n <= n_pipe4_V_V_full_n;
        else 
            n_pipe4_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    n_pipe4_V_V_din <= n_pipe3_V_V_dout;

    n_pipe4_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, n_pipe3_V_V_empty_n, n_pipe4_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (n_pipe4_V_V_full_n = ap_const_logic_0) or (n_pipe3_V_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            n_pipe4_V_V_write <= ap_const_logic_1;
        else 
            n_pipe4_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_shl2_fu_1067_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_1059_p3),38));
    p_shl_fu_1051_p3 <= (n_pipe3_V_V_dout & ap_const_lv6_0);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_10_i_fu_1238_p2 <= std_logic_vector(signed(lhs_V_10_i_fu_1234_p1) - signed(rhs_V_fu_1130_p1));
    ret_V_11_i_fu_1248_p2 <= std_logic_vector(signed(lhs_V_11_i_fu_1244_p1) - signed(rhs_V_fu_1130_p1));
    ret_V_12_i_fu_1258_p2 <= std_logic_vector(signed(lhs_V_12_i_fu_1254_p1) - signed(rhs_V_fu_1130_p1));
    ret_V_13_i_fu_1268_p2 <= std_logic_vector(signed(lhs_V_13_i_fu_1264_p1) - signed(rhs_V_fu_1130_p1));
    ret_V_14_i_fu_1278_p2 <= std_logic_vector(signed(lhs_V_14_i_fu_1274_p1) - signed(rhs_V_fu_1130_p1));
    ret_V_15_i_fu_1288_p2 <= std_logic_vector(signed(lhs_V_15_i_fu_1284_p1) - signed(rhs_V_fu_1130_p1));
    ret_V_1_i_fu_1148_p2 <= std_logic_vector(signed(lhs_V_i_29_fu_1144_p1) - signed(rhs_V_fu_1130_p1));
    ret_V_2_i_fu_1158_p2 <= std_logic_vector(signed(lhs_V_2_i_fu_1154_p1) - signed(rhs_V_fu_1130_p1));
    ret_V_3_i_fu_1168_p2 <= std_logic_vector(signed(lhs_V_3_i_fu_1164_p1) - signed(rhs_V_fu_1130_p1));
    ret_V_4_i_fu_1178_p2 <= std_logic_vector(signed(lhs_V_4_i_fu_1174_p1) - signed(rhs_V_fu_1130_p1));
    ret_V_5_i_fu_1188_p2 <= std_logic_vector(signed(lhs_V_5_i_fu_1184_p1) - signed(rhs_V_fu_1130_p1));
    ret_V_6_i_fu_1198_p2 <= std_logic_vector(signed(lhs_V_6_i_fu_1194_p1) - signed(rhs_V_fu_1130_p1));
    ret_V_7_i_fu_1208_p2 <= std_logic_vector(signed(lhs_V_7_i_fu_1204_p1) - signed(rhs_V_fu_1130_p1));
    ret_V_8_i_fu_1218_p2 <= std_logic_vector(signed(lhs_V_8_i_fu_1214_p1) - signed(rhs_V_fu_1130_p1));
    ret_V_9_10_i_fu_1584_p0 <= rhs_V_1_cast_i_fu_1294_p1(32 - 1 downto 0);
    ret_V_9_10_i_fu_1584_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ret_V_9_10_i_fu_1584_p0) * signed(ret_V_11_i_reg_1974))), 33));
    ret_V_9_11_i_fu_1610_p0 <= rhs_V_1_cast_i_fu_1294_p1(32 - 1 downto 0);
    ret_V_9_11_i_fu_1610_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ret_V_9_11_i_fu_1610_p0) * signed(ret_V_12_i_reg_1979))), 33));
    ret_V_9_12_i_fu_1636_p0 <= rhs_V_1_cast_i_fu_1294_p1(32 - 1 downto 0);
    ret_V_9_12_i_fu_1636_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ret_V_9_12_i_fu_1636_p0) * signed(ret_V_13_i_reg_1984))), 33));
    ret_V_9_13_i_fu_1662_p0 <= rhs_V_1_cast_i_fu_1294_p1(32 - 1 downto 0);
    ret_V_9_13_i_fu_1662_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ret_V_9_13_i_fu_1662_p0) * signed(ret_V_14_i_reg_1989))), 33));
    ret_V_9_14_i_fu_1688_p0 <= rhs_V_1_cast_i_fu_1294_p1(32 - 1 downto 0);
    ret_V_9_14_i_fu_1688_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ret_V_9_14_i_fu_1688_p0) * signed(ret_V_15_i_reg_1994))), 33));
    ret_V_9_1_i_fu_1324_p0 <= rhs_V_1_cast_i_fu_1294_p1(32 - 1 downto 0);
    ret_V_9_1_i_fu_1324_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ret_V_9_1_i_fu_1324_p0) * signed(ret_V_1_i_reg_1924))), 33));
    ret_V_9_2_i_fu_1350_p0 <= rhs_V_1_cast_i_fu_1294_p1(32 - 1 downto 0);
    ret_V_9_2_i_fu_1350_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ret_V_9_2_i_fu_1350_p0) * signed(ret_V_2_i_reg_1929))), 33));
    ret_V_9_3_i_fu_1376_p0 <= rhs_V_1_cast_i_fu_1294_p1(32 - 1 downto 0);
    ret_V_9_3_i_fu_1376_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ret_V_9_3_i_fu_1376_p0) * signed(ret_V_3_i_reg_1934))), 33));
    ret_V_9_4_i_fu_1402_p0 <= rhs_V_1_cast_i_fu_1294_p1(32 - 1 downto 0);
    ret_V_9_4_i_fu_1402_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ret_V_9_4_i_fu_1402_p0) * signed(ret_V_4_i_reg_1939))), 33));
    ret_V_9_5_i_fu_1428_p0 <= rhs_V_1_cast_i_fu_1294_p1(32 - 1 downto 0);
    ret_V_9_5_i_fu_1428_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ret_V_9_5_i_fu_1428_p0) * signed(ret_V_5_i_reg_1944))), 33));
    ret_V_9_6_i_fu_1454_p0 <= rhs_V_1_cast_i_fu_1294_p1(32 - 1 downto 0);
    ret_V_9_6_i_fu_1454_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ret_V_9_6_i_fu_1454_p0) * signed(ret_V_6_i_reg_1949))), 33));
    ret_V_9_7_i_fu_1480_p0 <= rhs_V_1_cast_i_fu_1294_p1(32 - 1 downto 0);
    ret_V_9_7_i_fu_1480_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ret_V_9_7_i_fu_1480_p0) * signed(ret_V_7_i_reg_1954))), 33));
    ret_V_9_8_i_fu_1506_p0 <= rhs_V_1_cast_i_fu_1294_p1(32 - 1 downto 0);
    ret_V_9_8_i_fu_1506_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ret_V_9_8_i_fu_1506_p0) * signed(ret_V_8_i_reg_1959))), 33));
    ret_V_9_9_i_fu_1532_p0 <= rhs_V_1_cast_i_fu_1294_p1(32 - 1 downto 0);
    ret_V_9_9_i_fu_1532_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ret_V_9_9_i_fu_1532_p0) * signed(ret_V_i_30_reg_1964))), 33));
    ret_V_9_i_31_fu_1558_p0 <= rhs_V_1_cast_i_fu_1294_p1(32 - 1 downto 0);
    ret_V_9_i_31_fu_1558_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ret_V_9_i_31_fu_1558_p0) * signed(ret_V_10_i_reg_1969))), 33));
    ret_V_9_i_fu_1304_p0 <= rhs_V_1_cast_i_fu_1294_p1(32 - 1 downto 0);
    ret_V_9_i_fu_1304_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ret_V_9_i_fu_1304_p0) * signed(ret_V_i_reg_1919))), 33));
    ret_V_i_30_fu_1228_p2 <= std_logic_vector(signed(lhs_V_9_i_fu_1224_p1) - signed(rhs_V_fu_1130_p1));
    ret_V_i_fu_1138_p2 <= std_logic_vector(signed(lhs_V_i_fu_1134_p1) - signed(rhs_V_fu_1130_p1));
    rhs_V_1_cast_i_fu_1294_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_51_load_reg_1914),33));
        rhs_V_fu_1130_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_V_fu_594),33));

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_16_i_fu_1102_p2 <= "1" when (j_i_mid2_fu_1094_p3 = ap_const_lv6_0) else "0";
    tmp_17_i_fu_1297_p3 <= (j_i_mid2_reg_1900_pp0_iter2_reg & ap_const_lv4_0);
    tmp_28_10_i_fu_1599_p2 <= (tmp_17_i_fu_1297_p3 or ap_const_lv10_B);
    tmp_28_11_i_fu_1625_p2 <= (tmp_17_i_fu_1297_p3 or ap_const_lv10_C);
    tmp_28_12_i_fu_1651_p2 <= (tmp_17_i_fu_1297_p3 or ap_const_lv10_D);
    tmp_28_13_i_fu_1677_p2 <= (tmp_17_i_fu_1297_p3 or ap_const_lv10_E);
    tmp_28_14_i_fu_1703_p2 <= (tmp_17_i_fu_1297_p3 or ap_const_lv10_F);
    tmp_28_1_i_fu_1365_p2 <= (tmp_17_i_fu_1297_p3 or ap_const_lv10_2);
    tmp_28_2_i_fu_1391_p2 <= (tmp_17_i_fu_1297_p3 or ap_const_lv10_3);
    tmp_28_3_i_fu_1417_p2 <= (tmp_17_i_fu_1297_p3 or ap_const_lv10_4);
    tmp_28_4_i_fu_1443_p2 <= (tmp_17_i_fu_1297_p3 or ap_const_lv10_5);
    tmp_28_5_i_fu_1469_p2 <= (tmp_17_i_fu_1297_p3 or ap_const_lv10_6);
    tmp_28_6_i_fu_1495_p2 <= (tmp_17_i_fu_1297_p3 or ap_const_lv10_7);
    tmp_28_7_i_fu_1521_p2 <= (tmp_17_i_fu_1297_p3 or ap_const_lv10_8);
    tmp_28_8_i_fu_1547_p2 <= (tmp_17_i_fu_1297_p3 or ap_const_lv10_9);
    tmp_28_9_i_fu_1573_p2 <= (tmp_17_i_fu_1297_p3 or ap_const_lv10_A);
    tmp_28_i_fu_1339_p2 <= (tmp_17_i_fu_1297_p3 or ap_const_lv10_1);
    tmp_29_10_i_fu_1605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_10_i_fu_1599_p2),64));
    tmp_29_11_i_fu_1631_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_11_i_fu_1625_p2),64));
    tmp_29_12_i_fu_1657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_12_i_fu_1651_p2),64));
    tmp_29_13_i_fu_1683_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_13_i_fu_1677_p2),64));
    tmp_29_14_i_fu_1709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_14_i_fu_1703_p2),64));
    tmp_29_1_i_fu_1345_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_i_fu_1339_p2),64));
    tmp_29_2_i_fu_1371_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_1_i_fu_1365_p2),64));
    tmp_29_3_i_fu_1397_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_2_i_fu_1391_p2),64));
    tmp_29_4_i_fu_1423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_3_i_fu_1417_p2),64));
    tmp_29_5_i_fu_1449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_4_i_fu_1443_p2),64));
    tmp_29_6_i_fu_1475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_5_i_fu_1469_p2),64));
    tmp_29_7_i_fu_1501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_6_i_fu_1495_p2),64));
    tmp_29_8_i_fu_1527_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_7_i_fu_1521_p2),64));
    tmp_29_9_i_fu_1553_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_8_i_fu_1547_p2),64));
    tmp_29_i_33_fu_1579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_9_i_fu_1573_p2),64));
    tmp_29_i_fu_1319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_i_fu_1297_p3),64));
    tmp_fu_1059_p3 <= (n_pipe3_V_V_dout & ap_const_lv4_0);
    tmp_i_fu_1088_p2 <= "1" when (j_i_reg_1040 = ap_const_lv6_30) else "0";
end behav;
