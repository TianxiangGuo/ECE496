// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module QuantAct (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_V_data_V_dout,
        in_V_data_V_empty_n,
        in_V_data_V_read,
        in_V_id_V_dout,
        in_V_id_V_empty_n,
        in_V_id_V_read,
        in_V_dest_V_dout,
        in_V_dest_V_empty_n,
        in_V_dest_V_read,
        in_V_user_V_dout,
        in_V_user_V_empty_n,
        in_V_user_V_read,
        in_V_last_V_dout,
        in_V_last_V_empty_n,
        in_V_last_V_read,
        out_V_data_V_din,
        out_V_data_V_full_n,
        out_V_data_V_write,
        out_V_id_V_din,
        out_V_id_V_full_n,
        out_V_id_V_write,
        out_V_dest_V_din,
        out_V_dest_V_full_n,
        out_V_dest_V_write,
        out_V_user_V_din,
        out_V_user_V_full_n,
        out_V_user_V_write,
        out_V_last_V_din,
        out_V_last_V_full_n,
        out_V_last_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [511:0] in_V_data_V_dout;
input   in_V_data_V_empty_n;
output   in_V_data_V_read;
input  [7:0] in_V_id_V_dout;
input   in_V_id_V_empty_n;
output   in_V_id_V_read;
input  [7:0] in_V_dest_V_dout;
input   in_V_dest_V_empty_n;
output   in_V_dest_V_read;
input  [15:0] in_V_user_V_dout;
input   in_V_user_V_empty_n;
output   in_V_user_V_read;
input  [0:0] in_V_last_V_dout;
input   in_V_last_V_empty_n;
output   in_V_last_V_read;
output  [511:0] out_V_data_V_din;
input   out_V_data_V_full_n;
output   out_V_data_V_write;
output  [7:0] out_V_id_V_din;
input   out_V_id_V_full_n;
output   out_V_id_V_write;
output  [7:0] out_V_dest_V_din;
input   out_V_dest_V_full_n;
output   out_V_dest_V_write;
output  [15:0] out_V_user_V_din;
input   out_V_user_V_full_n;
output   out_V_user_V_write;
output  [0:0] out_V_last_V_din;
input   out_V_last_V_full_n;
output   out_V_last_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg[511:0] out_V_data_V_din;
reg[15:0] out_V_user_V_din;
reg[0:0] out_V_last_V_din;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [5:0] m_0_address0;
reg    m_0_ce0;
wire   [30:0] m_0_q0;
wire   [5:0] m_1_address0;
reg    m_1_ce0;
wire   [30:0] m_1_q0;
wire   [5:0] m_2_address0;
reg    m_2_ce0;
wire   [30:0] m_2_q0;
wire   [5:0] m_3_address0;
reg    m_3_ce0;
wire   [30:0] m_3_q0;
wire   [5:0] m_4_address0;
reg    m_4_ce0;
wire   [30:0] m_4_q0;
wire   [5:0] m_5_address0;
reg    m_5_ce0;
wire   [30:0] m_5_q0;
wire   [5:0] m_6_address0;
reg    m_6_ce0;
wire   [30:0] m_6_q0;
wire   [5:0] m_7_address0;
reg    m_7_ce0;
wire   [30:0] m_7_q0;
wire   [5:0] m_8_address0;
reg    m_8_ce0;
wire   [30:0] m_8_q0;
wire   [5:0] m_9_address0;
reg    m_9_ce0;
wire   [30:0] m_9_q0;
wire   [5:0] m_10_address0;
reg    m_10_ce0;
wire   [30:0] m_10_q0;
wire   [5:0] m_11_address0;
reg    m_11_ce0;
wire   [30:0] m_11_q0;
wire   [5:0] m_12_address0;
reg    m_12_ce0;
wire   [30:0] m_12_q0;
wire   [5:0] m_13_address0;
reg    m_13_ce0;
wire   [30:0] m_13_q0;
wire   [5:0] m_14_address0;
reg    m_14_ce0;
wire   [30:0] m_14_q0;
wire   [5:0] m_15_address0;
reg    m_15_ce0;
wire   [30:0] m_15_q0;
wire   [5:0] e_0_address0;
reg    e_0_ce0;
wire   [4:0] e_0_q0;
wire   [5:0] e_1_address0;
reg    e_1_ce0;
wire   [4:0] e_1_q0;
wire   [5:0] e_2_address0;
reg    e_2_ce0;
wire   [4:0] e_2_q0;
wire   [5:0] e_3_address0;
reg    e_3_ce0;
wire   [4:0] e_3_q0;
wire   [5:0] e_4_address0;
reg    e_4_ce0;
wire   [4:0] e_4_q0;
wire   [5:0] e_5_address0;
reg    e_5_ce0;
wire   [4:0] e_5_q0;
wire   [5:0] e_6_address0;
reg    e_6_ce0;
wire   [4:0] e_6_q0;
wire   [5:0] e_7_address0;
reg    e_7_ce0;
wire   [4:0] e_7_q0;
wire   [5:0] e_8_address0;
reg    e_8_ce0;
wire   [4:0] e_8_q0;
wire   [5:0] e_9_address0;
reg    e_9_ce0;
wire   [4:0] e_9_q0;
wire   [5:0] e_10_address0;
reg    e_10_ce0;
wire   [4:0] e_10_q0;
wire   [5:0] e_11_address0;
reg    e_11_ce0;
wire   [4:0] e_11_q0;
wire   [5:0] e_12_address0;
reg    e_12_ce0;
wire   [4:0] e_12_q0;
wire   [5:0] e_13_address0;
reg    e_13_ce0;
wire   [4:0] e_13_q0;
wire   [5:0] e_14_address0;
reg    e_14_ce0;
wire   [4:0] e_14_q0;
wire   [5:0] e_15_address0;
reg    e_15_ce0;
wire   [4:0] e_15_q0;
reg    in_V_data_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten_reg_2590;
reg    in_V_id_V_blk_n;
reg    in_V_dest_V_blk_n;
reg    in_V_user_V_blk_n;
reg    in_V_last_V_blk_n;
reg    out_V_data_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] tmp_6_reg_2714;
reg   [0:0] tmp_6_reg_2714_pp0_iter3_reg;
reg    out_V_id_V_blk_n;
reg    out_V_dest_V_blk_n;
reg    out_V_user_V_blk_n;
reg    out_V_last_V_blk_n;
reg   [37:0] indvar_flatten_reg_825;
reg   [31:0] i_reg_836;
reg   [511:0] p_Val2_1_reg_847;
reg   [5:0] j_reg_857;
wire   [511:0] out_data_data_V_fu_876_p1;
wire    in_V_id_V0_status;
wire    out_V_id_V1_status;
reg    ap_block_state1;
wire   [37:0] bound_fu_901_p2;
reg   [37:0] bound_reg_2585;
wire   [0:0] exitcond_flatten_fu_921_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_state6_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten_reg_2590_pp0_iter1_reg;
reg   [0:0] exitcond_flatten_reg_2590_pp0_iter2_reg;
reg   [0:0] exitcond_flatten_reg_2590_pp0_iter3_reg;
wire   [37:0] indvar_flatten_next_fu_926_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] tmp_user_V_1_fu_966_p3;
reg   [2:0] tmp_user_V_1_reg_2599;
reg   [2:0] tmp_user_V_1_reg_2599_pp0_iter1_reg;
reg   [2:0] tmp_user_V_1_reg_2599_pp0_iter2_reg;
reg   [2:0] tmp_user_V_1_reg_2599_pp0_iter3_reg;
wire   [31:0] i_mid2_fu_974_p3;
wire   [1:0] ii_fu_982_p1;
reg   [1:0] ii_reg_2609;
reg   [1:0] ii_reg_2609_pp0_iter1_reg;
reg   [1:0] ii_reg_2609_pp0_iter2_reg;
wire   [63:0] tmp_3_fu_986_p1;
reg   [63:0] tmp_3_reg_2614;
reg   [63:0] tmp_3_reg_2614_pp0_iter1_reg;
wire   [0:0] tmp_6_fu_1006_p2;
reg   [0:0] tmp_6_reg_2714_pp0_iter1_reg;
reg   [0:0] tmp_6_reg_2714_pp0_iter2_reg;
wire   [0:0] out_data_last_V_fu_1030_p2;
reg   [0:0] out_data_last_V_reg_2718;
reg   [0:0] out_data_last_V_reg_2718_pp0_iter1_reg;
reg   [0:0] out_data_last_V_reg_2718_pp0_iter2_reg;
reg   [0:0] out_data_last_V_reg_2718_pp0_iter3_reg;
wire   [5:0] j_1_fu_1036_p2;
wire   [31:0] tmp_55_fu_1042_p1;
reg   [31:0] tmp_55_reg_2728;
reg   [31:0] p_Result_6_1_reg_2733;
reg   [31:0] p_Result_6_2_reg_2738;
reg   [31:0] p_Result_6_3_reg_2743;
reg   [31:0] p_Result_6_4_reg_2748;
reg   [31:0] p_Result_6_5_reg_2753;
reg   [31:0] p_Result_6_6_reg_2758;
reg   [31:0] p_Result_6_7_reg_2763;
reg   [31:0] p_Result_6_8_reg_2768;
reg   [31:0] p_Result_6_9_reg_2773;
reg   [31:0] p_Result_6_s_reg_2778;
reg   [31:0] p_Result_6_10_reg_2783;
reg   [31:0] p_Result_6_11_reg_2788;
reg   [31:0] p_Result_6_12_reg_2793;
reg   [31:0] p_Result_6_13_reg_2798;
reg   [31:0] p_Result_6_14_reg_2803;
reg   [30:0] m_0_load_reg_2808;
reg   [30:0] m_1_load_reg_2813;
reg   [30:0] m_2_load_reg_2818;
reg   [30:0] m_3_load_reg_2823;
reg   [30:0] m_4_load_reg_2828;
reg   [30:0] m_5_load_reg_2833;
reg   [30:0] m_6_load_reg_2838;
reg   [30:0] m_7_load_reg_2843;
reg   [30:0] m_8_load_reg_2848;
reg   [30:0] m_9_load_reg_2853;
reg   [30:0] m_10_load_reg_2858;
reg   [30:0] m_11_load_reg_2863;
reg   [30:0] m_12_load_reg_2868;
reg   [30:0] m_13_load_reg_2873;
reg   [30:0] m_14_load_reg_2878;
reg   [30:0] m_15_load_reg_2883;
wire   [62:0] ret_V_s_fu_1202_p2;
reg   [62:0] ret_V_s_reg_2888;
wire   [62:0] ret_V_10_1_fu_1214_p2;
reg   [62:0] ret_V_10_1_reg_2894;
wire   [62:0] ret_V_10_2_fu_1226_p2;
reg   [62:0] ret_V_10_2_reg_2900;
wire   [62:0] ret_V_10_3_fu_1238_p2;
reg   [62:0] ret_V_10_3_reg_2906;
wire   [62:0] ret_V_10_4_fu_1250_p2;
reg   [62:0] ret_V_10_4_reg_2912;
wire   [62:0] ret_V_10_5_fu_1262_p2;
reg   [62:0] ret_V_10_5_reg_2918;
wire   [62:0] ret_V_10_6_fu_1274_p2;
reg   [62:0] ret_V_10_6_reg_2924;
wire   [62:0] ret_V_10_7_fu_1286_p2;
reg   [62:0] ret_V_10_7_reg_2930;
wire   [62:0] ret_V_10_8_fu_1298_p2;
reg   [62:0] ret_V_10_8_reg_2936;
wire   [62:0] ret_V_10_9_fu_1310_p2;
reg   [62:0] ret_V_10_9_reg_2942;
wire   [62:0] ret_V_10_s_fu_1322_p2;
reg   [62:0] ret_V_10_s_reg_2948;
wire   [62:0] ret_V_10_10_fu_1334_p2;
reg   [62:0] ret_V_10_10_reg_2954;
wire   [62:0] ret_V_10_11_fu_1346_p2;
reg   [62:0] ret_V_10_11_reg_2960;
wire   [62:0] ret_V_10_12_fu_1358_p2;
reg   [62:0] ret_V_10_12_reg_2966;
wire   [62:0] ret_V_10_13_fu_1370_p2;
reg   [62:0] ret_V_10_13_reg_2972;
wire   [62:0] ret_V_10_14_fu_1382_p2;
reg   [62:0] ret_V_10_14_reg_2978;
wire   [0:0] p_Result_s_fu_1466_p2;
reg   [0:0] p_Result_s_reg_3064;
wire   [7:0] tmp_73_fu_1481_p1;
reg   [7:0] tmp_73_reg_3069;
wire   [7:0] phitmp1_fu_1485_p2;
reg   [7:0] phitmp1_reg_3074;
wire   [0:0] p_Result_1_fu_1521_p2;
reg   [0:0] p_Result_1_reg_3079;
wire   [7:0] tmp_74_fu_1536_p1;
reg   [7:0] tmp_74_reg_3084;
wire   [7:0] phitmp3_fu_1540_p2;
reg   [7:0] phitmp3_reg_3089;
wire   [0:0] p_Result_2_fu_1576_p2;
reg   [0:0] p_Result_2_reg_3094;
wire   [7:0] tmp_75_fu_1591_p1;
reg   [7:0] tmp_75_reg_3099;
wire   [7:0] phitmp5_fu_1595_p2;
reg   [7:0] phitmp5_reg_3104;
wire   [0:0] p_Result_3_fu_1631_p2;
reg   [0:0] p_Result_3_reg_3109;
wire   [7:0] tmp_76_fu_1646_p1;
reg   [7:0] tmp_76_reg_3114;
wire   [7:0] phitmp7_fu_1650_p2;
reg   [7:0] phitmp7_reg_3119;
wire   [0:0] p_Result_4_fu_1686_p2;
reg   [0:0] p_Result_4_reg_3124;
wire   [7:0] tmp_77_fu_1701_p1;
reg   [7:0] tmp_77_reg_3129;
wire   [7:0] phitmp9_fu_1705_p2;
reg   [7:0] phitmp9_reg_3134;
wire   [0:0] p_Result_5_fu_1741_p2;
reg   [0:0] p_Result_5_reg_3139;
wire   [7:0] tmp_78_fu_1756_p1;
reg   [7:0] tmp_78_reg_3144;
wire   [7:0] phitmp_fu_1760_p2;
reg   [7:0] phitmp_reg_3149;
wire   [0:0] p_Result_6_fu_1796_p2;
reg   [0:0] p_Result_6_reg_3154;
wire   [7:0] tmp_79_fu_1811_p1;
reg   [7:0] tmp_79_reg_3159;
wire   [7:0] phitmp2_fu_1815_p2;
reg   [7:0] phitmp2_reg_3164;
wire   [0:0] p_Result_7_fu_1851_p2;
reg   [0:0] p_Result_7_reg_3169;
wire   [7:0] tmp_80_fu_1866_p1;
reg   [7:0] tmp_80_reg_3174;
wire   [7:0] phitmp4_fu_1870_p2;
reg   [7:0] phitmp4_reg_3179;
wire   [0:0] p_Result_s_297_fu_1906_p2;
reg   [0:0] p_Result_s_297_reg_3184;
wire   [7:0] tmp_81_fu_1921_p1;
reg   [7:0] tmp_81_reg_3189;
wire   [7:0] phitmp6_fu_1925_p2;
reg   [7:0] phitmp6_reg_3194;
wire   [0:0] p_Result_8_fu_1961_p2;
reg   [0:0] p_Result_8_reg_3199;
wire   [7:0] tmp_82_fu_1976_p1;
reg   [7:0] tmp_82_reg_3204;
wire   [7:0] phitmp8_fu_1980_p2;
reg   [7:0] phitmp8_reg_3209;
wire   [0:0] p_Result_9_fu_2016_p2;
reg   [0:0] p_Result_9_reg_3214;
wire   [7:0] tmp_83_fu_2031_p1;
reg   [7:0] tmp_83_reg_3219;
wire   [7:0] phitmp10_fu_2035_p2;
reg   [7:0] phitmp10_reg_3224;
wire   [0:0] p_Result_10_fu_2071_p2;
reg   [0:0] p_Result_10_reg_3229;
wire   [7:0] tmp_84_fu_2086_p1;
reg   [7:0] tmp_84_reg_3234;
wire   [7:0] phitmp11_fu_2090_p2;
reg   [7:0] phitmp11_reg_3239;
wire   [0:0] p_Result_11_fu_2126_p2;
reg   [0:0] p_Result_11_reg_3244;
wire   [7:0] tmp_85_fu_2141_p1;
reg   [7:0] tmp_85_reg_3249;
wire   [7:0] phitmp12_fu_2145_p2;
reg   [7:0] phitmp12_reg_3254;
wire   [0:0] p_Result_12_fu_2181_p2;
reg   [0:0] p_Result_12_reg_3259;
wire   [7:0] tmp_86_fu_2196_p1;
reg   [7:0] tmp_86_reg_3264;
wire   [7:0] phitmp13_fu_2200_p2;
reg   [7:0] phitmp13_reg_3269;
wire   [0:0] p_Result_13_fu_2236_p2;
reg   [0:0] p_Result_13_reg_3274;
wire   [7:0] tmp_87_fu_2251_p1;
reg   [7:0] tmp_87_reg_3279;
wire   [7:0] phitmp14_fu_2255_p2;
reg   [7:0] phitmp14_reg_3284;
wire   [0:0] p_Result_14_fu_2291_p2;
reg   [0:0] p_Result_14_reg_3289;
wire   [7:0] tmp_88_fu_2306_p1;
reg   [7:0] tmp_88_reg_3294;
wire   [7:0] phitmp15_fu_2310_p2;
reg   [7:0] phitmp15_reg_3299;
wire   [8:0] Lo_assign_fu_2316_p3;
reg   [8:0] Lo_assign_reg_3304;
wire   [8:0] Hi_assign_fu_2323_p2;
reg   [8:0] Hi_assign_reg_3309;
wire   [0:0] tmp_fu_2329_p2;
reg   [0:0] tmp_reg_3314;
wire   [511:0] tmp_data_V_4_fu_2573_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    in_V_id_V0_update;
reg    out_V_id_V1_update;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] tmp_user_V_7_cast_fu_2338_p1;
wire   [31:0] N_fu_872_p1;
wire   [35:0] tmp_1_fu_889_p3;
wire   [37:0] p_shl_fu_881_p3;
wire   [37:0] p_shl2_fu_897_p1;
wire   [0:0] tmp_s_fu_907_p2;
wire   [0:0] tmp_7_fu_932_p2;
wire   [31:0] i_s_fu_946_p2;
wire   [0:0] tmp_mid1_fu_952_p2;
wire   [2:0] tmp_user_V_6_mid1_fu_958_p3;
wire   [2:0] tmp_user_V_fu_913_p3;
wire   [5:0] j_mid2_fu_938_p3;
wire   [3:0] tmp_8_fu_1012_p4;
wire   [5:0] jj_0_mask_fu_1022_p3;
wire  signed [31:0] ret_V_s_fu_1202_p0;
wire   [30:0] ret_V_s_fu_1202_p1;
wire  signed [31:0] ret_V_10_1_fu_1214_p0;
wire   [30:0] ret_V_10_1_fu_1214_p1;
wire  signed [31:0] ret_V_10_2_fu_1226_p0;
wire   [30:0] ret_V_10_2_fu_1226_p1;
wire  signed [31:0] ret_V_10_3_fu_1238_p0;
wire   [30:0] ret_V_10_3_fu_1238_p1;
wire  signed [31:0] ret_V_10_4_fu_1250_p0;
wire   [30:0] ret_V_10_4_fu_1250_p1;
wire  signed [31:0] ret_V_10_5_fu_1262_p0;
wire   [30:0] ret_V_10_5_fu_1262_p1;
wire  signed [31:0] ret_V_10_6_fu_1274_p0;
wire   [30:0] ret_V_10_6_fu_1274_p1;
wire  signed [31:0] ret_V_10_7_fu_1286_p0;
wire   [30:0] ret_V_10_7_fu_1286_p1;
wire  signed [31:0] ret_V_10_8_fu_1298_p0;
wire   [30:0] ret_V_10_8_fu_1298_p1;
wire  signed [31:0] ret_V_10_9_fu_1310_p0;
wire   [30:0] ret_V_10_9_fu_1310_p1;
wire  signed [31:0] ret_V_10_s_fu_1322_p0;
wire   [30:0] ret_V_10_s_fu_1322_p1;
wire  signed [31:0] ret_V_10_10_fu_1334_p0;
wire   [30:0] ret_V_10_10_fu_1334_p1;
wire  signed [31:0] ret_V_10_11_fu_1346_p0;
wire   [30:0] ret_V_10_11_fu_1346_p1;
wire  signed [31:0] ret_V_10_12_fu_1358_p0;
wire   [30:0] ret_V_10_12_fu_1358_p1;
wire  signed [31:0] ret_V_10_13_fu_1370_p0;
wire   [30:0] ret_V_10_13_fu_1370_p1;
wire  signed [31:0] ret_V_10_14_fu_1382_p0;
wire   [30:0] ret_V_10_14_fu_1382_p1;
wire  signed [4:0] e_0_load_cast_fu_1436_p0;
wire  signed [4:0] index_assign_fu_1440_p1;
wire   [4:0] index_assign_fu_1440_p2;
wire  signed [5:0] index_assign_cast_fu_1446_p1;
wire   [54:0] tmp_50_cast_fu_1450_p1;
wire   [54:0] tmp_4_fu_1454_p2;
wire   [54:0] tmp_56_fu_1388_p1;
wire   [54:0] tmp_5_fu_1460_p2;
wire  signed [5:0] e_0_load_cast_fu_1436_p1;
wire   [62:0] tmp_57_cast_fu_1472_p1;
wire   [62:0] r_V_2_fu_1476_p2;
wire  signed [4:0] e_1_load_cast_fu_1491_p0;
wire  signed [4:0] index_assign_1_fu_1495_p1;
wire   [4:0] index_assign_1_fu_1495_p2;
wire  signed [5:0] index_assign_1_cast_fu_1501_p1;
wire   [54:0] tmp_50_1_cast_fu_1505_p1;
wire   [54:0] tmp_51_1_fu_1509_p2;
wire   [54:0] tmp_57_fu_1391_p1;
wire   [54:0] tmp_52_1_fu_1515_p2;
wire  signed [5:0] e_1_load_cast_fu_1491_p1;
wire   [62:0] tmp_57_1_cast_fu_1527_p1;
wire   [62:0] r_V_2_1_fu_1531_p2;
wire  signed [4:0] e_2_load_cast_fu_1546_p0;
wire  signed [4:0] index_assign_2_fu_1550_p1;
wire   [4:0] index_assign_2_fu_1550_p2;
wire  signed [5:0] index_assign_2_cast_fu_1556_p1;
wire   [54:0] tmp_50_2_cast_fu_1560_p1;
wire   [54:0] tmp_51_2_fu_1564_p2;
wire   [54:0] tmp_58_fu_1394_p1;
wire   [54:0] tmp_52_2_fu_1570_p2;
wire  signed [5:0] e_2_load_cast_fu_1546_p1;
wire   [62:0] tmp_57_2_cast_fu_1582_p1;
wire   [62:0] r_V_2_2_fu_1586_p2;
wire  signed [4:0] e_3_load_cast_fu_1601_p0;
wire  signed [4:0] index_assign_3_fu_1605_p1;
wire   [4:0] index_assign_3_fu_1605_p2;
wire  signed [5:0] index_assign_3_cast_fu_1611_p1;
wire   [54:0] tmp_50_3_cast_fu_1615_p1;
wire   [54:0] tmp_51_3_fu_1619_p2;
wire   [54:0] tmp_59_fu_1397_p1;
wire   [54:0] tmp_52_3_fu_1625_p2;
wire  signed [5:0] e_3_load_cast_fu_1601_p1;
wire   [62:0] tmp_57_3_cast_fu_1637_p1;
wire   [62:0] r_V_2_3_fu_1641_p2;
wire  signed [4:0] e_4_load_cast_fu_1656_p0;
wire  signed [4:0] index_assign_4_fu_1660_p1;
wire   [4:0] index_assign_4_fu_1660_p2;
wire  signed [5:0] index_assign_4_cast_fu_1666_p1;
wire   [54:0] tmp_50_4_cast_fu_1670_p1;
wire   [54:0] tmp_51_4_fu_1674_p2;
wire   [54:0] tmp_60_fu_1400_p1;
wire   [54:0] tmp_52_4_fu_1680_p2;
wire  signed [5:0] e_4_load_cast_fu_1656_p1;
wire   [62:0] tmp_57_4_cast_fu_1692_p1;
wire   [62:0] r_V_2_4_fu_1696_p2;
wire  signed [4:0] e_5_load_cast_fu_1711_p0;
wire  signed [4:0] index_assign_5_fu_1715_p1;
wire   [4:0] index_assign_5_fu_1715_p2;
wire  signed [5:0] index_assign_5_cast_fu_1721_p1;
wire   [54:0] tmp_50_5_cast_fu_1725_p1;
wire   [54:0] tmp_51_5_fu_1729_p2;
wire   [54:0] tmp_62_fu_1403_p1;
wire   [54:0] tmp_52_5_fu_1735_p2;
wire  signed [5:0] e_5_load_cast_fu_1711_p1;
wire   [62:0] tmp_57_5_cast_fu_1747_p1;
wire   [62:0] r_V_2_5_fu_1751_p2;
wire  signed [4:0] e_6_load_cast_fu_1766_p0;
wire  signed [4:0] index_assign_6_fu_1770_p1;
wire   [4:0] index_assign_6_fu_1770_p2;
wire  signed [5:0] index_assign_6_cast_fu_1776_p1;
wire   [54:0] tmp_50_6_cast_fu_1780_p1;
wire   [54:0] tmp_51_6_fu_1784_p2;
wire   [54:0] tmp_63_fu_1406_p1;
wire   [54:0] tmp_52_6_fu_1790_p2;
wire  signed [5:0] e_6_load_cast_fu_1766_p1;
wire   [62:0] tmp_57_6_cast_fu_1802_p1;
wire   [62:0] r_V_2_6_fu_1806_p2;
wire  signed [4:0] e_7_load_cast_fu_1821_p0;
wire  signed [4:0] index_assign_7_fu_1825_p1;
wire   [4:0] index_assign_7_fu_1825_p2;
wire  signed [5:0] index_assign_7_cast_fu_1831_p1;
wire   [54:0] tmp_50_7_cast_fu_1835_p1;
wire   [54:0] tmp_51_7_fu_1839_p2;
wire   [54:0] tmp_64_fu_1409_p1;
wire   [54:0] tmp_52_7_fu_1845_p2;
wire  signed [5:0] e_7_load_cast_fu_1821_p1;
wire   [62:0] tmp_57_7_cast_fu_1857_p1;
wire   [62:0] r_V_2_7_fu_1861_p2;
wire  signed [4:0] e_8_load_cast_fu_1876_p0;
wire  signed [4:0] index_assign_8_fu_1880_p1;
wire   [4:0] index_assign_8_fu_1880_p2;
wire  signed [5:0] index_assign_8_cast_fu_1886_p1;
wire   [54:0] tmp_50_8_cast_fu_1890_p1;
wire   [54:0] tmp_51_8_fu_1894_p2;
wire   [54:0] tmp_65_fu_1412_p1;
wire   [54:0] tmp_52_8_fu_1900_p2;
wire  signed [5:0] e_8_load_cast_fu_1876_p1;
wire   [62:0] tmp_57_8_cast_fu_1912_p1;
wire   [62:0] r_V_2_8_fu_1916_p2;
wire  signed [4:0] e_9_load_cast_fu_1931_p0;
wire  signed [4:0] index_assign_9_fu_1935_p1;
wire   [4:0] index_assign_9_fu_1935_p2;
wire  signed [5:0] index_assign_9_cast_fu_1941_p1;
wire   [53:0] tmp_50_9_cast_fu_1945_p1;
wire   [53:0] tmp_51_9_fu_1949_p2;
wire   [53:0] tmp_66_fu_1415_p1;
wire   [53:0] tmp_52_9_fu_1955_p2;
wire  signed [5:0] e_9_load_cast_fu_1931_p1;
wire   [62:0] tmp_57_9_cast_fu_1967_p1;
wire   [62:0] r_V_2_9_fu_1971_p2;
wire  signed [4:0] e_10_load_cast_fu_1986_p0;
wire  signed [4:0] index_assign_s_fu_1990_p1;
wire   [4:0] index_assign_s_fu_1990_p2;
wire  signed [5:0] index_assign_cast_298_fu_1996_p1;
wire   [54:0] tmp_50_cast_299_fu_2000_p1;
wire   [54:0] tmp_51_s_fu_2004_p2;
wire   [54:0] tmp_67_fu_1418_p1;
wire   [54:0] tmp_52_s_fu_2010_p2;
wire  signed [5:0] e_10_load_cast_fu_1986_p1;
wire   [62:0] tmp_57_cast_300_fu_2022_p1;
wire   [62:0] r_V_2_s_fu_2026_p2;
wire  signed [4:0] e_11_load_cast_fu_2041_p0;
wire  signed [4:0] index_assign_10_fu_2045_p1;
wire   [4:0] index_assign_10_fu_2045_p2;
wire  signed [5:0] index_assign_10_cast_fu_2051_p1;
wire   [55:0] tmp_50_10_cast_fu_2055_p1;
wire   [55:0] tmp_51_10_fu_2059_p2;
wire   [55:0] tmp_68_fu_1421_p1;
wire   [55:0] tmp_52_10_fu_2065_p2;
wire  signed [5:0] e_11_load_cast_fu_2041_p1;
wire   [62:0] tmp_57_10_cast_fu_2077_p1;
wire   [62:0] r_V_2_10_fu_2081_p2;
wire  signed [4:0] e_12_load_cast_fu_2096_p0;
wire  signed [4:0] index_assign_11_fu_2100_p1;
wire   [4:0] index_assign_11_fu_2100_p2;
wire  signed [5:0] index_assign_11_cast_fu_2106_p1;
wire   [54:0] tmp_50_11_cast_fu_2110_p1;
wire   [54:0] tmp_51_11_fu_2114_p2;
wire   [54:0] tmp_69_fu_1424_p1;
wire   [54:0] tmp_52_11_fu_2120_p2;
wire  signed [5:0] e_12_load_cast_fu_2096_p1;
wire   [62:0] tmp_57_11_cast_fu_2132_p1;
wire   [62:0] r_V_2_11_fu_2136_p2;
wire  signed [4:0] e_13_load_cast_fu_2151_p0;
wire  signed [4:0] index_assign_12_fu_2155_p1;
wire   [4:0] index_assign_12_fu_2155_p2;
wire  signed [5:0] index_assign_12_cast_fu_2161_p1;
wire   [54:0] tmp_50_12_cast_fu_2165_p1;
wire   [54:0] tmp_51_12_fu_2169_p2;
wire   [54:0] tmp_70_fu_1427_p1;
wire   [54:0] tmp_52_12_fu_2175_p2;
wire  signed [5:0] e_13_load_cast_fu_2151_p1;
wire   [62:0] tmp_57_12_cast_fu_2187_p1;
wire   [62:0] r_V_2_12_fu_2191_p2;
wire  signed [4:0] e_14_load_cast_fu_2206_p0;
wire  signed [4:0] index_assign_13_fu_2210_p1;
wire   [4:0] index_assign_13_fu_2210_p2;
wire  signed [5:0] index_assign_13_cast_fu_2216_p1;
wire   [54:0] tmp_50_13_cast_fu_2220_p1;
wire   [54:0] tmp_51_13_fu_2224_p2;
wire   [54:0] tmp_71_fu_1430_p1;
wire   [54:0] tmp_52_13_fu_2230_p2;
wire  signed [5:0] e_14_load_cast_fu_2206_p1;
wire   [62:0] tmp_57_13_cast_fu_2242_p1;
wire   [62:0] r_V_2_13_fu_2246_p2;
wire  signed [4:0] e_15_load_cast_fu_2261_p0;
wire  signed [4:0] index_assign_14_fu_2265_p1;
wire   [4:0] index_assign_14_fu_2265_p2;
wire  signed [5:0] index_assign_14_cast_fu_2271_p1;
wire   [54:0] tmp_50_14_cast_fu_2275_p1;
wire   [54:0] tmp_51_14_fu_2279_p2;
wire   [54:0] tmp_72_fu_1433_p1;
wire   [54:0] tmp_52_14_fu_2285_p2;
wire  signed [5:0] e_15_load_cast_fu_2261_p1;
wire   [62:0] tmp_57_14_cast_fu_2297_p1;
wire   [62:0] r_V_2_14_fu_2301_p2;
wire  signed [3:0] tmp_user_V_7_cast1_fu_2335_p1;
wire   [7:0] in_data2_15_V_fu_2418_p3;
wire   [7:0] in_data2_14_V_fu_2413_p3;
wire   [7:0] in_data2_13_V_fu_2408_p3;
wire   [7:0] in_data2_12_V_fu_2403_p3;
wire   [7:0] in_data2_11_V_fu_2398_p3;
wire   [7:0] in_data2_10_V_fu_2393_p3;
wire   [7:0] in_data2_9_V_fu_2388_p3;
wire   [7:0] in_data2_8_V_fu_2383_p3;
wire   [7:0] in_data2_7_V_fu_2378_p3;
wire   [7:0] in_data2_6_V_fu_2373_p3;
wire   [7:0] in_data2_5_V_fu_2368_p3;
wire   [7:0] in_data2_4_V_fu_2363_p3;
wire   [7:0] in_data2_3_V_fu_2358_p3;
wire   [7:0] in_data2_2_V_fu_2353_p3;
wire   [7:0] in_data2_1_V_fu_2348_p3;
wire   [7:0] in_data2_0_V_fu_2343_p3;
wire   [127:0] p_Result_9_s_fu_2423_p17;
wire   [9:0] tmp_89_fu_2463_p1;
wire   [9:0] tmp_90_fu_2466_p1;
wire   [9:0] tmp_91_fu_2469_p2;
wire   [9:0] tmp_92_fu_2475_p3;
wire   [9:0] tmp_94_fu_2489_p3;
wire   [9:0] tmp_93_fu_2482_p3;
wire   [9:0] tmp_95_fu_2496_p2;
wire   [511:0] tmp_V_fu_2459_p1;
wire   [511:0] tmp_96_fu_2502_p1;
wire   [511:0] tmp_99_fu_2514_p2;
reg   [511:0] tmp_100_fu_2520_p4;
wire   [511:0] tmp_97_fu_2506_p1;
wire   [511:0] tmp_98_fu_2510_p1;
wire   [511:0] tmp_102_fu_2537_p2;
wire   [511:0] tmp_103_fu_2543_p2;
wire   [511:0] p_demorgan_fu_2549_p2;
wire   [511:0] tmp_104_fu_2555_p2;
wire   [511:0] tmp_101_fu_2530_p3;
wire   [511:0] tmp_105_fu_2561_p2;
wire   [511:0] tmp_106_fu_2567_p2;
wire    ap_CS_fsm_state7;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [62:0] ret_V_10_10_fu_1334_p10;
wire   [62:0] ret_V_10_11_fu_1346_p10;
wire   [62:0] ret_V_10_12_fu_1358_p10;
wire   [62:0] ret_V_10_13_fu_1370_p10;
wire   [62:0] ret_V_10_14_fu_1382_p10;
wire   [62:0] ret_V_10_1_fu_1214_p10;
wire   [62:0] ret_V_10_2_fu_1226_p10;
wire   [62:0] ret_V_10_3_fu_1238_p10;
wire   [62:0] ret_V_10_4_fu_1250_p10;
wire   [62:0] ret_V_10_5_fu_1262_p10;
wire   [62:0] ret_V_10_6_fu_1274_p10;
wire   [62:0] ret_V_10_7_fu_1286_p10;
wire   [62:0] ret_V_10_8_fu_1298_p10;
wire   [62:0] ret_V_10_9_fu_1310_p10;
wire   [62:0] ret_V_10_s_fu_1322_p10;
wire   [62:0] ret_V_s_fu_1202_p10;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

QuantAct_m_0 #(
    .DataWidth( 31 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
m_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_0_address0),
    .ce0(m_0_ce0),
    .q0(m_0_q0)
);

QuantAct_m_1 #(
    .DataWidth( 31 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
m_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_1_address0),
    .ce0(m_1_ce0),
    .q0(m_1_q0)
);

QuantAct_m_2 #(
    .DataWidth( 31 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
m_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_2_address0),
    .ce0(m_2_ce0),
    .q0(m_2_q0)
);

QuantAct_m_3 #(
    .DataWidth( 31 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
m_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_3_address0),
    .ce0(m_3_ce0),
    .q0(m_3_q0)
);

QuantAct_m_4 #(
    .DataWidth( 31 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
m_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_4_address0),
    .ce0(m_4_ce0),
    .q0(m_4_q0)
);

QuantAct_m_5 #(
    .DataWidth( 31 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
m_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_5_address0),
    .ce0(m_5_ce0),
    .q0(m_5_q0)
);

QuantAct_m_6 #(
    .DataWidth( 31 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
m_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_6_address0),
    .ce0(m_6_ce0),
    .q0(m_6_q0)
);

QuantAct_m_7 #(
    .DataWidth( 31 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
m_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_7_address0),
    .ce0(m_7_ce0),
    .q0(m_7_q0)
);

QuantAct_m_8 #(
    .DataWidth( 31 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
m_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_8_address0),
    .ce0(m_8_ce0),
    .q0(m_8_q0)
);

QuantAct_m_9 #(
    .DataWidth( 31 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
m_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_9_address0),
    .ce0(m_9_ce0),
    .q0(m_9_q0)
);

QuantAct_m_10 #(
    .DataWidth( 31 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
m_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_10_address0),
    .ce0(m_10_ce0),
    .q0(m_10_q0)
);

QuantAct_m_11 #(
    .DataWidth( 31 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
m_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_11_address0),
    .ce0(m_11_ce0),
    .q0(m_11_q0)
);

QuantAct_m_12 #(
    .DataWidth( 31 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
m_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_12_address0),
    .ce0(m_12_ce0),
    .q0(m_12_q0)
);

QuantAct_m_13 #(
    .DataWidth( 31 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
m_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_13_address0),
    .ce0(m_13_ce0),
    .q0(m_13_q0)
);

QuantAct_m_14 #(
    .DataWidth( 31 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
m_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_14_address0),
    .ce0(m_14_ce0),
    .q0(m_14_q0)
);

QuantAct_m_15 #(
    .DataWidth( 31 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
m_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(m_15_address0),
    .ce0(m_15_ce0),
    .q0(m_15_q0)
);

QuantAct_e_0 #(
    .DataWidth( 5 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
e_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(e_0_address0),
    .ce0(e_0_ce0),
    .q0(e_0_q0)
);

QuantAct_e_1 #(
    .DataWidth( 5 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
e_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(e_1_address0),
    .ce0(e_1_ce0),
    .q0(e_1_q0)
);

QuantAct_e_2 #(
    .DataWidth( 5 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
e_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(e_2_address0),
    .ce0(e_2_ce0),
    .q0(e_2_q0)
);

QuantAct_e_3 #(
    .DataWidth( 5 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
e_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(e_3_address0),
    .ce0(e_3_ce0),
    .q0(e_3_q0)
);

QuantAct_e_4 #(
    .DataWidth( 5 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
e_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(e_4_address0),
    .ce0(e_4_ce0),
    .q0(e_4_q0)
);

QuantAct_e_5 #(
    .DataWidth( 5 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
e_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(e_5_address0),
    .ce0(e_5_ce0),
    .q0(e_5_q0)
);

QuantAct_e_6 #(
    .DataWidth( 5 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
e_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(e_6_address0),
    .ce0(e_6_ce0),
    .q0(e_6_q0)
);

QuantAct_e_7 #(
    .DataWidth( 5 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
e_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(e_7_address0),
    .ce0(e_7_ce0),
    .q0(e_7_q0)
);

QuantAct_e_8 #(
    .DataWidth( 5 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
e_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(e_8_address0),
    .ce0(e_8_ce0),
    .q0(e_8_q0)
);

QuantAct_e_9 #(
    .DataWidth( 5 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
e_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(e_9_address0),
    .ce0(e_9_ce0),
    .q0(e_9_q0)
);

QuantAct_e_10 #(
    .DataWidth( 5 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
e_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(e_10_address0),
    .ce0(e_10_ce0),
    .q0(e_10_q0)
);

QuantAct_e_11 #(
    .DataWidth( 5 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
e_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(e_11_address0),
    .ce0(e_11_ce0),
    .q0(e_11_q0)
);

QuantAct_e_12 #(
    .DataWidth( 5 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
e_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(e_12_address0),
    .ce0(e_12_ce0),
    .q0(e_12_q0)
);

QuantAct_e_13 #(
    .DataWidth( 5 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
e_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(e_13_address0),
    .ce0(e_13_ce0),
    .q0(e_13_q0)
);

QuantAct_e_14 #(
    .DataWidth( 5 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
e_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(e_14_address0),
    .ce0(e_14_ce0),
    .q0(e_14_q0)
);

QuantAct_e_15 #(
    .DataWidth( 5 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
e_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(e_15_address0),
    .ce0(e_15_ce0),
    .q0(e_15_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (out_V_id_V1_status == 1'b0) | (in_V_id_V0_status == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((~((real_start == 1'b0) | (out_V_id_V1_status == 1'b0) | (in_V_id_V0_status == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_921_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_836 <= i_mid2_fu_974_p3;
    end else if ((~((real_start == 1'b0) | (out_V_id_V1_status == 1'b0) | (in_V_id_V0_status == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_836 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_921_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_825 <= indvar_flatten_next_fu_926_p2;
    end else if ((~((real_start == 1'b0) | (out_V_id_V1_status == 1'b0) | (in_V_id_V0_status == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_825 <= 38'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_921_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_857 <= j_1_fu_1036_p2;
    end else if ((~((real_start == 1'b0) | (out_V_id_V1_status == 1'b0) | (in_V_id_V0_status == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_857 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_2590_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        p_Val2_1_reg_847 <= tmp_data_V_4_fu_2573_p2;
    end else if ((~((real_start == 1'b0) | (out_V_id_V1_status == 1'b0) | (in_V_id_V0_status == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Val2_1_reg_847 <= out_data_data_V_fu_876_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_2590_pp0_iter2_reg == 1'd0))) begin
        Hi_assign_reg_3309[8 : 7] <= Hi_assign_fu_2323_p2[8 : 7];
        Lo_assign_reg_3304[8 : 7] <= Lo_assign_fu_2316_p3[8 : 7];
        p_Result_10_reg_3229 <= p_Result_10_fu_2071_p2;
        p_Result_11_reg_3244 <= p_Result_11_fu_2126_p2;
        p_Result_12_reg_3259 <= p_Result_12_fu_2181_p2;
        p_Result_13_reg_3274 <= p_Result_13_fu_2236_p2;
        p_Result_14_reg_3289 <= p_Result_14_fu_2291_p2;
        p_Result_1_reg_3079 <= p_Result_1_fu_1521_p2;
        p_Result_2_reg_3094 <= p_Result_2_fu_1576_p2;
        p_Result_3_reg_3109 <= p_Result_3_fu_1631_p2;
        p_Result_4_reg_3124 <= p_Result_4_fu_1686_p2;
        p_Result_5_reg_3139 <= p_Result_5_fu_1741_p2;
        p_Result_6_reg_3154 <= p_Result_6_fu_1796_p2;
        p_Result_7_reg_3169 <= p_Result_7_fu_1851_p2;
        p_Result_8_reg_3199 <= p_Result_8_fu_1961_p2;
        p_Result_9_reg_3214 <= p_Result_9_fu_2016_p2;
        p_Result_s_297_reg_3184 <= p_Result_s_297_fu_1906_p2;
        p_Result_s_reg_3064 <= p_Result_s_fu_1466_p2;
        phitmp10_reg_3224 <= phitmp10_fu_2035_p2;
        phitmp11_reg_3239 <= phitmp11_fu_2090_p2;
        phitmp12_reg_3254 <= phitmp12_fu_2145_p2;
        phitmp13_reg_3269 <= phitmp13_fu_2200_p2;
        phitmp14_reg_3284 <= phitmp14_fu_2255_p2;
        phitmp15_reg_3299 <= phitmp15_fu_2310_p2;
        phitmp1_reg_3074 <= phitmp1_fu_1485_p2;
        phitmp2_reg_3164 <= phitmp2_fu_1815_p2;
        phitmp3_reg_3089 <= phitmp3_fu_1540_p2;
        phitmp4_reg_3179 <= phitmp4_fu_1870_p2;
        phitmp5_reg_3104 <= phitmp5_fu_1595_p2;
        phitmp6_reg_3194 <= phitmp6_fu_1925_p2;
        phitmp7_reg_3119 <= phitmp7_fu_1650_p2;
        phitmp8_reg_3209 <= phitmp8_fu_1980_p2;
        phitmp9_reg_3134 <= phitmp9_fu_1705_p2;
        phitmp_reg_3149 <= phitmp_fu_1760_p2;
        tmp_73_reg_3069 <= tmp_73_fu_1481_p1;
        tmp_74_reg_3084 <= tmp_74_fu_1536_p1;
        tmp_75_reg_3099 <= tmp_75_fu_1591_p1;
        tmp_76_reg_3114 <= tmp_76_fu_1646_p1;
        tmp_77_reg_3129 <= tmp_77_fu_1701_p1;
        tmp_78_reg_3144 <= tmp_78_fu_1756_p1;
        tmp_79_reg_3159 <= tmp_79_fu_1811_p1;
        tmp_80_reg_3174 <= tmp_80_fu_1866_p1;
        tmp_81_reg_3189 <= tmp_81_fu_1921_p1;
        tmp_82_reg_3204 <= tmp_82_fu_1976_p1;
        tmp_83_reg_3219 <= tmp_83_fu_2031_p1;
        tmp_84_reg_3234 <= tmp_84_fu_2086_p1;
        tmp_85_reg_3249 <= tmp_85_fu_2141_p1;
        tmp_86_reg_3264 <= tmp_86_fu_2196_p1;
        tmp_87_reg_3279 <= tmp_87_fu_2251_p1;
        tmp_88_reg_3294 <= tmp_88_fu_2306_p1;
        tmp_reg_3314 <= tmp_fu_2329_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (out_V_id_V1_status == 1'b0) | (in_V_id_V0_status == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        bound_reg_2585[37 : 4] <= bound_fu_901_p2[37 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten_reg_2590 <= exitcond_flatten_fu_921_p2;
        exitcond_flatten_reg_2590_pp0_iter1_reg <= exitcond_flatten_reg_2590;
        ii_reg_2609_pp0_iter1_reg <= ii_reg_2609;
        out_data_last_V_reg_2718_pp0_iter1_reg <= out_data_last_V_reg_2718;
        tmp_3_reg_2614_pp0_iter1_reg[5 : 0] <= tmp_3_reg_2614[5 : 0];
        tmp_6_reg_2714_pp0_iter1_reg <= tmp_6_reg_2714;
        tmp_user_V_1_reg_2599_pp0_iter1_reg[0] <= tmp_user_V_1_reg_2599[0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond_flatten_reg_2590_pp0_iter2_reg <= exitcond_flatten_reg_2590_pp0_iter1_reg;
        exitcond_flatten_reg_2590_pp0_iter3_reg <= exitcond_flatten_reg_2590_pp0_iter2_reg;
        ii_reg_2609_pp0_iter2_reg <= ii_reg_2609_pp0_iter1_reg;
        out_data_last_V_reg_2718_pp0_iter2_reg <= out_data_last_V_reg_2718_pp0_iter1_reg;
        out_data_last_V_reg_2718_pp0_iter3_reg <= out_data_last_V_reg_2718_pp0_iter2_reg;
        tmp_6_reg_2714_pp0_iter2_reg <= tmp_6_reg_2714_pp0_iter1_reg;
        tmp_6_reg_2714_pp0_iter3_reg <= tmp_6_reg_2714_pp0_iter2_reg;
        tmp_user_V_1_reg_2599_pp0_iter2_reg[0] <= tmp_user_V_1_reg_2599_pp0_iter1_reg[0];
        tmp_user_V_1_reg_2599_pp0_iter3_reg[0] <= tmp_user_V_1_reg_2599_pp0_iter2_reg[0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_921_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ii_reg_2609 <= ii_fu_982_p1;
        tmp_3_reg_2614[5 : 0] <= tmp_3_fu_986_p1[5 : 0];
        tmp_6_reg_2714 <= tmp_6_fu_1006_p2;
        tmp_user_V_1_reg_2599[0] <= tmp_user_V_1_fu_966_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_2590 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_0_load_reg_2808 <= m_0_q0;
        m_10_load_reg_2858 <= m_10_q0;
        m_11_load_reg_2863 <= m_11_q0;
        m_12_load_reg_2868 <= m_12_q0;
        m_13_load_reg_2873 <= m_13_q0;
        m_14_load_reg_2878 <= m_14_q0;
        m_15_load_reg_2883 <= m_15_q0;
        m_1_load_reg_2813 <= m_1_q0;
        m_2_load_reg_2818 <= m_2_q0;
        m_3_load_reg_2823 <= m_3_q0;
        m_4_load_reg_2828 <= m_4_q0;
        m_5_load_reg_2833 <= m_5_q0;
        m_6_load_reg_2838 <= m_6_q0;
        m_7_load_reg_2843 <= m_7_q0;
        m_8_load_reg_2848 <= m_8_q0;
        m_9_load_reg_2853 <= m_9_q0;
        p_Result_6_10_reg_2783 <= {{in_V_data_V_dout[383:352]}};
        p_Result_6_11_reg_2788 <= {{in_V_data_V_dout[415:384]}};
        p_Result_6_12_reg_2793 <= {{in_V_data_V_dout[447:416]}};
        p_Result_6_13_reg_2798 <= {{in_V_data_V_dout[479:448]}};
        p_Result_6_14_reg_2803 <= {{in_V_data_V_dout[511:480]}};
        p_Result_6_1_reg_2733 <= {{in_V_data_V_dout[63:32]}};
        p_Result_6_2_reg_2738 <= {{in_V_data_V_dout[95:64]}};
        p_Result_6_3_reg_2743 <= {{in_V_data_V_dout[127:96]}};
        p_Result_6_4_reg_2748 <= {{in_V_data_V_dout[159:128]}};
        p_Result_6_5_reg_2753 <= {{in_V_data_V_dout[191:160]}};
        p_Result_6_6_reg_2758 <= {{in_V_data_V_dout[223:192]}};
        p_Result_6_7_reg_2763 <= {{in_V_data_V_dout[255:224]}};
        p_Result_6_8_reg_2768 <= {{in_V_data_V_dout[287:256]}};
        p_Result_6_9_reg_2773 <= {{in_V_data_V_dout[319:288]}};
        p_Result_6_s_reg_2778 <= {{in_V_data_V_dout[351:320]}};
        tmp_55_reg_2728 <= tmp_55_fu_1042_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_6_fu_1006_p2 == 1'd1) & (exitcond_flatten_fu_921_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_data_last_V_reg_2718 <= out_data_last_V_fu_1030_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_2590_pp0_iter1_reg == 1'd0))) begin
        ret_V_10_10_reg_2954 <= ret_V_10_10_fu_1334_p2;
        ret_V_10_11_reg_2960 <= ret_V_10_11_fu_1346_p2;
        ret_V_10_12_reg_2966 <= ret_V_10_12_fu_1358_p2;
        ret_V_10_13_reg_2972 <= ret_V_10_13_fu_1370_p2;
        ret_V_10_14_reg_2978 <= ret_V_10_14_fu_1382_p2;
        ret_V_10_1_reg_2894 <= ret_V_10_1_fu_1214_p2;
        ret_V_10_2_reg_2900 <= ret_V_10_2_fu_1226_p2;
        ret_V_10_3_reg_2906 <= ret_V_10_3_fu_1238_p2;
        ret_V_10_4_reg_2912 <= ret_V_10_4_fu_1250_p2;
        ret_V_10_5_reg_2918 <= ret_V_10_5_fu_1262_p2;
        ret_V_10_6_reg_2924 <= ret_V_10_6_fu_1274_p2;
        ret_V_10_7_reg_2930 <= ret_V_10_7_fu_1286_p2;
        ret_V_10_8_reg_2936 <= ret_V_10_8_fu_1298_p2;
        ret_V_10_9_reg_2942 <= ret_V_10_9_fu_1310_p2;
        ret_V_10_s_reg_2948 <= ret_V_10_s_fu_1322_p2;
        ret_V_s_reg_2888 <= ret_V_s_fu_1202_p2;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_921_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        e_0_ce0 = 1'b1;
    end else begin
        e_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        e_10_ce0 = 1'b1;
    end else begin
        e_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        e_11_ce0 = 1'b1;
    end else begin
        e_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        e_12_ce0 = 1'b1;
    end else begin
        e_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        e_13_ce0 = 1'b1;
    end else begin
        e_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        e_14_ce0 = 1'b1;
    end else begin
        e_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        e_15_ce0 = 1'b1;
    end else begin
        e_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        e_1_ce0 = 1'b1;
    end else begin
        e_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        e_2_ce0 = 1'b1;
    end else begin
        e_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        e_3_ce0 = 1'b1;
    end else begin
        e_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        e_4_ce0 = 1'b1;
    end else begin
        e_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        e_5_ce0 = 1'b1;
    end else begin
        e_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        e_6_ce0 = 1'b1;
    end else begin
        e_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        e_7_ce0 = 1'b1;
    end else begin
        e_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        e_8_ce0 = 1'b1;
    end else begin
        e_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        e_9_ce0 = 1'b1;
    end else begin
        e_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond_flatten_reg_2590 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_V_data_V_blk_n = in_V_data_V_empty_n;
    end else begin
        in_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((exitcond_flatten_reg_2590 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_V_dest_V_blk_n = in_V_dest_V_empty_n;
    end else begin
        in_V_dest_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_2590 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((real_start == 1'b0) | (out_V_id_V1_status == 1'b0) | (in_V_id_V0_status == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_V_id_V0_update = 1'b1;
    end else begin
        in_V_id_V0_update = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond_flatten_reg_2590 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_V_id_V_blk_n = in_V_id_V_empty_n;
    end else begin
        in_V_id_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((exitcond_flatten_reg_2590 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_V_last_V_blk_n = in_V_last_V_empty_n;
    end else begin
        in_V_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((exitcond_flatten_reg_2590 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        in_V_user_V_blk_n = in_V_user_V_empty_n;
    end else begin
        in_V_user_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_0_ce0 = 1'b1;
    end else begin
        m_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_10_ce0 = 1'b1;
    end else begin
        m_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_11_ce0 = 1'b1;
    end else begin
        m_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_12_ce0 = 1'b1;
    end else begin
        m_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_13_ce0 = 1'b1;
    end else begin
        m_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_14_ce0 = 1'b1;
    end else begin
        m_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_15_ce0 = 1'b1;
    end else begin
        m_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_1_ce0 = 1'b1;
    end else begin
        m_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_2_ce0 = 1'b1;
    end else begin
        m_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_3_ce0 = 1'b1;
    end else begin
        m_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_4_ce0 = 1'b1;
    end else begin
        m_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_5_ce0 = 1'b1;
    end else begin
        m_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_6_ce0 = 1'b1;
    end else begin
        m_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_7_ce0 = 1'b1;
    end else begin
        m_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_8_ce0 = 1'b1;
    end else begin
        m_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_9_ce0 = 1'b1;
    end else begin
        m_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_2714_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_V_data_V_blk_n = out_V_data_V_full_n;
    end else begin
        out_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (tmp_6_reg_2714_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_V_data_V_din = tmp_data_V_4_fu_2573_p2;
    end else if ((~((real_start == 1'b0) | (out_V_id_V1_status == 1'b0) | (in_V_id_V0_status == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        out_V_data_V_din = out_data_data_V_fu_876_p1;
    end else begin
        out_V_data_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_2714_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_V_dest_V_blk_n = out_V_dest_V_full_n;
    end else begin
        out_V_dest_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_6_reg_2714_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | (~((real_start == 1'b0) | (out_V_id_V1_status == 1'b0) | (in_V_id_V0_status == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_V_id_V1_update = 1'b1;
    end else begin
        out_V_id_V1_update = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_2714_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_V_id_V_blk_n = out_V_id_V_full_n;
    end else begin
        out_V_id_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_2714_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_V_last_V_blk_n = out_V_last_V_full_n;
    end else begin
        out_V_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (tmp_6_reg_2714_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_V_last_V_din = out_data_last_V_reg_2718_pp0_iter3_reg;
    end else if ((~((real_start == 1'b0) | (out_V_id_V1_status == 1'b0) | (in_V_id_V0_status == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        out_V_last_V_din = 1'd0;
    end else begin
        out_V_last_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_6_reg_2714_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        out_V_user_V_blk_n = out_V_user_V_full_n;
    end else begin
        out_V_user_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (tmp_6_reg_2714_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_V_user_V_din = tmp_user_V_7_cast_fu_2338_p1;
    end else if ((~((real_start == 1'b0) | (out_V_id_V1_status == 1'b0) | (in_V_id_V0_status == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        out_V_user_V_din = 16'd13;
    end else begin
        out_V_user_V_din = 'bx;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (out_V_id_V1_status == 1'b0) | (in_V_id_V0_status == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten_fu_921_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten_fu_921_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Hi_assign_fu_2323_p2 = (9'd127 | Lo_assign_fu_2316_p3);

assign Lo_assign_fu_2316_p3 = {{ii_reg_2609_pp0_iter2_reg}, {7'd0}};

assign N_fu_872_p1 = in_V_data_V_dout[31:0];

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((tmp_6_reg_2714_pp0_iter3_reg == 1'd1) & (out_V_id_V1_status == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten_reg_2590 == 1'd0) & (in_V_id_V0_status == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((tmp_6_reg_2714_pp0_iter3_reg == 1'd1) & (out_V_id_V1_status == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten_reg_2590 == 1'd0) & (in_V_id_V0_status == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((tmp_6_reg_2714_pp0_iter3_reg == 1'd1) & (out_V_id_V1_status == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((exitcond_flatten_reg_2590 == 1'd0) & (in_V_id_V0_status == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (out_V_id_V1_status == 1'b0) | (in_V_id_V0_status == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((exitcond_flatten_reg_2590 == 1'd0) & (in_V_id_V0_status == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter4 = ((tmp_6_reg_2714_pp0_iter3_reg == 1'd1) & (out_V_id_V1_status == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign bound_fu_901_p2 = (p_shl_fu_881_p3 - p_shl2_fu_897_p1);

assign e_0_address0 = tmp_3_reg_2614_pp0_iter1_reg;

assign e_0_load_cast_fu_1436_p0 = e_0_q0;

assign e_0_load_cast_fu_1436_p1 = e_0_load_cast_fu_1436_p0;

assign e_10_address0 = tmp_3_reg_2614_pp0_iter1_reg;

assign e_10_load_cast_fu_1986_p0 = e_10_q0;

assign e_10_load_cast_fu_1986_p1 = e_10_load_cast_fu_1986_p0;

assign e_11_address0 = tmp_3_reg_2614_pp0_iter1_reg;

assign e_11_load_cast_fu_2041_p0 = e_11_q0;

assign e_11_load_cast_fu_2041_p1 = e_11_load_cast_fu_2041_p0;

assign e_12_address0 = tmp_3_reg_2614_pp0_iter1_reg;

assign e_12_load_cast_fu_2096_p0 = e_12_q0;

assign e_12_load_cast_fu_2096_p1 = e_12_load_cast_fu_2096_p0;

assign e_13_address0 = tmp_3_reg_2614_pp0_iter1_reg;

assign e_13_load_cast_fu_2151_p0 = e_13_q0;

assign e_13_load_cast_fu_2151_p1 = e_13_load_cast_fu_2151_p0;

assign e_14_address0 = tmp_3_reg_2614_pp0_iter1_reg;

assign e_14_load_cast_fu_2206_p0 = e_14_q0;

assign e_14_load_cast_fu_2206_p1 = e_14_load_cast_fu_2206_p0;

assign e_15_address0 = tmp_3_reg_2614_pp0_iter1_reg;

assign e_15_load_cast_fu_2261_p0 = e_15_q0;

assign e_15_load_cast_fu_2261_p1 = e_15_load_cast_fu_2261_p0;

assign e_1_address0 = tmp_3_reg_2614_pp0_iter1_reg;

assign e_1_load_cast_fu_1491_p0 = e_1_q0;

assign e_1_load_cast_fu_1491_p1 = e_1_load_cast_fu_1491_p0;

assign e_2_address0 = tmp_3_reg_2614_pp0_iter1_reg;

assign e_2_load_cast_fu_1546_p0 = e_2_q0;

assign e_2_load_cast_fu_1546_p1 = e_2_load_cast_fu_1546_p0;

assign e_3_address0 = tmp_3_reg_2614_pp0_iter1_reg;

assign e_3_load_cast_fu_1601_p0 = e_3_q0;

assign e_3_load_cast_fu_1601_p1 = e_3_load_cast_fu_1601_p0;

assign e_4_address0 = tmp_3_reg_2614_pp0_iter1_reg;

assign e_4_load_cast_fu_1656_p0 = e_4_q0;

assign e_4_load_cast_fu_1656_p1 = e_4_load_cast_fu_1656_p0;

assign e_5_address0 = tmp_3_reg_2614_pp0_iter1_reg;

assign e_5_load_cast_fu_1711_p0 = e_5_q0;

assign e_5_load_cast_fu_1711_p1 = e_5_load_cast_fu_1711_p0;

assign e_6_address0 = tmp_3_reg_2614_pp0_iter1_reg;

assign e_6_load_cast_fu_1766_p0 = e_6_q0;

assign e_6_load_cast_fu_1766_p1 = e_6_load_cast_fu_1766_p0;

assign e_7_address0 = tmp_3_reg_2614_pp0_iter1_reg;

assign e_7_load_cast_fu_1821_p0 = e_7_q0;

assign e_7_load_cast_fu_1821_p1 = e_7_load_cast_fu_1821_p0;

assign e_8_address0 = tmp_3_reg_2614_pp0_iter1_reg;

assign e_8_load_cast_fu_1876_p0 = e_8_q0;

assign e_8_load_cast_fu_1876_p1 = e_8_load_cast_fu_1876_p0;

assign e_9_address0 = tmp_3_reg_2614_pp0_iter1_reg;

assign e_9_load_cast_fu_1931_p0 = e_9_q0;

assign e_9_load_cast_fu_1931_p1 = e_9_load_cast_fu_1931_p0;

assign exitcond_flatten_fu_921_p2 = ((indvar_flatten_reg_825 == bound_reg_2585) ? 1'b1 : 1'b0);

assign i_mid2_fu_974_p3 = ((tmp_7_fu_932_p2[0:0] === 1'b1) ? i_s_fu_946_p2 : i_reg_836);

assign i_s_fu_946_p2 = (32'd1 + i_reg_836);

assign ii_fu_982_p1 = j_mid2_fu_938_p3[1:0];

assign in_V_data_V_read = in_V_id_V0_update;

assign in_V_dest_V_read = in_V_id_V0_update;

assign in_V_id_V0_status = (in_V_user_V_empty_n & in_V_last_V_empty_n & in_V_id_V_empty_n & in_V_dest_V_empty_n & in_V_data_V_empty_n);

assign in_V_id_V_read = in_V_id_V0_update;

assign in_V_last_V_read = in_V_id_V0_update;

assign in_V_user_V_read = in_V_id_V0_update;

assign in_data2_0_V_fu_2343_p3 = ((p_Result_s_reg_3064[0:0] === 1'b1) ? tmp_73_reg_3069 : phitmp1_reg_3074);

assign in_data2_10_V_fu_2393_p3 = ((p_Result_9_reg_3214[0:0] === 1'b1) ? tmp_83_reg_3219 : phitmp10_reg_3224);

assign in_data2_11_V_fu_2398_p3 = ((p_Result_10_reg_3229[0:0] === 1'b1) ? tmp_84_reg_3234 : phitmp11_reg_3239);

assign in_data2_12_V_fu_2403_p3 = ((p_Result_11_reg_3244[0:0] === 1'b1) ? tmp_85_reg_3249 : phitmp12_reg_3254);

assign in_data2_13_V_fu_2408_p3 = ((p_Result_12_reg_3259[0:0] === 1'b1) ? tmp_86_reg_3264 : phitmp13_reg_3269);

assign in_data2_14_V_fu_2413_p3 = ((p_Result_13_reg_3274[0:0] === 1'b1) ? tmp_87_reg_3279 : phitmp14_reg_3284);

assign in_data2_15_V_fu_2418_p3 = ((p_Result_14_reg_3289[0:0] === 1'b1) ? tmp_88_reg_3294 : phitmp15_reg_3299);

assign in_data2_1_V_fu_2348_p3 = ((p_Result_1_reg_3079[0:0] === 1'b1) ? tmp_74_reg_3084 : phitmp3_reg_3089);

assign in_data2_2_V_fu_2353_p3 = ((p_Result_2_reg_3094[0:0] === 1'b1) ? tmp_75_reg_3099 : phitmp5_reg_3104);

assign in_data2_3_V_fu_2358_p3 = ((p_Result_3_reg_3109[0:0] === 1'b1) ? tmp_76_reg_3114 : phitmp7_reg_3119);

assign in_data2_4_V_fu_2363_p3 = ((p_Result_4_reg_3124[0:0] === 1'b1) ? tmp_77_reg_3129 : phitmp9_reg_3134);

assign in_data2_5_V_fu_2368_p3 = ((p_Result_5_reg_3139[0:0] === 1'b1) ? tmp_78_reg_3144 : phitmp_reg_3149);

assign in_data2_6_V_fu_2373_p3 = ((p_Result_6_reg_3154[0:0] === 1'b1) ? tmp_79_reg_3159 : phitmp2_reg_3164);

assign in_data2_7_V_fu_2378_p3 = ((p_Result_7_reg_3169[0:0] === 1'b1) ? tmp_80_reg_3174 : phitmp4_reg_3179);

assign in_data2_8_V_fu_2383_p3 = ((p_Result_s_297_reg_3184[0:0] === 1'b1) ? tmp_81_reg_3189 : phitmp6_reg_3194);

assign in_data2_9_V_fu_2388_p3 = ((p_Result_8_reg_3199[0:0] === 1'b1) ? tmp_82_reg_3204 : phitmp8_reg_3209);

assign index_assign_10_cast_fu_2051_p1 = $signed(index_assign_10_fu_2045_p2);

assign index_assign_10_fu_2045_p1 = e_11_q0;

assign index_assign_10_fu_2045_p2 = ($signed(5'd31) + $signed(index_assign_10_fu_2045_p1));

assign index_assign_11_cast_fu_2106_p1 = $signed(index_assign_11_fu_2100_p2);

assign index_assign_11_fu_2100_p1 = e_12_q0;

assign index_assign_11_fu_2100_p2 = ($signed(5'd31) + $signed(index_assign_11_fu_2100_p1));

assign index_assign_12_cast_fu_2161_p1 = $signed(index_assign_12_fu_2155_p2);

assign index_assign_12_fu_2155_p1 = e_13_q0;

assign index_assign_12_fu_2155_p2 = ($signed(5'd31) + $signed(index_assign_12_fu_2155_p1));

assign index_assign_13_cast_fu_2216_p1 = $signed(index_assign_13_fu_2210_p2);

assign index_assign_13_fu_2210_p1 = e_14_q0;

assign index_assign_13_fu_2210_p2 = ($signed(5'd31) + $signed(index_assign_13_fu_2210_p1));

assign index_assign_14_cast_fu_2271_p1 = $signed(index_assign_14_fu_2265_p2);

assign index_assign_14_fu_2265_p1 = e_15_q0;

assign index_assign_14_fu_2265_p2 = ($signed(5'd31) + $signed(index_assign_14_fu_2265_p1));

assign index_assign_1_cast_fu_1501_p1 = $signed(index_assign_1_fu_1495_p2);

assign index_assign_1_fu_1495_p1 = e_1_q0;

assign index_assign_1_fu_1495_p2 = ($signed(5'd31) + $signed(index_assign_1_fu_1495_p1));

assign index_assign_2_cast_fu_1556_p1 = $signed(index_assign_2_fu_1550_p2);

assign index_assign_2_fu_1550_p1 = e_2_q0;

assign index_assign_2_fu_1550_p2 = ($signed(5'd31) + $signed(index_assign_2_fu_1550_p1));

assign index_assign_3_cast_fu_1611_p1 = $signed(index_assign_3_fu_1605_p2);

assign index_assign_3_fu_1605_p1 = e_3_q0;

assign index_assign_3_fu_1605_p2 = ($signed(5'd31) + $signed(index_assign_3_fu_1605_p1));

assign index_assign_4_cast_fu_1666_p1 = $signed(index_assign_4_fu_1660_p2);

assign index_assign_4_fu_1660_p1 = e_4_q0;

assign index_assign_4_fu_1660_p2 = ($signed(5'd31) + $signed(index_assign_4_fu_1660_p1));

assign index_assign_5_cast_fu_1721_p1 = $signed(index_assign_5_fu_1715_p2);

assign index_assign_5_fu_1715_p1 = e_5_q0;

assign index_assign_5_fu_1715_p2 = ($signed(5'd31) + $signed(index_assign_5_fu_1715_p1));

assign index_assign_6_cast_fu_1776_p1 = $signed(index_assign_6_fu_1770_p2);

assign index_assign_6_fu_1770_p1 = e_6_q0;

assign index_assign_6_fu_1770_p2 = ($signed(5'd31) + $signed(index_assign_6_fu_1770_p1));

assign index_assign_7_cast_fu_1831_p1 = $signed(index_assign_7_fu_1825_p2);

assign index_assign_7_fu_1825_p1 = e_7_q0;

assign index_assign_7_fu_1825_p2 = ($signed(5'd31) + $signed(index_assign_7_fu_1825_p1));

assign index_assign_8_cast_fu_1886_p1 = $signed(index_assign_8_fu_1880_p2);

assign index_assign_8_fu_1880_p1 = e_8_q0;

assign index_assign_8_fu_1880_p2 = ($signed(5'd31) + $signed(index_assign_8_fu_1880_p1));

assign index_assign_9_cast_fu_1941_p1 = $signed(index_assign_9_fu_1935_p2);

assign index_assign_9_fu_1935_p1 = e_9_q0;

assign index_assign_9_fu_1935_p2 = ($signed(5'd31) + $signed(index_assign_9_fu_1935_p1));

assign index_assign_cast_298_fu_1996_p1 = $signed(index_assign_s_fu_1990_p2);

assign index_assign_cast_fu_1446_p1 = $signed(index_assign_fu_1440_p2);

assign index_assign_fu_1440_p1 = e_0_q0;

assign index_assign_fu_1440_p2 = ($signed(5'd31) + $signed(index_assign_fu_1440_p1));

assign index_assign_s_fu_1990_p1 = e_10_q0;

assign index_assign_s_fu_1990_p2 = ($signed(5'd31) + $signed(index_assign_s_fu_1990_p1));

assign indvar_flatten_next_fu_926_p2 = (indvar_flatten_reg_825 + 38'd1);

assign j_1_fu_1036_p2 = (j_mid2_fu_938_p3 + 6'd1);

assign j_mid2_fu_938_p3 = ((tmp_7_fu_932_p2[0:0] === 1'b1) ? 6'd0 : j_reg_857);

assign jj_0_mask_fu_1022_p3 = {{tmp_8_fu_1012_p4}, {2'd0}};

assign m_0_address0 = tmp_3_fu_986_p1;

assign m_10_address0 = tmp_3_fu_986_p1;

assign m_11_address0 = tmp_3_fu_986_p1;

assign m_12_address0 = tmp_3_fu_986_p1;

assign m_13_address0 = tmp_3_fu_986_p1;

assign m_14_address0 = tmp_3_fu_986_p1;

assign m_15_address0 = tmp_3_fu_986_p1;

assign m_1_address0 = tmp_3_fu_986_p1;

assign m_2_address0 = tmp_3_fu_986_p1;

assign m_3_address0 = tmp_3_fu_986_p1;

assign m_4_address0 = tmp_3_fu_986_p1;

assign m_5_address0 = tmp_3_fu_986_p1;

assign m_6_address0 = tmp_3_fu_986_p1;

assign m_7_address0 = tmp_3_fu_986_p1;

assign m_8_address0 = tmp_3_fu_986_p1;

assign m_9_address0 = tmp_3_fu_986_p1;

assign out_V_data_V_write = out_V_id_V1_update;

assign out_V_dest_V_din = 8'd30;

assign out_V_dest_V_write = out_V_id_V1_update;

assign out_V_id_V1_status = (out_V_user_V_full_n & out_V_last_V_full_n & out_V_id_V_full_n & out_V_dest_V_full_n & out_V_data_V_full_n);

assign out_V_id_V_din = 8'd29;

assign out_V_id_V_write = out_V_id_V1_update;

assign out_V_last_V_write = out_V_id_V1_update;

assign out_V_user_V_write = out_V_id_V1_update;

assign out_data_data_V_fu_876_p1 = N_fu_872_p1;

assign out_data_last_V_fu_1030_p2 = ((jj_0_mask_fu_1022_p3 == 6'd44) ? 1'b1 : 1'b0);

assign p_Result_10_fu_2071_p2 = ((tmp_52_10_fu_2065_p2 == 56'd0) ? 1'b1 : 1'b0);

assign p_Result_11_fu_2126_p2 = ((tmp_52_11_fu_2120_p2 == 55'd0) ? 1'b1 : 1'b0);

assign p_Result_12_fu_2181_p2 = ((tmp_52_12_fu_2175_p2 == 55'd0) ? 1'b1 : 1'b0);

assign p_Result_13_fu_2236_p2 = ((tmp_52_13_fu_2230_p2 == 55'd0) ? 1'b1 : 1'b0);

assign p_Result_14_fu_2291_p2 = ((tmp_52_14_fu_2285_p2 == 55'd0) ? 1'b1 : 1'b0);

assign p_Result_1_fu_1521_p2 = ((tmp_52_1_fu_1515_p2 == 55'd0) ? 1'b1 : 1'b0);

assign p_Result_2_fu_1576_p2 = ((tmp_52_2_fu_1570_p2 == 55'd0) ? 1'b1 : 1'b0);

assign p_Result_3_fu_1631_p2 = ((tmp_52_3_fu_1625_p2 == 55'd0) ? 1'b1 : 1'b0);

assign p_Result_4_fu_1686_p2 = ((tmp_52_4_fu_1680_p2 == 55'd0) ? 1'b1 : 1'b0);

assign p_Result_5_fu_1741_p2 = ((tmp_52_5_fu_1735_p2 == 55'd0) ? 1'b1 : 1'b0);

assign p_Result_6_fu_1796_p2 = ((tmp_52_6_fu_1790_p2 == 55'd0) ? 1'b1 : 1'b0);

assign p_Result_7_fu_1851_p2 = ((tmp_52_7_fu_1845_p2 == 55'd0) ? 1'b1 : 1'b0);

assign p_Result_8_fu_1961_p2 = ((tmp_52_9_fu_1955_p2 == 54'd0) ? 1'b1 : 1'b0);

assign p_Result_9_fu_2016_p2 = ((tmp_52_s_fu_2010_p2 == 55'd0) ? 1'b1 : 1'b0);

assign p_Result_9_s_fu_2423_p17 = {{{{{{{{{{{{{{{{in_data2_15_V_fu_2418_p3}, {in_data2_14_V_fu_2413_p3}}, {in_data2_13_V_fu_2408_p3}}, {in_data2_12_V_fu_2403_p3}}, {in_data2_11_V_fu_2398_p3}}, {in_data2_10_V_fu_2393_p3}}, {in_data2_9_V_fu_2388_p3}}, {in_data2_8_V_fu_2383_p3}}, {in_data2_7_V_fu_2378_p3}}, {in_data2_6_V_fu_2373_p3}}, {in_data2_5_V_fu_2368_p3}}, {in_data2_4_V_fu_2363_p3}}, {in_data2_3_V_fu_2358_p3}}, {in_data2_2_V_fu_2353_p3}}, {in_data2_1_V_fu_2348_p3}}, {in_data2_0_V_fu_2343_p3}};

assign p_Result_s_297_fu_1906_p2 = ((tmp_52_8_fu_1900_p2 == 55'd0) ? 1'b1 : 1'b0);

assign p_Result_s_fu_1466_p2 = ((tmp_5_fu_1460_p2 == 55'd0) ? 1'b1 : 1'b0);

assign p_demorgan_fu_2549_p2 = (tmp_103_fu_2543_p2 & tmp_102_fu_2537_p2);

assign p_shl2_fu_897_p1 = tmp_1_fu_889_p3;

assign p_shl_fu_881_p3 = {{N_fu_872_p1}, {6'd0}};

assign phitmp10_fu_2035_p2 = (8'd1 + tmp_83_fu_2031_p1);

assign phitmp11_fu_2090_p2 = (8'd1 + tmp_84_fu_2086_p1);

assign phitmp12_fu_2145_p2 = (8'd1 + tmp_85_fu_2141_p1);

assign phitmp13_fu_2200_p2 = (8'd1 + tmp_86_fu_2196_p1);

assign phitmp14_fu_2255_p2 = (8'd1 + tmp_87_fu_2251_p1);

assign phitmp15_fu_2310_p2 = (8'd1 + tmp_88_fu_2306_p1);

assign phitmp1_fu_1485_p2 = (8'd1 + tmp_73_fu_1481_p1);

assign phitmp2_fu_1815_p2 = (8'd1 + tmp_79_fu_1811_p1);

assign phitmp3_fu_1540_p2 = (8'd1 + tmp_74_fu_1536_p1);

assign phitmp4_fu_1870_p2 = (8'd1 + tmp_80_fu_1866_p1);

assign phitmp5_fu_1595_p2 = (8'd1 + tmp_75_fu_1591_p1);

assign phitmp6_fu_1925_p2 = (8'd1 + tmp_81_fu_1921_p1);

assign phitmp7_fu_1650_p2 = (8'd1 + tmp_76_fu_1646_p1);

assign phitmp8_fu_1980_p2 = (8'd1 + tmp_82_fu_1976_p1);

assign phitmp9_fu_1705_p2 = (8'd1 + tmp_77_fu_1701_p1);

assign phitmp_fu_1760_p2 = (8'd1 + tmp_78_fu_1756_p1);

assign r_V_2_10_fu_2081_p2 = $signed(ret_V_10_10_reg_2954) >>> tmp_57_10_cast_fu_2077_p1;

assign r_V_2_11_fu_2136_p2 = $signed(ret_V_10_11_reg_2960) >>> tmp_57_11_cast_fu_2132_p1;

assign r_V_2_12_fu_2191_p2 = $signed(ret_V_10_12_reg_2966) >>> tmp_57_12_cast_fu_2187_p1;

assign r_V_2_13_fu_2246_p2 = $signed(ret_V_10_13_reg_2972) >>> tmp_57_13_cast_fu_2242_p1;

assign r_V_2_14_fu_2301_p2 = $signed(ret_V_10_14_reg_2978) >>> tmp_57_14_cast_fu_2297_p1;

assign r_V_2_1_fu_1531_p2 = $signed(ret_V_10_1_reg_2894) >>> tmp_57_1_cast_fu_1527_p1;

assign r_V_2_2_fu_1586_p2 = $signed(ret_V_10_2_reg_2900) >>> tmp_57_2_cast_fu_1582_p1;

assign r_V_2_3_fu_1641_p2 = $signed(ret_V_10_3_reg_2906) >>> tmp_57_3_cast_fu_1637_p1;

assign r_V_2_4_fu_1696_p2 = $signed(ret_V_10_4_reg_2912) >>> tmp_57_4_cast_fu_1692_p1;

assign r_V_2_5_fu_1751_p2 = $signed(ret_V_10_5_reg_2918) >>> tmp_57_5_cast_fu_1747_p1;

assign r_V_2_6_fu_1806_p2 = $signed(ret_V_10_6_reg_2924) >>> tmp_57_6_cast_fu_1802_p1;

assign r_V_2_7_fu_1861_p2 = $signed(ret_V_10_7_reg_2930) >>> tmp_57_7_cast_fu_1857_p1;

assign r_V_2_8_fu_1916_p2 = $signed(ret_V_10_8_reg_2936) >>> tmp_57_8_cast_fu_1912_p1;

assign r_V_2_9_fu_1971_p2 = $signed(ret_V_10_9_reg_2942) >>> tmp_57_9_cast_fu_1967_p1;

assign r_V_2_fu_1476_p2 = $signed(ret_V_s_reg_2888) >>> tmp_57_cast_fu_1472_p1;

assign r_V_2_s_fu_2026_p2 = $signed(ret_V_10_s_reg_2948) >>> tmp_57_cast_300_fu_2022_p1;

assign ret_V_10_10_fu_1334_p0 = p_Result_6_10_reg_2783;

assign ret_V_10_10_fu_1334_p1 = ret_V_10_10_fu_1334_p10;

assign ret_V_10_10_fu_1334_p10 = m_11_load_reg_2863;

assign ret_V_10_10_fu_1334_p2 = ($signed(ret_V_10_10_fu_1334_p0) * $signed({{1'b0}, {ret_V_10_10_fu_1334_p1}}));

assign ret_V_10_11_fu_1346_p0 = p_Result_6_11_reg_2788;

assign ret_V_10_11_fu_1346_p1 = ret_V_10_11_fu_1346_p10;

assign ret_V_10_11_fu_1346_p10 = m_12_load_reg_2868;

assign ret_V_10_11_fu_1346_p2 = ($signed(ret_V_10_11_fu_1346_p0) * $signed({{1'b0}, {ret_V_10_11_fu_1346_p1}}));

assign ret_V_10_12_fu_1358_p0 = p_Result_6_12_reg_2793;

assign ret_V_10_12_fu_1358_p1 = ret_V_10_12_fu_1358_p10;

assign ret_V_10_12_fu_1358_p10 = m_13_load_reg_2873;

assign ret_V_10_12_fu_1358_p2 = ($signed(ret_V_10_12_fu_1358_p0) * $signed({{1'b0}, {ret_V_10_12_fu_1358_p1}}));

assign ret_V_10_13_fu_1370_p0 = p_Result_6_13_reg_2798;

assign ret_V_10_13_fu_1370_p1 = ret_V_10_13_fu_1370_p10;

assign ret_V_10_13_fu_1370_p10 = m_14_load_reg_2878;

assign ret_V_10_13_fu_1370_p2 = ($signed(ret_V_10_13_fu_1370_p0) * $signed({{1'b0}, {ret_V_10_13_fu_1370_p1}}));

assign ret_V_10_14_fu_1382_p0 = p_Result_6_14_reg_2803;

assign ret_V_10_14_fu_1382_p1 = ret_V_10_14_fu_1382_p10;

assign ret_V_10_14_fu_1382_p10 = m_15_load_reg_2883;

assign ret_V_10_14_fu_1382_p2 = ($signed(ret_V_10_14_fu_1382_p0) * $signed({{1'b0}, {ret_V_10_14_fu_1382_p1}}));

assign ret_V_10_1_fu_1214_p0 = p_Result_6_1_reg_2733;

assign ret_V_10_1_fu_1214_p1 = ret_V_10_1_fu_1214_p10;

assign ret_V_10_1_fu_1214_p10 = m_1_load_reg_2813;

assign ret_V_10_1_fu_1214_p2 = ($signed(ret_V_10_1_fu_1214_p0) * $signed({{1'b0}, {ret_V_10_1_fu_1214_p1}}));

assign ret_V_10_2_fu_1226_p0 = p_Result_6_2_reg_2738;

assign ret_V_10_2_fu_1226_p1 = ret_V_10_2_fu_1226_p10;

assign ret_V_10_2_fu_1226_p10 = m_2_load_reg_2818;

assign ret_V_10_2_fu_1226_p2 = ($signed(ret_V_10_2_fu_1226_p0) * $signed({{1'b0}, {ret_V_10_2_fu_1226_p1}}));

assign ret_V_10_3_fu_1238_p0 = p_Result_6_3_reg_2743;

assign ret_V_10_3_fu_1238_p1 = ret_V_10_3_fu_1238_p10;

assign ret_V_10_3_fu_1238_p10 = m_3_load_reg_2823;

assign ret_V_10_3_fu_1238_p2 = ($signed(ret_V_10_3_fu_1238_p0) * $signed({{1'b0}, {ret_V_10_3_fu_1238_p1}}));

assign ret_V_10_4_fu_1250_p0 = p_Result_6_4_reg_2748;

assign ret_V_10_4_fu_1250_p1 = ret_V_10_4_fu_1250_p10;

assign ret_V_10_4_fu_1250_p10 = m_4_load_reg_2828;

assign ret_V_10_4_fu_1250_p2 = ($signed(ret_V_10_4_fu_1250_p0) * $signed({{1'b0}, {ret_V_10_4_fu_1250_p1}}));

assign ret_V_10_5_fu_1262_p0 = p_Result_6_5_reg_2753;

assign ret_V_10_5_fu_1262_p1 = ret_V_10_5_fu_1262_p10;

assign ret_V_10_5_fu_1262_p10 = m_5_load_reg_2833;

assign ret_V_10_5_fu_1262_p2 = ($signed(ret_V_10_5_fu_1262_p0) * $signed({{1'b0}, {ret_V_10_5_fu_1262_p1}}));

assign ret_V_10_6_fu_1274_p0 = p_Result_6_6_reg_2758;

assign ret_V_10_6_fu_1274_p1 = ret_V_10_6_fu_1274_p10;

assign ret_V_10_6_fu_1274_p10 = m_6_load_reg_2838;

assign ret_V_10_6_fu_1274_p2 = ($signed(ret_V_10_6_fu_1274_p0) * $signed({{1'b0}, {ret_V_10_6_fu_1274_p1}}));

assign ret_V_10_7_fu_1286_p0 = p_Result_6_7_reg_2763;

assign ret_V_10_7_fu_1286_p1 = ret_V_10_7_fu_1286_p10;

assign ret_V_10_7_fu_1286_p10 = m_7_load_reg_2843;

assign ret_V_10_7_fu_1286_p2 = ($signed(ret_V_10_7_fu_1286_p0) * $signed({{1'b0}, {ret_V_10_7_fu_1286_p1}}));

assign ret_V_10_8_fu_1298_p0 = p_Result_6_8_reg_2768;

assign ret_V_10_8_fu_1298_p1 = ret_V_10_8_fu_1298_p10;

assign ret_V_10_8_fu_1298_p10 = m_8_load_reg_2848;

assign ret_V_10_8_fu_1298_p2 = ($signed(ret_V_10_8_fu_1298_p0) * $signed({{1'b0}, {ret_V_10_8_fu_1298_p1}}));

assign ret_V_10_9_fu_1310_p0 = p_Result_6_9_reg_2773;

assign ret_V_10_9_fu_1310_p1 = ret_V_10_9_fu_1310_p10;

assign ret_V_10_9_fu_1310_p10 = m_9_load_reg_2853;

assign ret_V_10_9_fu_1310_p2 = ($signed(ret_V_10_9_fu_1310_p0) * $signed({{1'b0}, {ret_V_10_9_fu_1310_p1}}));

assign ret_V_10_s_fu_1322_p0 = p_Result_6_s_reg_2778;

assign ret_V_10_s_fu_1322_p1 = ret_V_10_s_fu_1322_p10;

assign ret_V_10_s_fu_1322_p10 = m_10_load_reg_2858;

assign ret_V_10_s_fu_1322_p2 = ($signed(ret_V_10_s_fu_1322_p0) * $signed({{1'b0}, {ret_V_10_s_fu_1322_p1}}));

assign ret_V_s_fu_1202_p0 = tmp_55_reg_2728;

assign ret_V_s_fu_1202_p1 = ret_V_s_fu_1202_p10;

assign ret_V_s_fu_1202_p10 = m_0_load_reg_2808;

assign ret_V_s_fu_1202_p2 = ($signed(ret_V_s_fu_1202_p0) * $signed({{1'b0}, {ret_V_s_fu_1202_p1}}));

assign start_out = real_start;

integer ap_tvar_int_0;

always @ (tmp_99_fu_2514_p2) begin
    for (ap_tvar_int_0 = 512 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 511 - 0) begin
            tmp_100_fu_2520_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_100_fu_2520_p4[ap_tvar_int_0] = tmp_99_fu_2514_p2[511 - ap_tvar_int_0];
        end
    end
end

assign tmp_101_fu_2530_p3 = ((tmp_reg_3314[0:0] === 1'b1) ? tmp_100_fu_2520_p4 : tmp_99_fu_2514_p2);

assign tmp_102_fu_2537_p2 = 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095 << tmp_97_fu_2506_p1;

assign tmp_103_fu_2543_p2 = 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095 >> tmp_98_fu_2510_p1;

assign tmp_104_fu_2555_p2 = (p_demorgan_fu_2549_p2 ^ 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095);

assign tmp_105_fu_2561_p2 = (tmp_104_fu_2555_p2 & p_Val2_1_reg_847);

assign tmp_106_fu_2567_p2 = (tmp_101_fu_2530_p3 & p_demorgan_fu_2549_p2);

assign tmp_1_fu_889_p3 = {{N_fu_872_p1}, {4'd0}};

assign tmp_3_fu_986_p1 = j_mid2_fu_938_p3;

assign tmp_4_fu_1454_p2 = 55'd1 << tmp_50_cast_fu_1450_p1;

assign tmp_50_10_cast_fu_2055_p1 = $unsigned(index_assign_10_cast_fu_2051_p1);

assign tmp_50_11_cast_fu_2110_p1 = $unsigned(index_assign_11_cast_fu_2106_p1);

assign tmp_50_12_cast_fu_2165_p1 = $unsigned(index_assign_12_cast_fu_2161_p1);

assign tmp_50_13_cast_fu_2220_p1 = $unsigned(index_assign_13_cast_fu_2216_p1);

assign tmp_50_14_cast_fu_2275_p1 = $unsigned(index_assign_14_cast_fu_2271_p1);

assign tmp_50_1_cast_fu_1505_p1 = $unsigned(index_assign_1_cast_fu_1501_p1);

assign tmp_50_2_cast_fu_1560_p1 = $unsigned(index_assign_2_cast_fu_1556_p1);

assign tmp_50_3_cast_fu_1615_p1 = $unsigned(index_assign_3_cast_fu_1611_p1);

assign tmp_50_4_cast_fu_1670_p1 = $unsigned(index_assign_4_cast_fu_1666_p1);

assign tmp_50_5_cast_fu_1725_p1 = $unsigned(index_assign_5_cast_fu_1721_p1);

assign tmp_50_6_cast_fu_1780_p1 = $unsigned(index_assign_6_cast_fu_1776_p1);

assign tmp_50_7_cast_fu_1835_p1 = $unsigned(index_assign_7_cast_fu_1831_p1);

assign tmp_50_8_cast_fu_1890_p1 = $unsigned(index_assign_8_cast_fu_1886_p1);

assign tmp_50_9_cast_fu_1945_p1 = $unsigned(index_assign_9_cast_fu_1941_p1);

assign tmp_50_cast_299_fu_2000_p1 = $unsigned(index_assign_cast_298_fu_1996_p1);

assign tmp_50_cast_fu_1450_p1 = $unsigned(index_assign_cast_fu_1446_p1);

assign tmp_51_10_fu_2059_p2 = 56'd1 << tmp_50_10_cast_fu_2055_p1;

assign tmp_51_11_fu_2114_p2 = 55'd1 << tmp_50_11_cast_fu_2110_p1;

assign tmp_51_12_fu_2169_p2 = 55'd1 << tmp_50_12_cast_fu_2165_p1;

assign tmp_51_13_fu_2224_p2 = 55'd1 << tmp_50_13_cast_fu_2220_p1;

assign tmp_51_14_fu_2279_p2 = 55'd1 << tmp_50_14_cast_fu_2275_p1;

assign tmp_51_1_fu_1509_p2 = 55'd1 << tmp_50_1_cast_fu_1505_p1;

assign tmp_51_2_fu_1564_p2 = 55'd1 << tmp_50_2_cast_fu_1560_p1;

assign tmp_51_3_fu_1619_p2 = 55'd1 << tmp_50_3_cast_fu_1615_p1;

assign tmp_51_4_fu_1674_p2 = 55'd1 << tmp_50_4_cast_fu_1670_p1;

assign tmp_51_5_fu_1729_p2 = 55'd1 << tmp_50_5_cast_fu_1725_p1;

assign tmp_51_6_fu_1784_p2 = 55'd1 << tmp_50_6_cast_fu_1780_p1;

assign tmp_51_7_fu_1839_p2 = 55'd1 << tmp_50_7_cast_fu_1835_p1;

assign tmp_51_8_fu_1894_p2 = 55'd1 << tmp_50_8_cast_fu_1890_p1;

assign tmp_51_9_fu_1949_p2 = 54'd1 << tmp_50_9_cast_fu_1945_p1;

assign tmp_51_s_fu_2004_p2 = 55'd1 << tmp_50_cast_299_fu_2000_p1;

assign tmp_52_10_fu_2065_p2 = (tmp_68_fu_1421_p1 & tmp_51_10_fu_2059_p2);

assign tmp_52_11_fu_2120_p2 = (tmp_69_fu_1424_p1 & tmp_51_11_fu_2114_p2);

assign tmp_52_12_fu_2175_p2 = (tmp_70_fu_1427_p1 & tmp_51_12_fu_2169_p2);

assign tmp_52_13_fu_2230_p2 = (tmp_71_fu_1430_p1 & tmp_51_13_fu_2224_p2);

assign tmp_52_14_fu_2285_p2 = (tmp_72_fu_1433_p1 & tmp_51_14_fu_2279_p2);

assign tmp_52_1_fu_1515_p2 = (tmp_57_fu_1391_p1 & tmp_51_1_fu_1509_p2);

assign tmp_52_2_fu_1570_p2 = (tmp_58_fu_1394_p1 & tmp_51_2_fu_1564_p2);

assign tmp_52_3_fu_1625_p2 = (tmp_59_fu_1397_p1 & tmp_51_3_fu_1619_p2);

assign tmp_52_4_fu_1680_p2 = (tmp_60_fu_1400_p1 & tmp_51_4_fu_1674_p2);

assign tmp_52_5_fu_1735_p2 = (tmp_62_fu_1403_p1 & tmp_51_5_fu_1729_p2);

assign tmp_52_6_fu_1790_p2 = (tmp_63_fu_1406_p1 & tmp_51_6_fu_1784_p2);

assign tmp_52_7_fu_1845_p2 = (tmp_64_fu_1409_p1 & tmp_51_7_fu_1839_p2);

assign tmp_52_8_fu_1900_p2 = (tmp_65_fu_1412_p1 & tmp_51_8_fu_1894_p2);

assign tmp_52_9_fu_1955_p2 = (tmp_66_fu_1415_p1 & tmp_51_9_fu_1949_p2);

assign tmp_52_s_fu_2010_p2 = (tmp_67_fu_1418_p1 & tmp_51_s_fu_2004_p2);

assign tmp_55_fu_1042_p1 = in_V_data_V_dout[31:0];

assign tmp_56_fu_1388_p1 = ret_V_s_reg_2888[54:0];

assign tmp_57_10_cast_fu_2077_p1 = $unsigned(e_11_load_cast_fu_2041_p1);

assign tmp_57_11_cast_fu_2132_p1 = $unsigned(e_12_load_cast_fu_2096_p1);

assign tmp_57_12_cast_fu_2187_p1 = $unsigned(e_13_load_cast_fu_2151_p1);

assign tmp_57_13_cast_fu_2242_p1 = $unsigned(e_14_load_cast_fu_2206_p1);

assign tmp_57_14_cast_fu_2297_p1 = $unsigned(e_15_load_cast_fu_2261_p1);

assign tmp_57_1_cast_fu_1527_p1 = $unsigned(e_1_load_cast_fu_1491_p1);

assign tmp_57_2_cast_fu_1582_p1 = $unsigned(e_2_load_cast_fu_1546_p1);

assign tmp_57_3_cast_fu_1637_p1 = $unsigned(e_3_load_cast_fu_1601_p1);

assign tmp_57_4_cast_fu_1692_p1 = $unsigned(e_4_load_cast_fu_1656_p1);

assign tmp_57_5_cast_fu_1747_p1 = $unsigned(e_5_load_cast_fu_1711_p1);

assign tmp_57_6_cast_fu_1802_p1 = $unsigned(e_6_load_cast_fu_1766_p1);

assign tmp_57_7_cast_fu_1857_p1 = $unsigned(e_7_load_cast_fu_1821_p1);

assign tmp_57_8_cast_fu_1912_p1 = $unsigned(e_8_load_cast_fu_1876_p1);

assign tmp_57_9_cast_fu_1967_p1 = $unsigned(e_9_load_cast_fu_1931_p1);

assign tmp_57_cast_300_fu_2022_p1 = $unsigned(e_10_load_cast_fu_1986_p1);

assign tmp_57_cast_fu_1472_p1 = $unsigned(e_0_load_cast_fu_1436_p1);

assign tmp_57_fu_1391_p1 = ret_V_10_1_reg_2894[54:0];

assign tmp_58_fu_1394_p1 = ret_V_10_2_reg_2900[54:0];

assign tmp_59_fu_1397_p1 = ret_V_10_3_reg_2906[54:0];

assign tmp_5_fu_1460_p2 = (tmp_56_fu_1388_p1 & tmp_4_fu_1454_p2);

assign tmp_60_fu_1400_p1 = ret_V_10_4_reg_2912[54:0];

assign tmp_62_fu_1403_p1 = ret_V_10_5_reg_2918[54:0];

assign tmp_63_fu_1406_p1 = ret_V_10_6_reg_2924[54:0];

assign tmp_64_fu_1409_p1 = ret_V_10_7_reg_2930[54:0];

assign tmp_65_fu_1412_p1 = ret_V_10_8_reg_2936[54:0];

assign tmp_66_fu_1415_p1 = ret_V_10_9_reg_2942[53:0];

assign tmp_67_fu_1418_p1 = ret_V_10_s_reg_2948[54:0];

assign tmp_68_fu_1421_p1 = ret_V_10_10_reg_2954[55:0];

assign tmp_69_fu_1424_p1 = ret_V_10_11_reg_2960[54:0];

assign tmp_6_fu_1006_p2 = ((ii_fu_982_p1 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_70_fu_1427_p1 = ret_V_10_12_reg_2966[54:0];

assign tmp_71_fu_1430_p1 = ret_V_10_13_reg_2972[54:0];

assign tmp_72_fu_1433_p1 = ret_V_10_14_reg_2978[54:0];

assign tmp_73_fu_1481_p1 = r_V_2_fu_1476_p2[7:0];

assign tmp_74_fu_1536_p1 = r_V_2_1_fu_1531_p2[7:0];

assign tmp_75_fu_1591_p1 = r_V_2_2_fu_1586_p2[7:0];

assign tmp_76_fu_1646_p1 = r_V_2_3_fu_1641_p2[7:0];

assign tmp_77_fu_1701_p1 = r_V_2_4_fu_1696_p2[7:0];

assign tmp_78_fu_1756_p1 = r_V_2_5_fu_1751_p2[7:0];

assign tmp_79_fu_1811_p1 = r_V_2_6_fu_1806_p2[7:0];

assign tmp_7_fu_932_p2 = ((j_reg_857 == 6'd48) ? 1'b1 : 1'b0);

assign tmp_80_fu_1866_p1 = r_V_2_7_fu_1861_p2[7:0];

assign tmp_81_fu_1921_p1 = r_V_2_8_fu_1916_p2[7:0];

assign tmp_82_fu_1976_p1 = r_V_2_9_fu_1971_p2[7:0];

assign tmp_83_fu_2031_p1 = r_V_2_s_fu_2026_p2[7:0];

assign tmp_84_fu_2086_p1 = r_V_2_10_fu_2081_p2[7:0];

assign tmp_85_fu_2141_p1 = r_V_2_11_fu_2136_p2[7:0];

assign tmp_86_fu_2196_p1 = r_V_2_12_fu_2191_p2[7:0];

assign tmp_87_fu_2251_p1 = r_V_2_13_fu_2246_p2[7:0];

assign tmp_88_fu_2306_p1 = r_V_2_14_fu_2301_p2[7:0];

assign tmp_89_fu_2463_p1 = Lo_assign_reg_3304;

assign tmp_8_fu_1012_p4 = {{j_mid2_fu_938_p3[5:2]}};

assign tmp_90_fu_2466_p1 = Hi_assign_reg_3309;

assign tmp_91_fu_2469_p2 = (tmp_89_fu_2463_p1 ^ 10'd511);

assign tmp_92_fu_2475_p3 = ((tmp_reg_3314[0:0] === 1'b1) ? tmp_89_fu_2463_p1 : tmp_90_fu_2466_p1);

assign tmp_93_fu_2482_p3 = ((tmp_reg_3314[0:0] === 1'b1) ? tmp_90_fu_2466_p1 : tmp_89_fu_2463_p1);

assign tmp_94_fu_2489_p3 = ((tmp_reg_3314[0:0] === 1'b1) ? tmp_91_fu_2469_p2 : tmp_89_fu_2463_p1);

assign tmp_95_fu_2496_p2 = (tmp_92_fu_2475_p3 ^ 10'd511);

assign tmp_96_fu_2502_p1 = tmp_94_fu_2489_p3;

assign tmp_97_fu_2506_p1 = tmp_93_fu_2482_p3;

assign tmp_98_fu_2510_p1 = tmp_95_fu_2496_p2;

assign tmp_99_fu_2514_p2 = tmp_V_fu_2459_p1 << tmp_96_fu_2502_p1;

assign tmp_V_fu_2459_p1 = p_Result_9_s_fu_2423_p17;

assign tmp_data_V_4_fu_2573_p2 = (tmp_106_fu_2567_p2 | tmp_105_fu_2561_p2);

assign tmp_fu_2329_p2 = ((Lo_assign_fu_2316_p3 > Hi_assign_fu_2323_p2) ? 1'b1 : 1'b0);

assign tmp_mid1_fu_952_p2 = ((i_s_fu_946_p2 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_s_fu_907_p2 = ((i_reg_836 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_user_V_1_fu_966_p3 = ((tmp_7_fu_932_p2[0:0] === 1'b1) ? tmp_user_V_6_mid1_fu_958_p3 : tmp_user_V_fu_913_p3);

assign tmp_user_V_6_mid1_fu_958_p3 = ((tmp_mid1_fu_952_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign tmp_user_V_7_cast1_fu_2335_p1 = $signed(tmp_user_V_1_reg_2599_pp0_iter3_reg);

assign tmp_user_V_7_cast_fu_2338_p1 = $unsigned(tmp_user_V_7_cast1_fu_2335_p1);

assign tmp_user_V_fu_913_p3 = ((tmp_s_fu_907_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

always @ (posedge ap_clk) begin
    bound_reg_2585[3:0] <= 4'b0000;
    tmp_user_V_1_reg_2599[2:1] <= 2'b10;
    tmp_user_V_1_reg_2599_pp0_iter1_reg[2:1] <= 2'b10;
    tmp_user_V_1_reg_2599_pp0_iter2_reg[2:1] <= 2'b10;
    tmp_user_V_1_reg_2599_pp0_iter3_reg[2:1] <= 2'b10;
    tmp_3_reg_2614[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_3_reg_2614_pp0_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    Lo_assign_reg_3304[6:0] <= 7'b0000000;
    Hi_assign_reg_3309[6:0] <= 7'b1111111;
end

endmodule //QuantAct
