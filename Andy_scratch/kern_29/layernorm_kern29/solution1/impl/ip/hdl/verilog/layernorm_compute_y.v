// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module layernorm_compute_y (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        n_pipe3_V_V_dout,
        n_pipe3_V_V_empty_n,
        n_pipe3_V_V_read,
        n_pipe4_V_V_din,
        n_pipe4_V_V_full_n,
        n_pipe4_V_V_write,
        mean_pipe2_V_V_dout,
        mean_pipe2_V_V_empty_n,
        mean_pipe2_V_V_read,
        in_compute_y_factor_s_0_dout,
        in_compute_y_factor_s_0_empty_n,
        in_compute_y_factor_s_0_read,
        in_compute_y_V_V_0_dout,
        in_compute_y_V_V_0_empty_n,
        in_compute_y_V_V_0_read,
        in_write_V_V_0_din,
        in_write_V_V_0_full_n,
        in_write_V_V_0_write,
        in_compute_y_V_V_1_dout,
        in_compute_y_V_V_1_empty_n,
        in_compute_y_V_V_1_read,
        in_write_V_V_1_din,
        in_write_V_V_1_full_n,
        in_write_V_V_1_write,
        in_compute_y_V_V_2_dout,
        in_compute_y_V_V_2_empty_n,
        in_compute_y_V_V_2_read,
        in_write_V_V_2_din,
        in_write_V_V_2_full_n,
        in_write_V_V_2_write,
        in_compute_y_V_V_3_dout,
        in_compute_y_V_V_3_empty_n,
        in_compute_y_V_V_3_read,
        in_write_V_V_3_din,
        in_write_V_V_3_full_n,
        in_write_V_V_3_write,
        in_compute_y_V_V_4_dout,
        in_compute_y_V_V_4_empty_n,
        in_compute_y_V_V_4_read,
        in_write_V_V_4_din,
        in_write_V_V_4_full_n,
        in_write_V_V_4_write,
        in_compute_y_V_V_5_dout,
        in_compute_y_V_V_5_empty_n,
        in_compute_y_V_V_5_read,
        in_write_V_V_5_din,
        in_write_V_V_5_full_n,
        in_write_V_V_5_write,
        in_compute_y_V_V_6_dout,
        in_compute_y_V_V_6_empty_n,
        in_compute_y_V_V_6_read,
        in_write_V_V_6_din,
        in_write_V_V_6_full_n,
        in_write_V_V_6_write,
        in_compute_y_V_V_7_dout,
        in_compute_y_V_V_7_empty_n,
        in_compute_y_V_V_7_read,
        in_write_V_V_7_din,
        in_write_V_V_7_full_n,
        in_write_V_V_7_write,
        in_compute_y_V_V_8_dout,
        in_compute_y_V_V_8_empty_n,
        in_compute_y_V_V_8_read,
        in_write_V_V_8_din,
        in_write_V_V_8_full_n,
        in_write_V_V_8_write,
        in_compute_y_V_V_9_dout,
        in_compute_y_V_V_9_empty_n,
        in_compute_y_V_V_9_read,
        in_write_V_V_9_din,
        in_write_V_V_9_full_n,
        in_write_V_V_9_write,
        in_compute_y_V_V_10_dout,
        in_compute_y_V_V_10_empty_n,
        in_compute_y_V_V_10_read,
        in_write_V_V_10_din,
        in_write_V_V_10_full_n,
        in_write_V_V_10_write,
        in_compute_y_V_V_11_dout,
        in_compute_y_V_V_11_empty_n,
        in_compute_y_V_V_11_read,
        in_write_V_V_11_din,
        in_write_V_V_11_full_n,
        in_write_V_V_11_write,
        in_compute_y_V_V_12_dout,
        in_compute_y_V_V_12_empty_n,
        in_compute_y_V_V_12_read,
        in_write_V_V_12_din,
        in_write_V_V_12_full_n,
        in_write_V_V_12_write,
        in_compute_y_V_V_13_dout,
        in_compute_y_V_V_13_empty_n,
        in_compute_y_V_V_13_read,
        in_write_V_V_13_din,
        in_write_V_V_13_full_n,
        in_write_V_V_13_write,
        in_compute_y_V_V_14_dout,
        in_compute_y_V_V_14_empty_n,
        in_compute_y_V_V_14_read,
        in_write_V_V_14_din,
        in_write_V_V_14_full_n,
        in_write_V_V_14_write,
        in_compute_y_V_V_15_dout,
        in_compute_y_V_V_15_empty_n,
        in_compute_y_V_V_15_read,
        in_write_V_V_15_din,
        in_write_V_V_15_full_n,
        in_write_V_V_15_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] n_pipe3_V_V_dout;
input   n_pipe3_V_V_empty_n;
output   n_pipe3_V_V_read;
output  [31:0] n_pipe4_V_V_din;
input   n_pipe4_V_V_full_n;
output   n_pipe4_V_V_write;
input  [31:0] mean_pipe2_V_V_dout;
input   mean_pipe2_V_V_empty_n;
output   mean_pipe2_V_V_read;
input  [31:0] in_compute_y_factor_s_0_dout;
input   in_compute_y_factor_s_0_empty_n;
output   in_compute_y_factor_s_0_read;
input  [31:0] in_compute_y_V_V_0_dout;
input   in_compute_y_V_V_0_empty_n;
output   in_compute_y_V_V_0_read;
output  [31:0] in_write_V_V_0_din;
input   in_write_V_V_0_full_n;
output   in_write_V_V_0_write;
input  [31:0] in_compute_y_V_V_1_dout;
input   in_compute_y_V_V_1_empty_n;
output   in_compute_y_V_V_1_read;
output  [31:0] in_write_V_V_1_din;
input   in_write_V_V_1_full_n;
output   in_write_V_V_1_write;
input  [31:0] in_compute_y_V_V_2_dout;
input   in_compute_y_V_V_2_empty_n;
output   in_compute_y_V_V_2_read;
output  [31:0] in_write_V_V_2_din;
input   in_write_V_V_2_full_n;
output   in_write_V_V_2_write;
input  [31:0] in_compute_y_V_V_3_dout;
input   in_compute_y_V_V_3_empty_n;
output   in_compute_y_V_V_3_read;
output  [31:0] in_write_V_V_3_din;
input   in_write_V_V_3_full_n;
output   in_write_V_V_3_write;
input  [31:0] in_compute_y_V_V_4_dout;
input   in_compute_y_V_V_4_empty_n;
output   in_compute_y_V_V_4_read;
output  [31:0] in_write_V_V_4_din;
input   in_write_V_V_4_full_n;
output   in_write_V_V_4_write;
input  [31:0] in_compute_y_V_V_5_dout;
input   in_compute_y_V_V_5_empty_n;
output   in_compute_y_V_V_5_read;
output  [31:0] in_write_V_V_5_din;
input   in_write_V_V_5_full_n;
output   in_write_V_V_5_write;
input  [31:0] in_compute_y_V_V_6_dout;
input   in_compute_y_V_V_6_empty_n;
output   in_compute_y_V_V_6_read;
output  [31:0] in_write_V_V_6_din;
input   in_write_V_V_6_full_n;
output   in_write_V_V_6_write;
input  [31:0] in_compute_y_V_V_7_dout;
input   in_compute_y_V_V_7_empty_n;
output   in_compute_y_V_V_7_read;
output  [31:0] in_write_V_V_7_din;
input   in_write_V_V_7_full_n;
output   in_write_V_V_7_write;
input  [31:0] in_compute_y_V_V_8_dout;
input   in_compute_y_V_V_8_empty_n;
output   in_compute_y_V_V_8_read;
output  [31:0] in_write_V_V_8_din;
input   in_write_V_V_8_full_n;
output   in_write_V_V_8_write;
input  [31:0] in_compute_y_V_V_9_dout;
input   in_compute_y_V_V_9_empty_n;
output   in_compute_y_V_V_9_read;
output  [31:0] in_write_V_V_9_din;
input   in_write_V_V_9_full_n;
output   in_write_V_V_9_write;
input  [31:0] in_compute_y_V_V_10_dout;
input   in_compute_y_V_V_10_empty_n;
output   in_compute_y_V_V_10_read;
output  [31:0] in_write_V_V_10_din;
input   in_write_V_V_10_full_n;
output   in_write_V_V_10_write;
input  [31:0] in_compute_y_V_V_11_dout;
input   in_compute_y_V_V_11_empty_n;
output   in_compute_y_V_V_11_read;
output  [31:0] in_write_V_V_11_din;
input   in_write_V_V_11_full_n;
output   in_write_V_V_11_write;
input  [31:0] in_compute_y_V_V_12_dout;
input   in_compute_y_V_V_12_empty_n;
output   in_compute_y_V_V_12_read;
output  [31:0] in_write_V_V_12_din;
input   in_write_V_V_12_full_n;
output   in_write_V_V_12_write;
input  [31:0] in_compute_y_V_V_13_dout;
input   in_compute_y_V_V_13_empty_n;
output   in_compute_y_V_V_13_read;
output  [31:0] in_write_V_V_13_din;
input   in_write_V_V_13_full_n;
output   in_write_V_V_13_write;
input  [31:0] in_compute_y_V_V_14_dout;
input   in_compute_y_V_V_14_empty_n;
output   in_compute_y_V_V_14_read;
output  [31:0] in_write_V_V_14_din;
input   in_write_V_V_14_full_n;
output   in_write_V_V_14_write;
input  [31:0] in_compute_y_V_V_15_dout;
input   in_compute_y_V_V_15_empty_n;
output   in_compute_y_V_V_15_read;
output  [31:0] in_write_V_V_15_din;
input   in_write_V_V_15_full_n;
output   in_write_V_V_15_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg n_pipe3_V_V_read;
reg n_pipe4_V_V_write;
reg mean_pipe2_V_V_read;
reg in_compute_y_factor_s_0_read;
reg in_compute_y_V_V_0_read;
reg in_write_V_V_0_write;
reg in_compute_y_V_V_1_read;
reg in_write_V_V_1_write;
reg in_compute_y_V_V_2_read;
reg in_write_V_V_2_write;
reg in_compute_y_V_V_3_read;
reg in_write_V_V_3_write;
reg in_compute_y_V_V_4_read;
reg in_write_V_V_4_write;
reg in_compute_y_V_V_5_read;
reg in_write_V_V_5_write;
reg in_compute_y_V_V_6_read;
reg in_write_V_V_6_write;
reg in_compute_y_V_V_7_read;
reg in_write_V_V_7_write;
reg in_compute_y_V_V_8_read;
reg in_write_V_V_8_write;
reg in_compute_y_V_V_9_read;
reg in_write_V_V_9_write;
reg in_compute_y_V_V_10_read;
reg in_write_V_V_10_write;
reg in_compute_y_V_V_11_read;
reg in_write_V_V_11_write;
reg in_compute_y_V_V_12_read;
reg in_write_V_V_12_write;
reg in_compute_y_V_V_13_read;
reg in_write_V_V_13_write;
reg in_compute_y_V_V_14_read;
reg in_write_V_V_14_write;
reg in_compute_y_V_V_15_read;
reg in_write_V_V_15_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [9:0] bias_address0;
reg    bias_ce0;
wire   [26:0] bias_q0;
wire   [9:0] bias_address1;
reg    bias_ce1;
wire   [26:0] bias_q1;
wire   [9:0] bias_address2;
reg    bias_ce2;
wire   [26:0] bias_q2;
wire   [9:0] bias_address3;
reg    bias_ce3;
wire   [26:0] bias_q3;
wire   [9:0] bias_address4;
reg    bias_ce4;
wire   [26:0] bias_q4;
wire   [9:0] bias_address5;
reg    bias_ce5;
wire   [26:0] bias_q5;
wire   [9:0] bias_address6;
reg    bias_ce6;
wire   [26:0] bias_q6;
wire   [9:0] bias_address7;
reg    bias_ce7;
wire   [26:0] bias_q7;
wire   [9:0] bias_address8;
reg    bias_ce8;
wire   [26:0] bias_q8;
wire   [9:0] bias_address9;
reg    bias_ce9;
wire   [26:0] bias_q9;
wire   [9:0] bias_address10;
reg    bias_ce10;
wire   [26:0] bias_q10;
wire   [9:0] bias_address11;
reg    bias_ce11;
wire   [26:0] bias_q11;
wire   [9:0] bias_address12;
reg    bias_ce12;
wire   [26:0] bias_q12;
wire   [9:0] bias_address13;
reg    bias_ce13;
wire   [26:0] bias_q13;
wire   [9:0] bias_address14;
reg    bias_ce14;
wire   [26:0] bias_q14;
wire   [9:0] bias_address15;
reg    bias_ce15;
wire   [26:0] bias_q15;
reg    n_pipe3_V_V_blk_n;
reg    n_pipe4_V_V_blk_n;
reg    mean_pipe2_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_16_i_reg_1905;
reg    in_compute_y_factor_s_0_blk_n;
reg    in_compute_y_V_V_0_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] exitcond_flatten_reg_1891;
reg   [0:0] exitcond_flatten_reg_1891_pp0_iter1_reg;
reg    in_write_V_V_0_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] exitcond_flatten_reg_1891_pp0_iter3_reg;
reg    in_compute_y_V_V_1_blk_n;
reg    in_write_V_V_1_blk_n;
reg    in_compute_y_V_V_2_blk_n;
reg    in_write_V_V_2_blk_n;
reg    in_compute_y_V_V_3_blk_n;
reg    in_write_V_V_3_blk_n;
reg    in_compute_y_V_V_4_blk_n;
reg    in_write_V_V_4_blk_n;
reg    in_compute_y_V_V_5_blk_n;
reg    in_write_V_V_5_blk_n;
reg    in_compute_y_V_V_6_blk_n;
reg    in_write_V_V_6_blk_n;
reg    in_compute_y_V_V_7_blk_n;
reg    in_write_V_V_7_blk_n;
reg    in_compute_y_V_V_8_blk_n;
reg    in_write_V_V_8_blk_n;
reg    in_compute_y_V_V_9_blk_n;
reg    in_write_V_V_9_blk_n;
reg    in_compute_y_V_V_10_blk_n;
reg    in_write_V_V_10_blk_n;
reg    in_compute_y_V_V_11_blk_n;
reg    in_write_V_V_11_blk_n;
reg    in_compute_y_V_V_12_blk_n;
reg    in_write_V_V_12_blk_n;
reg    in_compute_y_V_V_13_blk_n;
reg    in_write_V_V_13_blk_n;
reg    in_compute_y_V_V_14_blk_n;
reg    in_write_V_V_14_blk_n;
reg    in_compute_y_V_V_15_blk_n;
reg    in_write_V_V_15_blk_n;
reg   [37:0] indvar_flatten_reg_1029;
reg   [5:0] j_i_reg_1040;
wire   [37:0] bound_fu_1071_p2;
reg   [37:0] bound_reg_1886;
reg    ap_block_state1;
wire   [0:0] exitcond_flatten_fu_1077_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_state6_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten_reg_1891_pp0_iter2_reg;
wire   [37:0] indvar_flatten_next_fu_1082_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [5:0] j_i_mid2_fu_1094_p3;
reg   [5:0] j_i_mid2_reg_1900;
reg   [5:0] j_i_mid2_reg_1900_pp0_iter1_reg;
reg   [5:0] j_i_mid2_reg_1900_pp0_iter2_reg;
wire   [0:0] tmp_16_i_fu_1102_p2;
wire   [5:0] j_fu_1108_p2;
reg   [31:0] tmp_V_51_load_reg_1914;
wire  signed [32:0] ret_V_i_fu_1138_p2;
reg  signed [32:0] ret_V_i_reg_1919;
wire  signed [32:0] ret_V_1_i_fu_1148_p2;
reg  signed [32:0] ret_V_1_i_reg_1924;
wire  signed [32:0] ret_V_2_i_fu_1158_p2;
reg  signed [32:0] ret_V_2_i_reg_1929;
wire  signed [32:0] ret_V_3_i_fu_1168_p2;
reg  signed [32:0] ret_V_3_i_reg_1934;
wire  signed [32:0] ret_V_4_i_fu_1178_p2;
reg  signed [32:0] ret_V_4_i_reg_1939;
wire  signed [32:0] ret_V_5_i_fu_1188_p2;
reg  signed [32:0] ret_V_5_i_reg_1944;
wire  signed [32:0] ret_V_6_i_fu_1198_p2;
reg  signed [32:0] ret_V_6_i_reg_1949;
wire  signed [32:0] ret_V_7_i_fu_1208_p2;
reg  signed [32:0] ret_V_7_i_reg_1954;
wire  signed [32:0] ret_V_8_i_fu_1218_p2;
reg  signed [32:0] ret_V_8_i_reg_1959;
wire  signed [32:0] ret_V_i_30_fu_1228_p2;
reg  signed [32:0] ret_V_i_30_reg_1964;
wire  signed [32:0] ret_V_10_i_fu_1238_p2;
reg  signed [32:0] ret_V_10_i_reg_1969;
wire  signed [32:0] ret_V_11_i_fu_1248_p2;
reg  signed [32:0] ret_V_11_i_reg_1974;
wire  signed [32:0] ret_V_12_i_fu_1258_p2;
reg  signed [32:0] ret_V_12_i_reg_1979;
wire  signed [32:0] ret_V_13_i_fu_1268_p2;
reg  signed [32:0] ret_V_13_i_reg_1984;
wire  signed [32:0] ret_V_14_i_fu_1278_p2;
reg  signed [32:0] ret_V_14_i_reg_1989;
wire  signed [32:0] ret_V_15_i_fu_1288_p2;
reg  signed [32:0] ret_V_15_i_reg_1994;
reg   [31:0] phitmp_i_reg_1999;
reg   [31:0] phitmp_1_i_reg_2009;
reg   [31:0] phitmp_2_i_reg_2019;
reg   [31:0] phitmp_3_i_reg_2029;
reg   [31:0] phitmp_4_i_reg_2039;
reg   [31:0] phitmp_5_i_reg_2049;
reg   [31:0] phitmp_6_i_reg_2059;
reg   [31:0] phitmp_7_i_reg_2069;
reg   [31:0] phitmp_8_i_reg_2079;
reg   [31:0] phitmp_9_i_reg_2089;
reg   [31:0] phitmp_i_32_reg_2099;
reg   [31:0] phitmp_10_i_reg_2109;
reg   [31:0] phitmp_11_i_reg_2119;
reg   [31:0] phitmp_12_i_reg_2129;
reg   [31:0] phitmp_13_i_reg_2139;
reg   [31:0] phitmp_14_i_reg_2149;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter3;
wire   [63:0] tmp_29_i_fu_1319_p1;
wire   [63:0] tmp_29_1_i_fu_1345_p1;
wire   [63:0] tmp_29_2_i_fu_1371_p1;
wire   [63:0] tmp_29_3_i_fu_1397_p1;
wire   [63:0] tmp_29_4_i_fu_1423_p1;
wire   [63:0] tmp_29_5_i_fu_1449_p1;
wire   [63:0] tmp_29_6_i_fu_1475_p1;
wire   [63:0] tmp_29_7_i_fu_1501_p1;
wire   [63:0] tmp_29_8_i_fu_1527_p1;
wire   [63:0] tmp_29_9_i_fu_1553_p1;
wire   [63:0] tmp_29_i_33_fu_1579_p1;
wire   [63:0] tmp_29_10_i_fu_1605_p1;
wire   [63:0] tmp_29_11_i_fu_1631_p1;
wire   [63:0] tmp_29_12_i_fu_1657_p1;
wire   [63:0] tmp_29_13_i_fu_1683_p1;
wire   [63:0] tmp_29_14_i_fu_1709_p1;
reg    ap_block_pp0_stage0_01001;
reg   [31:0] tmp_V_fu_594;
reg   [31:0] tmp_V_51_fu_598;
wire   [35:0] tmp_fu_1059_p3;
wire   [37:0] p_shl_fu_1051_p3;
wire   [37:0] p_shl2_fu_1067_p1;
wire   [0:0] tmp_i_fu_1088_p2;
wire  signed [32:0] lhs_V_i_fu_1134_p1;
wire  signed [32:0] rhs_V_fu_1130_p1;
wire  signed [32:0] lhs_V_i_29_fu_1144_p1;
wire  signed [32:0] lhs_V_2_i_fu_1154_p1;
wire  signed [32:0] lhs_V_3_i_fu_1164_p1;
wire  signed [32:0] lhs_V_4_i_fu_1174_p1;
wire  signed [32:0] lhs_V_5_i_fu_1184_p1;
wire  signed [32:0] lhs_V_6_i_fu_1194_p1;
wire  signed [32:0] lhs_V_7_i_fu_1204_p1;
wire  signed [32:0] lhs_V_8_i_fu_1214_p1;
wire  signed [32:0] lhs_V_9_i_fu_1224_p1;
wire  signed [32:0] lhs_V_10_i_fu_1234_p1;
wire  signed [32:0] lhs_V_11_i_fu_1244_p1;
wire  signed [32:0] lhs_V_12_i_fu_1254_p1;
wire  signed [32:0] lhs_V_13_i_fu_1264_p1;
wire  signed [32:0] lhs_V_14_i_fu_1274_p1;
wire  signed [32:0] lhs_V_15_i_fu_1284_p1;
wire   [31:0] ret_V_9_i_fu_1304_p0;
wire   [32:0] rhs_V_1_cast_i_fu_1294_p1;
wire   [32:0] ret_V_9_i_fu_1304_p2;
wire   [9:0] tmp_17_i_fu_1297_p3;
wire   [31:0] ret_V_9_1_i_fu_1324_p0;
wire   [32:0] ret_V_9_1_i_fu_1324_p2;
wire   [9:0] tmp_28_i_fu_1339_p2;
wire   [31:0] ret_V_9_2_i_fu_1350_p0;
wire   [32:0] ret_V_9_2_i_fu_1350_p2;
wire   [9:0] tmp_28_1_i_fu_1365_p2;
wire   [31:0] ret_V_9_3_i_fu_1376_p0;
wire   [32:0] ret_V_9_3_i_fu_1376_p2;
wire   [9:0] tmp_28_2_i_fu_1391_p2;
wire   [31:0] ret_V_9_4_i_fu_1402_p0;
wire   [32:0] ret_V_9_4_i_fu_1402_p2;
wire   [9:0] tmp_28_3_i_fu_1417_p2;
wire   [31:0] ret_V_9_5_i_fu_1428_p0;
wire   [32:0] ret_V_9_5_i_fu_1428_p2;
wire   [9:0] tmp_28_4_i_fu_1443_p2;
wire   [31:0] ret_V_9_6_i_fu_1454_p0;
wire   [32:0] ret_V_9_6_i_fu_1454_p2;
wire   [9:0] tmp_28_5_i_fu_1469_p2;
wire   [31:0] ret_V_9_7_i_fu_1480_p0;
wire   [32:0] ret_V_9_7_i_fu_1480_p2;
wire   [9:0] tmp_28_6_i_fu_1495_p2;
wire   [31:0] ret_V_9_8_i_fu_1506_p0;
wire   [32:0] ret_V_9_8_i_fu_1506_p2;
wire   [9:0] tmp_28_7_i_fu_1521_p2;
wire   [31:0] ret_V_9_9_i_fu_1532_p0;
wire   [32:0] ret_V_9_9_i_fu_1532_p2;
wire   [9:0] tmp_28_8_i_fu_1547_p2;
wire   [31:0] ret_V_9_i_31_fu_1558_p0;
wire   [32:0] ret_V_9_i_31_fu_1558_p2;
wire   [9:0] tmp_28_9_i_fu_1573_p2;
wire   [31:0] ret_V_9_10_i_fu_1584_p0;
wire   [32:0] ret_V_9_10_i_fu_1584_p2;
wire   [9:0] tmp_28_10_i_fu_1599_p2;
wire   [31:0] ret_V_9_11_i_fu_1610_p0;
wire   [32:0] ret_V_9_11_i_fu_1610_p2;
wire   [9:0] tmp_28_11_i_fu_1625_p2;
wire   [31:0] ret_V_9_12_i_fu_1636_p0;
wire   [32:0] ret_V_9_12_i_fu_1636_p2;
wire   [9:0] tmp_28_12_i_fu_1651_p2;
wire   [31:0] ret_V_9_13_i_fu_1662_p0;
wire   [32:0] ret_V_9_13_i_fu_1662_p2;
wire   [9:0] tmp_28_13_i_fu_1677_p2;
wire   [31:0] ret_V_9_14_i_fu_1688_p0;
wire   [32:0] ret_V_9_14_i_fu_1688_p2;
wire   [9:0] tmp_28_14_i_fu_1703_p2;
wire  signed [31:0] bias_load_cast_i_fu_1714_p1;
wire  signed [31:0] bias_load_1_cast_i_fu_1724_p1;
wire  signed [31:0] bias_load_2_cast_i_fu_1734_p1;
wire  signed [31:0] bias_load_3_cast_i_fu_1744_p1;
wire  signed [31:0] bias_load_4_cast_i_fu_1754_p1;
wire  signed [31:0] bias_load_5_cast_i_fu_1764_p1;
wire  signed [31:0] bias_load_6_cast_i_fu_1774_p1;
wire  signed [31:0] bias_load_7_cast_i_fu_1784_p1;
wire  signed [31:0] bias_load_8_cast_i_fu_1794_p1;
wire  signed [31:0] bias_load_9_cast_i_fu_1804_p1;
wire  signed [31:0] bias_load_10_cast_i_fu_1814_p1;
wire  signed [31:0] bias_load_11_cast_i_fu_1824_p1;
wire  signed [31:0] bias_load_12_cast_i_fu_1834_p1;
wire  signed [31:0] bias_load_13_cast_i_fu_1844_p1;
wire  signed [31:0] bias_load_14_cast_i_fu_1854_p1;
wire  signed [31:0] bias_load_15_cast_i_fu_1864_p1;
wire    ap_CS_fsm_state7;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

layernorm_compute_y_bias #(
    .DataWidth( 27 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_address0),
    .ce0(bias_ce0),
    .q0(bias_q0),
    .address1(bias_address1),
    .ce1(bias_ce1),
    .q1(bias_q1),
    .address2(bias_address2),
    .ce2(bias_ce2),
    .q2(bias_q2),
    .address3(bias_address3),
    .ce3(bias_ce3),
    .q3(bias_q3),
    .address4(bias_address4),
    .ce4(bias_ce4),
    .q4(bias_q4),
    .address5(bias_address5),
    .ce5(bias_ce5),
    .q5(bias_q5),
    .address6(bias_address6),
    .ce6(bias_ce6),
    .q6(bias_q6),
    .address7(bias_address7),
    .ce7(bias_ce7),
    .q7(bias_q7),
    .address8(bias_address8),
    .ce8(bias_ce8),
    .q8(bias_q8),
    .address9(bias_address9),
    .ce9(bias_ce9),
    .q9(bias_q9),
    .address10(bias_address10),
    .ce10(bias_ce10),
    .q10(bias_q10),
    .address11(bias_address11),
    .ce11(bias_ce11),
    .q11(bias_q11),
    .address12(bias_address12),
    .ce12(bias_ce12),
    .q12(bias_q12),
    .address13(bias_address13),
    .ce13(bias_ce13),
    .q13(bias_q13),
    .address14(bias_address14),
    .ce14(bias_ce14),
    .q14(bias_q14),
    .address15(bias_address15),
    .ce15(bias_ce15),
    .q15(bias_q15)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (n_pipe4_V_V_full_n == 1'b0) | (n_pipe3_V_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((~((real_start == 1'b0) | (n_pipe4_V_V_full_n == 1'b0) | (n_pipe3_V_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_1077_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_1029 <= indvar_flatten_next_fu_1082_p2;
    end else if ((~((real_start == 1'b0) | (n_pipe4_V_V_full_n == 1'b0) | (n_pipe3_V_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_1029 <= 38'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_1077_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_i_reg_1040 <= j_fu_1108_p2;
    end else if ((~((real_start == 1'b0) | (n_pipe4_V_V_full_n == 1'b0) | (n_pipe3_V_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        j_i_reg_1040 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (n_pipe4_V_V_full_n == 1'b0) | (n_pipe3_V_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        bound_reg_1886[37 : 4] <= bound_fu_1071_p2[37 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten_reg_1891 <= exitcond_flatten_fu_1077_p2;
        exitcond_flatten_reg_1891_pp0_iter1_reg <= exitcond_flatten_reg_1891;
        j_i_mid2_reg_1900_pp0_iter1_reg <= j_i_mid2_reg_1900;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond_flatten_reg_1891_pp0_iter2_reg <= exitcond_flatten_reg_1891_pp0_iter1_reg;
        exitcond_flatten_reg_1891_pp0_iter3_reg <= exitcond_flatten_reg_1891_pp0_iter2_reg;
        j_i_mid2_reg_1900_pp0_iter2_reg <= j_i_mid2_reg_1900_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_1077_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_i_mid2_reg_1900 <= j_i_mid2_fu_1094_p3;
        tmp_16_i_reg_1905 <= tmp_16_i_fu_1102_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter2_reg == 1'd0))) begin
        phitmp_10_i_reg_2109 <= {{ret_V_9_10_i_fu_1584_p2[32:1]}};
        phitmp_11_i_reg_2119 <= {{ret_V_9_11_i_fu_1610_p2[32:1]}};
        phitmp_12_i_reg_2129 <= {{ret_V_9_12_i_fu_1636_p2[32:1]}};
        phitmp_13_i_reg_2139 <= {{ret_V_9_13_i_fu_1662_p2[32:1]}};
        phitmp_14_i_reg_2149 <= {{ret_V_9_14_i_fu_1688_p2[32:1]}};
        phitmp_1_i_reg_2009 <= {{ret_V_9_1_i_fu_1324_p2[32:1]}};
        phitmp_2_i_reg_2019 <= {{ret_V_9_2_i_fu_1350_p2[32:1]}};
        phitmp_3_i_reg_2029 <= {{ret_V_9_3_i_fu_1376_p2[32:1]}};
        phitmp_4_i_reg_2039 <= {{ret_V_9_4_i_fu_1402_p2[32:1]}};
        phitmp_5_i_reg_2049 <= {{ret_V_9_5_i_fu_1428_p2[32:1]}};
        phitmp_6_i_reg_2059 <= {{ret_V_9_6_i_fu_1454_p2[32:1]}};
        phitmp_7_i_reg_2069 <= {{ret_V_9_7_i_fu_1480_p2[32:1]}};
        phitmp_8_i_reg_2079 <= {{ret_V_9_8_i_fu_1506_p2[32:1]}};
        phitmp_9_i_reg_2089 <= {{ret_V_9_9_i_fu_1532_p2[32:1]}};
        phitmp_i_32_reg_2099 <= {{ret_V_9_i_31_fu_1558_p2[32:1]}};
        phitmp_i_reg_1999 <= {{ret_V_9_i_fu_1304_p2[32:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0))) begin
        ret_V_10_i_reg_1969 <= ret_V_10_i_fu_1238_p2;
        ret_V_11_i_reg_1974 <= ret_V_11_i_fu_1248_p2;
        ret_V_12_i_reg_1979 <= ret_V_12_i_fu_1258_p2;
        ret_V_13_i_reg_1984 <= ret_V_13_i_fu_1268_p2;
        ret_V_14_i_reg_1989 <= ret_V_14_i_fu_1278_p2;
        ret_V_15_i_reg_1994 <= ret_V_15_i_fu_1288_p2;
        ret_V_1_i_reg_1924 <= ret_V_1_i_fu_1148_p2;
        ret_V_2_i_reg_1929 <= ret_V_2_i_fu_1158_p2;
        ret_V_3_i_reg_1934 <= ret_V_3_i_fu_1168_p2;
        ret_V_4_i_reg_1939 <= ret_V_4_i_fu_1178_p2;
        ret_V_5_i_reg_1944 <= ret_V_5_i_fu_1188_p2;
        ret_V_6_i_reg_1949 <= ret_V_6_i_fu_1198_p2;
        ret_V_7_i_reg_1954 <= ret_V_7_i_fu_1208_p2;
        ret_V_8_i_reg_1959 <= ret_V_8_i_fu_1218_p2;
        ret_V_i_30_reg_1964 <= ret_V_i_30_fu_1228_p2;
        ret_V_i_reg_1919 <= ret_V_i_fu_1138_p2;
        tmp_V_51_load_reg_1914 <= tmp_V_51_fu_598;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_16_i_reg_1905 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_51_fu_598 <= in_compute_y_factor_s_0_dout;
        tmp_V_fu_594 <= mean_pipe2_V_V_dout;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_1077_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        bias_ce0 = 1'b1;
    end else begin
        bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        bias_ce1 = 1'b1;
    end else begin
        bias_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        bias_ce10 = 1'b1;
    end else begin
        bias_ce10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        bias_ce11 = 1'b1;
    end else begin
        bias_ce11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        bias_ce12 = 1'b1;
    end else begin
        bias_ce12 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        bias_ce13 = 1'b1;
    end else begin
        bias_ce13 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        bias_ce14 = 1'b1;
    end else begin
        bias_ce14 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        bias_ce15 = 1'b1;
    end else begin
        bias_ce15 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        bias_ce2 = 1'b1;
    end else begin
        bias_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        bias_ce3 = 1'b1;
    end else begin
        bias_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        bias_ce4 = 1'b1;
    end else begin
        bias_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        bias_ce5 = 1'b1;
    end else begin
        bias_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        bias_ce6 = 1'b1;
    end else begin
        bias_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        bias_ce7 = 1'b1;
    end else begin
        bias_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        bias_ce8 = 1'b1;
    end else begin
        bias_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        bias_ce9 = 1'b1;
    end else begin
        bias_ce9 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_0_blk_n = in_compute_y_V_V_0_empty_n;
    end else begin
        in_compute_y_V_V_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_0_read = 1'b1;
    end else begin
        in_compute_y_V_V_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_10_blk_n = in_compute_y_V_V_10_empty_n;
    end else begin
        in_compute_y_V_V_10_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_10_read = 1'b1;
    end else begin
        in_compute_y_V_V_10_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_11_blk_n = in_compute_y_V_V_11_empty_n;
    end else begin
        in_compute_y_V_V_11_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_11_read = 1'b1;
    end else begin
        in_compute_y_V_V_11_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_12_blk_n = in_compute_y_V_V_12_empty_n;
    end else begin
        in_compute_y_V_V_12_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_12_read = 1'b1;
    end else begin
        in_compute_y_V_V_12_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_13_blk_n = in_compute_y_V_V_13_empty_n;
    end else begin
        in_compute_y_V_V_13_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_13_read = 1'b1;
    end else begin
        in_compute_y_V_V_13_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_14_blk_n = in_compute_y_V_V_14_empty_n;
    end else begin
        in_compute_y_V_V_14_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_14_read = 1'b1;
    end else begin
        in_compute_y_V_V_14_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_15_blk_n = in_compute_y_V_V_15_empty_n;
    end else begin
        in_compute_y_V_V_15_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_15_read = 1'b1;
    end else begin
        in_compute_y_V_V_15_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_1_blk_n = in_compute_y_V_V_1_empty_n;
    end else begin
        in_compute_y_V_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_1_read = 1'b1;
    end else begin
        in_compute_y_V_V_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_2_blk_n = in_compute_y_V_V_2_empty_n;
    end else begin
        in_compute_y_V_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_2_read = 1'b1;
    end else begin
        in_compute_y_V_V_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_3_blk_n = in_compute_y_V_V_3_empty_n;
    end else begin
        in_compute_y_V_V_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_3_read = 1'b1;
    end else begin
        in_compute_y_V_V_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_4_blk_n = in_compute_y_V_V_4_empty_n;
    end else begin
        in_compute_y_V_V_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_4_read = 1'b1;
    end else begin
        in_compute_y_V_V_4_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_5_blk_n = in_compute_y_V_V_5_empty_n;
    end else begin
        in_compute_y_V_V_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_5_read = 1'b1;
    end else begin
        in_compute_y_V_V_5_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_6_blk_n = in_compute_y_V_V_6_empty_n;
    end else begin
        in_compute_y_V_V_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_6_read = 1'b1;
    end else begin
        in_compute_y_V_V_6_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_7_blk_n = in_compute_y_V_V_7_empty_n;
    end else begin
        in_compute_y_V_V_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_7_read = 1'b1;
    end else begin
        in_compute_y_V_V_7_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_8_blk_n = in_compute_y_V_V_8_empty_n;
    end else begin
        in_compute_y_V_V_8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_8_read = 1'b1;
    end else begin
        in_compute_y_V_V_8_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_9_blk_n = in_compute_y_V_V_9_empty_n;
    end else begin
        in_compute_y_V_V_9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_compute_y_V_V_9_read = 1'b1;
    end else begin
        in_compute_y_V_V_9_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_16_i_reg_1905 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_compute_y_factor_s_0_blk_n = in_compute_y_factor_s_0_empty_n;
    end else begin
        in_compute_y_factor_s_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_16_i_reg_1905 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_compute_y_factor_s_0_read = 1'b1;
    end else begin
        in_compute_y_factor_s_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_0_blk_n = in_write_V_V_0_full_n;
    end else begin
        in_write_V_V_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_0_write = 1'b1;
    end else begin
        in_write_V_V_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_10_blk_n = in_write_V_V_10_full_n;
    end else begin
        in_write_V_V_10_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_10_write = 1'b1;
    end else begin
        in_write_V_V_10_write = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_11_blk_n = in_write_V_V_11_full_n;
    end else begin
        in_write_V_V_11_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_11_write = 1'b1;
    end else begin
        in_write_V_V_11_write = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_12_blk_n = in_write_V_V_12_full_n;
    end else begin
        in_write_V_V_12_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_12_write = 1'b1;
    end else begin
        in_write_V_V_12_write = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_13_blk_n = in_write_V_V_13_full_n;
    end else begin
        in_write_V_V_13_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_13_write = 1'b1;
    end else begin
        in_write_V_V_13_write = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_14_blk_n = in_write_V_V_14_full_n;
    end else begin
        in_write_V_V_14_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_14_write = 1'b1;
    end else begin
        in_write_V_V_14_write = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_15_blk_n = in_write_V_V_15_full_n;
    end else begin
        in_write_V_V_15_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_15_write = 1'b1;
    end else begin
        in_write_V_V_15_write = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_1_blk_n = in_write_V_V_1_full_n;
    end else begin
        in_write_V_V_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_1_write = 1'b1;
    end else begin
        in_write_V_V_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_2_blk_n = in_write_V_V_2_full_n;
    end else begin
        in_write_V_V_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_2_write = 1'b1;
    end else begin
        in_write_V_V_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_3_blk_n = in_write_V_V_3_full_n;
    end else begin
        in_write_V_V_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_3_write = 1'b1;
    end else begin
        in_write_V_V_3_write = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_4_blk_n = in_write_V_V_4_full_n;
    end else begin
        in_write_V_V_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_4_write = 1'b1;
    end else begin
        in_write_V_V_4_write = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_5_blk_n = in_write_V_V_5_full_n;
    end else begin
        in_write_V_V_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_5_write = 1'b1;
    end else begin
        in_write_V_V_5_write = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_6_blk_n = in_write_V_V_6_full_n;
    end else begin
        in_write_V_V_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_6_write = 1'b1;
    end else begin
        in_write_V_V_6_write = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_7_blk_n = in_write_V_V_7_full_n;
    end else begin
        in_write_V_V_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_7_write = 1'b1;
    end else begin
        in_write_V_V_7_write = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_8_blk_n = in_write_V_V_8_full_n;
    end else begin
        in_write_V_V_8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_8_write = 1'b1;
    end else begin
        in_write_V_V_8_write = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_9_blk_n = in_write_V_V_9_full_n;
    end else begin
        in_write_V_V_9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_write_V_V_9_write = 1'b1;
    end else begin
        in_write_V_V_9_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_16_i_reg_1905 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mean_pipe2_V_V_blk_n = mean_pipe2_V_V_empty_n;
    end else begin
        mean_pipe2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_16_i_reg_1905 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mean_pipe2_V_V_read = 1'b1;
    end else begin
        mean_pipe2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        n_pipe3_V_V_blk_n = n_pipe3_V_V_empty_n;
    end else begin
        n_pipe3_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (n_pipe4_V_V_full_n == 1'b0) | (n_pipe3_V_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        n_pipe3_V_V_read = 1'b1;
    end else begin
        n_pipe3_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        n_pipe4_V_V_blk_n = n_pipe4_V_V_full_n;
    end else begin
        n_pipe4_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (n_pipe4_V_V_full_n == 1'b0) | (n_pipe3_V_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        n_pipe4_V_V_write = 1'b1;
    end else begin
        n_pipe4_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (n_pipe4_V_V_full_n == 1'b0) | (n_pipe3_V_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten_fu_1077_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten_fu_1077_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (((in_write_V_V_15_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_14_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_13_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_12_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_11_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_10_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_9_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_8_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_7_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_6_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_5_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_4_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_3_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_2_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_1_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_0_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((in_compute_y_V_V_15_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_14_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_13_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_12_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_11_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_10_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_9_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_8_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_7_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_6_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_5_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_4_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_3_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_2_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_1_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_0_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((in_compute_y_factor_s_0_empty_n == 1'b0) & (tmp_16_i_reg_1905 == 1'd1)) | ((mean_pipe2_V_V_empty_n == 1'b0) & (tmp_16_i_reg_1905 == 1'd1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (((in_write_V_V_15_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_14_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_13_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_12_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_11_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_10_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_9_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_8_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_7_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_6_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_5_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_4_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_3_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_2_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_1_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_0_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((in_compute_y_V_V_15_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_14_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_13_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_12_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_11_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_10_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_9_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_8_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_7_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_6_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_5_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_4_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_3_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_2_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_1_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_0_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((in_compute_y_factor_s_0_empty_n == 1'b0) & (tmp_16_i_reg_1905 == 1'd1)) | ((mean_pipe2_V_V_empty_n == 1'b0) & (tmp_16_i_reg_1905 == 1'd1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (((in_write_V_V_15_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_14_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_13_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_12_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_11_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_10_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_9_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_8_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_7_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_6_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_5_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_4_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_3_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_2_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_1_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_0_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((in_compute_y_V_V_15_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_14_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_13_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_12_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_11_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_10_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_9_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_8_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_7_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_6_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_5_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_4_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_3_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_2_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_1_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_0_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((in_compute_y_factor_s_0_empty_n == 1'b0) & (tmp_16_i_reg_1905 == 1'd1)) | ((mean_pipe2_V_V_empty_n == 1'b0) & (tmp_16_i_reg_1905 == 1'd1)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (n_pipe4_V_V_full_n == 1'b0) | (n_pipe3_V_V_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((in_compute_y_factor_s_0_empty_n == 1'b0) & (tmp_16_i_reg_1905 == 1'd1)) | ((mean_pipe2_V_V_empty_n == 1'b0) & (tmp_16_i_reg_1905 == 1'd1)));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = (((in_compute_y_V_V_15_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_14_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_13_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_12_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_11_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_10_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_9_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_8_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_7_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_6_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_5_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_4_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_3_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_2_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_1_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)) | ((in_compute_y_V_V_0_empty_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter1_reg == 1'd0)));
end

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter4 = (((in_write_V_V_15_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_14_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_13_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_12_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_11_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_10_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_9_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_8_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_7_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_6_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_5_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_4_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_3_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_2_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_1_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)) | ((in_write_V_V_0_full_n == 1'b0) & (exitcond_flatten_reg_1891_pp0_iter3_reg == 1'd0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign bias_address0 = tmp_29_i_fu_1319_p1;

assign bias_address1 = tmp_29_1_i_fu_1345_p1;

assign bias_address10 = tmp_29_i_33_fu_1579_p1;

assign bias_address11 = tmp_29_10_i_fu_1605_p1;

assign bias_address12 = tmp_29_11_i_fu_1631_p1;

assign bias_address13 = tmp_29_12_i_fu_1657_p1;

assign bias_address14 = tmp_29_13_i_fu_1683_p1;

assign bias_address15 = tmp_29_14_i_fu_1709_p1;

assign bias_address2 = tmp_29_2_i_fu_1371_p1;

assign bias_address3 = tmp_29_3_i_fu_1397_p1;

assign bias_address4 = tmp_29_4_i_fu_1423_p1;

assign bias_address5 = tmp_29_5_i_fu_1449_p1;

assign bias_address6 = tmp_29_6_i_fu_1475_p1;

assign bias_address7 = tmp_29_7_i_fu_1501_p1;

assign bias_address8 = tmp_29_8_i_fu_1527_p1;

assign bias_address9 = tmp_29_9_i_fu_1553_p1;

assign bias_load_10_cast_i_fu_1814_p1 = $signed(bias_q10);

assign bias_load_11_cast_i_fu_1824_p1 = $signed(bias_q11);

assign bias_load_12_cast_i_fu_1834_p1 = $signed(bias_q12);

assign bias_load_13_cast_i_fu_1844_p1 = $signed(bias_q13);

assign bias_load_14_cast_i_fu_1854_p1 = $signed(bias_q14);

assign bias_load_15_cast_i_fu_1864_p1 = $signed(bias_q15);

assign bias_load_1_cast_i_fu_1724_p1 = $signed(bias_q1);

assign bias_load_2_cast_i_fu_1734_p1 = $signed(bias_q2);

assign bias_load_3_cast_i_fu_1744_p1 = $signed(bias_q3);

assign bias_load_4_cast_i_fu_1754_p1 = $signed(bias_q4);

assign bias_load_5_cast_i_fu_1764_p1 = $signed(bias_q5);

assign bias_load_6_cast_i_fu_1774_p1 = $signed(bias_q6);

assign bias_load_7_cast_i_fu_1784_p1 = $signed(bias_q7);

assign bias_load_8_cast_i_fu_1794_p1 = $signed(bias_q8);

assign bias_load_9_cast_i_fu_1804_p1 = $signed(bias_q9);

assign bias_load_cast_i_fu_1714_p1 = $signed(bias_q0);

assign bound_fu_1071_p2 = (p_shl_fu_1051_p3 - p_shl2_fu_1067_p1);

assign exitcond_flatten_fu_1077_p2 = ((indvar_flatten_reg_1029 == bound_reg_1886) ? 1'b1 : 1'b0);

assign in_write_V_V_0_din = ($signed(bias_load_cast_i_fu_1714_p1) + $signed(phitmp_i_reg_1999));

assign in_write_V_V_10_din = ($signed(bias_load_10_cast_i_fu_1814_p1) + $signed(phitmp_i_32_reg_2099));

assign in_write_V_V_11_din = ($signed(bias_load_11_cast_i_fu_1824_p1) + $signed(phitmp_10_i_reg_2109));

assign in_write_V_V_12_din = ($signed(bias_load_12_cast_i_fu_1834_p1) + $signed(phitmp_11_i_reg_2119));

assign in_write_V_V_13_din = ($signed(bias_load_13_cast_i_fu_1844_p1) + $signed(phitmp_12_i_reg_2129));

assign in_write_V_V_14_din = ($signed(bias_load_14_cast_i_fu_1854_p1) + $signed(phitmp_13_i_reg_2139));

assign in_write_V_V_15_din = ($signed(bias_load_15_cast_i_fu_1864_p1) + $signed(phitmp_14_i_reg_2149));

assign in_write_V_V_1_din = ($signed(bias_load_1_cast_i_fu_1724_p1) + $signed(phitmp_1_i_reg_2009));

assign in_write_V_V_2_din = ($signed(bias_load_2_cast_i_fu_1734_p1) + $signed(phitmp_2_i_reg_2019));

assign in_write_V_V_3_din = ($signed(bias_load_3_cast_i_fu_1744_p1) + $signed(phitmp_3_i_reg_2029));

assign in_write_V_V_4_din = ($signed(bias_load_4_cast_i_fu_1754_p1) + $signed(phitmp_4_i_reg_2039));

assign in_write_V_V_5_din = ($signed(bias_load_5_cast_i_fu_1764_p1) + $signed(phitmp_5_i_reg_2049));

assign in_write_V_V_6_din = ($signed(bias_load_6_cast_i_fu_1774_p1) + $signed(phitmp_6_i_reg_2059));

assign in_write_V_V_7_din = ($signed(bias_load_7_cast_i_fu_1784_p1) + $signed(phitmp_7_i_reg_2069));

assign in_write_V_V_8_din = ($signed(bias_load_8_cast_i_fu_1794_p1) + $signed(phitmp_8_i_reg_2079));

assign in_write_V_V_9_din = ($signed(bias_load_9_cast_i_fu_1804_p1) + $signed(phitmp_9_i_reg_2089));

assign indvar_flatten_next_fu_1082_p2 = (indvar_flatten_reg_1029 + 38'd1);

assign j_fu_1108_p2 = (j_i_mid2_fu_1094_p3 + 6'd1);

assign j_i_mid2_fu_1094_p3 = ((tmp_i_fu_1088_p2[0:0] === 1'b1) ? 6'd0 : j_i_reg_1040);

assign lhs_V_10_i_fu_1234_p1 = $signed(in_compute_y_V_V_10_dout);

assign lhs_V_11_i_fu_1244_p1 = $signed(in_compute_y_V_V_11_dout);

assign lhs_V_12_i_fu_1254_p1 = $signed(in_compute_y_V_V_12_dout);

assign lhs_V_13_i_fu_1264_p1 = $signed(in_compute_y_V_V_13_dout);

assign lhs_V_14_i_fu_1274_p1 = $signed(in_compute_y_V_V_14_dout);

assign lhs_V_15_i_fu_1284_p1 = $signed(in_compute_y_V_V_15_dout);

assign lhs_V_2_i_fu_1154_p1 = $signed(in_compute_y_V_V_2_dout);

assign lhs_V_3_i_fu_1164_p1 = $signed(in_compute_y_V_V_3_dout);

assign lhs_V_4_i_fu_1174_p1 = $signed(in_compute_y_V_V_4_dout);

assign lhs_V_5_i_fu_1184_p1 = $signed(in_compute_y_V_V_5_dout);

assign lhs_V_6_i_fu_1194_p1 = $signed(in_compute_y_V_V_6_dout);

assign lhs_V_7_i_fu_1204_p1 = $signed(in_compute_y_V_V_7_dout);

assign lhs_V_8_i_fu_1214_p1 = $signed(in_compute_y_V_V_8_dout);

assign lhs_V_9_i_fu_1224_p1 = $signed(in_compute_y_V_V_9_dout);

assign lhs_V_i_29_fu_1144_p1 = $signed(in_compute_y_V_V_1_dout);

assign lhs_V_i_fu_1134_p1 = $signed(in_compute_y_V_V_0_dout);

assign n_pipe4_V_V_din = n_pipe3_V_V_dout;

assign p_shl2_fu_1067_p1 = tmp_fu_1059_p3;

assign p_shl_fu_1051_p3 = {{n_pipe3_V_V_dout}, {6'd0}};

assign ret_V_10_i_fu_1238_p2 = ($signed(lhs_V_10_i_fu_1234_p1) - $signed(rhs_V_fu_1130_p1));

assign ret_V_11_i_fu_1248_p2 = ($signed(lhs_V_11_i_fu_1244_p1) - $signed(rhs_V_fu_1130_p1));

assign ret_V_12_i_fu_1258_p2 = ($signed(lhs_V_12_i_fu_1254_p1) - $signed(rhs_V_fu_1130_p1));

assign ret_V_13_i_fu_1268_p2 = ($signed(lhs_V_13_i_fu_1264_p1) - $signed(rhs_V_fu_1130_p1));

assign ret_V_14_i_fu_1278_p2 = ($signed(lhs_V_14_i_fu_1274_p1) - $signed(rhs_V_fu_1130_p1));

assign ret_V_15_i_fu_1288_p2 = ($signed(lhs_V_15_i_fu_1284_p1) - $signed(rhs_V_fu_1130_p1));

assign ret_V_1_i_fu_1148_p2 = ($signed(lhs_V_i_29_fu_1144_p1) - $signed(rhs_V_fu_1130_p1));

assign ret_V_2_i_fu_1158_p2 = ($signed(lhs_V_2_i_fu_1154_p1) - $signed(rhs_V_fu_1130_p1));

assign ret_V_3_i_fu_1168_p2 = ($signed(lhs_V_3_i_fu_1164_p1) - $signed(rhs_V_fu_1130_p1));

assign ret_V_4_i_fu_1178_p2 = ($signed(lhs_V_4_i_fu_1174_p1) - $signed(rhs_V_fu_1130_p1));

assign ret_V_5_i_fu_1188_p2 = ($signed(lhs_V_5_i_fu_1184_p1) - $signed(rhs_V_fu_1130_p1));

assign ret_V_6_i_fu_1198_p2 = ($signed(lhs_V_6_i_fu_1194_p1) - $signed(rhs_V_fu_1130_p1));

assign ret_V_7_i_fu_1208_p2 = ($signed(lhs_V_7_i_fu_1204_p1) - $signed(rhs_V_fu_1130_p1));

assign ret_V_8_i_fu_1218_p2 = ($signed(lhs_V_8_i_fu_1214_p1) - $signed(rhs_V_fu_1130_p1));

assign ret_V_9_10_i_fu_1584_p0 = rhs_V_1_cast_i_fu_1294_p1;

assign ret_V_9_10_i_fu_1584_p2 = ($signed({{1'b0}, {ret_V_9_10_i_fu_1584_p0}}) * $signed(ret_V_11_i_reg_1974));

assign ret_V_9_11_i_fu_1610_p0 = rhs_V_1_cast_i_fu_1294_p1;

assign ret_V_9_11_i_fu_1610_p2 = ($signed({{1'b0}, {ret_V_9_11_i_fu_1610_p0}}) * $signed(ret_V_12_i_reg_1979));

assign ret_V_9_12_i_fu_1636_p0 = rhs_V_1_cast_i_fu_1294_p1;

assign ret_V_9_12_i_fu_1636_p2 = ($signed({{1'b0}, {ret_V_9_12_i_fu_1636_p0}}) * $signed(ret_V_13_i_reg_1984));

assign ret_V_9_13_i_fu_1662_p0 = rhs_V_1_cast_i_fu_1294_p1;

assign ret_V_9_13_i_fu_1662_p2 = ($signed({{1'b0}, {ret_V_9_13_i_fu_1662_p0}}) * $signed(ret_V_14_i_reg_1989));

assign ret_V_9_14_i_fu_1688_p0 = rhs_V_1_cast_i_fu_1294_p1;

assign ret_V_9_14_i_fu_1688_p2 = ($signed({{1'b0}, {ret_V_9_14_i_fu_1688_p0}}) * $signed(ret_V_15_i_reg_1994));

assign ret_V_9_1_i_fu_1324_p0 = rhs_V_1_cast_i_fu_1294_p1;

assign ret_V_9_1_i_fu_1324_p2 = ($signed({{1'b0}, {ret_V_9_1_i_fu_1324_p0}}) * $signed(ret_V_1_i_reg_1924));

assign ret_V_9_2_i_fu_1350_p0 = rhs_V_1_cast_i_fu_1294_p1;

assign ret_V_9_2_i_fu_1350_p2 = ($signed({{1'b0}, {ret_V_9_2_i_fu_1350_p0}}) * $signed(ret_V_2_i_reg_1929));

assign ret_V_9_3_i_fu_1376_p0 = rhs_V_1_cast_i_fu_1294_p1;

assign ret_V_9_3_i_fu_1376_p2 = ($signed({{1'b0}, {ret_V_9_3_i_fu_1376_p0}}) * $signed(ret_V_3_i_reg_1934));

assign ret_V_9_4_i_fu_1402_p0 = rhs_V_1_cast_i_fu_1294_p1;

assign ret_V_9_4_i_fu_1402_p2 = ($signed({{1'b0}, {ret_V_9_4_i_fu_1402_p0}}) * $signed(ret_V_4_i_reg_1939));

assign ret_V_9_5_i_fu_1428_p0 = rhs_V_1_cast_i_fu_1294_p1;

assign ret_V_9_5_i_fu_1428_p2 = ($signed({{1'b0}, {ret_V_9_5_i_fu_1428_p0}}) * $signed(ret_V_5_i_reg_1944));

assign ret_V_9_6_i_fu_1454_p0 = rhs_V_1_cast_i_fu_1294_p1;

assign ret_V_9_6_i_fu_1454_p2 = ($signed({{1'b0}, {ret_V_9_6_i_fu_1454_p0}}) * $signed(ret_V_6_i_reg_1949));

assign ret_V_9_7_i_fu_1480_p0 = rhs_V_1_cast_i_fu_1294_p1;

assign ret_V_9_7_i_fu_1480_p2 = ($signed({{1'b0}, {ret_V_9_7_i_fu_1480_p0}}) * $signed(ret_V_7_i_reg_1954));

assign ret_V_9_8_i_fu_1506_p0 = rhs_V_1_cast_i_fu_1294_p1;

assign ret_V_9_8_i_fu_1506_p2 = ($signed({{1'b0}, {ret_V_9_8_i_fu_1506_p0}}) * $signed(ret_V_8_i_reg_1959));

assign ret_V_9_9_i_fu_1532_p0 = rhs_V_1_cast_i_fu_1294_p1;

assign ret_V_9_9_i_fu_1532_p2 = ($signed({{1'b0}, {ret_V_9_9_i_fu_1532_p0}}) * $signed(ret_V_i_30_reg_1964));

assign ret_V_9_i_31_fu_1558_p0 = rhs_V_1_cast_i_fu_1294_p1;

assign ret_V_9_i_31_fu_1558_p2 = ($signed({{1'b0}, {ret_V_9_i_31_fu_1558_p0}}) * $signed(ret_V_10_i_reg_1969));

assign ret_V_9_i_fu_1304_p0 = rhs_V_1_cast_i_fu_1294_p1;

assign ret_V_9_i_fu_1304_p2 = ($signed({{1'b0}, {ret_V_9_i_fu_1304_p0}}) * $signed(ret_V_i_reg_1919));

assign ret_V_i_30_fu_1228_p2 = ($signed(lhs_V_9_i_fu_1224_p1) - $signed(rhs_V_fu_1130_p1));

assign ret_V_i_fu_1138_p2 = ($signed(lhs_V_i_fu_1134_p1) - $signed(rhs_V_fu_1130_p1));

assign rhs_V_1_cast_i_fu_1294_p1 = tmp_V_51_load_reg_1914;

assign rhs_V_fu_1130_p1 = $signed(tmp_V_fu_594);

assign start_out = real_start;

assign tmp_16_i_fu_1102_p2 = ((j_i_mid2_fu_1094_p3 == 6'd0) ? 1'b1 : 1'b0);

assign tmp_17_i_fu_1297_p3 = {{j_i_mid2_reg_1900_pp0_iter2_reg}, {4'd0}};

assign tmp_28_10_i_fu_1599_p2 = (tmp_17_i_fu_1297_p3 | 10'd11);

assign tmp_28_11_i_fu_1625_p2 = (tmp_17_i_fu_1297_p3 | 10'd12);

assign tmp_28_12_i_fu_1651_p2 = (tmp_17_i_fu_1297_p3 | 10'd13);

assign tmp_28_13_i_fu_1677_p2 = (tmp_17_i_fu_1297_p3 | 10'd14);

assign tmp_28_14_i_fu_1703_p2 = (tmp_17_i_fu_1297_p3 | 10'd15);

assign tmp_28_1_i_fu_1365_p2 = (tmp_17_i_fu_1297_p3 | 10'd2);

assign tmp_28_2_i_fu_1391_p2 = (tmp_17_i_fu_1297_p3 | 10'd3);

assign tmp_28_3_i_fu_1417_p2 = (tmp_17_i_fu_1297_p3 | 10'd4);

assign tmp_28_4_i_fu_1443_p2 = (tmp_17_i_fu_1297_p3 | 10'd5);

assign tmp_28_5_i_fu_1469_p2 = (tmp_17_i_fu_1297_p3 | 10'd6);

assign tmp_28_6_i_fu_1495_p2 = (tmp_17_i_fu_1297_p3 | 10'd7);

assign tmp_28_7_i_fu_1521_p2 = (tmp_17_i_fu_1297_p3 | 10'd8);

assign tmp_28_8_i_fu_1547_p2 = (tmp_17_i_fu_1297_p3 | 10'd9);

assign tmp_28_9_i_fu_1573_p2 = (tmp_17_i_fu_1297_p3 | 10'd10);

assign tmp_28_i_fu_1339_p2 = (tmp_17_i_fu_1297_p3 | 10'd1);

assign tmp_29_10_i_fu_1605_p1 = tmp_28_10_i_fu_1599_p2;

assign tmp_29_11_i_fu_1631_p1 = tmp_28_11_i_fu_1625_p2;

assign tmp_29_12_i_fu_1657_p1 = tmp_28_12_i_fu_1651_p2;

assign tmp_29_13_i_fu_1683_p1 = tmp_28_13_i_fu_1677_p2;

assign tmp_29_14_i_fu_1709_p1 = tmp_28_14_i_fu_1703_p2;

assign tmp_29_1_i_fu_1345_p1 = tmp_28_i_fu_1339_p2;

assign tmp_29_2_i_fu_1371_p1 = tmp_28_1_i_fu_1365_p2;

assign tmp_29_3_i_fu_1397_p1 = tmp_28_2_i_fu_1391_p2;

assign tmp_29_4_i_fu_1423_p1 = tmp_28_3_i_fu_1417_p2;

assign tmp_29_5_i_fu_1449_p1 = tmp_28_4_i_fu_1443_p2;

assign tmp_29_6_i_fu_1475_p1 = tmp_28_5_i_fu_1469_p2;

assign tmp_29_7_i_fu_1501_p1 = tmp_28_6_i_fu_1495_p2;

assign tmp_29_8_i_fu_1527_p1 = tmp_28_7_i_fu_1521_p2;

assign tmp_29_9_i_fu_1553_p1 = tmp_28_8_i_fu_1547_p2;

assign tmp_29_i_33_fu_1579_p1 = tmp_28_9_i_fu_1573_p2;

assign tmp_29_i_fu_1319_p1 = tmp_17_i_fu_1297_p3;

assign tmp_fu_1059_p3 = {{n_pipe3_V_V_dout}, {4'd0}};

assign tmp_i_fu_1088_p2 = ((j_i_reg_1040 == 6'd48) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    bound_reg_1886[3:0] <= 4'b0000;
end

endmodule //layernorm_compute_y
