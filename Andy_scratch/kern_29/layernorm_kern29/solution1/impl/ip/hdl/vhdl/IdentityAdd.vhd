-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity IdentityAdd is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    in1_0_V_data_V_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    in1_0_V_data_V_empty_n : IN STD_LOGIC;
    in1_0_V_data_V_read : OUT STD_LOGIC;
    in1_0_V_id_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in1_0_V_id_V_empty_n : IN STD_LOGIC;
    in1_0_V_id_V_read : OUT STD_LOGIC;
    in1_0_V_dest_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in1_0_V_dest_V_empty_n : IN STD_LOGIC;
    in1_0_V_dest_V_read : OUT STD_LOGIC;
    in1_0_V_user_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in1_0_V_user_V_empty_n : IN STD_LOGIC;
    in1_0_V_user_V_read : OUT STD_LOGIC;
    in1_0_V_last_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    in1_0_V_last_V_empty_n : IN STD_LOGIC;
    in1_0_V_last_V_read : OUT STD_LOGIC;
    in2_V_data_V_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    in2_V_data_V_empty_n : IN STD_LOGIC;
    in2_V_data_V_read : OUT STD_LOGIC;
    in2_V_id_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in2_V_id_V_empty_n : IN STD_LOGIC;
    in2_V_id_V_read : OUT STD_LOGIC;
    in2_V_dest_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in2_V_dest_V_empty_n : IN STD_LOGIC;
    in2_V_dest_V_read : OUT STD_LOGIC;
    in2_V_user_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in2_V_user_V_empty_n : IN STD_LOGIC;
    in2_V_user_V_read : OUT STD_LOGIC;
    in2_V_last_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    in2_V_last_V_empty_n : IN STD_LOGIC;
    in2_V_last_V_read : OUT STD_LOGIC;
    out_V_data_V_din : OUT STD_LOGIC_VECTOR (511 downto 0);
    out_V_data_V_full_n : IN STD_LOGIC;
    out_V_data_V_write : OUT STD_LOGIC;
    out_V_id_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_V_id_V_full_n : IN STD_LOGIC;
    out_V_id_V_write : OUT STD_LOGIC;
    out_V_dest_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_V_dest_V_full_n : IN STD_LOGIC;
    out_V_dest_V_write : OUT STD_LOGIC;
    out_V_user_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_V_user_V_full_n : IN STD_LOGIC;
    out_V_user_V_write : OUT STD_LOGIC;
    out_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_V_last_V_full_n : IN STD_LOGIC;
    out_V_last_V_write : OUT STD_LOGIC );
end;


architecture behav of IdentityAdd is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv38_0 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv8_1D : STD_LOGIC_VECTOR (7 downto 0) := "00011101";
    constant ap_const_lv8_1E : STD_LOGIC_VECTOR (7 downto 0) := "00011110";
    constant ap_const_lv16_31 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000110001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv38_1 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000000000001";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv6_2F : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_19F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal in1_0_V_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_flatten_reg_905 : STD_LOGIC_VECTOR (0 downto 0);
    signal in1_0_V_id_V_blk_n : STD_LOGIC;
    signal in1_0_V_dest_V_blk_n : STD_LOGIC;
    signal in1_0_V_user_V_blk_n : STD_LOGIC;
    signal in1_0_V_last_V_blk_n : STD_LOGIC;
    signal in2_V_data_V_blk_n : STD_LOGIC;
    signal in2_V_id_V_blk_n : STD_LOGIC;
    signal in2_V_dest_V_blk_n : STD_LOGIC;
    signal in2_V_user_V_blk_n : STD_LOGIC;
    signal in2_V_last_V_blk_n : STD_LOGIC;
    signal out_V_data_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_905_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_id_V_blk_n : STD_LOGIC;
    signal out_V_dest_V_blk_n : STD_LOGIC;
    signal out_V_user_V_blk_n : STD_LOGIC;
    signal out_V_last_V_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_377 : STD_LOGIC_VECTOR (37 downto 0);
    signal j_reg_388 : STD_LOGIC_VECTOR (5 downto 0);
    signal bound_fu_428_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal bound_reg_900 : STD_LOGIC_VECTOR (37 downto 0);
    signal in1_0_V_id_V0_status : STD_LOGIC;
    signal in2_V_id_V0_status : STD_LOGIC;
    signal out_V_id_V1_status : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal exitcond_flatten_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar_flatten_next_fu_439_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal out_data_last_V_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_data_last_V_reg_914 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_data_last_V_reg_914_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_4_fu_465_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_V_0_trunc_fu_483_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_0_trunc_reg_924 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_1_trunc_fu_509_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_1_trunc_reg_929 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_2_trunc_fu_535_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_2_trunc_reg_934 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_3_trunc_fu_561_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_3_trunc_reg_939 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_4_trunc_fu_587_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_4_trunc_reg_944 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_5_trunc_fu_613_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_5_trunc_reg_949 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_6_trunc_fu_639_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_6_trunc_reg_954 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_7_trunc_fu_665_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_7_trunc_reg_959 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_8_trunc_fu_691_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_8_trunc_reg_964 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_9_trunc_fu_717_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_9_trunc_reg_969 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_10_trunc_fu_743_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_10_trunc_reg_974 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_11_trunc_fu_769_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_11_trunc_reg_979 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_12_trunc_fu_795_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_12_trunc_reg_984 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_13_trunc_fu_821_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_13_trunc_reg_989 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_14_trunc_fu_847_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_14_trunc_reg_994 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_15_trunc_fu_873_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_15_trunc_reg_999 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal in1_0_V_id_V0_update : STD_LOGIC;
    signal in2_V_id_V0_update : STD_LOGIC;
    signal out_V_id_V1_update : STD_LOGIC;
    signal tmp_data_V_15_fu_879_p17 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_142_fu_404_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_416_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl_fu_408_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal p_shl2_fu_424_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal tmp_3_fu_445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_mid2_fu_451_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_143_fu_475_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_144_fu_479_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_1_fu_489_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_23_1_fu_499_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_2_fu_515_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_23_2_fu_525_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_3_fu_541_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_23_3_fu_551_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_4_fu_567_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_23_4_fu_577_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_5_fu_593_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_23_5_fu_603_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_6_fu_619_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_23_6_fu_629_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_7_fu_645_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_23_7_fu_655_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_8_fu_671_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_23_8_fu_681_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_9_fu_697_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_23_9_fu_707_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_s_fu_723_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_23_s_fu_733_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_10_fu_749_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_23_10_fu_759_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_11_fu_775_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_23_11_fu_785_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_12_fu_801_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_23_12_fu_811_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_13_fu_827_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_23_13_fu_837_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_14_fu_853_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_23_14_fu_863_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (out_V_id_V1_status = ap_const_logic_0) or (in2_V_id_V0_status = ap_const_logic_0) or (in1_0_V_id_V0_status = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((real_start = ap_const_logic_0) or (out_V_id_V1_status = ap_const_logic_0) or (in2_V_id_V0_status = ap_const_logic_0) or (in1_0_V_id_V0_status = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_377_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_434_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_377 <= indvar_flatten_next_fu_439_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (out_V_id_V1_status = ap_const_logic_0) or (in2_V_id_V0_status = ap_const_logic_0) or (in1_0_V_id_V0_status = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_377 <= ap_const_lv38_0;
            end if; 
        end if;
    end process;

    j_reg_388_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_434_p2 = ap_const_lv1_0))) then 
                j_reg_388 <= j_4_fu_465_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (out_V_id_V1_status = ap_const_logic_0) or (in2_V_id_V0_status = ap_const_logic_0) or (in1_0_V_id_V0_status = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_reg_388 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (out_V_id_V1_status = ap_const_logic_0) or (in2_V_id_V0_status = ap_const_logic_0) or (in1_0_V_id_V0_status = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    bound_reg_900(37 downto 4) <= bound_fu_428_p2(37 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_flatten_reg_905 <= exitcond_flatten_fu_434_p2;
                exitcond_flatten_reg_905_pp0_iter1_reg <= exitcond_flatten_reg_905;
                out_data_last_V_reg_914_pp0_iter1_reg <= out_data_last_V_reg_914;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_434_p2 = ap_const_lv1_0))) then
                out_data_last_V_reg_914 <= out_data_last_V_fu_459_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_905 = ap_const_lv1_0))) then
                tmp_V_0_trunc_reg_924 <= tmp_V_0_trunc_fu_483_p2;
                tmp_V_10_trunc_reg_974 <= tmp_V_10_trunc_fu_743_p2;
                tmp_V_11_trunc_reg_979 <= tmp_V_11_trunc_fu_769_p2;
                tmp_V_12_trunc_reg_984 <= tmp_V_12_trunc_fu_795_p2;
                tmp_V_13_trunc_reg_989 <= tmp_V_13_trunc_fu_821_p2;
                tmp_V_14_trunc_reg_994 <= tmp_V_14_trunc_fu_847_p2;
                tmp_V_15_trunc_reg_999 <= tmp_V_15_trunc_fu_873_p2;
                tmp_V_1_trunc_reg_929 <= tmp_V_1_trunc_fu_509_p2;
                tmp_V_2_trunc_reg_934 <= tmp_V_2_trunc_fu_535_p2;
                tmp_V_3_trunc_reg_939 <= tmp_V_3_trunc_fu_561_p2;
                tmp_V_4_trunc_reg_944 <= tmp_V_4_trunc_fu_587_p2;
                tmp_V_5_trunc_reg_949 <= tmp_V_5_trunc_fu_613_p2;
                tmp_V_6_trunc_reg_954 <= tmp_V_6_trunc_fu_639_p2;
                tmp_V_7_trunc_reg_959 <= tmp_V_7_trunc_fu_665_p2;
                tmp_V_8_trunc_reg_964 <= tmp_V_8_trunc_fu_691_p2;
                tmp_V_9_trunc_reg_969 <= tmp_V_9_trunc_fu_717_p2;
            end if;
        end if;
    end process;
    bound_reg_900(3 downto 0) <= "0000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, in1_0_V_id_V0_status, in2_V_id_V0_status, out_V_id_V1_status, exitcond_flatten_fu_434_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (out_V_id_V1_status = ap_const_logic_0) or (in2_V_id_V0_status = ap_const_logic_0) or (in1_0_V_id_V0_status = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_fu_434_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_fu_434_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond_flatten_reg_905, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_905_pp0_iter1_reg, in1_0_V_id_V0_status, in2_V_id_V0_status, out_V_id_V1_status)
    begin
                ap_block_pp0_stage0_01001 <= (((out_V_id_V1_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten_reg_905_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((in2_V_id_V0_status = ap_const_logic_0) and (exitcond_flatten_reg_905 = ap_const_lv1_0)) or ((in1_0_V_id_V0_status = ap_const_logic_0) and (exitcond_flatten_reg_905 = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond_flatten_reg_905, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_905_pp0_iter1_reg, in1_0_V_id_V0_status, in2_V_id_V0_status, out_V_id_V1_status)
    begin
                ap_block_pp0_stage0_11001 <= (((out_V_id_V1_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten_reg_905_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((in2_V_id_V0_status = ap_const_logic_0) and (exitcond_flatten_reg_905 = ap_const_lv1_0)) or ((in1_0_V_id_V0_status = ap_const_logic_0) and (exitcond_flatten_reg_905 = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond_flatten_reg_905, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_905_pp0_iter1_reg, in1_0_V_id_V0_status, in2_V_id_V0_status, out_V_id_V1_status)
    begin
                ap_block_pp0_stage0_subdone <= (((out_V_id_V1_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten_reg_905_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((in2_V_id_V0_status = ap_const_logic_0) and (exitcond_flatten_reg_905 = ap_const_lv1_0)) or ((in1_0_V_id_V0_status = ap_const_logic_0) and (exitcond_flatten_reg_905 = ap_const_lv1_0)))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, in1_0_V_id_V0_status, in2_V_id_V0_status, out_V_id_V1_status)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (out_V_id_V1_status = ap_const_logic_0) or (in2_V_id_V0_status = ap_const_logic_0) or (in1_0_V_id_V0_status = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(exitcond_flatten_reg_905, in1_0_V_id_V0_status, in2_V_id_V0_status)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (((in2_V_id_V0_status = ap_const_logic_0) and (exitcond_flatten_reg_905 = ap_const_lv1_0)) or ((in1_0_V_id_V0_status = ap_const_logic_0) and (exitcond_flatten_reg_905 = ap_const_lv1_0)));
    end process;


    ap_block_state4_pp0_stage0_iter2_assign_proc : process(exitcond_flatten_reg_905_pp0_iter1_reg, out_V_id_V1_status)
    begin
                ap_block_state4_pp0_stage0_iter2 <= ((out_V_id_V1_status = ap_const_logic_0) and (exitcond_flatten_reg_905_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_434_p2)
    begin
        if ((exitcond_flatten_fu_434_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    bound_fu_428_p2 <= std_logic_vector(unsigned(p_shl_fu_408_p3) - unsigned(p_shl2_fu_424_p1));
    exitcond_flatten_fu_434_p2 <= "1" when (indvar_flatten_reg_377 = bound_reg_900) else "0";

    in1_0_V_data_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in1_0_V_data_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_905)
    begin
        if (((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_905 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            in1_0_V_data_V_blk_n <= in1_0_V_data_V_empty_n;
        else 
            in1_0_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in1_0_V_data_V_read <= in1_0_V_id_V0_update;

    in1_0_V_dest_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in1_0_V_dest_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_905)
    begin
        if (((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_905 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            in1_0_V_dest_V_blk_n <= in1_0_V_dest_V_empty_n;
        else 
            in1_0_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in1_0_V_dest_V_read <= in1_0_V_id_V0_update;
    in1_0_V_id_V0_status <= (in1_0_V_user_V_empty_n and in1_0_V_last_V_empty_n and in1_0_V_id_V_empty_n and in1_0_V_dest_V_empty_n and in1_0_V_data_V_empty_n);

    in1_0_V_id_V0_update_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_905, in1_0_V_id_V0_status, in2_V_id_V0_status, out_V_id_V1_status, ap_block_pp0_stage0_11001)
    begin
        if (((not(((real_start = ap_const_logic_0) or (out_V_id_V1_status = ap_const_logic_0) or (in2_V_id_V0_status = ap_const_logic_0) or (in1_0_V_id_V0_status = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_905 = ap_const_lv1_0)))) then 
            in1_0_V_id_V0_update <= ap_const_logic_1;
        else 
            in1_0_V_id_V0_update <= ap_const_logic_0;
        end if; 
    end process;


    in1_0_V_id_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in1_0_V_id_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_905)
    begin
        if (((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_905 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            in1_0_V_id_V_blk_n <= in1_0_V_id_V_empty_n;
        else 
            in1_0_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in1_0_V_id_V_read <= in1_0_V_id_V0_update;

    in1_0_V_last_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in1_0_V_last_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_905)
    begin
        if (((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_905 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            in1_0_V_last_V_blk_n <= in1_0_V_last_V_empty_n;
        else 
            in1_0_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in1_0_V_last_V_read <= in1_0_V_id_V0_update;

    in1_0_V_user_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in1_0_V_user_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_905)
    begin
        if (((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_905 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            in1_0_V_user_V_blk_n <= in1_0_V_user_V_empty_n;
        else 
            in1_0_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in1_0_V_user_V_read <= in1_0_V_id_V0_update;

    in2_V_data_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in2_V_data_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_905)
    begin
        if (((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_905 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            in2_V_data_V_blk_n <= in2_V_data_V_empty_n;
        else 
            in2_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in2_V_data_V_read <= in2_V_id_V0_update;

    in2_V_dest_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in2_V_dest_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_905)
    begin
        if (((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_905 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            in2_V_dest_V_blk_n <= in2_V_dest_V_empty_n;
        else 
            in2_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in2_V_dest_V_read <= in2_V_id_V0_update;
    in2_V_id_V0_status <= (in2_V_user_V_empty_n and in2_V_last_V_empty_n and in2_V_id_V_empty_n and in2_V_dest_V_empty_n and in2_V_data_V_empty_n);

    in2_V_id_V0_update_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_905, in1_0_V_id_V0_status, in2_V_id_V0_status, out_V_id_V1_status, ap_block_pp0_stage0_11001)
    begin
        if (((not(((real_start = ap_const_logic_0) or (out_V_id_V1_status = ap_const_logic_0) or (in2_V_id_V0_status = ap_const_logic_0) or (in1_0_V_id_V0_status = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_905 = ap_const_lv1_0)))) then 
            in2_V_id_V0_update <= ap_const_logic_1;
        else 
            in2_V_id_V0_update <= ap_const_logic_0;
        end if; 
    end process;


    in2_V_id_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in2_V_id_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_905)
    begin
        if (((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_905 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            in2_V_id_V_blk_n <= in2_V_id_V_empty_n;
        else 
            in2_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in2_V_id_V_read <= in2_V_id_V0_update;

    in2_V_last_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in2_V_last_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_905)
    begin
        if (((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_905 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            in2_V_last_V_blk_n <= in2_V_last_V_empty_n;
        else 
            in2_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in2_V_last_V_read <= in2_V_id_V0_update;

    in2_V_user_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in2_V_user_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_905)
    begin
        if (((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_905 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            in2_V_user_V_blk_n <= in2_V_user_V_empty_n;
        else 
            in2_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in2_V_user_V_read <= in2_V_id_V0_update;
    indvar_flatten_next_fu_439_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_377) + unsigned(ap_const_lv38_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    j_4_fu_465_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(j_mid2_fu_451_p3));
    j_mid2_fu_451_p3 <= 
        ap_const_lv6_0 when (tmp_3_fu_445_p2(0) = '1') else 
        j_reg_388;

    out_V_data_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, out_V_data_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_905_pp0_iter1_reg)
    begin
        if (((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten_reg_905_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            out_V_data_V_blk_n <= out_V_data_V_full_n;
        else 
            out_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_V_data_V_din_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in1_0_V_data_V_dout, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_905_pp0_iter1_reg, in1_0_V_id_V0_status, in2_V_id_V0_status, out_V_id_V1_status, tmp_data_V_15_fu_879_p17, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten_reg_905_pp0_iter1_reg = ap_const_lv1_0))) then 
            out_V_data_V_din <= tmp_data_V_15_fu_879_p17;
        elsif ((not(((real_start = ap_const_logic_0) or (out_V_id_V1_status = ap_const_logic_0) or (in2_V_id_V0_status = ap_const_logic_0) or (in1_0_V_id_V0_status = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_V_data_V_din <= in1_0_V_data_V_dout;
        else 
            out_V_data_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    out_V_data_V_write <= out_V_id_V1_update;

    out_V_dest_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, out_V_dest_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_905_pp0_iter1_reg)
    begin
        if (((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten_reg_905_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            out_V_dest_V_blk_n <= out_V_dest_V_full_n;
        else 
            out_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_V_dest_V_din <= ap_const_lv8_1E;
    out_V_dest_V_write <= out_V_id_V1_update;
    out_V_id_V1_status <= (out_V_user_V_full_n and out_V_last_V_full_n and out_V_id_V_full_n and out_V_dest_V_full_n and out_V_data_V_full_n);

    out_V_id_V1_update_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_905_pp0_iter1_reg, in1_0_V_id_V0_status, in2_V_id_V0_status, out_V_id_V1_status, ap_block_pp0_stage0_11001)
    begin
        if (((not(((real_start = ap_const_logic_0) or (out_V_id_V1_status = ap_const_logic_0) or (in2_V_id_V0_status = ap_const_logic_0) or (in1_0_V_id_V0_status = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_905_pp0_iter1_reg = ap_const_lv1_0)))) then 
            out_V_id_V1_update <= ap_const_logic_1;
        else 
            out_V_id_V1_update <= ap_const_logic_0;
        end if; 
    end process;


    out_V_id_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, out_V_id_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_905_pp0_iter1_reg)
    begin
        if (((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten_reg_905_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            out_V_id_V_blk_n <= out_V_id_V_full_n;
        else 
            out_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_V_id_V_din <= ap_const_lv8_1D;
    out_V_id_V_write <= out_V_id_V1_update;

    out_V_last_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, out_V_last_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_905_pp0_iter1_reg)
    begin
        if (((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten_reg_905_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            out_V_last_V_blk_n <= out_V_last_V_full_n;
        else 
            out_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_V_last_V_din_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_905_pp0_iter1_reg, in1_0_V_id_V0_status, in2_V_id_V0_status, out_V_id_V1_status, out_data_last_V_reg_914_pp0_iter1_reg, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten_reg_905_pp0_iter1_reg = ap_const_lv1_0))) then 
            out_V_last_V_din <= out_data_last_V_reg_914_pp0_iter1_reg;
        elsif ((not(((real_start = ap_const_logic_0) or (out_V_id_V1_status = ap_const_logic_0) or (in2_V_id_V0_status = ap_const_logic_0) or (in1_0_V_id_V0_status = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_V_last_V_din <= ap_const_lv1_0;
        else 
            out_V_last_V_din <= "X";
        end if; 
    end process;

    out_V_last_V_write <= out_V_id_V1_update;

    out_V_user_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, out_V_user_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_905_pp0_iter1_reg)
    begin
        if (((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten_reg_905_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            out_V_user_V_blk_n <= out_V_user_V_full_n;
        else 
            out_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_V_user_V_din <= ap_const_lv16_31;
    out_V_user_V_write <= out_V_id_V1_update;
    out_data_last_V_fu_459_p2 <= "1" when (j_mid2_fu_451_p3 = ap_const_lv6_2F) else "0";
    p_Result_22_10_fu_749_p4 <= in1_0_V_data_V_dout(383 downto 352);
    p_Result_22_11_fu_775_p4 <= in1_0_V_data_V_dout(415 downto 384);
    p_Result_22_12_fu_801_p4 <= in1_0_V_data_V_dout(447 downto 416);
    p_Result_22_13_fu_827_p4 <= in1_0_V_data_V_dout(479 downto 448);
    p_Result_22_14_fu_853_p4 <= in1_0_V_data_V_dout(511 downto 480);
    p_Result_22_1_fu_489_p4 <= in1_0_V_data_V_dout(63 downto 32);
    p_Result_22_2_fu_515_p4 <= in1_0_V_data_V_dout(95 downto 64);
    p_Result_22_3_fu_541_p4 <= in1_0_V_data_V_dout(127 downto 96);
    p_Result_22_4_fu_567_p4 <= in1_0_V_data_V_dout(159 downto 128);
    p_Result_22_5_fu_593_p4 <= in1_0_V_data_V_dout(191 downto 160);
    p_Result_22_6_fu_619_p4 <= in1_0_V_data_V_dout(223 downto 192);
    p_Result_22_7_fu_645_p4 <= in1_0_V_data_V_dout(255 downto 224);
    p_Result_22_8_fu_671_p4 <= in1_0_V_data_V_dout(287 downto 256);
    p_Result_22_9_fu_697_p4 <= in1_0_V_data_V_dout(319 downto 288);
    p_Result_22_s_fu_723_p4 <= in1_0_V_data_V_dout(351 downto 320);
    p_Result_23_10_fu_759_p4 <= in2_V_data_V_dout(383 downto 352);
    p_Result_23_11_fu_785_p4 <= in2_V_data_V_dout(415 downto 384);
    p_Result_23_12_fu_811_p4 <= in2_V_data_V_dout(447 downto 416);
    p_Result_23_13_fu_837_p4 <= in2_V_data_V_dout(479 downto 448);
    p_Result_23_14_fu_863_p4 <= in2_V_data_V_dout(511 downto 480);
    p_Result_23_1_fu_499_p4 <= in2_V_data_V_dout(63 downto 32);
    p_Result_23_2_fu_525_p4 <= in2_V_data_V_dout(95 downto 64);
    p_Result_23_3_fu_551_p4 <= in2_V_data_V_dout(127 downto 96);
    p_Result_23_4_fu_577_p4 <= in2_V_data_V_dout(159 downto 128);
    p_Result_23_5_fu_603_p4 <= in2_V_data_V_dout(191 downto 160);
    p_Result_23_6_fu_629_p4 <= in2_V_data_V_dout(223 downto 192);
    p_Result_23_7_fu_655_p4 <= in2_V_data_V_dout(255 downto 224);
    p_Result_23_8_fu_681_p4 <= in2_V_data_V_dout(287 downto 256);
    p_Result_23_9_fu_707_p4 <= in2_V_data_V_dout(319 downto 288);
    p_Result_23_s_fu_733_p4 <= in2_V_data_V_dout(351 downto 320);
    p_shl2_fu_424_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_416_p3),38));
    p_shl_fu_408_p3 <= (tmp_142_fu_404_p1 & ap_const_lv6_0);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_142_fu_404_p1 <= in1_0_V_data_V_dout(32 - 1 downto 0);
    tmp_143_fu_475_p1 <= in1_0_V_data_V_dout(32 - 1 downto 0);
    tmp_144_fu_479_p1 <= in2_V_data_V_dout(32 - 1 downto 0);
    tmp_3_fu_445_p2 <= "1" when (j_reg_388 = ap_const_lv6_30) else "0";
    tmp_V_0_trunc_fu_483_p2 <= std_logic_vector(unsigned(tmp_143_fu_475_p1) + unsigned(tmp_144_fu_479_p1));
    tmp_V_10_trunc_fu_743_p2 <= std_logic_vector(unsigned(p_Result_22_s_fu_723_p4) + unsigned(p_Result_23_s_fu_733_p4));
    tmp_V_11_trunc_fu_769_p2 <= std_logic_vector(unsigned(p_Result_22_10_fu_749_p4) + unsigned(p_Result_23_10_fu_759_p4));
    tmp_V_12_trunc_fu_795_p2 <= std_logic_vector(unsigned(p_Result_22_11_fu_775_p4) + unsigned(p_Result_23_11_fu_785_p4));
    tmp_V_13_trunc_fu_821_p2 <= std_logic_vector(unsigned(p_Result_22_12_fu_801_p4) + unsigned(p_Result_23_12_fu_811_p4));
    tmp_V_14_trunc_fu_847_p2 <= std_logic_vector(unsigned(p_Result_22_13_fu_827_p4) + unsigned(p_Result_23_13_fu_837_p4));
    tmp_V_15_trunc_fu_873_p2 <= std_logic_vector(unsigned(p_Result_22_14_fu_853_p4) + unsigned(p_Result_23_14_fu_863_p4));
    tmp_V_1_trunc_fu_509_p2 <= std_logic_vector(unsigned(p_Result_22_1_fu_489_p4) + unsigned(p_Result_23_1_fu_499_p4));
    tmp_V_2_trunc_fu_535_p2 <= std_logic_vector(unsigned(p_Result_22_2_fu_515_p4) + unsigned(p_Result_23_2_fu_525_p4));
    tmp_V_3_trunc_fu_561_p2 <= std_logic_vector(unsigned(p_Result_22_3_fu_541_p4) + unsigned(p_Result_23_3_fu_551_p4));
    tmp_V_4_trunc_fu_587_p2 <= std_logic_vector(unsigned(p_Result_22_4_fu_567_p4) + unsigned(p_Result_23_4_fu_577_p4));
    tmp_V_5_trunc_fu_613_p2 <= std_logic_vector(unsigned(p_Result_22_5_fu_593_p4) + unsigned(p_Result_23_5_fu_603_p4));
    tmp_V_6_trunc_fu_639_p2 <= std_logic_vector(unsigned(p_Result_22_6_fu_619_p4) + unsigned(p_Result_23_6_fu_629_p4));
    tmp_V_7_trunc_fu_665_p2 <= std_logic_vector(unsigned(p_Result_22_7_fu_645_p4) + unsigned(p_Result_23_7_fu_655_p4));
    tmp_V_8_trunc_fu_691_p2 <= std_logic_vector(unsigned(p_Result_22_8_fu_671_p4) + unsigned(p_Result_23_8_fu_681_p4));
    tmp_V_9_trunc_fu_717_p2 <= std_logic_vector(unsigned(p_Result_22_9_fu_697_p4) + unsigned(p_Result_23_9_fu_707_p4));
    tmp_data_V_15_fu_879_p17 <= (((((((((((((((tmp_V_15_trunc_reg_999 & tmp_V_14_trunc_reg_994) & tmp_V_13_trunc_reg_989) & tmp_V_12_trunc_reg_984) & tmp_V_11_trunc_reg_979) & tmp_V_10_trunc_reg_974) & tmp_V_9_trunc_reg_969) & tmp_V_8_trunc_reg_964) & tmp_V_7_trunc_reg_959) & tmp_V_6_trunc_reg_954) & tmp_V_5_trunc_reg_949) & tmp_V_4_trunc_reg_944) & tmp_V_3_trunc_reg_939) & tmp_V_2_trunc_reg_934) & tmp_V_1_trunc_reg_929) & tmp_V_0_trunc_reg_924);
    tmp_s_fu_416_p3 <= (tmp_142_fu_404_p1 & ap_const_lv4_0);
end behav;
