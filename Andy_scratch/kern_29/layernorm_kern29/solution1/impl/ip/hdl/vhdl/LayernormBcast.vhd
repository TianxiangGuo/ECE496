-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity LayernormBcast is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_V_data_V_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    in_V_data_V_empty_n : IN STD_LOGIC;
    in_V_data_V_read : OUT STD_LOGIC;
    in_V_id_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_V_id_V_empty_n : IN STD_LOGIC;
    in_V_id_V_read : OUT STD_LOGIC;
    in_V_dest_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_V_dest_V_empty_n : IN STD_LOGIC;
    in_V_dest_V_read : OUT STD_LOGIC;
    in_V_user_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_V_user_V_empty_n : IN STD_LOGIC;
    in_V_user_V_read : OUT STD_LOGIC;
    in_V_last_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    in_V_last_V_empty_n : IN STD_LOGIC;
    in_V_last_V_read : OUT STD_LOGIC;
    out_r_TDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    out_r_TVALID : OUT STD_LOGIC;
    out_r_TREADY : IN STD_LOGIC;
    out_r_TID : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_r_TDEST : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_r_TUSER : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of LayernormBcast is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv35_0 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_1D : STD_LOGIC_VECTOR (7 downto 0) := "00011101";
    constant ap_const_lv16_D : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv35_1 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000000000000001";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv6_26 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal out_V_data_V_1_data_in : STD_LOGIC_VECTOR (511 downto 0);
    signal out_V_data_V_1_data_out : STD_LOGIC_VECTOR (511 downto 0);
    signal out_V_data_V_1_vld_in : STD_LOGIC;
    signal out_V_data_V_1_vld_out : STD_LOGIC;
    signal out_V_data_V_1_ack_in : STD_LOGIC;
    signal out_V_data_V_1_ack_out : STD_LOGIC;
    signal out_V_data_V_1_payload_A : STD_LOGIC_VECTOR (511 downto 0);
    signal out_V_data_V_1_payload_B : STD_LOGIC_VECTOR (511 downto 0);
    signal out_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal out_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal out_V_data_V_1_sel : STD_LOGIC;
    signal out_V_data_V_1_load_A : STD_LOGIC;
    signal out_V_data_V_1_load_B : STD_LOGIC;
    signal out_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal out_V_id_V_1_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal out_V_id_V_1_vld_in : STD_LOGIC;
    signal out_V_id_V_1_vld_out : STD_LOGIC;
    signal out_V_id_V_1_ack_in : STD_LOGIC;
    signal out_V_id_V_1_ack_out : STD_LOGIC;
    signal out_V_id_V_1_sel_rd : STD_LOGIC := '0';
    signal out_V_id_V_1_sel : STD_LOGIC;
    signal out_V_id_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_V_dest_V_1_data_in : STD_LOGIC_VECTOR (7 downto 0);
    signal out_V_dest_V_1_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal out_V_dest_V_1_vld_in : STD_LOGIC;
    signal out_V_dest_V_1_vld_out : STD_LOGIC;
    signal out_V_dest_V_1_ack_in : STD_LOGIC;
    signal out_V_dest_V_1_ack_out : STD_LOGIC;
    signal out_V_dest_V_1_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal out_V_dest_V_1_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal out_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal out_V_dest_V_1_sel_wr : STD_LOGIC := '0';
    signal out_V_dest_V_1_sel : STD_LOGIC;
    signal out_V_dest_V_1_load_A : STD_LOGIC;
    signal out_V_dest_V_1_load_B : STD_LOGIC;
    signal out_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_V_dest_V_1_state_cmp_full : STD_LOGIC;
    signal out_V_user_V_1_data_in : STD_LOGIC_VECTOR (15 downto 0);
    signal out_V_user_V_1_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal out_V_user_V_1_vld_in : STD_LOGIC;
    signal out_V_user_V_1_vld_out : STD_LOGIC;
    signal out_V_user_V_1_ack_in : STD_LOGIC;
    signal out_V_user_V_1_ack_out : STD_LOGIC;
    signal out_V_user_V_1_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal out_V_user_V_1_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal out_V_user_V_1_sel_rd : STD_LOGIC := '0';
    signal out_V_user_V_1_sel_wr : STD_LOGIC := '0';
    signal out_V_user_V_1_sel : STD_LOGIC;
    signal out_V_user_V_1_load_A : STD_LOGIC;
    signal out_V_user_V_1_load_B : STD_LOGIC;
    signal out_V_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_V_user_V_1_state_cmp_full : STD_LOGIC;
    signal out_V_last_V_1_data_in : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_last_V_1_vld_in : STD_LOGIC;
    signal out_V_last_V_1_vld_out : STD_LOGIC;
    signal out_V_last_V_1_ack_in : STD_LOGIC;
    signal out_V_last_V_1_ack_out : STD_LOGIC;
    signal out_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal out_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal out_V_last_V_1_sel : STD_LOGIC;
    signal out_V_last_V_1_load_A : STD_LOGIC;
    signal out_V_last_V_1_load_B : STD_LOGIC;
    signal out_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal in_V_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_2_reg_555 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_542 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_V_id_V_blk_n : STD_LOGIC;
    signal in_V_dest_V_blk_n : STD_LOGIC;
    signal in_V_user_V_blk_n : STD_LOGIC;
    signal in_V_last_V_blk_n : STD_LOGIC;
    signal out_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal exitcond_flatten_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_fu_379_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_mid2_reg_523 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmp_2_reg_555_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_reg_259 : STD_LOGIC_VECTOR (3 downto 0);
    signal temp_data_V_fu_301_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal temp_data_V_reg_497 : STD_LOGIC_VECTOR (511 downto 0);
    signal in_V_id_V0_status : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal bound_fu_321_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal bound_reg_502 : STD_LOGIC_VECTOR (34 downto 0);
    signal indvar_flatten_next_fu_346_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal indvar_flatten_next_reg_510 : STD_LOGIC_VECTOR (34 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal ap_predicate_op50_write_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal iter_mid2_fu_358_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal iter_mid2_reg_515 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_user_V_10_cast_fu_407_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_user_V_10_cast_reg_527 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_mid2_fu_411_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_mid2_reg_532 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_dest_V_1_fu_437_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_io : BOOLEAN;
    signal grp_fu_292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_546 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_dest_V_3_fu_464_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_dest_V_3_reg_550 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal fifo_V_V_dout : STD_LOGIC_VECTOR (511 downto 0);
    signal fifo_V_V_empty_n : STD_LOGIC;
    signal fifo_V_V_read : STD_LOGIC;
    signal ap_predicate_op68_read_state5 : BOOLEAN;
    signal fifo_V_V_din : STD_LOGIC_VECTOR (511 downto 0);
    signal fifo_V_V_full_n : STD_LOGIC;
    signal fifo_V_V_write : STD_LOGIC;
    signal ap_predicate_op70_write_state5 : BOOLEAN;
    signal ap_predicate_op72_read_state5 : BOOLEAN;
    signal ap_predicate_op74_write_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal j_2_fu_474_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal temp_last_V_fu_480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_last_V_reg_564 : STD_LOGIC_VECTOR (0 downto 0);
    signal iter_1_fu_486_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal indvar_flatten_reg_226 : STD_LOGIC_VECTOR (34 downto 0);
    signal i_reg_237 : STD_LOGIC_VECTOR (31 downto 0);
    signal iter_reg_248 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_tmp_data_V_7_phi_fu_274_p6 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_data_V_7_reg_270 : STD_LOGIC_VECTOR (511 downto 0);
    signal in_V_id_V0_update : STD_LOGIC;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_292_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal N_fu_297_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_309_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal cast_fu_305_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal p_shl_fu_317_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_s_fu_327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_s_fu_367_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_mid1_fu_373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_user_V_9_mid1_fu_387_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_user_V_fu_333_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_user_V_2_fu_395_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_user_V_10_cast8_fu_403_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_25_cast_fu_419_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal phitmp1_fu_423_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal temp_dest_V_fu_429_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_28_cast_fu_447_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal phitmp_fu_450_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal temp_dest_V_1_fu_456_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_575 : BOOLEAN;

    component fifo_w512_d12_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (511 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (511 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    fifo_V_V_fifo_U : component fifo_w512_d12_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => fifo_V_V_din,
        if_full_n => fifo_V_V_full_n,
        if_write => fifo_V_V_write,
        if_dout => fifo_V_V_dout,
        if_empty_n => fifo_V_V_empty_n,
        if_read => fifo_V_V_read);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((out_V_data_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io))) and (exitcond_flatten_fu_341_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state4);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    out_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_V_data_V_1_ack_out = ap_const_logic_1) and (out_V_data_V_1_vld_out = ap_const_logic_1))) then 
                                        out_V_data_V_1_sel_rd <= not(out_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((out_V_data_V_1_ack_in = ap_const_logic_1) and (out_V_data_V_1_vld_in = ap_const_logic_1))) then 
                                        out_V_data_V_1_sel_wr <= not(out_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_V_data_V_1_state = ap_const_lv2_2) and (out_V_data_V_1_vld_in = ap_const_logic_0)) or ((out_V_data_V_1_state = ap_const_lv2_3) and (out_V_data_V_1_vld_in = ap_const_logic_0) and (out_V_data_V_1_ack_out = ap_const_logic_1)))) then 
                    out_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((out_V_data_V_1_state = ap_const_lv2_1) and (out_V_data_V_1_ack_out = ap_const_logic_0)) or ((out_V_data_V_1_state = ap_const_lv2_3) and (out_V_data_V_1_ack_out = ap_const_logic_0) and (out_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_V_data_V_1_vld_in = ap_const_logic_0) and (out_V_data_V_1_ack_out = ap_const_logic_1))) and not(((out_V_data_V_1_ack_out = ap_const_logic_0) and (out_V_data_V_1_vld_in = ap_const_logic_1))) and (out_V_data_V_1_state = ap_const_lv2_3)) or ((out_V_data_V_1_state = ap_const_lv2_1) and (out_V_data_V_1_ack_out = ap_const_logic_1)) or ((out_V_data_V_1_state = ap_const_lv2_2) and (out_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    out_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_V_dest_V_1_ack_out = ap_const_logic_1) and (out_V_dest_V_1_vld_out = ap_const_logic_1))) then 
                                        out_V_dest_V_1_sel_rd <= not(out_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_V_dest_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_V_dest_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((out_V_dest_V_1_ack_in = ap_const_logic_1) and (out_V_dest_V_1_vld_in = ap_const_logic_1))) then 
                                        out_V_dest_V_1_sel_wr <= not(out_V_dest_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_V_dest_V_1_state = ap_const_lv2_2) and (out_V_dest_V_1_vld_in = ap_const_logic_0)) or ((out_V_dest_V_1_state = ap_const_lv2_3) and (out_V_dest_V_1_vld_in = ap_const_logic_0) and (out_V_dest_V_1_ack_out = ap_const_logic_1)))) then 
                    out_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((out_V_dest_V_1_state = ap_const_lv2_1) and (out_V_dest_V_1_ack_out = ap_const_logic_0)) or ((out_V_dest_V_1_state = ap_const_lv2_3) and (out_V_dest_V_1_ack_out = ap_const_logic_0) and (out_V_dest_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_dest_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_V_dest_V_1_vld_in = ap_const_logic_0) and (out_V_dest_V_1_ack_out = ap_const_logic_1))) and not(((out_V_dest_V_1_ack_out = ap_const_logic_0) and (out_V_dest_V_1_vld_in = ap_const_logic_1))) and (out_V_dest_V_1_state = ap_const_lv2_3)) or ((out_V_dest_V_1_state = ap_const_lv2_1) and (out_V_dest_V_1_ack_out = ap_const_logic_1)) or ((out_V_dest_V_1_state = ap_const_lv2_2) and (out_V_dest_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    out_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_V_id_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_V_id_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_V_id_V_1_ack_out = ap_const_logic_1) and (out_V_id_V_1_vld_out = ap_const_logic_1))) then 
                                        out_V_id_V_1_sel_rd <= not(out_V_id_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_V_id_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_V_id_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_V_id_V_1_state = ap_const_lv2_2) and (out_V_id_V_1_vld_in = ap_const_logic_0)) or ((out_V_id_V_1_state = ap_const_lv2_3) and (out_V_id_V_1_vld_in = ap_const_logic_0) and (out_V_id_V_1_ack_out = ap_const_logic_1)))) then 
                    out_V_id_V_1_state <= ap_const_lv2_2;
                elsif ((((out_V_id_V_1_state = ap_const_lv2_1) and (out_V_id_V_1_ack_out = ap_const_logic_0)) or ((out_V_id_V_1_state = ap_const_lv2_3) and (out_V_id_V_1_ack_out = ap_const_logic_0) and (out_V_id_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_id_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_V_id_V_1_vld_in = ap_const_logic_0) and (out_V_id_V_1_ack_out = ap_const_logic_1))) and not(((out_V_id_V_1_ack_out = ap_const_logic_0) and (out_V_id_V_1_vld_in = ap_const_logic_1))) and (out_V_id_V_1_state = ap_const_lv2_3)) or ((out_V_id_V_1_state = ap_const_lv2_1) and (out_V_id_V_1_ack_out = ap_const_logic_1)) or ((out_V_id_V_1_state = ap_const_lv2_2) and (out_V_id_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_id_V_1_state <= ap_const_lv2_3;
                else 
                    out_V_id_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_V_last_V_1_ack_out = ap_const_logic_1) and (out_V_last_V_1_vld_out = ap_const_logic_1))) then 
                                        out_V_last_V_1_sel_rd <= not(out_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((out_V_last_V_1_ack_in = ap_const_logic_1) and (out_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        out_V_last_V_1_sel_wr <= not(out_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_V_last_V_1_state = ap_const_lv2_2) and (out_V_last_V_1_vld_in = ap_const_logic_0)) or ((out_V_last_V_1_state = ap_const_lv2_3) and (out_V_last_V_1_vld_in = ap_const_logic_0) and (out_V_last_V_1_ack_out = ap_const_logic_1)))) then 
                    out_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((out_V_last_V_1_state = ap_const_lv2_1) and (out_V_last_V_1_ack_out = ap_const_logic_0)) or ((out_V_last_V_1_state = ap_const_lv2_3) and (out_V_last_V_1_ack_out = ap_const_logic_0) and (out_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_V_last_V_1_vld_in = ap_const_logic_0) and (out_V_last_V_1_ack_out = ap_const_logic_1))) and not(((out_V_last_V_1_ack_out = ap_const_logic_0) and (out_V_last_V_1_vld_in = ap_const_logic_1))) and (out_V_last_V_1_state = ap_const_lv2_3)) or ((out_V_last_V_1_state = ap_const_lv2_1) and (out_V_last_V_1_ack_out = ap_const_logic_1)) or ((out_V_last_V_1_state = ap_const_lv2_2) and (out_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    out_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_V_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_V_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_V_user_V_1_ack_out = ap_const_logic_1) and (out_V_user_V_1_vld_out = ap_const_logic_1))) then 
                                        out_V_user_V_1_sel_rd <= not(out_V_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_V_user_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_V_user_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((out_V_user_V_1_ack_in = ap_const_logic_1) and (out_V_user_V_1_vld_in = ap_const_logic_1))) then 
                                        out_V_user_V_1_sel_wr <= not(out_V_user_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_V_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                out_V_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_V_user_V_1_state = ap_const_lv2_2) and (out_V_user_V_1_vld_in = ap_const_logic_0)) or ((out_V_user_V_1_state = ap_const_lv2_3) and (out_V_user_V_1_vld_in = ap_const_logic_0) and (out_V_user_V_1_ack_out = ap_const_logic_1)))) then 
                    out_V_user_V_1_state <= ap_const_lv2_2;
                elsif ((((out_V_user_V_1_state = ap_const_lv2_1) and (out_V_user_V_1_ack_out = ap_const_logic_0)) or ((out_V_user_V_1_state = ap_const_lv2_3) and (out_V_user_V_1_ack_out = ap_const_logic_0) and (out_V_user_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_user_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_V_user_V_1_vld_in = ap_const_logic_0) and (out_V_user_V_1_ack_out = ap_const_logic_1))) and not(((out_V_user_V_1_ack_out = ap_const_logic_0) and (out_V_user_V_1_vld_in = ap_const_logic_1))) and (out_V_user_V_1_state = ap_const_lv2_3)) or ((out_V_user_V_1_state = ap_const_lv2_1) and (out_V_user_V_1_ack_out = ap_const_logic_1)) or ((out_V_user_V_1_state = ap_const_lv2_2) and (out_V_user_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_user_V_1_state <= ap_const_lv2_3;
                else 
                    out_V_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    i_reg_237_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                i_reg_237 <= i_mid2_reg_532;
            elsif ((not(((in_V_id_V0_status = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_237 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                indvar_flatten_reg_226 <= indvar_flatten_next_reg_510;
            elsif ((not(((in_V_id_V0_status = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_226 <= ap_const_lv35_0;
            end if; 
        end if;
    end process;

    iter_reg_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                iter_reg_248 <= iter_1_fu_486_p2;
            elsif ((not(((in_V_id_V0_status = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                iter_reg_248 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    j_reg_259_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_2_fu_468_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j_reg_259 <= j_2_fu_474_p2;
            elsif (((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                j_reg_259 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_V_id_V0_status = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                bound_reg_502 <= bound_fu_321_p2;
                    temp_data_V_reg_497(31 downto 0) <= temp_data_V_fu_301_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_V_data_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io))) and (exitcond_flatten_fu_341_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                i_mid2_reg_532 <= i_mid2_fu_411_p3;
                iter_mid2_reg_515 <= iter_mid2_fu_358_p3;
                tmp_mid2_reg_523 <= tmp_mid2_fu_379_p3;
                    tmp_user_V_10_cast_reg_527(0) <= tmp_user_V_10_cast_fu_407_p1(0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_V_data_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                indvar_flatten_next_reg_510 <= indvar_flatten_next_fu_346_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_V_data_V_1_load_A = ap_const_logic_1)) then
                out_V_data_V_1_payload_A <= out_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_V_data_V_1_load_B = ap_const_logic_1)) then
                out_V_data_V_1_payload_B <= out_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_V_dest_V_1_load_A = ap_const_logic_1)) then
                out_V_dest_V_1_payload_A <= out_V_dest_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_V_dest_V_1_load_B = ap_const_logic_1)) then
                out_V_dest_V_1_payload_B <= out_V_dest_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_V_last_V_1_load_A = ap_const_logic_1)) then
                out_V_last_V_1_payload_A <= out_V_last_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_V_last_V_1_load_B = ap_const_logic_1)) then
                out_V_last_V_1_payload_B <= out_V_last_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_V_user_V_1_load_A = ap_const_logic_1)) then
                out_V_user_V_1_payload_A <= out_V_user_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_V_user_V_1_load_B = ap_const_logic_1)) then
                out_V_user_V_1_payload_B <= out_V_user_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_2_fu_468_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                temp_last_V_reg_564 <= temp_last_V_fu_480_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_1_reg_546 <= grp_fu_292_p2;
                tmp_9_reg_542 <= tmp_9_fu_442_p2;
                    tmp_dest_V_3_reg_550(5 downto 0) <= tmp_dest_V_3_fu_464_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_2_reg_555 <= tmp_2_fu_468_p2;
                tmp_2_reg_555_pp0_iter1_reg <= tmp_2_reg_555;
            end if;
        end if;
    end process;
    temp_data_V_reg_497(511 downto 32) <= "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    tmp_user_V_10_cast_reg_527(15 downto 1) <= "000000000000110";
    tmp_dest_V_3_reg_550(7 downto 6) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, out_V_data_V_1_ack_in, out_V_id_V_1_ack_in, out_V_dest_V_1_ack_in, out_V_user_V_1_ack_in, out_V_last_V_1_ack_in, ap_enable_reg_pp0_iter1, ap_CS_fsm_state2, exitcond_flatten_fu_341_p2, ap_CS_fsm_state3, ap_enable_reg_pp0_iter2, in_V_id_V0_status, ap_block_state2_io, ap_block_state3_io, tmp_2_fu_468_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((in_V_id_V0_status = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((out_V_data_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io))) and (exitcond_flatten_fu_341_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not(((out_V_data_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io))) and (exitcond_flatten_fu_341_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_boolean_0 = ap_block_state3_io) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((tmp_2_fu_468_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((tmp_2_fu_468_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    N_fu_297_p1 <= in_V_data_V_dout(32 - 1 downto 0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state7 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, in_V_id_V0_status, fifo_V_V_empty_n, ap_predicate_op68_read_state5, fifo_V_V_full_n, ap_predicate_op70_write_state5, ap_predicate_op72_read_state5, ap_predicate_op74_write_state5)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((fifo_V_V_full_n = ap_const_logic_0) and (ap_predicate_op74_write_state5 = ap_const_boolean_1)) or ((fifo_V_V_full_n = ap_const_logic_0) and (ap_predicate_op70_write_state5 = ap_const_boolean_1)) or ((fifo_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op68_read_state5 = ap_const_boolean_1)) or ((in_V_id_V0_status = ap_const_logic_0) and (ap_predicate_op72_read_state5 = ap_const_boolean_1))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, in_V_id_V0_status, fifo_V_V_empty_n, ap_predicate_op68_read_state5, fifo_V_V_full_n, ap_predicate_op70_write_state5, ap_predicate_op72_read_state5, ap_predicate_op74_write_state5, ap_block_state5_io, ap_block_state6_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state6_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state5_io) or ((fifo_V_V_full_n = ap_const_logic_0) and (ap_predicate_op74_write_state5 = ap_const_boolean_1)) or ((fifo_V_V_full_n = ap_const_logic_0) and (ap_predicate_op70_write_state5 = ap_const_boolean_1)) or ((fifo_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op68_read_state5 = ap_const_boolean_1)) or ((in_V_id_V0_status = ap_const_logic_0) and (ap_predicate_op72_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, in_V_id_V0_status, fifo_V_V_empty_n, ap_predicate_op68_read_state5, fifo_V_V_full_n, ap_predicate_op70_write_state5, ap_predicate_op72_read_state5, ap_predicate_op74_write_state5, ap_block_state5_io, ap_block_state6_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state6_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state5_io) or ((fifo_V_V_full_n = ap_const_logic_0) and (ap_predicate_op74_write_state5 = ap_const_boolean_1)) or ((fifo_V_V_full_n = ap_const_logic_0) and (ap_predicate_op70_write_state5 = ap_const_boolean_1)) or ((fifo_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op68_read_state5 = ap_const_boolean_1)) or ((in_V_id_V0_status = ap_const_logic_0) and (ap_predicate_op72_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, in_V_id_V0_status)
    begin
                ap_block_state1 <= ((in_V_id_V0_status = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_assign_proc : process(out_V_data_V_1_ack_in, out_V_id_V_1_ack_in, out_V_dest_V_1_ack_in, out_V_user_V_1_ack_in, out_V_last_V_1_ack_in)
    begin
                ap_block_state2 <= ((out_V_data_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state2_io_assign_proc : process(out_V_data_V_1_ack_in, ap_predicate_op50_write_state2)
    begin
                ap_block_state2_io <= ((out_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op50_write_state2 = ap_const_boolean_1));
    end process;


    ap_block_state3_io_assign_proc : process(out_V_data_V_1_ack_in, tmp_mid2_reg_523)
    begin
                ap_block_state3_io <= ((tmp_mid2_reg_523 = ap_const_lv1_1) and (out_V_data_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_io_assign_proc : process(out_V_data_V_1_ack_in, tmp_2_reg_555)
    begin
                ap_block_state5_io <= ((tmp_2_reg_555 = ap_const_lv1_0) and (out_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state5_pp0_stage0_iter1_assign_proc : process(in_V_id_V0_status, fifo_V_V_empty_n, ap_predicate_op68_read_state5, fifo_V_V_full_n, ap_predicate_op70_write_state5, ap_predicate_op72_read_state5, ap_predicate_op74_write_state5)
    begin
                ap_block_state5_pp0_stage0_iter1 <= (((fifo_V_V_full_n = ap_const_logic_0) and (ap_predicate_op74_write_state5 = ap_const_boolean_1)) or ((fifo_V_V_full_n = ap_const_logic_0) and (ap_predicate_op70_write_state5 = ap_const_boolean_1)) or ((fifo_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op68_read_state5 = ap_const_boolean_1)) or ((in_V_id_V0_status = ap_const_logic_0) and (ap_predicate_op72_read_state5 = ap_const_boolean_1)));
    end process;


    ap_block_state6_io_assign_proc : process(out_V_data_V_1_ack_in, tmp_2_reg_555_pp0_iter1_reg)
    begin
                ap_block_state6_io <= ((tmp_2_reg_555_pp0_iter1_reg = ap_const_lv1_0) and (out_V_data_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state6_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_575_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001)
    begin
                ap_condition_575 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state4_assign_proc : process(tmp_2_fu_468_p2)
    begin
        if ((tmp_2_fu_468_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, out_V_data_V_1_ack_in, out_V_id_V_1_ack_in, out_V_dest_V_1_ack_in, out_V_user_V_1_ack_in, out_V_last_V_1_ack_in, ap_CS_fsm_state2, exitcond_flatten_fu_341_p2, ap_block_state2_io)
    begin
        if ((not(((out_V_data_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io))) and (exitcond_flatten_fu_341_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_tmp_data_V_7_phi_fu_274_p6_assign_proc : process(in_V_data_V_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_2_reg_555, tmp_9_reg_542, tmp_1_reg_546, fifo_V_V_dout, ap_phi_reg_pp0_iter1_tmp_data_V_7_reg_270)
    begin
        if ((((tmp_1_reg_546 = ap_const_lv1_1) and (tmp_9_reg_542 = ap_const_lv1_0) and (tmp_2_reg_555 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_1_reg_546 = ap_const_lv1_0) and (tmp_9_reg_542 = ap_const_lv1_0) and (tmp_2_reg_555 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ap_phi_mux_tmp_data_V_7_phi_fu_274_p6 <= fifo_V_V_dout;
        elsif (((tmp_9_reg_542 = ap_const_lv1_1) and (tmp_2_reg_555 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_tmp_data_V_7_phi_fu_274_p6 <= in_V_data_V_dout;
        else 
            ap_phi_mux_tmp_data_V_7_phi_fu_274_p6 <= ap_phi_reg_pp0_iter1_tmp_data_V_7_reg_270;
        end if; 
    end process;

    ap_phi_reg_pp0_iter1_tmp_data_V_7_reg_270 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op50_write_state2_assign_proc : process(exitcond_flatten_fu_341_p2, tmp_mid2_fu_379_p3)
    begin
                ap_predicate_op50_write_state2 <= ((tmp_mid2_fu_379_p3 = ap_const_lv1_1) and (exitcond_flatten_fu_341_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op68_read_state5_assign_proc : process(tmp_2_reg_555, tmp_9_reg_542)
    begin
                ap_predicate_op68_read_state5 <= ((tmp_9_reg_542 = ap_const_lv1_0) and (tmp_2_reg_555 = ap_const_lv1_0));
    end process;


    ap_predicate_op70_write_state5_assign_proc : process(tmp_2_reg_555, tmp_9_reg_542, tmp_1_reg_546)
    begin
                ap_predicate_op70_write_state5 <= ((tmp_1_reg_546 = ap_const_lv1_0) and (tmp_9_reg_542 = ap_const_lv1_0) and (tmp_2_reg_555 = ap_const_lv1_0));
    end process;


    ap_predicate_op72_read_state5_assign_proc : process(tmp_2_reg_555, tmp_9_reg_542)
    begin
                ap_predicate_op72_read_state5 <= ((tmp_9_reg_542 = ap_const_lv1_1) and (tmp_2_reg_555 = ap_const_lv1_0));
    end process;


    ap_predicate_op74_write_state5_assign_proc : process(tmp_2_reg_555, tmp_9_reg_542)
    begin
                ap_predicate_op74_write_state5 <= ((tmp_9_reg_542 = ap_const_lv1_1) and (tmp_2_reg_555 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(out_V_data_V_1_ack_in, out_V_id_V_1_ack_in, out_V_dest_V_1_ack_in, out_V_user_V_1_ack_in, out_V_last_V_1_ack_in, ap_CS_fsm_state2, exitcond_flatten_fu_341_p2, ap_block_state2_io)
    begin
        if ((not(((out_V_data_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io))) and (exitcond_flatten_fu_341_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bound_fu_321_p2 <= std_logic_vector(unsigned(cast_fu_305_p1) + unsigned(p_shl_fu_317_p1));
    cast_fu_305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(N_fu_297_p1),35));
    exitcond_flatten_fu_341_p2 <= "1" when (indvar_flatten_reg_226 = bound_reg_502) else "0";

    fifo_V_V_din_assign_proc : process(in_V_data_V_dout, fifo_V_V_dout, ap_predicate_op70_write_state5, ap_predicate_op74_write_state5, ap_condition_575)
    begin
        if ((ap_const_boolean_1 = ap_condition_575)) then
            if ((ap_predicate_op74_write_state5 = ap_const_boolean_1)) then 
                fifo_V_V_din <= in_V_data_V_dout;
            elsif ((ap_predicate_op70_write_state5 = ap_const_boolean_1)) then 
                fifo_V_V_din <= fifo_V_V_dout;
            else 
                fifo_V_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            fifo_V_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fifo_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op68_read_state5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op68_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_V_V_read <= ap_const_logic_1;
        else 
            fifo_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_V_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op70_write_state5, ap_predicate_op74_write_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op74_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op70_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            fifo_V_V_write <= ap_const_logic_1;
        else 
            fifo_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_292_p0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, iter_mid2_fu_358_p3, iter_mid2_reg_515)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_292_p0 <= iter_mid2_reg_515;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_292_p0 <= iter_mid2_fu_358_p3;
        else 
            grp_fu_292_p0 <= "XXX";
        end if; 
    end process;

    grp_fu_292_p2 <= "1" when (grp_fu_292_p0 = ap_const_lv3_4) else "0";
    i_mid2_fu_411_p3 <= 
        i_s_fu_367_p2 when (tmp_11_fu_352_p2(0) = '1') else 
        i_reg_237;
    i_s_fu_367_p2 <= std_logic_vector(unsigned(i_reg_237) + unsigned(ap_const_lv32_1));

    in_V_data_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_V_data_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_2_reg_555, tmp_9_reg_542)
    begin
        if ((((tmp_9_reg_542 = ap_const_lv1_1) and (tmp_2_reg_555 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_data_V_blk_n <= in_V_data_V_empty_n;
        else 
            in_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_V_data_V_read <= in_V_id_V0_update;

    in_V_dest_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_V_dest_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_2_reg_555, tmp_9_reg_542)
    begin
        if ((((tmp_9_reg_542 = ap_const_lv1_1) and (tmp_2_reg_555 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_dest_V_blk_n <= in_V_dest_V_empty_n;
        else 
            in_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_V_dest_V_read <= in_V_id_V0_update;
    in_V_id_V0_status <= (in_V_user_V_empty_n and in_V_last_V_empty_n and in_V_id_V_empty_n and in_V_dest_V_empty_n and in_V_data_V_empty_n);

    in_V_id_V0_update_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, in_V_id_V0_status, ap_predicate_op72_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op72_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((in_V_id_V0_status = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_id_V0_update <= ap_const_logic_1;
        else 
            in_V_id_V0_update <= ap_const_logic_0;
        end if; 
    end process;


    in_V_id_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_V_id_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_2_reg_555, tmp_9_reg_542)
    begin
        if ((((tmp_9_reg_542 = ap_const_lv1_1) and (tmp_2_reg_555 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_id_V_blk_n <= in_V_id_V_empty_n;
        else 
            in_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_V_id_V_read <= in_V_id_V0_update;

    in_V_last_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_V_last_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_2_reg_555, tmp_9_reg_542)
    begin
        if ((((tmp_9_reg_542 = ap_const_lv1_1) and (tmp_2_reg_555 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_last_V_blk_n <= in_V_last_V_empty_n;
        else 
            in_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_V_last_V_read <= in_V_id_V0_update;

    in_V_user_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_V_user_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_2_reg_555, tmp_9_reg_542)
    begin
        if ((((tmp_9_reg_542 = ap_const_lv1_1) and (tmp_2_reg_555 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_user_V_blk_n <= in_V_user_V_empty_n;
        else 
            in_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_V_user_V_read <= in_V_id_V0_update;
    indvar_flatten_next_fu_346_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_226) + unsigned(ap_const_lv35_1));
    iter_1_fu_486_p2 <= std_logic_vector(unsigned(iter_mid2_reg_515) + unsigned(ap_const_lv3_1));
    iter_mid2_fu_358_p3 <= 
        ap_const_lv3_0 when (tmp_11_fu_352_p2(0) = '1') else 
        iter_reg_248;
    j_2_fu_474_p2 <= std_logic_vector(unsigned(j_reg_259) + unsigned(ap_const_lv4_1));
    out_V_data_V_1_ack_in <= out_V_data_V_1_state(1);
    out_V_data_V_1_ack_out <= out_r_TREADY;

    out_V_data_V_1_data_in_assign_proc : process(out_V_data_V_1_ack_in, out_V_id_V_1_ack_in, out_V_dest_V_1_ack_in, out_V_user_V_1_ack_in, out_V_last_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_2_reg_555, ap_CS_fsm_state2, temp_data_V_reg_497, ap_predicate_op50_write_state2, ap_phi_mux_tmp_data_V_7_phi_fu_274_p6, ap_block_pp0_stage0_01001)
    begin
        if (((tmp_2_reg_555 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_V_data_V_1_data_in <= ap_phi_mux_tmp_data_V_7_phi_fu_274_p6;
        elsif ((not(((out_V_data_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0))) and (ap_predicate_op50_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            out_V_data_V_1_data_in <= temp_data_V_reg_497;
        else 
            out_V_data_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_V_data_V_1_data_out_assign_proc : process(out_V_data_V_1_payload_A, out_V_data_V_1_payload_B, out_V_data_V_1_sel)
    begin
        if ((out_V_data_V_1_sel = ap_const_logic_1)) then 
            out_V_data_V_1_data_out <= out_V_data_V_1_payload_B;
        else 
            out_V_data_V_1_data_out <= out_V_data_V_1_payload_A;
        end if; 
    end process;

    out_V_data_V_1_load_A <= (out_V_data_V_1_state_cmp_full and not(out_V_data_V_1_sel_wr));
    out_V_data_V_1_load_B <= (out_V_data_V_1_state_cmp_full and out_V_data_V_1_sel_wr);
    out_V_data_V_1_sel <= out_V_data_V_1_sel_rd;
    out_V_data_V_1_state_cmp_full <= '0' when (out_V_data_V_1_state = ap_const_lv2_1) else '1';

    out_V_data_V_1_vld_in_assign_proc : process(out_V_data_V_1_ack_in, out_V_id_V_1_ack_in, out_V_dest_V_1_ack_in, out_V_user_V_1_ack_in, out_V_last_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_2_reg_555, ap_CS_fsm_state2, ap_predicate_op50_write_state2, ap_block_state2_io, ap_block_pp0_stage0_11001)
    begin
        if (((not(((out_V_data_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io))) and (ap_predicate_op50_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((tmp_2_reg_555 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            out_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_V_data_V_1_vld_out <= out_V_data_V_1_state(0);
    out_V_dest_V_1_ack_in <= out_V_dest_V_1_state(1);
    out_V_dest_V_1_ack_out <= out_r_TREADY;

    out_V_dest_V_1_data_in_assign_proc : process(out_V_data_V_1_ack_in, out_V_id_V_1_ack_in, out_V_dest_V_1_ack_in, out_V_user_V_1_ack_in, out_V_last_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_2_reg_555, ap_CS_fsm_state2, ap_predicate_op50_write_state2, tmp_dest_V_1_fu_437_p1, tmp_dest_V_3_reg_550, ap_block_pp0_stage0_01001)
    begin
        if (((tmp_2_reg_555 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_V_dest_V_1_data_in <= tmp_dest_V_3_reg_550;
        elsif ((not(((out_V_data_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0))) and (ap_predicate_op50_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            out_V_dest_V_1_data_in <= tmp_dest_V_1_fu_437_p1;
        else 
            out_V_dest_V_1_data_in <= "XXXXXXXX";
        end if; 
    end process;


    out_V_dest_V_1_data_out_assign_proc : process(out_V_dest_V_1_payload_A, out_V_dest_V_1_payload_B, out_V_dest_V_1_sel)
    begin
        if ((out_V_dest_V_1_sel = ap_const_logic_1)) then 
            out_V_dest_V_1_data_out <= out_V_dest_V_1_payload_B;
        else 
            out_V_dest_V_1_data_out <= out_V_dest_V_1_payload_A;
        end if; 
    end process;

    out_V_dest_V_1_load_A <= (out_V_dest_V_1_state_cmp_full and not(out_V_dest_V_1_sel_wr));
    out_V_dest_V_1_load_B <= (out_V_dest_V_1_state_cmp_full and out_V_dest_V_1_sel_wr);
    out_V_dest_V_1_sel <= out_V_dest_V_1_sel_rd;
    out_V_dest_V_1_state_cmp_full <= '0' when (out_V_dest_V_1_state = ap_const_lv2_1) else '1';

    out_V_dest_V_1_vld_in_assign_proc : process(out_V_data_V_1_ack_in, out_V_id_V_1_ack_in, out_V_dest_V_1_ack_in, out_V_user_V_1_ack_in, out_V_last_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_2_reg_555, ap_CS_fsm_state2, ap_predicate_op50_write_state2, ap_block_state2_io, ap_block_pp0_stage0_11001)
    begin
        if (((not(((out_V_data_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io))) and (ap_predicate_op50_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((tmp_2_reg_555 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            out_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_V_dest_V_1_vld_out <= out_V_dest_V_1_state(0);
    out_V_id_V_1_ack_in <= out_V_id_V_1_state(1);
    out_V_id_V_1_ack_out <= out_r_TREADY;
    out_V_id_V_1_data_out <= ap_const_lv8_1D;
    out_V_id_V_1_sel <= out_V_id_V_1_sel_rd;

    out_V_id_V_1_vld_in_assign_proc : process(out_V_data_V_1_ack_in, out_V_id_V_1_ack_in, out_V_dest_V_1_ack_in, out_V_user_V_1_ack_in, out_V_last_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_2_reg_555, ap_CS_fsm_state2, ap_predicate_op50_write_state2, ap_block_state2_io, ap_block_pp0_stage0_11001)
    begin
        if (((not(((out_V_data_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io))) and (ap_predicate_op50_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((tmp_2_reg_555 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_V_id_V_1_vld_in <= ap_const_logic_1;
        else 
            out_V_id_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_V_id_V_1_vld_out <= out_V_id_V_1_state(0);
    out_V_last_V_1_ack_in <= out_V_last_V_1_state(1);
    out_V_last_V_1_ack_out <= out_r_TREADY;

    out_V_last_V_1_data_in_assign_proc : process(out_V_data_V_1_ack_in, out_V_id_V_1_ack_in, out_V_dest_V_1_ack_in, out_V_user_V_1_ack_in, out_V_last_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_2_reg_555, ap_CS_fsm_state2, ap_predicate_op50_write_state2, temp_last_V_reg_564, ap_block_pp0_stage0_01001)
    begin
        if (((tmp_2_reg_555 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_V_last_V_1_data_in <= temp_last_V_reg_564;
        elsif ((not(((out_V_data_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0))) and (ap_predicate_op50_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            out_V_last_V_1_data_in <= ap_const_lv1_0;
        else 
            out_V_last_V_1_data_in <= "X";
        end if; 
    end process;


    out_V_last_V_1_data_out_assign_proc : process(out_V_last_V_1_payload_A, out_V_last_V_1_payload_B, out_V_last_V_1_sel)
    begin
        if ((out_V_last_V_1_sel = ap_const_logic_1)) then 
            out_V_last_V_1_data_out <= out_V_last_V_1_payload_B;
        else 
            out_V_last_V_1_data_out <= out_V_last_V_1_payload_A;
        end if; 
    end process;

    out_V_last_V_1_load_A <= (out_V_last_V_1_state_cmp_full and not(out_V_last_V_1_sel_wr));
    out_V_last_V_1_load_B <= (out_V_last_V_1_state_cmp_full and out_V_last_V_1_sel_wr);
    out_V_last_V_1_sel <= out_V_last_V_1_sel_rd;
    out_V_last_V_1_state_cmp_full <= '0' when (out_V_last_V_1_state = ap_const_lv2_1) else '1';

    out_V_last_V_1_vld_in_assign_proc : process(out_V_data_V_1_ack_in, out_V_id_V_1_ack_in, out_V_dest_V_1_ack_in, out_V_user_V_1_ack_in, out_V_last_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_2_reg_555, ap_CS_fsm_state2, ap_predicate_op50_write_state2, ap_block_state2_io, ap_block_pp0_stage0_11001)
    begin
        if (((not(((out_V_data_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io))) and (ap_predicate_op50_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((tmp_2_reg_555 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            out_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_V_last_V_1_vld_out <= out_V_last_V_1_state(0);
    out_V_user_V_1_ack_in <= out_V_user_V_1_state(1);
    out_V_user_V_1_ack_out <= out_r_TREADY;

    out_V_user_V_1_data_in_assign_proc : process(out_V_data_V_1_ack_in, out_V_id_V_1_ack_in, out_V_dest_V_1_ack_in, out_V_user_V_1_ack_in, out_V_last_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_2_reg_555, ap_CS_fsm_state2, ap_predicate_op50_write_state2, tmp_user_V_10_cast_reg_527, ap_block_pp0_stage0_01001)
    begin
        if (((tmp_2_reg_555 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_V_user_V_1_data_in <= tmp_user_V_10_cast_reg_527;
        elsif ((not(((out_V_data_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0))) and (ap_predicate_op50_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            out_V_user_V_1_data_in <= ap_const_lv16_D;
        else 
            out_V_user_V_1_data_in <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_V_user_V_1_data_out_assign_proc : process(out_V_user_V_1_payload_A, out_V_user_V_1_payload_B, out_V_user_V_1_sel)
    begin
        if ((out_V_user_V_1_sel = ap_const_logic_1)) then 
            out_V_user_V_1_data_out <= out_V_user_V_1_payload_B;
        else 
            out_V_user_V_1_data_out <= out_V_user_V_1_payload_A;
        end if; 
    end process;

    out_V_user_V_1_load_A <= (out_V_user_V_1_state_cmp_full and not(out_V_user_V_1_sel_wr));
    out_V_user_V_1_load_B <= (out_V_user_V_1_state_cmp_full and out_V_user_V_1_sel_wr);
    out_V_user_V_1_sel <= out_V_user_V_1_sel_rd;
    out_V_user_V_1_state_cmp_full <= '0' when (out_V_user_V_1_state = ap_const_lv2_1) else '1';

    out_V_user_V_1_vld_in_assign_proc : process(out_V_data_V_1_ack_in, out_V_id_V_1_ack_in, out_V_dest_V_1_ack_in, out_V_user_V_1_ack_in, out_V_last_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_2_reg_555, ap_CS_fsm_state2, ap_predicate_op50_write_state2, ap_block_state2_io, ap_block_pp0_stage0_11001)
    begin
        if (((not(((out_V_data_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io))) and (ap_predicate_op50_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((tmp_2_reg_555 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_V_user_V_1_vld_in <= ap_const_logic_1;
        else 
            out_V_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_V_user_V_1_vld_out <= out_V_user_V_1_state(0);
    out_r_TDATA <= out_V_data_V_1_data_out;

    out_r_TDATA_blk_n_assign_proc : process(out_V_data_V_1_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_2_reg_555, ap_CS_fsm_state2, exitcond_flatten_fu_341_p2, tmp_mid2_fu_379_p3, ap_CS_fsm_state3, tmp_mid2_reg_523, ap_enable_reg_pp0_iter2, tmp_2_reg_555_pp0_iter1_reg)
    begin
        if ((((tmp_mid2_reg_523 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((tmp_mid2_fu_379_p3 = ap_const_lv1_1) and (exitcond_flatten_fu_341_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((tmp_2_reg_555_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((tmp_2_reg_555 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_r_TDATA_blk_n <= out_V_data_V_1_state(1);
        else 
            out_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_r_TDEST <= out_V_dest_V_1_data_out;
    out_r_TID <= out_V_id_V_1_data_out;
    out_r_TLAST <= out_V_last_V_1_data_out;
    out_r_TUSER <= out_V_user_V_1_data_out;
    out_r_TVALID <= out_V_last_V_1_state(0);
    p_shl_fu_317_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_309_p3),35));
    phitmp1_fu_423_p2 <= std_logic_vector(unsigned(tmp_25_cast_fu_419_p1) + unsigned(ap_const_lv6_1E));
    phitmp_fu_450_p2 <= std_logic_vector(unsigned(tmp_28_cast_fu_447_p1) + unsigned(ap_const_lv6_1E));
    temp_data_V_fu_301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(N_fu_297_p1),512));
    temp_dest_V_1_fu_456_p3 <= 
        ap_const_lv6_26 when (grp_fu_292_p2(0) = '1') else 
        phitmp_fu_450_p2;
    temp_dest_V_fu_429_p3 <= 
        ap_const_lv6_26 when (grp_fu_292_p2(0) = '1') else 
        phitmp1_fu_423_p2;
    temp_last_V_fu_480_p2 <= "1" when (j_reg_259 = ap_const_lv4_B) else "0";
    tmp_10_fu_309_p3 <= (N_fu_297_p1 & ap_const_lv2_0);
    tmp_11_fu_352_p2 <= "1" when (iter_reg_248 = ap_const_lv3_5) else "0";
    tmp_25_cast_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(iter_mid2_fu_358_p3),6));
    tmp_28_cast_fu_447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(iter_mid2_reg_515),6));
    tmp_2_fu_468_p2 <= "1" when (j_reg_259 = ap_const_lv4_C) else "0";
    tmp_9_fu_442_p2 <= "1" when (iter_mid2_reg_515 = ap_const_lv3_0) else "0";
    tmp_dest_V_1_fu_437_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(temp_dest_V_fu_429_p3),8));
    tmp_dest_V_3_fu_464_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(temp_dest_V_1_fu_456_p3),8));
    tmp_mid1_fu_373_p2 <= "1" when (i_s_fu_367_p2 = ap_const_lv32_0) else "0";
    tmp_mid2_fu_379_p3 <= 
        tmp_mid1_fu_373_p2 when (tmp_11_fu_352_p2(0) = '1') else 
        tmp_s_fu_327_p2;
    tmp_s_fu_327_p2 <= "1" when (i_reg_237 = ap_const_lv32_0) else "0";
        tmp_user_V_10_cast8_fu_403_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_user_V_2_fu_395_p3),4));

    tmp_user_V_10_cast_fu_407_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_user_V_10_cast8_fu_403_p1),16));
    tmp_user_V_2_fu_395_p3 <= 
        tmp_user_V_9_mid1_fu_387_p3 when (tmp_11_fu_352_p2(0) = '1') else 
        tmp_user_V_fu_333_p3;
    tmp_user_V_9_mid1_fu_387_p3 <= 
        ap_const_lv3_5 when (tmp_mid1_fu_373_p2(0) = '1') else 
        ap_const_lv3_4;
    tmp_user_V_fu_333_p3 <= 
        ap_const_lv3_5 when (tmp_s_fu_327_p2(0) = '1') else 
        ap_const_lv3_4;
end behav;
