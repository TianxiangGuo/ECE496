// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "softmax_divide_preci.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic softmax_divide_preci::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic softmax_divide_preci::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> softmax_divide_preci::ap_ST_fsm_state1 = "1";
const sc_lv<4> softmax_divide_preci::ap_ST_fsm_state2 = "10";
const sc_lv<4> softmax_divide_preci::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> softmax_divide_preci::ap_ST_fsm_state36 = "1000";
const sc_lv<32> softmax_divide_preci::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool softmax_divide_preci::ap_const_boolean_1 = true;
const sc_lv<32> softmax_divide_preci::ap_const_lv32_2 = "10";
const bool softmax_divide_preci::ap_const_boolean_0 = false;
const sc_lv<1> softmax_divide_preci::ap_const_lv1_1 = "1";
const sc_lv<1> softmax_divide_preci::ap_const_lv1_0 = "0";
const sc_lv<32> softmax_divide_preci::ap_const_lv32_1 = "1";
const sc_lv<64> softmax_divide_preci::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> softmax_divide_preci::ap_const_lv64_1 = "1";
const sc_lv<8> softmax_divide_preci::ap_const_lv8_0 = "00000000";
const sc_lv<32> softmax_divide_preci::ap_const_lv32_8 = "1000";
const sc_lv<32> softmax_divide_preci::ap_const_lv32_1F = "11111";
const sc_lv<24> softmax_divide_preci::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<8> softmax_divide_preci::ap_const_lv8_FF = "11111111";
const sc_lv<32> softmax_divide_preci::ap_const_lv32_3 = "11";

softmax_divide_preci::softmax_divide_preci(sc_module_name name) : sc_module(name), mVcdFile(0) {
    kernel_4_sdiv_26ns_32ns_32_30_1_U1926 = new kernel_4_sdiv_26ns_32ns_32_30_1<1,30,26,32,32>("kernel_4_sdiv_26ns_32ns_32_30_1_U1926");
    kernel_4_sdiv_26ns_32ns_32_30_1_U1926->clk(ap_clk);
    kernel_4_sdiv_26ns_32ns_32_30_1_U1926->reset(ap_rst);
    kernel_4_sdiv_26ns_32ns_32_30_1_U1926->din0(grp_fu_265_p0);
    kernel_4_sdiv_26ns_32ns_32_30_1_U1926->din1(tmp_V_fu_132);
    kernel_4_sdiv_26ns_32ns_32_30_1_U1926->ce(grp_fu_265_ce);
    kernel_4_sdiv_26ns_32ns_32_30_1_U1926->dout(grp_fu_265_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( sum_V_V_empty_n );
    sensitive << ( in_proc_2_V_V_empty_n );
    sensitive << ( in_write_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_i_reg_330 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_321_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter32 );
    sensitive << ( exitcond_flatten_reg_321_pp0_iter31_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( sum_V_V_empty_n );
    sensitive << ( in_proc_2_V_V_empty_n );
    sensitive << ( in_write_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_i_reg_330 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_321_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter32 );
    sensitive << ( exitcond_flatten_reg_321_pp0_iter31_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( sum_V_V_empty_n );
    sensitive << ( in_proc_2_V_V_empty_n );
    sensitive << ( in_write_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_i_reg_330 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_321_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter32 );
    sensitive << ( exitcond_flatten_reg_321_pp0_iter31_reg );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( in_proc_2_iter_c_V_V_empty_n );
    sensitive << ( in_proc_2_iter_r_V_V_empty_n );
    sensitive << ( in_write_2_iter_c_V_s_full_n );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter12);

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter13);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter14);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter15);

    SC_METHOD(thread_ap_block_state19_pp0_stage0_iter16);

    SC_METHOD(thread_ap_block_state20_pp0_stage0_iter17);

    SC_METHOD(thread_ap_block_state21_pp0_stage0_iter18);

    SC_METHOD(thread_ap_block_state22_pp0_stage0_iter19);

    SC_METHOD(thread_ap_block_state23_pp0_stage0_iter20);

    SC_METHOD(thread_ap_block_state24_pp0_stage0_iter21);

    SC_METHOD(thread_ap_block_state25_pp0_stage0_iter22);

    SC_METHOD(thread_ap_block_state26_pp0_stage0_iter23);

    SC_METHOD(thread_ap_block_state27_pp0_stage0_iter24);

    SC_METHOD(thread_ap_block_state28_pp0_stage0_iter25);

    SC_METHOD(thread_ap_block_state29_pp0_stage0_iter26);

    SC_METHOD(thread_ap_block_state30_pp0_stage0_iter27);

    SC_METHOD(thread_ap_block_state31_pp0_stage0_iter28);

    SC_METHOD(thread_ap_block_state32_pp0_stage0_iter29);

    SC_METHOD(thread_ap_block_state33_pp0_stage0_iter30);

    SC_METHOD(thread_ap_block_state34_pp0_stage0_iter31);

    SC_METHOD(thread_ap_block_state35_pp0_stage0_iter32);
    sensitive << ( in_write_V_V_full_n );
    sensitive << ( exitcond_flatten_reg_321_pp0_iter31_reg );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( sum_V_V_empty_n );
    sensitive << ( tmp_i_reg_330 );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);
    sensitive << ( in_proc_2_V_V_empty_n );
    sensitive << ( exitcond_flatten_reg_321_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter6);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( exitcond_flatten_fu_209_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter32 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_enable_reg_pp0_iter14 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( ap_enable_reg_pp0_iter17 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_enable_reg_pp0_iter19 );
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_enable_reg_pp0_iter21 );
    sensitive << ( ap_enable_reg_pp0_iter22 );
    sensitive << ( ap_enable_reg_pp0_iter23 );
    sensitive << ( ap_enable_reg_pp0_iter24 );
    sensitive << ( ap_enable_reg_pp0_iter25 );
    sensitive << ( ap_enable_reg_pp0_iter26 );
    sensitive << ( ap_enable_reg_pp0_iter27 );
    sensitive << ( ap_enable_reg_pp0_iter28 );
    sensitive << ( ap_enable_reg_pp0_iter29 );
    sensitive << ( ap_enable_reg_pp0_iter30 );
    sensitive << ( ap_enable_reg_pp0_iter31 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_bound_fu_203_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( bound_fu_203_p00 );

    SC_METHOD(thread_bound_fu_203_p00);
    sensitive << ( tmp_V_101_reg_305 );

    SC_METHOD(thread_bound_fu_203_p1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( bound_fu_203_p10 );

    SC_METHOD(thread_bound_fu_203_p10);
    sensitive << ( tmp_V_105_reg_311 );

    SC_METHOD(thread_bound_fu_203_p2);
    sensitive << ( bound_fu_203_p0 );
    sensitive << ( bound_fu_203_p1 );

    SC_METHOD(thread_exitcond_flatten_fu_209_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_175 );
    sensitive << ( bound_reg_316 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_i2_fu_220_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( iter_i_reg_186 );
    sensitive << ( tmp_V_101_reg_305 );
    sensitive << ( exitcond_flatten_fu_209_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_grp_fu_265_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_265_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( grp_fu_265_p00 );

    SC_METHOD(thread_grp_fu_265_p00);
    sensitive << ( p_2_i_fu_253_p3 );

    SC_METHOD(thread_in_proc_2_V_V_blk_n);
    sensitive << ( in_proc_2_V_V_empty_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_321_pp0_iter1_reg );

    SC_METHOD(thread_in_proc_2_V_V_read);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_321_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_proc_2_iter_c_V_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_proc_2_iter_c_V_V_empty_n );

    SC_METHOD(thread_in_proc_2_iter_c_V_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_proc_2_iter_c_V_V_empty_n );
    sensitive << ( in_proc_2_iter_r_V_V_empty_n );
    sensitive << ( in_write_2_iter_c_V_s_full_n );

    SC_METHOD(thread_in_proc_2_iter_r_V_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_proc_2_iter_r_V_V_empty_n );

    SC_METHOD(thread_in_proc_2_iter_r_V_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_proc_2_iter_c_V_V_empty_n );
    sensitive << ( in_proc_2_iter_r_V_V_empty_n );
    sensitive << ( in_write_2_iter_c_V_s_full_n );

    SC_METHOD(thread_in_write_2_iter_c_V_s_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_write_2_iter_c_V_s_full_n );

    SC_METHOD(thread_in_write_2_iter_c_V_s_din);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_proc_2_iter_c_V_V_dout );
    sensitive << ( in_proc_2_iter_c_V_V_empty_n );
    sensitive << ( in_proc_2_iter_r_V_V_empty_n );
    sensitive << ( in_write_2_iter_c_V_s_full_n );

    SC_METHOD(thread_in_write_2_iter_c_V_s_write);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_proc_2_iter_c_V_V_empty_n );
    sensitive << ( in_proc_2_iter_r_V_V_empty_n );
    sensitive << ( in_write_2_iter_c_V_s_full_n );

    SC_METHOD(thread_in_write_V_V_blk_n);
    sensitive << ( in_write_V_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter32 );
    sensitive << ( exitcond_flatten_reg_321_pp0_iter31_reg );

    SC_METHOD(thread_in_write_V_V_din);
    sensitive << ( ap_enable_reg_pp0_iter32 );
    sensitive << ( exitcond_flatten_reg_321_pp0_iter31_reg );
    sensitive << ( tmp_V_104_reg_349 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_in_write_V_V_write);
    sensitive << ( ap_enable_reg_pp0_iter32 );
    sensitive << ( exitcond_flatten_reg_321_pp0_iter31_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_indvar_flatten_next_fu_214_p2);
    sensitive << ( indvar_flatten_reg_175 );

    SC_METHOD(thread_iter_fu_239_p2);
    sensitive << ( iter_i_mid2_fu_225_p3 );

    SC_METHOD(thread_iter_i_mid2_fu_225_p3);
    sensitive << ( iter_i_reg_186 );
    sensitive << ( exitcond_i2_fu_220_p2 );

    SC_METHOD(thread_p_2_i_fu_253_p3);
    sensitive << ( in_proc_2_V_V_dout );

    SC_METHOD(thread_p_3_i_fu_271_p4);
    sensitive << ( grp_fu_265_p2 );

    SC_METHOD(thread_sum_V_V_blk_n);
    sensitive << ( sum_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_i_reg_330 );

    SC_METHOD(thread_sum_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_i_reg_330 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tmp_41_i_fu_281_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_321_pp0_iter30_reg );
    sensitive << ( ap_enable_reg_pp0_iter31 );
    sensitive << ( p_3_i_fu_271_p4 );

    SC_METHOD(thread_tmp_V_104_fu_291_p3);
    sensitive << ( tmp_41_i_fu_281_p2 );
    sensitive << ( tmp_fu_287_p1 );

    SC_METHOD(thread_tmp_fu_287_p1);
    sensitive << ( grp_fu_265_p2 );

    SC_METHOD(thread_tmp_i_fu_233_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_209_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( iter_i_mid2_fu_225_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_proc_2_iter_c_V_V_empty_n );
    sensitive << ( in_proc_2_iter_r_V_V_empty_n );
    sensitive << ( in_write_2_iter_c_V_s_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter32 );
    sensitive << ( exitcond_flatten_fu_209_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter31 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter32 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter14 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter15 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter16 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter17 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter18 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter19 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter20 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter21 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter22 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter23 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter24 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter25 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter26 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter27 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter28 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter29 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter30 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter31 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "softmax_divide_preci_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_proc_2_iter_c_V_V_dout, "(port)in_proc_2_iter_c_V_V_dout");
    sc_trace(mVcdFile, in_proc_2_iter_c_V_V_empty_n, "(port)in_proc_2_iter_c_V_V_empty_n");
    sc_trace(mVcdFile, in_proc_2_iter_c_V_V_read, "(port)in_proc_2_iter_c_V_V_read");
    sc_trace(mVcdFile, in_proc_2_iter_r_V_V_dout, "(port)in_proc_2_iter_r_V_V_dout");
    sc_trace(mVcdFile, in_proc_2_iter_r_V_V_empty_n, "(port)in_proc_2_iter_r_V_V_empty_n");
    sc_trace(mVcdFile, in_proc_2_iter_r_V_V_read, "(port)in_proc_2_iter_r_V_V_read");
    sc_trace(mVcdFile, in_write_2_iter_c_V_s_din, "(port)in_write_2_iter_c_V_s_din");
    sc_trace(mVcdFile, in_write_2_iter_c_V_s_full_n, "(port)in_write_2_iter_c_V_s_full_n");
    sc_trace(mVcdFile, in_write_2_iter_c_V_s_write, "(port)in_write_2_iter_c_V_s_write");
    sc_trace(mVcdFile, sum_V_V_dout, "(port)sum_V_V_dout");
    sc_trace(mVcdFile, sum_V_V_empty_n, "(port)sum_V_V_empty_n");
    sc_trace(mVcdFile, sum_V_V_read, "(port)sum_V_V_read");
    sc_trace(mVcdFile, in_proc_2_V_V_dout, "(port)in_proc_2_V_V_dout");
    sc_trace(mVcdFile, in_proc_2_V_V_empty_n, "(port)in_proc_2_V_V_empty_n");
    sc_trace(mVcdFile, in_proc_2_V_V_read, "(port)in_proc_2_V_V_read");
    sc_trace(mVcdFile, in_write_V_V_din, "(port)in_write_V_V_din");
    sc_trace(mVcdFile, in_write_V_V_full_n, "(port)in_write_V_V_full_n");
    sc_trace(mVcdFile, in_write_V_V_write, "(port)in_write_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, in_proc_2_iter_c_V_V_blk_n, "in_proc_2_iter_c_V_V_blk_n");
    sc_trace(mVcdFile, in_proc_2_iter_r_V_V_blk_n, "in_proc_2_iter_r_V_V_blk_n");
    sc_trace(mVcdFile, in_write_2_iter_c_V_s_blk_n, "in_write_2_iter_c_V_s_blk_n");
    sc_trace(mVcdFile, sum_V_V_blk_n, "sum_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_i_reg_330, "tmp_i_reg_330");
    sc_trace(mVcdFile, in_proc_2_V_V_blk_n, "in_proc_2_V_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, exitcond_flatten_reg_321, "exitcond_flatten_reg_321");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter1_reg, "exitcond_flatten_reg_321_pp0_iter1_reg");
    sc_trace(mVcdFile, in_write_V_V_blk_n, "in_write_V_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter32, "ap_enable_reg_pp0_iter32");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter31_reg, "exitcond_flatten_reg_321_pp0_iter31_reg");
    sc_trace(mVcdFile, indvar_flatten_reg_175, "indvar_flatten_reg_175");
    sc_trace(mVcdFile, iter_i_reg_186, "iter_i_reg_186");
    sc_trace(mVcdFile, tmp_V_101_reg_305, "tmp_V_101_reg_305");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, tmp_V_105_reg_311, "tmp_V_105_reg_311");
    sc_trace(mVcdFile, bound_fu_203_p2, "bound_fu_203_p2");
    sc_trace(mVcdFile, bound_reg_316, "bound_reg_316");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond_flatten_fu_209_p2, "exitcond_flatten_fu_209_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter3, "ap_block_state6_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter4, "ap_block_state7_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter5, "ap_block_state8_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter6, "ap_block_state9_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter7, "ap_block_state10_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter8, "ap_block_state11_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter9, "ap_block_state12_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter10, "ap_block_state13_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter11, "ap_block_state14_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter12, "ap_block_state15_pp0_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter13, "ap_block_state16_pp0_stage0_iter13");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter14, "ap_block_state17_pp0_stage0_iter14");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter15, "ap_block_state18_pp0_stage0_iter15");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage0_iter16, "ap_block_state19_pp0_stage0_iter16");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage0_iter17, "ap_block_state20_pp0_stage0_iter17");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage0_iter18, "ap_block_state21_pp0_stage0_iter18");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage0_iter19, "ap_block_state22_pp0_stage0_iter19");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage0_iter20, "ap_block_state23_pp0_stage0_iter20");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage0_iter21, "ap_block_state24_pp0_stage0_iter21");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage0_iter22, "ap_block_state25_pp0_stage0_iter22");
    sc_trace(mVcdFile, ap_block_state26_pp0_stage0_iter23, "ap_block_state26_pp0_stage0_iter23");
    sc_trace(mVcdFile, ap_block_state27_pp0_stage0_iter24, "ap_block_state27_pp0_stage0_iter24");
    sc_trace(mVcdFile, ap_block_state28_pp0_stage0_iter25, "ap_block_state28_pp0_stage0_iter25");
    sc_trace(mVcdFile, ap_block_state29_pp0_stage0_iter26, "ap_block_state29_pp0_stage0_iter26");
    sc_trace(mVcdFile, ap_block_state30_pp0_stage0_iter27, "ap_block_state30_pp0_stage0_iter27");
    sc_trace(mVcdFile, ap_block_state31_pp0_stage0_iter28, "ap_block_state31_pp0_stage0_iter28");
    sc_trace(mVcdFile, ap_block_state32_pp0_stage0_iter29, "ap_block_state32_pp0_stage0_iter29");
    sc_trace(mVcdFile, ap_block_state33_pp0_stage0_iter30, "ap_block_state33_pp0_stage0_iter30");
    sc_trace(mVcdFile, ap_block_state34_pp0_stage0_iter31, "ap_block_state34_pp0_stage0_iter31");
    sc_trace(mVcdFile, ap_block_state35_pp0_stage0_iter32, "ap_block_state35_pp0_stage0_iter32");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter2_reg, "exitcond_flatten_reg_321_pp0_iter2_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter3_reg, "exitcond_flatten_reg_321_pp0_iter3_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter4_reg, "exitcond_flatten_reg_321_pp0_iter4_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter5_reg, "exitcond_flatten_reg_321_pp0_iter5_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter6_reg, "exitcond_flatten_reg_321_pp0_iter6_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter7_reg, "exitcond_flatten_reg_321_pp0_iter7_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter8_reg, "exitcond_flatten_reg_321_pp0_iter8_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter9_reg, "exitcond_flatten_reg_321_pp0_iter9_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter10_reg, "exitcond_flatten_reg_321_pp0_iter10_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter11_reg, "exitcond_flatten_reg_321_pp0_iter11_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter12_reg, "exitcond_flatten_reg_321_pp0_iter12_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter13_reg, "exitcond_flatten_reg_321_pp0_iter13_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter14_reg, "exitcond_flatten_reg_321_pp0_iter14_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter15_reg, "exitcond_flatten_reg_321_pp0_iter15_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter16_reg, "exitcond_flatten_reg_321_pp0_iter16_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter17_reg, "exitcond_flatten_reg_321_pp0_iter17_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter18_reg, "exitcond_flatten_reg_321_pp0_iter18_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter19_reg, "exitcond_flatten_reg_321_pp0_iter19_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter20_reg, "exitcond_flatten_reg_321_pp0_iter20_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter21_reg, "exitcond_flatten_reg_321_pp0_iter21_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter22_reg, "exitcond_flatten_reg_321_pp0_iter22_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter23_reg, "exitcond_flatten_reg_321_pp0_iter23_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter24_reg, "exitcond_flatten_reg_321_pp0_iter24_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter25_reg, "exitcond_flatten_reg_321_pp0_iter25_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter26_reg, "exitcond_flatten_reg_321_pp0_iter26_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter27_reg, "exitcond_flatten_reg_321_pp0_iter27_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter28_reg, "exitcond_flatten_reg_321_pp0_iter28_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter29_reg, "exitcond_flatten_reg_321_pp0_iter29_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_321_pp0_iter30_reg, "exitcond_flatten_reg_321_pp0_iter30_reg");
    sc_trace(mVcdFile, indvar_flatten_next_fu_214_p2, "indvar_flatten_next_fu_214_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_i_fu_233_p2, "tmp_i_fu_233_p2");
    sc_trace(mVcdFile, iter_fu_239_p2, "iter_fu_239_p2");
    sc_trace(mVcdFile, tmp_V_104_fu_291_p3, "tmp_V_104_fu_291_p3");
    sc_trace(mVcdFile, tmp_V_104_reg_349, "tmp_V_104_reg_349");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter12, "ap_enable_reg_pp0_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter13, "ap_enable_reg_pp0_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter14, "ap_enable_reg_pp0_iter14");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter15, "ap_enable_reg_pp0_iter15");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter16, "ap_enable_reg_pp0_iter16");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter17, "ap_enable_reg_pp0_iter17");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter18, "ap_enable_reg_pp0_iter18");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter19, "ap_enable_reg_pp0_iter19");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter20, "ap_enable_reg_pp0_iter20");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter21, "ap_enable_reg_pp0_iter21");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter22, "ap_enable_reg_pp0_iter22");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter23, "ap_enable_reg_pp0_iter23");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter24, "ap_enable_reg_pp0_iter24");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter25, "ap_enable_reg_pp0_iter25");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter26, "ap_enable_reg_pp0_iter26");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter27, "ap_enable_reg_pp0_iter27");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter28, "ap_enable_reg_pp0_iter28");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter29, "ap_enable_reg_pp0_iter29");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter30, "ap_enable_reg_pp0_iter30");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter31, "ap_enable_reg_pp0_iter31");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_V_fu_132, "tmp_V_fu_132");
    sc_trace(mVcdFile, bound_fu_203_p0, "bound_fu_203_p0");
    sc_trace(mVcdFile, bound_fu_203_p1, "bound_fu_203_p1");
    sc_trace(mVcdFile, exitcond_i2_fu_220_p2, "exitcond_i2_fu_220_p2");
    sc_trace(mVcdFile, iter_i_mid2_fu_225_p3, "iter_i_mid2_fu_225_p3");
    sc_trace(mVcdFile, p_2_i_fu_253_p3, "p_2_i_fu_253_p3");
    sc_trace(mVcdFile, grp_fu_265_p0, "grp_fu_265_p0");
    sc_trace(mVcdFile, grp_fu_265_p2, "grp_fu_265_p2");
    sc_trace(mVcdFile, p_3_i_fu_271_p4, "p_3_i_fu_271_p4");
    sc_trace(mVcdFile, tmp_41_i_fu_281_p2, "tmp_41_i_fu_281_p2");
    sc_trace(mVcdFile, tmp_fu_287_p1, "tmp_fu_287_p1");
    sc_trace(mVcdFile, grp_fu_265_ce, "grp_fu_265_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, bound_fu_203_p00, "bound_fu_203_p00");
    sc_trace(mVcdFile, bound_fu_203_p10, "bound_fu_203_p10");
    sc_trace(mVcdFile, grp_fu_265_p00, "grp_fu_265_p00");
#endif

    }
}

softmax_divide_preci::~softmax_divide_preci() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete kernel_4_sdiv_26ns_32ns_32_30_1_U1926;
}

void softmax_divide_preci::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter12 = ap_enable_reg_pp0_iter11.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter13 = ap_enable_reg_pp0_iter12.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter14 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter14 = ap_enable_reg_pp0_iter13.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter15 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter15 = ap_enable_reg_pp0_iter14.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter16 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter16 = ap_enable_reg_pp0_iter15.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter17 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter17 = ap_enable_reg_pp0_iter16.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter18 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter18 = ap_enable_reg_pp0_iter17.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter19 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter19 = ap_enable_reg_pp0_iter18.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter20 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter20 = ap_enable_reg_pp0_iter19.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter21 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter21 = ap_enable_reg_pp0_iter20.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter22 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter22 = ap_enable_reg_pp0_iter21.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter23 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter23 = ap_enable_reg_pp0_iter22.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter24 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter24 = ap_enable_reg_pp0_iter23.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter25 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter25 = ap_enable_reg_pp0_iter24.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter26 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter26 = ap_enable_reg_pp0_iter25.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter27 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter27 = ap_enable_reg_pp0_iter26.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter28 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter28 = ap_enable_reg_pp0_iter27.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter29 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter29 = ap_enable_reg_pp0_iter28.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter30 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter30 = ap_enable_reg_pp0_iter29.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter31 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter31 = ap_enable_reg_pp0_iter30.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter32 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter32 = ap_enable_reg_pp0_iter31.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_enable_reg_pp0_iter32 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_209_p2.read()))) {
        indvar_flatten_reg_175 = indvar_flatten_next_fu_214_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        indvar_flatten_reg_175 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_209_p2.read()))) {
        iter_i_reg_186 = iter_fu_239_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        iter_i_reg_186 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        bound_reg_316 = bound_fu_203_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten_reg_321 = exitcond_flatten_fu_209_p2.read();
        exitcond_flatten_reg_321_pp0_iter1_reg = exitcond_flatten_reg_321.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        exitcond_flatten_reg_321_pp0_iter10_reg = exitcond_flatten_reg_321_pp0_iter9_reg.read();
        exitcond_flatten_reg_321_pp0_iter11_reg = exitcond_flatten_reg_321_pp0_iter10_reg.read();
        exitcond_flatten_reg_321_pp0_iter12_reg = exitcond_flatten_reg_321_pp0_iter11_reg.read();
        exitcond_flatten_reg_321_pp0_iter13_reg = exitcond_flatten_reg_321_pp0_iter12_reg.read();
        exitcond_flatten_reg_321_pp0_iter14_reg = exitcond_flatten_reg_321_pp0_iter13_reg.read();
        exitcond_flatten_reg_321_pp0_iter15_reg = exitcond_flatten_reg_321_pp0_iter14_reg.read();
        exitcond_flatten_reg_321_pp0_iter16_reg = exitcond_flatten_reg_321_pp0_iter15_reg.read();
        exitcond_flatten_reg_321_pp0_iter17_reg = exitcond_flatten_reg_321_pp0_iter16_reg.read();
        exitcond_flatten_reg_321_pp0_iter18_reg = exitcond_flatten_reg_321_pp0_iter17_reg.read();
        exitcond_flatten_reg_321_pp0_iter19_reg = exitcond_flatten_reg_321_pp0_iter18_reg.read();
        exitcond_flatten_reg_321_pp0_iter20_reg = exitcond_flatten_reg_321_pp0_iter19_reg.read();
        exitcond_flatten_reg_321_pp0_iter21_reg = exitcond_flatten_reg_321_pp0_iter20_reg.read();
        exitcond_flatten_reg_321_pp0_iter22_reg = exitcond_flatten_reg_321_pp0_iter21_reg.read();
        exitcond_flatten_reg_321_pp0_iter23_reg = exitcond_flatten_reg_321_pp0_iter22_reg.read();
        exitcond_flatten_reg_321_pp0_iter24_reg = exitcond_flatten_reg_321_pp0_iter23_reg.read();
        exitcond_flatten_reg_321_pp0_iter25_reg = exitcond_flatten_reg_321_pp0_iter24_reg.read();
        exitcond_flatten_reg_321_pp0_iter26_reg = exitcond_flatten_reg_321_pp0_iter25_reg.read();
        exitcond_flatten_reg_321_pp0_iter27_reg = exitcond_flatten_reg_321_pp0_iter26_reg.read();
        exitcond_flatten_reg_321_pp0_iter28_reg = exitcond_flatten_reg_321_pp0_iter27_reg.read();
        exitcond_flatten_reg_321_pp0_iter29_reg = exitcond_flatten_reg_321_pp0_iter28_reg.read();
        exitcond_flatten_reg_321_pp0_iter2_reg = exitcond_flatten_reg_321_pp0_iter1_reg.read();
        exitcond_flatten_reg_321_pp0_iter30_reg = exitcond_flatten_reg_321_pp0_iter29_reg.read();
        exitcond_flatten_reg_321_pp0_iter31_reg = exitcond_flatten_reg_321_pp0_iter30_reg.read();
        exitcond_flatten_reg_321_pp0_iter3_reg = exitcond_flatten_reg_321_pp0_iter2_reg.read();
        exitcond_flatten_reg_321_pp0_iter4_reg = exitcond_flatten_reg_321_pp0_iter3_reg.read();
        exitcond_flatten_reg_321_pp0_iter5_reg = exitcond_flatten_reg_321_pp0_iter4_reg.read();
        exitcond_flatten_reg_321_pp0_iter6_reg = exitcond_flatten_reg_321_pp0_iter5_reg.read();
        exitcond_flatten_reg_321_pp0_iter7_reg = exitcond_flatten_reg_321_pp0_iter6_reg.read();
        exitcond_flatten_reg_321_pp0_iter8_reg = exitcond_flatten_reg_321_pp0_iter7_reg.read();
        exitcond_flatten_reg_321_pp0_iter9_reg = exitcond_flatten_reg_321_pp0_iter8_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_2_iter_c_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_2_iter_r_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_2_iter_c_V_s_full_n.read())))) {
        tmp_V_101_reg_305 = in_proc_2_iter_c_V_V_dout.read();
        tmp_V_105_reg_311 = in_proc_2_iter_r_V_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_321_pp0_iter30_reg.read()))) {
        tmp_V_104_reg_349 = tmp_V_104_fu_291_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(tmp_i_reg_330.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_V_fu_132 = sum_V_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_209_p2.read()))) {
        tmp_i_reg_330 = tmp_i_fu_233_p2.read();
    }
}

void softmax_divide_preci::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void softmax_divide_preci::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void softmax_divide_preci::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void softmax_divide_preci::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[3];
}

void softmax_divide_preci::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(tmp_i_reg_330.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, sum_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_321_pp0_iter1_reg.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_proc_2_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter32.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_321_pp0_iter31_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_write_V_V_full_n.read())));
}

void softmax_divide_preci::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(tmp_i_reg_330.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, sum_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_321_pp0_iter1_reg.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_proc_2_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter32.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_321_pp0_iter31_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_write_V_V_full_n.read())));
}

void softmax_divide_preci::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(tmp_i_reg_330.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, sum_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_321_pp0_iter1_reg.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_proc_2_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter32.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_321_pp0_iter31_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_write_V_V_full_n.read())));
}

void softmax_divide_preci::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_2_iter_c_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_2_iter_r_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_2_iter_c_V_s_full_n.read()));
}

void softmax_divide_preci::thread_ap_block_state10_pp0_stage0_iter7() {
    ap_block_state10_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state11_pp0_stage0_iter8() {
    ap_block_state11_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state12_pp0_stage0_iter9() {
    ap_block_state12_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state13_pp0_stage0_iter10() {
    ap_block_state13_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state14_pp0_stage0_iter11() {
    ap_block_state14_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state15_pp0_stage0_iter12() {
    ap_block_state15_pp0_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state16_pp0_stage0_iter13() {
    ap_block_state16_pp0_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state17_pp0_stage0_iter14() {
    ap_block_state17_pp0_stage0_iter14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state18_pp0_stage0_iter15() {
    ap_block_state18_pp0_stage0_iter15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state19_pp0_stage0_iter16() {
    ap_block_state19_pp0_stage0_iter16 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state20_pp0_stage0_iter17() {
    ap_block_state20_pp0_stage0_iter17 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state21_pp0_stage0_iter18() {
    ap_block_state21_pp0_stage0_iter18 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state22_pp0_stage0_iter19() {
    ap_block_state22_pp0_stage0_iter19 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state23_pp0_stage0_iter20() {
    ap_block_state23_pp0_stage0_iter20 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state24_pp0_stage0_iter21() {
    ap_block_state24_pp0_stage0_iter21 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state25_pp0_stage0_iter22() {
    ap_block_state25_pp0_stage0_iter22 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state26_pp0_stage0_iter23() {
    ap_block_state26_pp0_stage0_iter23 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state27_pp0_stage0_iter24() {
    ap_block_state27_pp0_stage0_iter24 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state28_pp0_stage0_iter25() {
    ap_block_state28_pp0_stage0_iter25 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state29_pp0_stage0_iter26() {
    ap_block_state29_pp0_stage0_iter26 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state30_pp0_stage0_iter27() {
    ap_block_state30_pp0_stage0_iter27 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state31_pp0_stage0_iter28() {
    ap_block_state31_pp0_stage0_iter28 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state32_pp0_stage0_iter29() {
    ap_block_state32_pp0_stage0_iter29 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state33_pp0_stage0_iter30() {
    ap_block_state33_pp0_stage0_iter30 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state34_pp0_stage0_iter31() {
    ap_block_state34_pp0_stage0_iter31 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state35_pp0_stage0_iter32() {
    ap_block_state35_pp0_stage0_iter32 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_321_pp0_iter31_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_write_V_V_full_n.read()));
}

void softmax_divide_preci::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = (esl_seteq<1,1,1>(tmp_i_reg_330.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, sum_V_V_empty_n.read()));
}

void softmax_divide_preci::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = (esl_seteq<1,1,1>(exitcond_flatten_reg_321_pp0_iter1_reg.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_proc_2_V_V_empty_n.read()));
}

void softmax_divide_preci::thread_ap_block_state6_pp0_stage0_iter3() {
    ap_block_state6_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state7_pp0_stage0_iter4() {
    ap_block_state7_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state8_pp0_stage0_iter5() {
    ap_block_state8_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_block_state9_pp0_stage0_iter6() {
    ap_block_state9_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_divide_preci::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_209_p2.read())) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void softmax_divide_preci::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void softmax_divide_preci::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void softmax_divide_preci::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void softmax_divide_preci::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter16.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter17.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter19.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter20.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter21.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter22.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter23.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter24.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter25.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter26.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter27.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter28.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter29.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter30.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter31.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter32.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void softmax_divide_preci::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void softmax_divide_preci::thread_bound_fu_203_p0() {
    bound_fu_203_p0 =  (sc_lv<32>) (bound_fu_203_p00.read());
}

void softmax_divide_preci::thread_bound_fu_203_p00() {
    bound_fu_203_p00 = esl_zext<64,32>(tmp_V_101_reg_305.read());
}

void softmax_divide_preci::thread_bound_fu_203_p1() {
    bound_fu_203_p1 =  (sc_lv<32>) (bound_fu_203_p10.read());
}

void softmax_divide_preci::thread_bound_fu_203_p10() {
    bound_fu_203_p10 = esl_zext<64,32>(tmp_V_105_reg_311.read());
}

void softmax_divide_preci::thread_bound_fu_203_p2() {
    bound_fu_203_p2 = (!bound_fu_203_p0.read().is_01() || !bound_fu_203_p1.read().is_01())? sc_lv<64>(): sc_biguint<32>(bound_fu_203_p0.read()) * sc_biguint<32>(bound_fu_203_p1.read());
}

void softmax_divide_preci::thread_exitcond_flatten_fu_209_p2() {
    exitcond_flatten_fu_209_p2 = (!indvar_flatten_reg_175.read().is_01() || !bound_reg_316.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_175.read() == bound_reg_316.read());
}

void softmax_divide_preci::thread_exitcond_i2_fu_220_p2() {
    exitcond_i2_fu_220_p2 = (!iter_i_reg_186.read().is_01() || !tmp_V_101_reg_305.read().is_01())? sc_lv<1>(): sc_lv<1>(iter_i_reg_186.read() == tmp_V_101_reg_305.read());
}

void softmax_divide_preci::thread_grp_fu_265_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_265_ce = ap_const_logic_1;
    } else {
        grp_fu_265_ce = ap_const_logic_0;
    }
}

void softmax_divide_preci::thread_grp_fu_265_p0() {
    grp_fu_265_p0 =  (sc_lv<26>) (grp_fu_265_p00.read());
}

void softmax_divide_preci::thread_grp_fu_265_p00() {
    grp_fu_265_p00 = esl_zext<32,24>(p_2_i_fu_253_p3.read());
}

void softmax_divide_preci::thread_in_proc_2_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_321_pp0_iter1_reg.read(), ap_const_lv1_0))) {
        in_proc_2_V_V_blk_n = in_proc_2_V_V_empty_n.read();
    } else {
        in_proc_2_V_V_blk_n = ap_const_logic_1;
    }
}

void softmax_divide_preci::thread_in_proc_2_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_321_pp0_iter1_reg.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_proc_2_V_V_read = ap_const_logic_1;
    } else {
        in_proc_2_V_V_read = ap_const_logic_0;
    }
}

void softmax_divide_preci::thread_in_proc_2_iter_c_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        in_proc_2_iter_c_V_V_blk_n = in_proc_2_iter_c_V_V_empty_n.read();
    } else {
        in_proc_2_iter_c_V_V_blk_n = ap_const_logic_1;
    }
}

void softmax_divide_preci::thread_in_proc_2_iter_c_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_2_iter_c_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_2_iter_r_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_2_iter_c_V_s_full_n.read())))) {
        in_proc_2_iter_c_V_V_read = ap_const_logic_1;
    } else {
        in_proc_2_iter_c_V_V_read = ap_const_logic_0;
    }
}

void softmax_divide_preci::thread_in_proc_2_iter_r_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        in_proc_2_iter_r_V_V_blk_n = in_proc_2_iter_r_V_V_empty_n.read();
    } else {
        in_proc_2_iter_r_V_V_blk_n = ap_const_logic_1;
    }
}

void softmax_divide_preci::thread_in_proc_2_iter_r_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_2_iter_c_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_2_iter_r_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_2_iter_c_V_s_full_n.read())))) {
        in_proc_2_iter_r_V_V_read = ap_const_logic_1;
    } else {
        in_proc_2_iter_r_V_V_read = ap_const_logic_0;
    }
}

void softmax_divide_preci::thread_in_write_2_iter_c_V_s_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        in_write_2_iter_c_V_s_blk_n = in_write_2_iter_c_V_s_full_n.read();
    } else {
        in_write_2_iter_c_V_s_blk_n = ap_const_logic_1;
    }
}

void softmax_divide_preci::thread_in_write_2_iter_c_V_s_din() {
    in_write_2_iter_c_V_s_din = in_proc_2_iter_c_V_V_dout.read();
}

void softmax_divide_preci::thread_in_write_2_iter_c_V_s_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_2_iter_c_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_2_iter_r_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_2_iter_c_V_s_full_n.read())))) {
        in_write_2_iter_c_V_s_write = ap_const_logic_1;
    } else {
        in_write_2_iter_c_V_s_write = ap_const_logic_0;
    }
}

void softmax_divide_preci::thread_in_write_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter32.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_321_pp0_iter31_reg.read()))) {
        in_write_V_V_blk_n = in_write_V_V_full_n.read();
    } else {
        in_write_V_V_blk_n = ap_const_logic_1;
    }
}

void softmax_divide_preci::thread_in_write_V_V_din() {
    in_write_V_V_din = tmp_V_104_reg_349.read();
}

void softmax_divide_preci::thread_in_write_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter32.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_321_pp0_iter31_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_write_V_V_write = ap_const_logic_1;
    } else {
        in_write_V_V_write = ap_const_logic_0;
    }
}

void softmax_divide_preci::thread_indvar_flatten_next_fu_214_p2() {
    indvar_flatten_next_fu_214_p2 = (!indvar_flatten_reg_175.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(indvar_flatten_reg_175.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void softmax_divide_preci::thread_iter_fu_239_p2() {
    iter_fu_239_p2 = (!ap_const_lv32_1.is_01() || !iter_i_mid2_fu_225_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(iter_i_mid2_fu_225_p3.read()));
}

void softmax_divide_preci::thread_iter_i_mid2_fu_225_p3() {
    iter_i_mid2_fu_225_p3 = (!exitcond_i2_fu_220_p2.read()[0].is_01())? sc_lv<32>(): ((exitcond_i2_fu_220_p2.read()[0].to_bool())? ap_const_lv32_0: iter_i_reg_186.read());
}

void softmax_divide_preci::thread_p_2_i_fu_253_p3() {
    p_2_i_fu_253_p3 = esl_concat<16,8>(in_proc_2_V_V_dout.read(), ap_const_lv8_0);
}

void softmax_divide_preci::thread_p_3_i_fu_271_p4() {
    p_3_i_fu_271_p4 = grp_fu_265_p2.read().range(31, 8);
}

void softmax_divide_preci::thread_sum_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_i_reg_330.read(), ap_const_lv1_1))) {
        sum_V_V_blk_n = sum_V_V_empty_n.read();
    } else {
        sum_V_V_blk_n = ap_const_logic_1;
    }
}

void softmax_divide_preci::thread_sum_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(tmp_i_reg_330.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        sum_V_V_read = ap_const_logic_1;
    } else {
        sum_V_V_read = ap_const_logic_0;
    }
}

void softmax_divide_preci::thread_tmp_41_i_fu_281_p2() {
    tmp_41_i_fu_281_p2 = (!p_3_i_fu_271_p4.read().is_01() || !ap_const_lv24_0.is_01())? sc_lv<1>(): sc_lv<1>(p_3_i_fu_271_p4.read() == ap_const_lv24_0);
}

void softmax_divide_preci::thread_tmp_V_104_fu_291_p3() {
    tmp_V_104_fu_291_p3 = (!tmp_41_i_fu_281_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_41_i_fu_281_p2.read()[0].to_bool())? tmp_fu_287_p1.read(): ap_const_lv8_FF);
}

void softmax_divide_preci::thread_tmp_fu_287_p1() {
    tmp_fu_287_p1 = grp_fu_265_p2.read().range(8-1, 0);
}

void softmax_divide_preci::thread_tmp_i_fu_233_p2() {
    tmp_i_fu_233_p2 = (!iter_i_mid2_fu_225_p3.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(iter_i_mid2_fu_225_p3.read() == ap_const_lv32_0);
}

void softmax_divide_preci::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_2_iter_c_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_2_iter_r_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_2_iter_c_V_s_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter32.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter31.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_209_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter32.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter31.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_209_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state36;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

