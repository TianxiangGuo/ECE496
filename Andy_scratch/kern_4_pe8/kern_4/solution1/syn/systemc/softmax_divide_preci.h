// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _softmax_divide_preci_HH_
#define _softmax_divide_preci_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "kernel_4_sdiv_26ns_32ns_32_30_1.h"

namespace ap_rtl {

struct softmax_divide_preci : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > in_proc_2_iter_c_V_V_dout;
    sc_in< sc_logic > in_proc_2_iter_c_V_V_empty_n;
    sc_out< sc_logic > in_proc_2_iter_c_V_V_read;
    sc_in< sc_lv<32> > in_proc_2_iter_r_V_V_dout;
    sc_in< sc_logic > in_proc_2_iter_r_V_V_empty_n;
    sc_out< sc_logic > in_proc_2_iter_r_V_V_read;
    sc_out< sc_lv<32> > in_write_2_iter_c_V_s_din;
    sc_in< sc_logic > in_write_2_iter_c_V_s_full_n;
    sc_out< sc_logic > in_write_2_iter_c_V_s_write;
    sc_in< sc_lv<32> > sum_V_V_dout;
    sc_in< sc_logic > sum_V_V_empty_n;
    sc_out< sc_logic > sum_V_V_read;
    sc_in< sc_lv<16> > in_proc_2_V_V_dout;
    sc_in< sc_logic > in_proc_2_V_V_empty_n;
    sc_out< sc_logic > in_proc_2_V_V_read;
    sc_out< sc_lv<8> > in_write_V_V_din;
    sc_in< sc_logic > in_write_V_V_full_n;
    sc_out< sc_logic > in_write_V_V_write;


    // Module declarations
    softmax_divide_preci(sc_module_name name);
    SC_HAS_PROCESS(softmax_divide_preci);

    ~softmax_divide_preci();

    sc_trace_file* mVcdFile;

    kernel_4_sdiv_26ns_32ns_32_30_1<1,30,26,32,32>* kernel_4_sdiv_26ns_32ns_32_30_1_U1926;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > in_proc_2_iter_c_V_V_blk_n;
    sc_signal< sc_logic > in_proc_2_iter_r_V_V_blk_n;
    sc_signal< sc_logic > in_write_2_iter_c_V_s_blk_n;
    sc_signal< sc_logic > sum_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > tmp_i_reg_330;
    sc_signal< sc_logic > in_proc_2_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter1_reg;
    sc_signal< sc_logic > in_write_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter32;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter31_reg;
    sc_signal< sc_lv<64> > indvar_flatten_reg_175;
    sc_signal< sc_lv<32> > iter_i_reg_186;
    sc_signal< sc_lv<32> > tmp_V_101_reg_305;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > tmp_V_105_reg_311;
    sc_signal< sc_lv<64> > bound_fu_203_p2;
    sc_signal< sc_lv<64> > bound_reg_316;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_209_p2;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter11;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter12;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter13;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter14;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter15;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter16;
    sc_signal< bool > ap_block_state20_pp0_stage0_iter17;
    sc_signal< bool > ap_block_state21_pp0_stage0_iter18;
    sc_signal< bool > ap_block_state22_pp0_stage0_iter19;
    sc_signal< bool > ap_block_state23_pp0_stage0_iter20;
    sc_signal< bool > ap_block_state24_pp0_stage0_iter21;
    sc_signal< bool > ap_block_state25_pp0_stage0_iter22;
    sc_signal< bool > ap_block_state26_pp0_stage0_iter23;
    sc_signal< bool > ap_block_state27_pp0_stage0_iter24;
    sc_signal< bool > ap_block_state28_pp0_stage0_iter25;
    sc_signal< bool > ap_block_state29_pp0_stage0_iter26;
    sc_signal< bool > ap_block_state30_pp0_stage0_iter27;
    sc_signal< bool > ap_block_state31_pp0_stage0_iter28;
    sc_signal< bool > ap_block_state32_pp0_stage0_iter29;
    sc_signal< bool > ap_block_state33_pp0_stage0_iter30;
    sc_signal< bool > ap_block_state34_pp0_stage0_iter31;
    sc_signal< bool > ap_block_state35_pp0_stage0_iter32;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter2_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter3_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter4_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter5_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter6_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter7_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter8_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter9_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter10_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter11_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter12_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter13_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter14_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter15_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter16_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter17_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter18_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter19_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter20_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter21_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter22_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter23_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter24_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter25_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter26_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter27_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter28_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter29_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_321_pp0_iter30_reg;
    sc_signal< sc_lv<64> > indvar_flatten_next_fu_214_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > tmp_i_fu_233_p2;
    sc_signal< sc_lv<32> > iter_fu_239_p2;
    sc_signal< sc_lv<8> > tmp_V_104_fu_291_p3;
    sc_signal< sc_lv<8> > tmp_V_104_reg_349;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter11;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter12;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter13;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter14;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter15;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter16;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter17;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter18;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter19;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter20;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter21;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter22;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter23;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter24;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter25;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter26;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter27;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter28;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter29;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter30;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter31;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > tmp_V_fu_132;
    sc_signal< sc_lv<32> > bound_fu_203_p0;
    sc_signal< sc_lv<32> > bound_fu_203_p1;
    sc_signal< sc_lv<1> > exitcond_i2_fu_220_p2;
    sc_signal< sc_lv<32> > iter_i_mid2_fu_225_p3;
    sc_signal< sc_lv<24> > p_2_i_fu_253_p3;
    sc_signal< sc_lv<26> > grp_fu_265_p0;
    sc_signal< sc_lv<32> > grp_fu_265_p2;
    sc_signal< sc_lv<24> > p_3_i_fu_271_p4;
    sc_signal< sc_lv<1> > tmp_41_i_fu_281_p2;
    sc_signal< sc_lv<8> > tmp_fu_287_p1;
    sc_signal< sc_logic > grp_fu_265_ce;
    sc_signal< sc_logic > ap_CS_fsm_state36;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<64> > bound_fu_203_p00;
    sc_signal< sc_lv<64> > bound_fu_203_p10;
    sc_signal< sc_lv<32> > grp_fu_265_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state36;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state36();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp0_stage0_iter7();
    void thread_ap_block_state11_pp0_stage0_iter8();
    void thread_ap_block_state12_pp0_stage0_iter9();
    void thread_ap_block_state13_pp0_stage0_iter10();
    void thread_ap_block_state14_pp0_stage0_iter11();
    void thread_ap_block_state15_pp0_stage0_iter12();
    void thread_ap_block_state16_pp0_stage0_iter13();
    void thread_ap_block_state17_pp0_stage0_iter14();
    void thread_ap_block_state18_pp0_stage0_iter15();
    void thread_ap_block_state19_pp0_stage0_iter16();
    void thread_ap_block_state20_pp0_stage0_iter17();
    void thread_ap_block_state21_pp0_stage0_iter18();
    void thread_ap_block_state22_pp0_stage0_iter19();
    void thread_ap_block_state23_pp0_stage0_iter20();
    void thread_ap_block_state24_pp0_stage0_iter21();
    void thread_ap_block_state25_pp0_stage0_iter22();
    void thread_ap_block_state26_pp0_stage0_iter23();
    void thread_ap_block_state27_pp0_stage0_iter24();
    void thread_ap_block_state28_pp0_stage0_iter25();
    void thread_ap_block_state29_pp0_stage0_iter26();
    void thread_ap_block_state30_pp0_stage0_iter27();
    void thread_ap_block_state31_pp0_stage0_iter28();
    void thread_ap_block_state32_pp0_stage0_iter29();
    void thread_ap_block_state33_pp0_stage0_iter30();
    void thread_ap_block_state34_pp0_stage0_iter31();
    void thread_ap_block_state35_pp0_stage0_iter32();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state6_pp0_stage0_iter3();
    void thread_ap_block_state7_pp0_stage0_iter4();
    void thread_ap_block_state8_pp0_stage0_iter5();
    void thread_ap_block_state9_pp0_stage0_iter6();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_bound_fu_203_p0();
    void thread_bound_fu_203_p00();
    void thread_bound_fu_203_p1();
    void thread_bound_fu_203_p10();
    void thread_bound_fu_203_p2();
    void thread_exitcond_flatten_fu_209_p2();
    void thread_exitcond_i2_fu_220_p2();
    void thread_grp_fu_265_ce();
    void thread_grp_fu_265_p0();
    void thread_grp_fu_265_p00();
    void thread_in_proc_2_V_V_blk_n();
    void thread_in_proc_2_V_V_read();
    void thread_in_proc_2_iter_c_V_V_blk_n();
    void thread_in_proc_2_iter_c_V_V_read();
    void thread_in_proc_2_iter_r_V_V_blk_n();
    void thread_in_proc_2_iter_r_V_V_read();
    void thread_in_write_2_iter_c_V_s_blk_n();
    void thread_in_write_2_iter_c_V_s_din();
    void thread_in_write_2_iter_c_V_s_write();
    void thread_in_write_V_V_blk_n();
    void thread_in_write_V_V_din();
    void thread_in_write_V_V_write();
    void thread_indvar_flatten_next_fu_214_p2();
    void thread_iter_fu_239_p2();
    void thread_iter_i_mid2_fu_225_p3();
    void thread_p_2_i_fu_253_p3();
    void thread_p_3_i_fu_271_p4();
    void thread_sum_V_V_blk_n();
    void thread_sum_V_V_read();
    void thread_tmp_41_i_fu_281_p2();
    void thread_tmp_V_104_fu_291_p3();
    void thread_tmp_fu_287_p1();
    void thread_tmp_i_fu_233_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
