// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "AttentionMatmulQuant.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic AttentionMatmulQuant::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic AttentionMatmulQuant::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> AttentionMatmulQuant::ap_ST_fsm_state1 = "1";
const sc_lv<4> AttentionMatmulQuant::ap_ST_fsm_state2 = "10";
const sc_lv<4> AttentionMatmulQuant::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> AttentionMatmulQuant::ap_ST_fsm_state5 = "1000";
const bool AttentionMatmulQuant::ap_const_boolean_1 = true;
const sc_lv<32> AttentionMatmulQuant::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> AttentionMatmulQuant::ap_const_lv32_2 = "10";
const bool AttentionMatmulQuant::ap_const_boolean_0 = false;
const sc_lv<1> AttentionMatmulQuant::ap_const_lv1_1 = "1";
const sc_lv<32> AttentionMatmulQuant::ap_const_lv32_1 = "1";
const sc_lv<1> AttentionMatmulQuant::ap_const_lv1_0 = "0";
const sc_lv<512> AttentionMatmulQuant::ap_const_lv512_lc_1 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> AttentionMatmulQuant::ap_const_lv32_4 = "100";
const sc_lv<32> AttentionMatmulQuant::ap_const_lv32_1F = "11111";
const sc_lv<28> AttentionMatmulQuant::ap_const_lv28_0 = "0000000000000000000000000000";
const sc_lv<4> AttentionMatmulQuant::ap_const_lv4_0 = "0000";
const sc_lv<32> AttentionMatmulQuant::ap_const_lv32_10 = "10000";
const sc_lv<32> AttentionMatmulQuant::ap_const_lv32_3F = "111111";
const sc_lv<32> AttentionMatmulQuant::ap_const_lv32_3 = "11";

AttentionMatmulQuant::AttentionMatmulQuant(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Nc_2_fu_304_p1);
    sensitive << ( in_V_data_V1_dout );

    SC_METHOD(thread_Nc_fu_349_p3);
    sensitive << ( tmp_6_fu_339_p4 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_reg_514 );
    sensitive << ( in_V_id_V20_status );
    sensitive << ( out_V_id_V1_status );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_reg_514 );
    sensitive << ( in_V_id_V20_status );
    sensitive << ( out_V_id_V1_status );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_reg_514 );
    sensitive << ( in_V_id_V20_status );
    sensitive << ( out_V_id_V1_status );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( in_V_id_V20_status );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( tmp_7_reg_514 );
    sensitive << ( in_V_id_V20_status );
    sensitive << ( out_V_id_V1_status );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( exitcond_fu_400_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_exitcond_fu_400_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_reg_248 );
    sensitive << ( val_assign_reg_500 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_i_1_fu_405_p2);
    sensitive << ( i_reg_248 );

    SC_METHOD(thread_icmp_fu_322_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_id_V20_status );
    sensitive << ( tmp_22_fu_312_p4 );

    SC_METHOD(thread_in_V_data_V1_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_data_V1_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_7_reg_514 );

    SC_METHOD(thread_in_V_data_V1_read);
    sensitive << ( in_V_id_V20_update );

    SC_METHOD(thread_in_V_dest_V3_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_dest_V3_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_7_reg_514 );

    SC_METHOD(thread_in_V_dest_V3_read);
    sensitive << ( in_V_id_V20_update );

    SC_METHOD(thread_in_V_id_V20_status);
    sensitive << ( in_V_data_V1_empty_n );
    sensitive << ( in_V_id_V2_empty_n );
    sensitive << ( in_V_dest_V3_empty_n );
    sensitive << ( in_V_user_V4_empty_n );
    sensitive << ( in_V_last_V5_empty_n );

    SC_METHOD(thread_in_V_id_V20_update);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_reg_514 );
    sensitive << ( in_V_id_V20_status );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_V_id_V2_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_id_V2_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_7_reg_514 );

    SC_METHOD(thread_in_V_id_V2_read);
    sensitive << ( in_V_id_V20_update );

    SC_METHOD(thread_in_V_last_V5_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_last_V5_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_7_reg_514 );

    SC_METHOD(thread_in_V_last_V5_read);
    sensitive << ( in_V_id_V20_update );

    SC_METHOD(thread_in_V_user_V4_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_user_V4_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_7_reg_514 );

    SC_METHOD(thread_in_V_user_V4_read);
    sensitive << ( in_V_id_V20_update );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_out_V_data_V_blk_n);
    sensitive << ( out_V_data_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_7_reg_514 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_out_V_data_V_din);
    sensitive << ( in_V_data_V1_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_reg_514 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( p_Result_s_fu_388_p5 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_V_data_V_write);
    sensitive << ( out_V_id_V1_update );

    SC_METHOD(thread_out_V_dest_V_blk_n);
    sensitive << ( out_V_dest_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_7_reg_514 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_out_V_dest_V_din);
    sensitive << ( in_V_dest_V3_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_reg_514 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_dest_V_3_reg_466 );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( tmp_dest_V_fu_206 );

    SC_METHOD(thread_out_V_dest_V_write);
    sensitive << ( out_V_id_V1_update );

    SC_METHOD(thread_out_V_id_V1_status);
    sensitive << ( out_V_data_V_full_n );
    sensitive << ( out_V_id_V_full_n );
    sensitive << ( out_V_dest_V_full_n );
    sensitive << ( out_V_user_V_full_n );
    sensitive << ( out_V_last_V_full_n );

    SC_METHOD(thread_out_V_id_V1_update);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_reg_514 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_V_id_V_blk_n);
    sensitive << ( out_V_id_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_7_reg_514 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_out_V_id_V_din);
    sensitive << ( in_V_id_V2_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_reg_514 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_id_V_3_reg_461 );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( tmp_id_V_fu_210 );

    SC_METHOD(thread_out_V_id_V_write);
    sensitive << ( out_V_id_V1_update );

    SC_METHOD(thread_out_V_last_V_blk_n);
    sensitive << ( out_V_last_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_7_reg_514 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_out_V_last_V_din);
    sensitive << ( in_V_last_V5_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_reg_514 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_last_V_3_reg_476 );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( tmp_last_V_fu_198 );

    SC_METHOD(thread_out_V_last_V_write);
    sensitive << ( out_V_id_V1_update );

    SC_METHOD(thread_out_V_user_V_blk_n);
    sensitive << ( out_V_user_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_7_reg_514 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_out_V_user_V_din);
    sensitive << ( in_V_user_V4_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_reg_514 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_user_V_3_reg_471 );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( tmp_user_V_fu_202 );

    SC_METHOD(thread_out_V_user_V_write);
    sensitive << ( out_V_id_V1_update );

    SC_METHOD(thread_p_Result_s_fu_388_p5);
    sensitive << ( tmp_data_V_25_reg_456 );
    sensitive << ( tmp_fu_381_p3 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_sel_tmp1_fu_364_p2);
    sensitive << ( icmp_reg_489 );

    SC_METHOD(thread_sel_tmp2_fu_369_p2);
    sensitive << ( tmp_3_reg_495 );
    sensitive << ( sel_tmp1_fu_364_p2 );

    SC_METHOD(thread_sel_tmp_fu_357_p3);
    sensitive << ( icmp_reg_489 );
    sensitive << ( Nc_fu_349_p3 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp_21_fu_308_p1);
    sensitive << ( in_V_data_V1_dout );

    SC_METHOD(thread_tmp_22_fu_312_p4);
    sensitive << ( in_V_data_V1_dout );

    SC_METHOD(thread_tmp_3_fu_328_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_id_V20_status );
    sensitive << ( tmp_21_fu_308_p1 );

    SC_METHOD(thread_tmp_4_fu_334_p2);
    sensitive << ( Nc_2_reg_481 );

    SC_METHOD(thread_tmp_6_fu_339_p4);
    sensitive << ( tmp_4_fu_334_p2 );

    SC_METHOD(thread_tmp_7_fu_411_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_reg_248 );
    sensitive << ( Nc_2_reg_481 );
    sensitive << ( exitcond_fu_400_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_tmp_fu_381_p3);
    sensitive << ( Nc_2_reg_481 );
    sensitive << ( val_assign_fu_374_p3 );

    SC_METHOD(thread_val_assign_fu_374_p3);
    sensitive << ( Nc_2_reg_481 );
    sensitive << ( sel_tmp2_fu_369_p2 );
    sensitive << ( sel_tmp_fu_357_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( in_V_id_V20_status );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( exitcond_fu_400_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "AttentionMatmulQuant_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, in_V_data_V1_dout, "(port)in_V_data_V1_dout");
    sc_trace(mVcdFile, in_V_data_V1_empty_n, "(port)in_V_data_V1_empty_n");
    sc_trace(mVcdFile, in_V_data_V1_read, "(port)in_V_data_V1_read");
    sc_trace(mVcdFile, in_V_id_V2_dout, "(port)in_V_id_V2_dout");
    sc_trace(mVcdFile, in_V_id_V2_empty_n, "(port)in_V_id_V2_empty_n");
    sc_trace(mVcdFile, in_V_id_V2_read, "(port)in_V_id_V2_read");
    sc_trace(mVcdFile, in_V_dest_V3_dout, "(port)in_V_dest_V3_dout");
    sc_trace(mVcdFile, in_V_dest_V3_empty_n, "(port)in_V_dest_V3_empty_n");
    sc_trace(mVcdFile, in_V_dest_V3_read, "(port)in_V_dest_V3_read");
    sc_trace(mVcdFile, in_V_user_V4_dout, "(port)in_V_user_V4_dout");
    sc_trace(mVcdFile, in_V_user_V4_empty_n, "(port)in_V_user_V4_empty_n");
    sc_trace(mVcdFile, in_V_user_V4_read, "(port)in_V_user_V4_read");
    sc_trace(mVcdFile, in_V_last_V5_dout, "(port)in_V_last_V5_dout");
    sc_trace(mVcdFile, in_V_last_V5_empty_n, "(port)in_V_last_V5_empty_n");
    sc_trace(mVcdFile, in_V_last_V5_read, "(port)in_V_last_V5_read");
    sc_trace(mVcdFile, out_V_data_V_din, "(port)out_V_data_V_din");
    sc_trace(mVcdFile, out_V_data_V_full_n, "(port)out_V_data_V_full_n");
    sc_trace(mVcdFile, out_V_data_V_write, "(port)out_V_data_V_write");
    sc_trace(mVcdFile, out_V_id_V_din, "(port)out_V_id_V_din");
    sc_trace(mVcdFile, out_V_id_V_full_n, "(port)out_V_id_V_full_n");
    sc_trace(mVcdFile, out_V_id_V_write, "(port)out_V_id_V_write");
    sc_trace(mVcdFile, out_V_dest_V_din, "(port)out_V_dest_V_din");
    sc_trace(mVcdFile, out_V_dest_V_full_n, "(port)out_V_dest_V_full_n");
    sc_trace(mVcdFile, out_V_dest_V_write, "(port)out_V_dest_V_write");
    sc_trace(mVcdFile, out_V_user_V_din, "(port)out_V_user_V_din");
    sc_trace(mVcdFile, out_V_user_V_full_n, "(port)out_V_user_V_full_n");
    sc_trace(mVcdFile, out_V_user_V_write, "(port)out_V_user_V_write");
    sc_trace(mVcdFile, out_V_last_V_din, "(port)out_V_last_V_din");
    sc_trace(mVcdFile, out_V_last_V_full_n, "(port)out_V_last_V_full_n");
    sc_trace(mVcdFile, out_V_last_V_write, "(port)out_V_last_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, in_V_data_V1_blk_n, "in_V_data_V1_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_7_reg_514, "tmp_7_reg_514");
    sc_trace(mVcdFile, in_V_id_V2_blk_n, "in_V_id_V2_blk_n");
    sc_trace(mVcdFile, in_V_dest_V3_blk_n, "in_V_dest_V3_blk_n");
    sc_trace(mVcdFile, in_V_user_V4_blk_n, "in_V_user_V4_blk_n");
    sc_trace(mVcdFile, in_V_last_V5_blk_n, "in_V_last_V5_blk_n");
    sc_trace(mVcdFile, out_V_data_V_blk_n, "out_V_data_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, out_V_id_V_blk_n, "out_V_id_V_blk_n");
    sc_trace(mVcdFile, out_V_dest_V_blk_n, "out_V_dest_V_blk_n");
    sc_trace(mVcdFile, out_V_user_V_blk_n, "out_V_user_V_blk_n");
    sc_trace(mVcdFile, out_V_last_V_blk_n, "out_V_last_V_blk_n");
    sc_trace(mVcdFile, i_reg_248, "i_reg_248");
    sc_trace(mVcdFile, tmp_data_V_25_reg_456, "tmp_data_V_25_reg_456");
    sc_trace(mVcdFile, in_V_id_V20_status, "in_V_id_V20_status");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, tmp_id_V_3_reg_461, "tmp_id_V_3_reg_461");
    sc_trace(mVcdFile, tmp_dest_V_3_reg_466, "tmp_dest_V_3_reg_466");
    sc_trace(mVcdFile, tmp_user_V_3_reg_471, "tmp_user_V_3_reg_471");
    sc_trace(mVcdFile, tmp_last_V_3_reg_476, "tmp_last_V_3_reg_476");
    sc_trace(mVcdFile, Nc_2_fu_304_p1, "Nc_2_fu_304_p1");
    sc_trace(mVcdFile, Nc_2_reg_481, "Nc_2_reg_481");
    sc_trace(mVcdFile, icmp_fu_322_p2, "icmp_fu_322_p2");
    sc_trace(mVcdFile, icmp_reg_489, "icmp_reg_489");
    sc_trace(mVcdFile, tmp_3_fu_328_p2, "tmp_3_fu_328_p2");
    sc_trace(mVcdFile, tmp_3_reg_495, "tmp_3_reg_495");
    sc_trace(mVcdFile, val_assign_fu_374_p3, "val_assign_fu_374_p3");
    sc_trace(mVcdFile, val_assign_reg_500, "val_assign_reg_500");
    sc_trace(mVcdFile, out_V_id_V1_status, "out_V_id_V1_status");
    sc_trace(mVcdFile, exitcond_fu_400_p2, "exitcond_fu_400_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_1_fu_405_p2, "i_1_fu_405_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_7_fu_411_p2, "tmp_7_fu_411_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, in_V_id_V20_update, "in_V_id_V20_update");
    sc_trace(mVcdFile, out_V_id_V1_update, "out_V_id_V1_update");
    sc_trace(mVcdFile, p_Result_s_fu_388_p5, "p_Result_s_fu_388_p5");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_last_V_fu_198, "tmp_last_V_fu_198");
    sc_trace(mVcdFile, tmp_user_V_fu_202, "tmp_user_V_fu_202");
    sc_trace(mVcdFile, tmp_dest_V_fu_206, "tmp_dest_V_fu_206");
    sc_trace(mVcdFile, tmp_id_V_fu_210, "tmp_id_V_fu_210");
    sc_trace(mVcdFile, tmp_22_fu_312_p4, "tmp_22_fu_312_p4");
    sc_trace(mVcdFile, tmp_21_fu_308_p1, "tmp_21_fu_308_p1");
    sc_trace(mVcdFile, tmp_4_fu_334_p2, "tmp_4_fu_334_p2");
    sc_trace(mVcdFile, tmp_6_fu_339_p4, "tmp_6_fu_339_p4");
    sc_trace(mVcdFile, Nc_fu_349_p3, "Nc_fu_349_p3");
    sc_trace(mVcdFile, sel_tmp1_fu_364_p2, "sel_tmp1_fu_364_p2");
    sc_trace(mVcdFile, sel_tmp2_fu_369_p2, "sel_tmp2_fu_369_p2");
    sc_trace(mVcdFile, sel_tmp_fu_357_p3, "sel_tmp_fu_357_p3");
    sc_trace(mVcdFile, tmp_fu_381_p3, "tmp_fu_381_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

AttentionMatmulQuant::~AttentionMatmulQuant() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void AttentionMatmulQuant::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(out_V_id_V1_status.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(out_V_id_V1_status.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_400_p2.read()))) {
        i_reg_248 = i_1_fu_405_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(out_V_id_V1_status.read(), ap_const_logic_1))) {
        i_reg_248 = ap_const_lv32_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V20_status.read())))) {
        Nc_2_reg_481 = Nc_2_fu_304_p1.read();
        icmp_reg_489 = icmp_fu_322_p2.read();
        tmp_3_reg_495 = tmp_3_fu_328_p2.read();
        tmp_data_V_25_reg_456 = in_V_data_V1_dout.read();
        tmp_dest_V_3_reg_466 = in_V_dest_V3_dout.read();
        tmp_id_V_3_reg_461 = in_V_id_V2_dout.read();
        tmp_last_V_3_reg_476 = in_V_last_V5_dout.read();
        tmp_user_V_3_reg_471 = in_V_user_V4_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_400_p2.read()))) {
        tmp_7_reg_514 = tmp_7_fu_411_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V20_status.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        tmp_dest_V_fu_206 = in_V_dest_V3_dout.read();
        tmp_id_V_fu_210 = in_V_id_V2_dout.read();
        tmp_last_V_fu_198 = in_V_last_V5_dout.read();
        tmp_user_V_fu_202 = in_V_user_V4_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(out_V_id_V1_status.read(), ap_const_logic_1))) {
        val_assign_reg_500 = val_assign_fu_374_p3.read();
    }
}

void AttentionMatmulQuant::thread_Nc_2_fu_304_p1() {
    Nc_2_fu_304_p1 = in_V_data_V1_dout.read().range(32-1, 0);
}

void AttentionMatmulQuant::thread_Nc_fu_349_p3() {
    Nc_fu_349_p3 = esl_concat<28,4>(tmp_6_fu_339_p4.read(), ap_const_lv4_0);
}

void AttentionMatmulQuant::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void AttentionMatmulQuant::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void AttentionMatmulQuant::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void AttentionMatmulQuant::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[3];
}

void AttentionMatmulQuant::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void AttentionMatmulQuant::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())) || 
  (esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V20_status.read())) || 
  (esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read()))));
}

void AttentionMatmulQuant::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())) || 
  (esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V20_status.read())) || 
  (esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read()))));
}

void AttentionMatmulQuant::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())) || 
  (esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V20_status.read())) || 
  (esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read()))));
}

void AttentionMatmulQuant::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V20_status.read()));
}

void AttentionMatmulQuant::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void AttentionMatmulQuant::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())) || (esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V20_status.read())) || (esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())));
}

void AttentionMatmulQuant::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_400_p2.read())) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void AttentionMatmulQuant::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void AttentionMatmulQuant::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void AttentionMatmulQuant::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void AttentionMatmulQuant::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void AttentionMatmulQuant::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void AttentionMatmulQuant::thread_exitcond_fu_400_p2() {
    exitcond_fu_400_p2 = (!i_reg_248.read().is_01() || !val_assign_reg_500.read().is_01())? sc_lv<1>(): sc_lv<1>(i_reg_248.read() == val_assign_reg_500.read());
}

void AttentionMatmulQuant::thread_i_1_fu_405_p2() {
    i_1_fu_405_p2 = (!i_reg_248.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_reg_248.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void AttentionMatmulQuant::thread_icmp_fu_322_p2() {
    icmp_fu_322_p2 = (!tmp_22_fu_312_p4.read().is_01() || !ap_const_lv28_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_22_fu_312_p4.read() == ap_const_lv28_0);
}

void AttentionMatmulQuant::thread_in_V_data_V1_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1)))) {
        in_V_data_V1_blk_n = in_V_data_V1_empty_n.read();
    } else {
        in_V_data_V1_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulQuant::thread_in_V_data_V1_read() {
    in_V_data_V1_read = in_V_id_V20_update.read();
}

void AttentionMatmulQuant::thread_in_V_dest_V3_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1)))) {
        in_V_dest_V3_blk_n = in_V_dest_V3_empty_n.read();
    } else {
        in_V_dest_V3_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulQuant::thread_in_V_dest_V3_read() {
    in_V_dest_V3_read = in_V_id_V20_update.read();
}

void AttentionMatmulQuant::thread_in_V_id_V20_status() {
    in_V_id_V20_status = (in_V_data_V1_empty_n.read() & in_V_id_V2_empty_n.read() & in_V_dest_V3_empty_n.read() & in_V_user_V4_empty_n.read() & in_V_last_V5_empty_n.read());
}

void AttentionMatmulQuant::thread_in_V_id_V20_update() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V20_status.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        in_V_id_V20_update = ap_const_logic_1;
    } else {
        in_V_id_V20_update = ap_const_logic_0;
    }
}

void AttentionMatmulQuant::thread_in_V_id_V2_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1)))) {
        in_V_id_V2_blk_n = in_V_id_V2_empty_n.read();
    } else {
        in_V_id_V2_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulQuant::thread_in_V_id_V2_read() {
    in_V_id_V2_read = in_V_id_V20_update.read();
}

void AttentionMatmulQuant::thread_in_V_last_V5_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1)))) {
        in_V_last_V5_blk_n = in_V_last_V5_empty_n.read();
    } else {
        in_V_last_V5_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulQuant::thread_in_V_last_V5_read() {
    in_V_last_V5_read = in_V_id_V20_update.read();
}

void AttentionMatmulQuant::thread_in_V_user_V4_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1)))) {
        in_V_user_V4_blk_n = in_V_user_V4_empty_n.read();
    } else {
        in_V_user_V4_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulQuant::thread_in_V_user_V4_read() {
    in_V_user_V4_read = in_V_id_V20_update.read();
}

void AttentionMatmulQuant::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void AttentionMatmulQuant::thread_out_V_data_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_0)))) {
        out_V_data_V_blk_n = out_V_data_V_full_n.read();
    } else {
        out_V_data_V_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulQuant::thread_out_V_data_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_V_data_V_din = in_V_data_V1_dout.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_V_data_V_din = ap_const_lv512_lc_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(out_V_id_V1_status.read(), ap_const_logic_1))) {
        out_V_data_V_din = p_Result_s_fu_388_p5.read();
    } else {
        out_V_data_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void AttentionMatmulQuant::thread_out_V_data_V_write() {
    out_V_data_V_write = out_V_id_V1_update.read();
}

void AttentionMatmulQuant::thread_out_V_dest_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_0)))) {
        out_V_dest_V_blk_n = out_V_dest_V_full_n.read();
    } else {
        out_V_dest_V_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulQuant::thread_out_V_dest_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_V_dest_V_din = in_V_dest_V3_dout.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_V_dest_V_din = tmp_dest_V_fu_206.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(out_V_id_V1_status.read(), ap_const_logic_1))) {
        out_V_dest_V_din = tmp_dest_V_3_reg_466.read();
    } else {
        out_V_dest_V_din =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void AttentionMatmulQuant::thread_out_V_dest_V_write() {
    out_V_dest_V_write = out_V_id_V1_update.read();
}

void AttentionMatmulQuant::thread_out_V_id_V1_status() {
    out_V_id_V1_status = (out_V_data_V_full_n.read() & out_V_id_V_full_n.read() & out_V_dest_V_full_n.read() & out_V_user_V_full_n.read() & out_V_last_V_full_n.read());
}

void AttentionMatmulQuant::thread_out_V_id_V1_update() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(out_V_id_V1_status.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        out_V_id_V1_update = ap_const_logic_1;
    } else {
        out_V_id_V1_update = ap_const_logic_0;
    }
}

void AttentionMatmulQuant::thread_out_V_id_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_0)))) {
        out_V_id_V_blk_n = out_V_id_V_full_n.read();
    } else {
        out_V_id_V_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulQuant::thread_out_V_id_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_V_id_V_din = in_V_id_V2_dout.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_V_id_V_din = tmp_id_V_fu_210.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(out_V_id_V1_status.read(), ap_const_logic_1))) {
        out_V_id_V_din = tmp_id_V_3_reg_461.read();
    } else {
        out_V_id_V_din =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void AttentionMatmulQuant::thread_out_V_id_V_write() {
    out_V_id_V_write = out_V_id_V1_update.read();
}

void AttentionMatmulQuant::thread_out_V_last_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_0)))) {
        out_V_last_V_blk_n = out_V_last_V_full_n.read();
    } else {
        out_V_last_V_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulQuant::thread_out_V_last_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_V_last_V_din = in_V_last_V5_dout.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_V_last_V_din = tmp_last_V_fu_198.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(out_V_id_V1_status.read(), ap_const_logic_1))) {
        out_V_last_V_din = tmp_last_V_3_reg_476.read();
    } else {
        out_V_last_V_din =  (sc_lv<1>) ("X");
    }
}

void AttentionMatmulQuant::thread_out_V_last_V_write() {
    out_V_last_V_write = out_V_id_V1_update.read();
}

void AttentionMatmulQuant::thread_out_V_user_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_0)))) {
        out_V_user_V_blk_n = out_V_user_V_full_n.read();
    } else {
        out_V_user_V_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulQuant::thread_out_V_user_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_V_user_V_din = in_V_user_V4_dout.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(tmp_7_reg_514.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_V_user_V_din = tmp_user_V_fu_202.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(out_V_id_V1_status.read(), ap_const_logic_1))) {
        out_V_user_V_din = tmp_user_V_3_reg_471.read();
    } else {
        out_V_user_V_din =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void AttentionMatmulQuant::thread_out_V_user_V_write() {
    out_V_user_V_write = out_V_id_V1_update.read();
}

void AttentionMatmulQuant::thread_p_Result_s_fu_388_p5() {
    p_Result_s_fu_388_p5 = esl_partset<512,512,64,32,32>(tmp_data_V_25_reg_456.read(), tmp_fu_381_p3.read(), ap_const_lv32_0, ap_const_lv32_3F);
}

void AttentionMatmulQuant::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void AttentionMatmulQuant::thread_sel_tmp1_fu_364_p2() {
    sel_tmp1_fu_364_p2 = (icmp_reg_489.read() ^ ap_const_lv1_1);
}

void AttentionMatmulQuant::thread_sel_tmp2_fu_369_p2() {
    sel_tmp2_fu_369_p2 = (tmp_3_reg_495.read() & sel_tmp1_fu_364_p2.read());
}

void AttentionMatmulQuant::thread_sel_tmp_fu_357_p3() {
    sel_tmp_fu_357_p3 = (!icmp_reg_489.read()[0].is_01())? sc_lv<32>(): ((icmp_reg_489.read()[0].to_bool())? ap_const_lv32_10: Nc_fu_349_p3.read());
}

void AttentionMatmulQuant::thread_start_out() {
    start_out = real_start.read();
}

void AttentionMatmulQuant::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void AttentionMatmulQuant::thread_tmp_21_fu_308_p1() {
    tmp_21_fu_308_p1 = in_V_data_V1_dout.read().range(4-1, 0);
}

void AttentionMatmulQuant::thread_tmp_22_fu_312_p4() {
    tmp_22_fu_312_p4 = in_V_data_V1_dout.read().range(31, 4);
}

void AttentionMatmulQuant::thread_tmp_3_fu_328_p2() {
    tmp_3_fu_328_p2 = (!tmp_21_fu_308_p1.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_21_fu_308_p1.read() == ap_const_lv4_0);
}

void AttentionMatmulQuant::thread_tmp_4_fu_334_p2() {
    tmp_4_fu_334_p2 = (!ap_const_lv32_10.is_01() || !Nc_2_reg_481.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_10) + sc_biguint<32>(Nc_2_reg_481.read()));
}

void AttentionMatmulQuant::thread_tmp_6_fu_339_p4() {
    tmp_6_fu_339_p4 = tmp_4_fu_334_p2.read().range(31, 4);
}

void AttentionMatmulQuant::thread_tmp_7_fu_411_p2() {
    tmp_7_fu_411_p2 = (!i_reg_248.read().is_01() || !Nc_2_reg_481.read().is_01())? sc_lv<1>(): (sc_biguint<32>(i_reg_248.read()) < sc_biguint<32>(Nc_2_reg_481.read()));
}

void AttentionMatmulQuant::thread_tmp_fu_381_p3() {
    tmp_fu_381_p3 = esl_concat<32,32>(Nc_2_reg_481.read(), val_assign_fu_374_p3.read());
}

void AttentionMatmulQuant::thread_val_assign_fu_374_p3() {
    val_assign_fu_374_p3 = (!sel_tmp2_fu_369_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_fu_369_p2.read()[0].to_bool())? Nc_2_reg_481.read(): sel_tmp_fu_357_p3.read());
}

void AttentionMatmulQuant::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V20_status.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(out_V_id_V1_status.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_400_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_400_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<4>) ("XXXX");
            break;
    }
}

}

