// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _softmax_read_data_HH_
#define _softmax_read_data_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct softmax_read_data : public sc_module {
    // Port declarations 40
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<512> > in_V_data_V_dout;
    sc_in< sc_logic > in_V_data_V_empty_n;
    sc_out< sc_logic > in_V_data_V_read;
    sc_in< sc_lv<8> > in_V_id_V_dout;
    sc_in< sc_logic > in_V_id_V_empty_n;
    sc_out< sc_logic > in_V_id_V_read;
    sc_in< sc_lv<8> > in_V_dest_V_dout;
    sc_in< sc_logic > in_V_dest_V_empty_n;
    sc_out< sc_logic > in_V_dest_V_read;
    sc_in< sc_lv<16> > in_V_user_V_dout;
    sc_in< sc_logic > in_V_user_V_empty_n;
    sc_out< sc_logic > in_V_user_V_read;
    sc_in< sc_lv<1> > in_V_last_V_dout;
    sc_in< sc_logic > in_V_last_V_empty_n;
    sc_out< sc_logic > in_V_last_V_read;
    sc_out< sc_lv<96> > in_write_n_V_V_din;
    sc_in< sc_logic > in_write_n_V_V_full_n;
    sc_out< sc_logic > in_write_n_V_V_write;
    sc_out< sc_lv<32> > in_sub_max_r_V_V_din;
    sc_in< sc_logic > in_sub_max_r_V_V_full_n;
    sc_out< sc_logic > in_sub_max_r_V_V_write;
    sc_out< sc_lv<32> > in_sub_max_c_V_V_din;
    sc_in< sc_logic > in_sub_max_c_V_V_full_n;
    sc_out< sc_logic > in_sub_max_c_V_V_write;
    sc_out< sc_lv<32> > max_input_V_V_din;
    sc_in< sc_logic > max_input_V_V_full_n;
    sc_out< sc_logic > max_input_V_V_write;
    sc_out< sc_lv<32> > in_sub_max_V_V_din;
    sc_in< sc_logic > in_sub_max_V_V_full_n;
    sc_out< sc_logic > in_sub_max_V_V_write;


    // Module declarations
    softmax_read_data(sc_module_name name);
    SC_HAS_PROCESS(softmax_read_data);

    ~softmax_read_data();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<19> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > in_V_data_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_809;
    sc_signal< sc_logic > in_V_id_V_blk_n;
    sc_signal< sc_logic > in_V_dest_V_blk_n;
    sc_signal< sc_logic > in_V_user_V_blk_n;
    sc_signal< sc_logic > in_V_last_V_blk_n;
    sc_signal< sc_logic > in_write_n_V_V_blk_n;
    sc_signal< sc_logic > in_sub_max_r_V_V_blk_n;
    sc_signal< sc_logic > in_sub_max_c_V_V_blk_n;
    sc_signal< sc_logic > max_input_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<1> > tmp_21_i_reg_824;
    sc_signal< sc_logic > in_sub_max_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< bool > ap_block_pp0_stage4;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage5;
    sc_signal< bool > ap_block_pp0_stage5;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage6;
    sc_signal< bool > ap_block_pp0_stage6;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage7;
    sc_signal< bool > ap_block_pp0_stage7;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage8;
    sc_signal< bool > ap_block_pp0_stage8;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage9;
    sc_signal< bool > ap_block_pp0_stage9;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage10;
    sc_signal< bool > ap_block_pp0_stage10;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage11;
    sc_signal< bool > ap_block_pp0_stage11;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage12;
    sc_signal< bool > ap_block_pp0_stage12;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage13;
    sc_signal< bool > ap_block_pp0_stage13;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage14;
    sc_signal< bool > ap_block_pp0_stage14;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage15;
    sc_signal< bool > ap_block_pp0_stage15;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<60> > indvar_flatten_reg_299;
    sc_signal< sc_lv<28> > packet_i_reg_310;
    sc_signal< sc_lv<32> > num_batches_fu_336_p1;
    sc_signal< sc_lv<32> > num_batches_reg_787;
    sc_signal< sc_logic > in_V_id_V0_status;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<28> > tmp_1_reg_792;
    sc_signal< sc_lv<29> > tmp_15_i_fu_359_p2;
    sc_signal< sc_lv<29> > tmp_15_i_reg_799;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<60> > bound_fu_371_p2;
    sc_signal< sc_lv<60> > bound_reg_804;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_377_p2;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<60> > indvar_flatten_next_fu_382_p2;
    sc_signal< sc_lv<60> > indvar_flatten_next_reg_813;
    sc_signal< sc_lv<28> > packet_i_mid2_fu_393_p3;
    sc_signal< sc_lv<28> > packet_i_mid2_reg_818;
    sc_signal< sc_lv<1> > tmp_21_i_fu_405_p2;
    sc_signal< sc_lv<32> > tmp_V_79_fu_410_p1;
    sc_signal< sc_lv<32> > tmp_V_79_reg_828;
    sc_signal< bool > ap_block_state4_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > buffer_1_V_reg_834;
    sc_signal< sc_lv<32> > buffer_2_V_reg_841;
    sc_signal< sc_lv<32> > buffer_3_V_reg_848;
    sc_signal< sc_lv<32> > buffer_4_V_reg_855;
    sc_signal< sc_lv<32> > buffer_5_V_reg_862;
    sc_signal< sc_lv<32> > buffer_6_V_reg_869;
    sc_signal< sc_lv<32> > buffer_7_V_reg_876;
    sc_signal< sc_lv<32> > buffer_8_V_reg_883;
    sc_signal< sc_lv<32> > buffer_9_V_reg_890;
    sc_signal< sc_lv<32> > buffer_10_V_reg_897;
    sc_signal< sc_lv<32> > buffer_11_V_reg_904;
    sc_signal< sc_lv<32> > buffer_12_V_reg_911;
    sc_signal< sc_lv<32> > buffer_13_V_reg_918;
    sc_signal< sc_lv<32> > buffer_14_V_reg_925;
    sc_signal< sc_lv<32> > buffer_15_V_reg_932;
    sc_signal< sc_lv<1> > tmp_17_i_fu_555_p2;
    sc_signal< sc_lv<1> > tmp_17_i_reg_939;
    sc_signal< bool > ap_block_state5_pp0_stage2_iter0;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<32> > max_3_0_V_fu_702_p3;
    sc_signal< sc_lv<32> > max_3_0_V_reg_944;
    sc_signal< sc_lv<32> > max_val_V_fu_716_p3;
    sc_signal< sc_lv<32> > max_val_V_reg_951;
    sc_signal< sc_lv<28> > packet_fu_776_p2;
    sc_signal< sc_lv<28> > packet_reg_958;
    sc_signal< bool > ap_block_state18_pp0_stage15_iter0;
    sc_signal< bool > ap_block_pp0_stage15_11001;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< bool > ap_block_pp0_stage15_subdone;
    sc_signal< sc_lv<60> > ap_phi_mux_indvar_flatten_phi_fu_303_p4;
    sc_signal< sc_lv<28> > ap_phi_mux_packet_i_phi_fu_314_p4;
    sc_signal< sc_logic > in_V_id_V0_update;
    sc_signal< bool > ap_predicate_op116_write_state6;
    sc_signal< bool > ap_block_state6_pp0_stage3_iter0;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< bool > ap_block_state7_pp0_stage4_iter0;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< bool > ap_block_state8_pp0_stage5_iter0;
    sc_signal< bool > ap_block_pp0_stage5_11001;
    sc_signal< bool > ap_block_state9_pp0_stage6_iter0;
    sc_signal< bool > ap_block_pp0_stage6_11001;
    sc_signal< bool > ap_block_state10_pp0_stage7_iter0;
    sc_signal< bool > ap_block_pp0_stage7_11001;
    sc_signal< bool > ap_block_state11_pp0_stage8_iter0;
    sc_signal< bool > ap_block_pp0_stage8_11001;
    sc_signal< bool > ap_block_state12_pp0_stage9_iter0;
    sc_signal< bool > ap_block_pp0_stage9_11001;
    sc_signal< bool > ap_block_state13_pp0_stage10_iter0;
    sc_signal< bool > ap_block_pp0_stage10_11001;
    sc_signal< bool > ap_block_state14_pp0_stage11_iter0;
    sc_signal< bool > ap_block_pp0_stage11_11001;
    sc_signal< bool > ap_block_state15_pp0_stage12_iter0;
    sc_signal< bool > ap_block_pp0_stage12_11001;
    sc_signal< bool > ap_block_state16_pp0_stage13_iter0;
    sc_signal< bool > ap_block_pp0_stage13_11001;
    sc_signal< bool > ap_block_state17_pp0_stage14_iter0;
    sc_signal< bool > ap_block_pp0_stage14_11001;
    sc_signal< bool > ap_block_pp0_stage1_01001;
    sc_signal< bool > ap_block_pp0_stage2_01001;
    sc_signal< bool > ap_block_pp0_stage3_01001;
    sc_signal< bool > ap_block_pp0_stage4_01001;
    sc_signal< bool > ap_block_pp0_stage5_01001;
    sc_signal< bool > ap_block_pp0_stage6_01001;
    sc_signal< bool > ap_block_pp0_stage7_01001;
    sc_signal< bool > ap_block_pp0_stage8_01001;
    sc_signal< bool > ap_block_pp0_stage9_01001;
    sc_signal< bool > ap_block_pp0_stage10_01001;
    sc_signal< bool > ap_block_pp0_stage11_01001;
    sc_signal< bool > ap_block_pp0_stage12_01001;
    sc_signal< bool > ap_block_pp0_stage13_01001;
    sc_signal< bool > ap_block_pp0_stage14_01001;
    sc_signal< bool > ap_block_pp0_stage15_01001;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > tmp_V_95_fu_762_p3;
    sc_signal< sc_lv<32> > tmp_V_fu_246;
    sc_signal< sc_lv<29> > tmp_cast423_i_fu_356_p1;
    sc_signal< sc_lv<28> > bound_fu_371_p0;
    sc_signal< sc_lv<32> > bound_fu_371_p1;
    sc_signal< sc_lv<1> > exitcond2_fu_388_p2;
    sc_signal< sc_lv<29> > packet_cast_i_fu_401_p1;
    sc_signal< sc_lv<1> > tmp_25_i_fu_560_p2;
    sc_signal< sc_lv<1> > tmp_25_1_i_fu_570_p2;
    sc_signal< sc_lv<1> > tmp_25_2_i_fu_580_p2;
    sc_signal< sc_lv<1> > tmp_25_3_i_fu_590_p2;
    sc_signal< sc_lv<1> > tmp_25_4_i_fu_600_p2;
    sc_signal< sc_lv<1> > tmp_25_5_i_fu_610_p2;
    sc_signal< sc_lv<1> > tmp_25_6_i_fu_620_p2;
    sc_signal< sc_lv<1> > tmp_25_7_i_fu_630_p2;
    sc_signal< sc_lv<32> > max_1_0_V_fu_564_p3;
    sc_signal< sc_lv<32> > max_1_1_V_fu_574_p3;
    sc_signal< sc_lv<1> > tmp_34_i_fu_640_p2;
    sc_signal< sc_lv<32> > max_1_2_V_fu_584_p3;
    sc_signal< sc_lv<32> > max_1_3_V_fu_594_p3;
    sc_signal< sc_lv<1> > tmp_34_1_i_fu_654_p2;
    sc_signal< sc_lv<32> > max_1_4_V_fu_604_p3;
    sc_signal< sc_lv<32> > max_1_5_V_fu_614_p3;
    sc_signal< sc_lv<1> > tmp_34_2_i_fu_668_p2;
    sc_signal< sc_lv<32> > max_1_6_V_fu_624_p3;
    sc_signal< sc_lv<32> > max_1_7_V_fu_634_p3;
    sc_signal< sc_lv<1> > tmp_34_3_i_fu_682_p2;
    sc_signal< sc_lv<32> > max_2_0_V_fu_646_p3;
    sc_signal< sc_lv<32> > max_2_1_V_fu_660_p3;
    sc_signal< sc_lv<1> > tmp_42_i_fu_696_p2;
    sc_signal< sc_lv<32> > max_2_2_V_fu_674_p3;
    sc_signal< sc_lv<32> > max_2_3_V_fu_688_p3;
    sc_signal< sc_lv<1> > tmp_42_1_i_fu_710_p2;
    sc_signal< sc_lv<32> > p_0200_1_i_fu_727_p3;
    sc_signal< sc_lv<1> > tmp_19_i_fu_738_p2;
    sc_signal< sc_lv<1> > tmp_20_i_fu_750_p2;
    sc_signal< sc_lv<1> > tmp_18_i_fu_734_p2;
    sc_signal< sc_lv<32> > storemerge9_0200_1_fu_743_p3;
    sc_signal< sc_lv<32> > max_val_V_1_0200_1_fu_755_p3;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<19> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< bool > ap_block_pp0_stage5_subdone;
    sc_signal< bool > ap_block_pp0_stage6_subdone;
    sc_signal< bool > ap_block_pp0_stage7_subdone;
    sc_signal< bool > ap_block_pp0_stage8_subdone;
    sc_signal< bool > ap_block_pp0_stage9_subdone;
    sc_signal< bool > ap_block_pp0_stage10_subdone;
    sc_signal< bool > ap_block_pp0_stage11_subdone;
    sc_signal< bool > ap_block_pp0_stage12_subdone;
    sc_signal< bool > ap_block_pp0_stage13_subdone;
    sc_signal< bool > ap_block_pp0_stage14_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<60> > bound_fu_371_p00;
    sc_signal< sc_lv<60> > bound_fu_371_p10;
    sc_signal< bool > ap_condition_554;
    sc_signal< bool > ap_condition_559;
    sc_signal< bool > ap_condition_564;
    sc_signal< bool > ap_condition_569;
    sc_signal< bool > ap_condition_574;
    sc_signal< bool > ap_condition_579;
    sc_signal< bool > ap_condition_584;
    sc_signal< bool > ap_condition_589;
    sc_signal< bool > ap_condition_594;
    sc_signal< bool > ap_condition_599;
    sc_signal< bool > ap_condition_604;
    sc_signal< bool > ap_condition_609;
    sc_signal< bool > ap_condition_614;
    sc_signal< bool > ap_condition_619;
    sc_signal< bool > ap_condition_624;
    sc_signal< bool > ap_condition_629;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<19> ap_ST_fsm_state1;
    static const sc_lv<19> ap_ST_fsm_state2;
    static const sc_lv<19> ap_ST_fsm_pp0_stage0;
    static const sc_lv<19> ap_ST_fsm_pp0_stage1;
    static const sc_lv<19> ap_ST_fsm_pp0_stage2;
    static const sc_lv<19> ap_ST_fsm_pp0_stage3;
    static const sc_lv<19> ap_ST_fsm_pp0_stage4;
    static const sc_lv<19> ap_ST_fsm_pp0_stage5;
    static const sc_lv<19> ap_ST_fsm_pp0_stage6;
    static const sc_lv<19> ap_ST_fsm_pp0_stage7;
    static const sc_lv<19> ap_ST_fsm_pp0_stage8;
    static const sc_lv<19> ap_ST_fsm_pp0_stage9;
    static const sc_lv<19> ap_ST_fsm_pp0_stage10;
    static const sc_lv<19> ap_ST_fsm_pp0_stage11;
    static const sc_lv<19> ap_ST_fsm_pp0_stage12;
    static const sc_lv<19> ap_ST_fsm_pp0_stage13;
    static const sc_lv<19> ap_ST_fsm_pp0_stage14;
    static const sc_lv<19> ap_ST_fsm_pp0_stage15;
    static const sc_lv<19> ap_ST_fsm_state20;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<60> ap_const_lv60_0;
    static const sc_lv<28> ap_const_lv28_0;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_24;
    static const sc_lv<29> ap_const_lv29_1FFFFFFF;
    static const sc_lv<60> ap_const_lv60_1;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_5F;
    static const sc_lv<32> ap_const_lv32_60;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<32> ap_const_lv32_80;
    static const sc_lv<32> ap_const_lv32_9F;
    static const sc_lv<32> ap_const_lv32_A0;
    static const sc_lv<32> ap_const_lv32_BF;
    static const sc_lv<32> ap_const_lv32_C0;
    static const sc_lv<32> ap_const_lv32_DF;
    static const sc_lv<32> ap_const_lv32_E0;
    static const sc_lv<32> ap_const_lv32_FF;
    static const sc_lv<32> ap_const_lv32_100;
    static const sc_lv<32> ap_const_lv32_11F;
    static const sc_lv<32> ap_const_lv32_120;
    static const sc_lv<32> ap_const_lv32_13F;
    static const sc_lv<32> ap_const_lv32_140;
    static const sc_lv<32> ap_const_lv32_15F;
    static const sc_lv<32> ap_const_lv32_160;
    static const sc_lv<32> ap_const_lv32_17F;
    static const sc_lv<32> ap_const_lv32_180;
    static const sc_lv<32> ap_const_lv32_19F;
    static const sc_lv<32> ap_const_lv32_1A0;
    static const sc_lv<32> ap_const_lv32_1BF;
    static const sc_lv<32> ap_const_lv32_1C0;
    static const sc_lv<32> ap_const_lv32_1DF;
    static const sc_lv<32> ap_const_lv32_1E0;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<32> ap_const_lv32_80000000;
    static const sc_lv<28> ap_const_lv28_1;
    static const sc_lv<32> ap_const_lv32_12;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage10();
    void thread_ap_CS_fsm_pp0_stage11();
    void thread_ap_CS_fsm_pp0_stage12();
    void thread_ap_CS_fsm_pp0_stage13();
    void thread_ap_CS_fsm_pp0_stage14();
    void thread_ap_CS_fsm_pp0_stage15();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_pp0_stage5();
    void thread_ap_CS_fsm_pp0_stage6();
    void thread_ap_CS_fsm_pp0_stage7();
    void thread_ap_CS_fsm_pp0_stage8();
    void thread_ap_CS_fsm_pp0_stage9();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage10();
    void thread_ap_block_pp0_stage10_01001();
    void thread_ap_block_pp0_stage10_11001();
    void thread_ap_block_pp0_stage10_subdone();
    void thread_ap_block_pp0_stage11();
    void thread_ap_block_pp0_stage11_01001();
    void thread_ap_block_pp0_stage11_11001();
    void thread_ap_block_pp0_stage11_subdone();
    void thread_ap_block_pp0_stage12();
    void thread_ap_block_pp0_stage12_01001();
    void thread_ap_block_pp0_stage12_11001();
    void thread_ap_block_pp0_stage12_subdone();
    void thread_ap_block_pp0_stage13();
    void thread_ap_block_pp0_stage13_01001();
    void thread_ap_block_pp0_stage13_11001();
    void thread_ap_block_pp0_stage13_subdone();
    void thread_ap_block_pp0_stage14();
    void thread_ap_block_pp0_stage14_01001();
    void thread_ap_block_pp0_stage14_11001();
    void thread_ap_block_pp0_stage14_subdone();
    void thread_ap_block_pp0_stage15();
    void thread_ap_block_pp0_stage15_01001();
    void thread_ap_block_pp0_stage15_11001();
    void thread_ap_block_pp0_stage15_subdone();
    void thread_ap_block_pp0_stage1_01001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_01001();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_01001();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4();
    void thread_ap_block_pp0_stage4_01001();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_pp0_stage5();
    void thread_ap_block_pp0_stage5_01001();
    void thread_ap_block_pp0_stage5_11001();
    void thread_ap_block_pp0_stage5_subdone();
    void thread_ap_block_pp0_stage6();
    void thread_ap_block_pp0_stage6_01001();
    void thread_ap_block_pp0_stage6_11001();
    void thread_ap_block_pp0_stage6_subdone();
    void thread_ap_block_pp0_stage7();
    void thread_ap_block_pp0_stage7_01001();
    void thread_ap_block_pp0_stage7_11001();
    void thread_ap_block_pp0_stage7_subdone();
    void thread_ap_block_pp0_stage8();
    void thread_ap_block_pp0_stage8_01001();
    void thread_ap_block_pp0_stage8_11001();
    void thread_ap_block_pp0_stage8_subdone();
    void thread_ap_block_pp0_stage9();
    void thread_ap_block_pp0_stage9_01001();
    void thread_ap_block_pp0_stage9_11001();
    void thread_ap_block_pp0_stage9_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp0_stage7_iter0();
    void thread_ap_block_state11_pp0_stage8_iter0();
    void thread_ap_block_state12_pp0_stage9_iter0();
    void thread_ap_block_state13_pp0_stage10_iter0();
    void thread_ap_block_state14_pp0_stage11_iter0();
    void thread_ap_block_state15_pp0_stage12_iter0();
    void thread_ap_block_state16_pp0_stage13_iter0();
    void thread_ap_block_state17_pp0_stage14_iter0();
    void thread_ap_block_state18_pp0_stage15_iter0();
    void thread_ap_block_state19_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage1_iter0();
    void thread_ap_block_state5_pp0_stage2_iter0();
    void thread_ap_block_state6_pp0_stage3_iter0();
    void thread_ap_block_state7_pp0_stage4_iter0();
    void thread_ap_block_state8_pp0_stage5_iter0();
    void thread_ap_block_state9_pp0_stage6_iter0();
    void thread_ap_condition_554();
    void thread_ap_condition_559();
    void thread_ap_condition_564();
    void thread_ap_condition_569();
    void thread_ap_condition_574();
    void thread_ap_condition_579();
    void thread_ap_condition_584();
    void thread_ap_condition_589();
    void thread_ap_condition_594();
    void thread_ap_condition_599();
    void thread_ap_condition_604();
    void thread_ap_condition_609();
    void thread_ap_condition_614();
    void thread_ap_condition_619();
    void thread_ap_condition_624();
    void thread_ap_condition_629();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_303_p4();
    void thread_ap_phi_mux_packet_i_phi_fu_314_p4();
    void thread_ap_predicate_op116_write_state6();
    void thread_ap_ready();
    void thread_bound_fu_371_p0();
    void thread_bound_fu_371_p00();
    void thread_bound_fu_371_p1();
    void thread_bound_fu_371_p10();
    void thread_bound_fu_371_p2();
    void thread_exitcond2_fu_388_p2();
    void thread_exitcond_flatten_fu_377_p2();
    void thread_in_V_data_V_blk_n();
    void thread_in_V_data_V_read();
    void thread_in_V_dest_V_blk_n();
    void thread_in_V_dest_V_read();
    void thread_in_V_id_V0_status();
    void thread_in_V_id_V0_update();
    void thread_in_V_id_V_blk_n();
    void thread_in_V_id_V_read();
    void thread_in_V_last_V_blk_n();
    void thread_in_V_last_V_read();
    void thread_in_V_user_V_blk_n();
    void thread_in_V_user_V_read();
    void thread_in_sub_max_V_V_blk_n();
    void thread_in_sub_max_V_V_din();
    void thread_in_sub_max_V_V_write();
    void thread_in_sub_max_c_V_V_blk_n();
    void thread_in_sub_max_c_V_V_din();
    void thread_in_sub_max_c_V_V_write();
    void thread_in_sub_max_r_V_V_blk_n();
    void thread_in_sub_max_r_V_V_din();
    void thread_in_sub_max_r_V_V_write();
    void thread_in_write_n_V_V_blk_n();
    void thread_in_write_n_V_V_din();
    void thread_in_write_n_V_V_write();
    void thread_indvar_flatten_next_fu_382_p2();
    void thread_internal_ap_ready();
    void thread_max_1_0_V_fu_564_p3();
    void thread_max_1_1_V_fu_574_p3();
    void thread_max_1_2_V_fu_584_p3();
    void thread_max_1_3_V_fu_594_p3();
    void thread_max_1_4_V_fu_604_p3();
    void thread_max_1_5_V_fu_614_p3();
    void thread_max_1_6_V_fu_624_p3();
    void thread_max_1_7_V_fu_634_p3();
    void thread_max_2_0_V_fu_646_p3();
    void thread_max_2_1_V_fu_660_p3();
    void thread_max_2_2_V_fu_674_p3();
    void thread_max_2_3_V_fu_688_p3();
    void thread_max_3_0_V_fu_702_p3();
    void thread_max_input_V_V_blk_n();
    void thread_max_input_V_V_din();
    void thread_max_input_V_V_write();
    void thread_max_val_V_1_0200_1_fu_755_p3();
    void thread_max_val_V_fu_716_p3();
    void thread_num_batches_fu_336_p1();
    void thread_p_0200_1_i_fu_727_p3();
    void thread_packet_cast_i_fu_401_p1();
    void thread_packet_fu_776_p2();
    void thread_packet_i_mid2_fu_393_p3();
    void thread_real_start();
    void thread_start_out();
    void thread_start_write();
    void thread_storemerge9_0200_1_fu_743_p3();
    void thread_tmp_15_i_fu_359_p2();
    void thread_tmp_17_i_fu_555_p2();
    void thread_tmp_18_i_fu_734_p2();
    void thread_tmp_19_i_fu_738_p2();
    void thread_tmp_20_i_fu_750_p2();
    void thread_tmp_21_i_fu_405_p2();
    void thread_tmp_25_1_i_fu_570_p2();
    void thread_tmp_25_2_i_fu_580_p2();
    void thread_tmp_25_3_i_fu_590_p2();
    void thread_tmp_25_4_i_fu_600_p2();
    void thread_tmp_25_5_i_fu_610_p2();
    void thread_tmp_25_6_i_fu_620_p2();
    void thread_tmp_25_7_i_fu_630_p2();
    void thread_tmp_25_i_fu_560_p2();
    void thread_tmp_34_1_i_fu_654_p2();
    void thread_tmp_34_2_i_fu_668_p2();
    void thread_tmp_34_3_i_fu_682_p2();
    void thread_tmp_34_i_fu_640_p2();
    void thread_tmp_42_1_i_fu_710_p2();
    void thread_tmp_42_i_fu_696_p2();
    void thread_tmp_V_79_fu_410_p1();
    void thread_tmp_V_95_fu_762_p3();
    void thread_tmp_cast423_i_fu_356_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
