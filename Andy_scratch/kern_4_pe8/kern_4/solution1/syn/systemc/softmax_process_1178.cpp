// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "softmax_process_1178.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic softmax_process_1178::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic softmax_process_1178::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> softmax_process_1178::ap_ST_fsm_state1 = "1";
const sc_lv<4> softmax_process_1178::ap_ST_fsm_state2 = "10";
const sc_lv<4> softmax_process_1178::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> softmax_process_1178::ap_ST_fsm_state12 = "1000";
const bool softmax_process_1178::ap_const_boolean_1 = true;
const sc_lv<32> softmax_process_1178::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> softmax_process_1178::ap_const_lv32_2 = "10";
const bool softmax_process_1178::ap_const_boolean_0 = false;
const sc_lv<1> softmax_process_1178::ap_const_lv1_0 = "0";
const sc_lv<32> softmax_process_1178::ap_const_lv32_1 = "1";
const sc_lv<1> softmax_process_1178::ap_const_lv1_1 = "1";
const sc_lv<64> softmax_process_1178::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> softmax_process_1178::ap_const_lv64_1 = "1";
const sc_lv<32> softmax_process_1178::ap_const_lv32_FFFFC694 = "11111111111111111100011010010100";
const sc_lv<65> softmax_process_1178::ap_const_lv65_10B7E6EC3 = "100001011011111100110111011000011";
const sc_lv<32> softmax_process_1178::ap_const_lv32_1F = "11111";
const sc_lv<65> softmax_process_1178::ap_const_lv65_0 = "00000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> softmax_process_1178::ap_const_lv32_29 = "101001";
const sc_lv<32> softmax_process_1178::ap_const_lv32_40 = "1000000";
const sc_lv<32> softmax_process_1178::ap_const_lv32_1EA = "111101010";
const sc_lv<33> softmax_process_1178::ap_const_lv33_778 = "11101111000";
const sc_lv<64> softmax_process_1178::ap_const_lv64_1544FF = "101010100010011111111";
const sc_lv<24> softmax_process_1178::ap_const_lv24_1E = "11110";
const sc_lv<32> softmax_process_1178::ap_const_lv32_3F = "111111";
const sc_lv<63> softmax_process_1178::ap_const_lv63_0 = "000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> softmax_process_1178::ap_const_lv32_3 = "11";

softmax_process_1178::softmax_process_1178(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( in_proc_1_V_V_empty_n );
    sensitive << ( in_quant_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_403 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( exitcond_flatten_reg_403_pp0_iter7_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( in_proc_1_V_V_empty_n );
    sensitive << ( in_quant_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_403 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( exitcond_flatten_reg_403_pp0_iter7_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( in_proc_1_V_V_empty_n );
    sensitive << ( in_quant_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_403 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( exitcond_flatten_reg_403_pp0_iter7_reg );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( in_proc_1_iter_c_V_V_empty_n );
    sensitive << ( in_proc_1_iter_r_V_V_empty_n );
    sensitive << ( in_quant_iter_r_V_V_full_n );
    sensitive << ( in_quant_iter_c_V_V_full_n );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter8);
    sensitive << ( in_quant_V_V_full_n );
    sensitive << ( exitcond_flatten_reg_403_pp0_iter7_reg );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( in_proc_1_V_V_empty_n );
    sensitive << ( exitcond_flatten_reg_403 );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter6);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( exitcond_flatten_fu_216_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_bound_fu_210_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( bound_fu_210_p00 );

    SC_METHOD(thread_bound_fu_210_p00);
    sensitive << ( tmp_V_96_reg_388 );

    SC_METHOD(thread_bound_fu_210_p1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( bound_fu_210_p10 );

    SC_METHOD(thread_bound_fu_210_p10);
    sensitive << ( tmp_V_reg_393 );

    SC_METHOD(thread_bound_fu_210_p2);
    sensitive << ( bound_fu_210_p0 );
    sensitive << ( bound_fu_210_p1 );

    SC_METHOD(thread_exitcond_flatten_fu_216_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_193 );
    sensitive << ( bound_reg_398 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_in_proc_1_V_V_blk_n);
    sensitive << ( in_proc_1_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_403 );

    SC_METHOD(thread_in_proc_1_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_403 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_proc_1_iter_c_V_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_proc_1_iter_c_V_V_empty_n );

    SC_METHOD(thread_in_proc_1_iter_c_V_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_proc_1_iter_c_V_V_empty_n );
    sensitive << ( in_proc_1_iter_r_V_V_empty_n );
    sensitive << ( in_quant_iter_r_V_V_full_n );
    sensitive << ( in_quant_iter_c_V_V_full_n );

    SC_METHOD(thread_in_proc_1_iter_r_V_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_proc_1_iter_r_V_V_empty_n );

    SC_METHOD(thread_in_proc_1_iter_r_V_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_proc_1_iter_c_V_V_empty_n );
    sensitive << ( in_proc_1_iter_r_V_V_empty_n );
    sensitive << ( in_quant_iter_r_V_V_full_n );
    sensitive << ( in_quant_iter_c_V_V_full_n );

    SC_METHOD(thread_in_quant_V_V_blk_n);
    sensitive << ( in_quant_V_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( exitcond_flatten_reg_403_pp0_iter7_reg );

    SC_METHOD(thread_in_quant_V_V_din);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( exitcond_flatten_reg_403_pp0_iter7_reg );
    sensitive << ( tmp_V_98_reg_465 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_in_quant_V_V_write);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( exitcond_flatten_reg_403_pp0_iter7_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_quant_iter_c_V_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_quant_iter_c_V_V_full_n );

    SC_METHOD(thread_in_quant_iter_c_V_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_proc_1_iter_c_V_V_dout );
    sensitive << ( in_proc_1_iter_c_V_V_empty_n );
    sensitive << ( in_proc_1_iter_r_V_V_empty_n );
    sensitive << ( in_quant_iter_r_V_V_full_n );
    sensitive << ( in_quant_iter_c_V_V_full_n );

    SC_METHOD(thread_in_quant_iter_c_V_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_proc_1_iter_c_V_V_empty_n );
    sensitive << ( in_proc_1_iter_r_V_V_empty_n );
    sensitive << ( in_quant_iter_r_V_V_full_n );
    sensitive << ( in_quant_iter_c_V_V_full_n );

    SC_METHOD(thread_in_quant_iter_r_V_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_quant_iter_r_V_V_full_n );

    SC_METHOD(thread_in_quant_iter_r_V_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_proc_1_iter_c_V_V_empty_n );
    sensitive << ( in_proc_1_iter_r_V_V_dout );
    sensitive << ( in_proc_1_iter_r_V_V_empty_n );
    sensitive << ( in_quant_iter_r_V_V_full_n );
    sensitive << ( in_quant_iter_c_V_V_full_n );

    SC_METHOD(thread_in_quant_iter_r_V_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_proc_1_iter_c_V_V_empty_n );
    sensitive << ( in_proc_1_iter_r_V_V_empty_n );
    sensitive << ( in_quant_iter_r_V_V_full_n );
    sensitive << ( in_quant_iter_c_V_V_full_n );

    SC_METHOD(thread_indvar_flatten_next_fu_221_p2);
    sensitive << ( indvar_flatten_reg_193 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_mul_fu_243_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( p_0126_tmp_V_22_load_s_fu_233_p3 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_mul_fu_243_p2);
    sensitive << ( mul_fu_243_p1 );

    SC_METHOD(thread_neg_mul_fu_257_p2);
    sensitive << ( mul_reg_427 );

    SC_METHOD(thread_neg_ti_fu_296_p2);
    sensitive << ( tmp_3_fu_289_p3 );

    SC_METHOD(thread_p_0126_tmp_V_22_load_s_fu_233_p3);
    sensitive << ( tmp_V_97_reg_412 );
    sensitive << ( tmp_i_reg_417 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp_10_fu_368_p3);
    sensitive << ( tmp_38_i_fu_358_p2 );

    SC_METHOD(thread_tmp_10_i_fu_313_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_22_i_reg_439 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_tmp_10_i_fu_313_p2);
    sensitive << ( tmp_10_i_fu_313_p1 );

    SC_METHOD(thread_tmp_22_i_fu_302_p3);
    sensitive << ( tmp_5_reg_433 );
    sensitive << ( tmp_fu_272_p1 );
    sensitive << ( neg_ti_fu_296_p2 );

    SC_METHOD(thread_tmp_23_i_fu_318_p2);
    sensitive << ( p_0126_tmp_V_22_load_s_reg_422_pp0_iter3_reg );
    sensitive << ( tmp_10_i_fu_313_p2 );

    SC_METHOD(thread_tmp_24_i_fu_323_p1);
    sensitive << ( tmp_23_i_reg_449 );

    SC_METHOD(thread_tmp_25_i_fu_326_p2);
    sensitive << ( tmp_24_i_fu_323_p1 );

    SC_METHOD(thread_tmp_28_i_fu_338_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_23_i_reg_449_pp0_iter5_reg );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_tmp_28_i_fu_338_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_25_i_reg_455 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_tmp_28_i_fu_338_p2);
    sensitive << ( tmp_28_i_fu_338_p0 );
    sensitive << ( tmp_28_i_fu_338_p1 );

    SC_METHOD(thread_tmp_2_fu_285_p1);
    sensitive << ( tmp_7_fu_276_p4 );

    SC_METHOD(thread_tmp_30_i_fu_344_p2);
    sensitive << ( tmp_28_i_reg_460 );

    SC_METHOD(thread_tmp_32_i_fu_349_p2);
    sensitive << ( tmp_8_reg_444_pp0_iter6_reg );

    SC_METHOD(thread_tmp_37_cast_i_fu_354_p1);
    sensitive << ( tmp_32_i_fu_349_p2 );

    SC_METHOD(thread_tmp_38_i_fu_358_p2);
    sensitive << ( tmp_30_i_fu_344_p2 );
    sensitive << ( tmp_37_cast_i_fu_354_p1 );

    SC_METHOD(thread_tmp_3_fu_289_p3);
    sensitive << ( tmp_5_reg_433 );
    sensitive << ( tmp_fu_272_p1 );
    sensitive << ( tmp_2_fu_285_p1 );

    SC_METHOD(thread_tmp_6_fu_262_p4);
    sensitive << ( neg_mul_fu_257_p2 );

    SC_METHOD(thread_tmp_7_fu_276_p4);
    sensitive << ( mul_reg_427 );

    SC_METHOD(thread_tmp_8_fu_309_p1);
    sensitive << ( tmp_22_i_fu_302_p3 );

    SC_METHOD(thread_tmp_9_fu_364_p1);
    sensitive << ( tmp_38_i_fu_358_p2 );

    SC_METHOD(thread_tmp_V_98_fu_376_p3);
    sensitive << ( tmp_10_fu_368_p3 );
    sensitive << ( tmp_9_fu_364_p1 );

    SC_METHOD(thread_tmp_fu_272_p1);
    sensitive << ( tmp_6_fu_262_p4 );

    SC_METHOD(thread_tmp_i_fu_227_p2);
    sensitive << ( in_proc_1_V_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_403 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_proc_1_iter_c_V_V_empty_n );
    sensitive << ( in_proc_1_iter_r_V_V_empty_n );
    sensitive << ( in_quant_iter_r_V_V_full_n );
    sensitive << ( in_quant_iter_c_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( exitcond_flatten_fu_216_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "softmax_process_1178_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, in_proc_1_iter_c_V_V_dout, "(port)in_proc_1_iter_c_V_V_dout");
    sc_trace(mVcdFile, in_proc_1_iter_c_V_V_empty_n, "(port)in_proc_1_iter_c_V_V_empty_n");
    sc_trace(mVcdFile, in_proc_1_iter_c_V_V_read, "(port)in_proc_1_iter_c_V_V_read");
    sc_trace(mVcdFile, in_proc_1_iter_r_V_V_dout, "(port)in_proc_1_iter_r_V_V_dout");
    sc_trace(mVcdFile, in_proc_1_iter_r_V_V_empty_n, "(port)in_proc_1_iter_r_V_V_empty_n");
    sc_trace(mVcdFile, in_proc_1_iter_r_V_V_read, "(port)in_proc_1_iter_r_V_V_read");
    sc_trace(mVcdFile, in_quant_iter_r_V_V_din, "(port)in_quant_iter_r_V_V_din");
    sc_trace(mVcdFile, in_quant_iter_r_V_V_full_n, "(port)in_quant_iter_r_V_V_full_n");
    sc_trace(mVcdFile, in_quant_iter_r_V_V_write, "(port)in_quant_iter_r_V_V_write");
    sc_trace(mVcdFile, in_quant_iter_c_V_V_din, "(port)in_quant_iter_c_V_V_din");
    sc_trace(mVcdFile, in_quant_iter_c_V_V_full_n, "(port)in_quant_iter_c_V_V_full_n");
    sc_trace(mVcdFile, in_quant_iter_c_V_V_write, "(port)in_quant_iter_c_V_V_write");
    sc_trace(mVcdFile, in_proc_1_V_V_dout, "(port)in_proc_1_V_V_dout");
    sc_trace(mVcdFile, in_proc_1_V_V_empty_n, "(port)in_proc_1_V_V_empty_n");
    sc_trace(mVcdFile, in_proc_1_V_V_read, "(port)in_proc_1_V_V_read");
    sc_trace(mVcdFile, in_quant_V_V_din, "(port)in_quant_V_V_din");
    sc_trace(mVcdFile, in_quant_V_V_full_n, "(port)in_quant_V_V_full_n");
    sc_trace(mVcdFile, in_quant_V_V_write, "(port)in_quant_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, in_proc_1_iter_c_V_V_blk_n, "in_proc_1_iter_c_V_V_blk_n");
    sc_trace(mVcdFile, in_proc_1_iter_r_V_V_blk_n, "in_proc_1_iter_r_V_V_blk_n");
    sc_trace(mVcdFile, in_quant_iter_r_V_V_blk_n, "in_quant_iter_r_V_V_blk_n");
    sc_trace(mVcdFile, in_quant_iter_c_V_V_blk_n, "in_quant_iter_c_V_V_blk_n");
    sc_trace(mVcdFile, in_proc_1_V_V_blk_n, "in_proc_1_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_flatten_reg_403, "exitcond_flatten_reg_403");
    sc_trace(mVcdFile, in_quant_V_V_blk_n, "in_quant_V_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, exitcond_flatten_reg_403_pp0_iter7_reg, "exitcond_flatten_reg_403_pp0_iter7_reg");
    sc_trace(mVcdFile, indvar_flatten_reg_193, "indvar_flatten_reg_193");
    sc_trace(mVcdFile, tmp_V_96_reg_388, "tmp_V_96_reg_388");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, tmp_V_reg_393, "tmp_V_reg_393");
    sc_trace(mVcdFile, bound_fu_210_p2, "bound_fu_210_p2");
    sc_trace(mVcdFile, bound_reg_398, "bound_reg_398");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond_flatten_fu_216_p2, "exitcond_flatten_fu_216_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter3, "ap_block_state6_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter4, "ap_block_state7_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter5, "ap_block_state8_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter6, "ap_block_state9_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter7, "ap_block_state10_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter8, "ap_block_state11_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, exitcond_flatten_reg_403_pp0_iter1_reg, "exitcond_flatten_reg_403_pp0_iter1_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_403_pp0_iter2_reg, "exitcond_flatten_reg_403_pp0_iter2_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_403_pp0_iter3_reg, "exitcond_flatten_reg_403_pp0_iter3_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_403_pp0_iter4_reg, "exitcond_flatten_reg_403_pp0_iter4_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_403_pp0_iter5_reg, "exitcond_flatten_reg_403_pp0_iter5_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_403_pp0_iter6_reg, "exitcond_flatten_reg_403_pp0_iter6_reg");
    sc_trace(mVcdFile, indvar_flatten_next_fu_221_p2, "indvar_flatten_next_fu_221_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_V_97_reg_412, "tmp_V_97_reg_412");
    sc_trace(mVcdFile, tmp_i_fu_227_p2, "tmp_i_fu_227_p2");
    sc_trace(mVcdFile, tmp_i_reg_417, "tmp_i_reg_417");
    sc_trace(mVcdFile, p_0126_tmp_V_22_load_s_fu_233_p3, "p_0126_tmp_V_22_load_s_fu_233_p3");
    sc_trace(mVcdFile, p_0126_tmp_V_22_load_s_reg_422, "p_0126_tmp_V_22_load_s_reg_422");
    sc_trace(mVcdFile, p_0126_tmp_V_22_load_s_reg_422_pp0_iter3_reg, "p_0126_tmp_V_22_load_s_reg_422_pp0_iter3_reg");
    sc_trace(mVcdFile, mul_fu_243_p2, "mul_fu_243_p2");
    sc_trace(mVcdFile, mul_reg_427, "mul_reg_427");
    sc_trace(mVcdFile, tmp_5_reg_433, "tmp_5_reg_433");
    sc_trace(mVcdFile, tmp_22_i_fu_302_p3, "tmp_22_i_fu_302_p3");
    sc_trace(mVcdFile, tmp_22_i_reg_439, "tmp_22_i_reg_439");
    sc_trace(mVcdFile, tmp_8_fu_309_p1, "tmp_8_fu_309_p1");
    sc_trace(mVcdFile, tmp_8_reg_444, "tmp_8_reg_444");
    sc_trace(mVcdFile, tmp_8_reg_444_pp0_iter4_reg, "tmp_8_reg_444_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_8_reg_444_pp0_iter5_reg, "tmp_8_reg_444_pp0_iter5_reg");
    sc_trace(mVcdFile, tmp_8_reg_444_pp0_iter6_reg, "tmp_8_reg_444_pp0_iter6_reg");
    sc_trace(mVcdFile, tmp_23_i_fu_318_p2, "tmp_23_i_fu_318_p2");
    sc_trace(mVcdFile, tmp_23_i_reg_449, "tmp_23_i_reg_449");
    sc_trace(mVcdFile, tmp_23_i_reg_449_pp0_iter5_reg, "tmp_23_i_reg_449_pp0_iter5_reg");
    sc_trace(mVcdFile, tmp_25_i_fu_326_p2, "tmp_25_i_fu_326_p2");
    sc_trace(mVcdFile, tmp_25_i_reg_455, "tmp_25_i_reg_455");
    sc_trace(mVcdFile, tmp_28_i_fu_338_p2, "tmp_28_i_fu_338_p2");
    sc_trace(mVcdFile, tmp_28_i_reg_460, "tmp_28_i_reg_460");
    sc_trace(mVcdFile, tmp_V_98_fu_376_p3, "tmp_V_98_fu_376_p3");
    sc_trace(mVcdFile, tmp_V_98_reg_465, "tmp_V_98_reg_465");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, bound_fu_210_p0, "bound_fu_210_p0");
    sc_trace(mVcdFile, bound_fu_210_p1, "bound_fu_210_p1");
    sc_trace(mVcdFile, mul_fu_243_p1, "mul_fu_243_p1");
    sc_trace(mVcdFile, neg_mul_fu_257_p2, "neg_mul_fu_257_p2");
    sc_trace(mVcdFile, tmp_6_fu_262_p4, "tmp_6_fu_262_p4");
    sc_trace(mVcdFile, tmp_7_fu_276_p4, "tmp_7_fu_276_p4");
    sc_trace(mVcdFile, tmp_fu_272_p1, "tmp_fu_272_p1");
    sc_trace(mVcdFile, tmp_2_fu_285_p1, "tmp_2_fu_285_p1");
    sc_trace(mVcdFile, tmp_3_fu_289_p3, "tmp_3_fu_289_p3");
    sc_trace(mVcdFile, neg_ti_fu_296_p2, "neg_ti_fu_296_p2");
    sc_trace(mVcdFile, tmp_10_i_fu_313_p1, "tmp_10_i_fu_313_p1");
    sc_trace(mVcdFile, tmp_10_i_fu_313_p2, "tmp_10_i_fu_313_p2");
    sc_trace(mVcdFile, tmp_24_i_fu_323_p1, "tmp_24_i_fu_323_p1");
    sc_trace(mVcdFile, tmp_28_i_fu_338_p0, "tmp_28_i_fu_338_p0");
    sc_trace(mVcdFile, tmp_28_i_fu_338_p1, "tmp_28_i_fu_338_p1");
    sc_trace(mVcdFile, tmp_32_i_fu_349_p2, "tmp_32_i_fu_349_p2");
    sc_trace(mVcdFile, tmp_30_i_fu_344_p2, "tmp_30_i_fu_344_p2");
    sc_trace(mVcdFile, tmp_37_cast_i_fu_354_p1, "tmp_37_cast_i_fu_354_p1");
    sc_trace(mVcdFile, tmp_38_i_fu_358_p2, "tmp_38_i_fu_358_p2");
    sc_trace(mVcdFile, tmp_10_fu_368_p3, "tmp_10_fu_368_p3");
    sc_trace(mVcdFile, tmp_9_fu_364_p1, "tmp_9_fu_364_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, bound_fu_210_p00, "bound_fu_210_p00");
    sc_trace(mVcdFile, bound_fu_210_p10, "bound_fu_210_p10");
#endif

    }
}

softmax_process_1178::~softmax_process_1178() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void softmax_process_1178::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_enable_reg_pp0_iter8 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_216_p2.read()))) {
        indvar_flatten_reg_193 = indvar_flatten_next_fu_221_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        indvar_flatten_reg_193 = ap_const_lv64_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        bound_reg_398 = bound_fu_210_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten_reg_403 = exitcond_flatten_fu_216_p2.read();
        exitcond_flatten_reg_403_pp0_iter1_reg = exitcond_flatten_reg_403.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        exitcond_flatten_reg_403_pp0_iter2_reg = exitcond_flatten_reg_403_pp0_iter1_reg.read();
        exitcond_flatten_reg_403_pp0_iter3_reg = exitcond_flatten_reg_403_pp0_iter2_reg.read();
        exitcond_flatten_reg_403_pp0_iter4_reg = exitcond_flatten_reg_403_pp0_iter3_reg.read();
        exitcond_flatten_reg_403_pp0_iter5_reg = exitcond_flatten_reg_403_pp0_iter4_reg.read();
        exitcond_flatten_reg_403_pp0_iter6_reg = exitcond_flatten_reg_403_pp0_iter5_reg.read();
        exitcond_flatten_reg_403_pp0_iter7_reg = exitcond_flatten_reg_403_pp0_iter6_reg.read();
        p_0126_tmp_V_22_load_s_reg_422_pp0_iter3_reg = p_0126_tmp_V_22_load_s_reg_422.read();
        tmp_23_i_reg_449_pp0_iter5_reg = tmp_23_i_reg_449.read();
        tmp_8_reg_444_pp0_iter4_reg = tmp_8_reg_444.read();
        tmp_8_reg_444_pp0_iter5_reg = tmp_8_reg_444_pp0_iter4_reg.read();
        tmp_8_reg_444_pp0_iter6_reg = tmp_8_reg_444_pp0_iter5_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_403_pp0_iter1_reg.read()))) {
        mul_reg_427 = mul_fu_243_p2.read();
        p_0126_tmp_V_22_load_s_reg_422 = p_0126_tmp_V_22_load_s_fu_233_p3.read();
        tmp_5_reg_433 = p_0126_tmp_V_22_load_s_fu_233_p3.read().range(31, 31);
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_403_pp0_iter2_reg.read()))) {
        tmp_22_i_reg_439 = tmp_22_i_fu_302_p3.read();
        tmp_8_reg_444 = tmp_8_fu_309_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_403_pp0_iter3_reg.read()))) {
        tmp_23_i_reg_449 = tmp_23_i_fu_318_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_403_pp0_iter4_reg.read()))) {
        tmp_25_i_reg_455 = tmp_25_i_fu_326_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_403_pp0_iter5_reg.read()))) {
        tmp_28_i_reg_460 = tmp_28_i_fu_338_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_1_iter_c_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_1_iter_r_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_quant_iter_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_quant_iter_c_V_V_full_n.read())))) {
        tmp_V_96_reg_388 = in_proc_1_iter_c_V_V_dout.read();
        tmp_V_reg_393 = in_proc_1_iter_r_V_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_403.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_V_97_reg_412 = in_proc_1_V_V_dout.read();
        tmp_i_reg_417 = tmp_i_fu_227_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_403_pp0_iter6_reg.read()))) {
        tmp_V_98_reg_465 = tmp_V_98_fu_376_p3.read();
    }
}

void softmax_process_1178::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void softmax_process_1178::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void softmax_process_1178::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[3];
}

void softmax_process_1178::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void softmax_process_1178::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_process_1178::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_403.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_proc_1_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_403_pp0_iter7_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_quant_V_V_full_n.read())));
}

void softmax_process_1178::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_403.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_proc_1_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_403_pp0_iter7_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_quant_V_V_full_n.read())));
}

void softmax_process_1178::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_403.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_proc_1_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_403_pp0_iter7_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_quant_V_V_full_n.read())));
}

void softmax_process_1178::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_1_iter_c_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_1_iter_r_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_quant_iter_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_quant_iter_c_V_V_full_n.read()));
}

void softmax_process_1178::thread_ap_block_state10_pp0_stage0_iter7() {
    ap_block_state10_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_process_1178::thread_ap_block_state11_pp0_stage0_iter8() {
    ap_block_state11_pp0_stage0_iter8 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_403_pp0_iter7_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_quant_V_V_full_n.read()));
}

void softmax_process_1178::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_process_1178::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = (esl_seteq<1,1,1>(exitcond_flatten_reg_403.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_proc_1_V_V_empty_n.read()));
}

void softmax_process_1178::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_process_1178::thread_ap_block_state6_pp0_stage0_iter3() {
    ap_block_state6_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_process_1178::thread_ap_block_state7_pp0_stage0_iter4() {
    ap_block_state7_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_process_1178::thread_ap_block_state8_pp0_stage0_iter5() {
    ap_block_state8_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_process_1178::thread_ap_block_state9_pp0_stage0_iter6() {
    ap_block_state9_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_process_1178::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_216_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void softmax_process_1178::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void softmax_process_1178::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void softmax_process_1178::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void softmax_process_1178::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void softmax_process_1178::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void softmax_process_1178::thread_bound_fu_210_p0() {
    bound_fu_210_p0 =  (sc_lv<32>) (bound_fu_210_p00.read());
}

void softmax_process_1178::thread_bound_fu_210_p00() {
    bound_fu_210_p00 = esl_zext<64,32>(tmp_V_96_reg_388.read());
}

void softmax_process_1178::thread_bound_fu_210_p1() {
    bound_fu_210_p1 =  (sc_lv<32>) (bound_fu_210_p10.read());
}

void softmax_process_1178::thread_bound_fu_210_p10() {
    bound_fu_210_p10 = esl_zext<64,32>(tmp_V_reg_393.read());
}

void softmax_process_1178::thread_bound_fu_210_p2() {
    bound_fu_210_p2 = (!bound_fu_210_p0.read().is_01() || !bound_fu_210_p1.read().is_01())? sc_lv<64>(): sc_biguint<32>(bound_fu_210_p0.read()) * sc_biguint<32>(bound_fu_210_p1.read());
}

void softmax_process_1178::thread_exitcond_flatten_fu_216_p2() {
    exitcond_flatten_fu_216_p2 = (!indvar_flatten_reg_193.read().is_01() || !bound_reg_398.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_193.read() == bound_reg_398.read());
}

void softmax_process_1178::thread_in_proc_1_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_403.read(), ap_const_lv1_0))) {
        in_proc_1_V_V_blk_n = in_proc_1_V_V_empty_n.read();
    } else {
        in_proc_1_V_V_blk_n = ap_const_logic_1;
    }
}

void softmax_process_1178::thread_in_proc_1_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_403.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_proc_1_V_V_read = ap_const_logic_1;
    } else {
        in_proc_1_V_V_read = ap_const_logic_0;
    }
}

void softmax_process_1178::thread_in_proc_1_iter_c_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        in_proc_1_iter_c_V_V_blk_n = in_proc_1_iter_c_V_V_empty_n.read();
    } else {
        in_proc_1_iter_c_V_V_blk_n = ap_const_logic_1;
    }
}

void softmax_process_1178::thread_in_proc_1_iter_c_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_1_iter_c_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_1_iter_r_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_quant_iter_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_quant_iter_c_V_V_full_n.read())))) {
        in_proc_1_iter_c_V_V_read = ap_const_logic_1;
    } else {
        in_proc_1_iter_c_V_V_read = ap_const_logic_0;
    }
}

void softmax_process_1178::thread_in_proc_1_iter_r_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        in_proc_1_iter_r_V_V_blk_n = in_proc_1_iter_r_V_V_empty_n.read();
    } else {
        in_proc_1_iter_r_V_V_blk_n = ap_const_logic_1;
    }
}

void softmax_process_1178::thread_in_proc_1_iter_r_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_1_iter_c_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_1_iter_r_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_quant_iter_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_quant_iter_c_V_V_full_n.read())))) {
        in_proc_1_iter_r_V_V_read = ap_const_logic_1;
    } else {
        in_proc_1_iter_r_V_V_read = ap_const_logic_0;
    }
}

void softmax_process_1178::thread_in_quant_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_403_pp0_iter7_reg.read()))) {
        in_quant_V_V_blk_n = in_quant_V_V_full_n.read();
    } else {
        in_quant_V_V_blk_n = ap_const_logic_1;
    }
}

void softmax_process_1178::thread_in_quant_V_V_din() {
    in_quant_V_V_din = esl_zext<64,63>(tmp_V_98_reg_465.read());
}

void softmax_process_1178::thread_in_quant_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_403_pp0_iter7_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_quant_V_V_write = ap_const_logic_1;
    } else {
        in_quant_V_V_write = ap_const_logic_0;
    }
}

void softmax_process_1178::thread_in_quant_iter_c_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        in_quant_iter_c_V_V_blk_n = in_quant_iter_c_V_V_full_n.read();
    } else {
        in_quant_iter_c_V_V_blk_n = ap_const_logic_1;
    }
}

void softmax_process_1178::thread_in_quant_iter_c_V_V_din() {
    in_quant_iter_c_V_V_din = in_proc_1_iter_c_V_V_dout.read();
}

void softmax_process_1178::thread_in_quant_iter_c_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_1_iter_c_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_1_iter_r_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_quant_iter_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_quant_iter_c_V_V_full_n.read())))) {
        in_quant_iter_c_V_V_write = ap_const_logic_1;
    } else {
        in_quant_iter_c_V_V_write = ap_const_logic_0;
    }
}

void softmax_process_1178::thread_in_quant_iter_r_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        in_quant_iter_r_V_V_blk_n = in_quant_iter_r_V_V_full_n.read();
    } else {
        in_quant_iter_r_V_V_blk_n = ap_const_logic_1;
    }
}

void softmax_process_1178::thread_in_quant_iter_r_V_V_din() {
    in_quant_iter_r_V_V_din = in_proc_1_iter_r_V_V_dout.read();
}

void softmax_process_1178::thread_in_quant_iter_r_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_1_iter_c_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_1_iter_r_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_quant_iter_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_quant_iter_c_V_V_full_n.read())))) {
        in_quant_iter_r_V_V_write = ap_const_logic_1;
    } else {
        in_quant_iter_r_V_V_write = ap_const_logic_0;
    }
}

void softmax_process_1178::thread_indvar_flatten_next_fu_221_p2() {
    indvar_flatten_next_fu_221_p2 = (!indvar_flatten_reg_193.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(indvar_flatten_reg_193.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void softmax_process_1178::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void softmax_process_1178::thread_mul_fu_243_p1() {
    mul_fu_243_p1 = p_0126_tmp_V_22_load_s_fu_233_p3.read();
}

void softmax_process_1178::thread_mul_fu_243_p2() {
    mul_fu_243_p2 = (!ap_const_lv65_10B7E6EC3.is_01() || !mul_fu_243_p1.read().is_01())? sc_lv<65>(): sc_biguint<65>(ap_const_lv65_10B7E6EC3) * sc_bigint<32>(mul_fu_243_p1.read());
}

void softmax_process_1178::thread_neg_mul_fu_257_p2() {
    neg_mul_fu_257_p2 = (!ap_const_lv65_0.is_01() || !mul_reg_427.read().is_01())? sc_lv<65>(): (sc_biguint<65>(ap_const_lv65_0) - sc_biguint<65>(mul_reg_427.read()));
}

void softmax_process_1178::thread_neg_ti_fu_296_p2() {
    neg_ti_fu_296_p2 = (!ap_const_lv32_0.is_01() || !tmp_3_fu_289_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(tmp_3_fu_289_p3.read()));
}

void softmax_process_1178::thread_p_0126_tmp_V_22_load_s_fu_233_p3() {
    p_0126_tmp_V_22_load_s_fu_233_p3 = (!tmp_i_reg_417.read()[0].is_01())? sc_lv<32>(): ((tmp_i_reg_417.read()[0].to_bool())? ap_const_lv32_FFFFC694: tmp_V_97_reg_412.read());
}

void softmax_process_1178::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void softmax_process_1178::thread_start_out() {
    start_out = real_start.read();
}

void softmax_process_1178::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void softmax_process_1178::thread_tmp_10_fu_368_p3() {
    tmp_10_fu_368_p3 = tmp_38_i_fu_358_p2.read().range(63, 63);
}

void softmax_process_1178::thread_tmp_10_i_fu_313_p1() {
    tmp_10_i_fu_313_p1 =  (sc_lv<26>) (tmp_22_i_reg_439.read());
}

void softmax_process_1178::thread_tmp_10_i_fu_313_p2() {
    tmp_10_i_fu_313_p2 = (!ap_const_lv32_1EA.is_01() || !tmp_10_i_fu_313_p1.read().is_01())? sc_lv<32>(): sc_biguint<32>(ap_const_lv32_1EA) * sc_bigint<26>(tmp_10_i_fu_313_p1.read());
}

void softmax_process_1178::thread_tmp_22_i_fu_302_p3() {
    tmp_22_i_fu_302_p3 = (!tmp_5_reg_433.read()[0].is_01())? sc_lv<32>(): ((tmp_5_reg_433.read()[0].to_bool())? tmp_fu_272_p1.read(): neg_ti_fu_296_p2.read());
}

void softmax_process_1178::thread_tmp_23_i_fu_318_p2() {
    tmp_23_i_fu_318_p2 = (!p_0126_tmp_V_22_load_s_reg_422_pp0_iter3_reg.read().is_01() || !tmp_10_i_fu_313_p2.read().is_01())? sc_lv<32>(): (sc_bigint<32>(p_0126_tmp_V_22_load_s_reg_422_pp0_iter3_reg.read()) + sc_biguint<32>(tmp_10_i_fu_313_p2.read()));
}

void softmax_process_1178::thread_tmp_24_i_fu_323_p1() {
    tmp_24_i_fu_323_p1 = esl_sext<33,32>(tmp_23_i_reg_449.read());
}

void softmax_process_1178::thread_tmp_25_i_fu_326_p2() {
    tmp_25_i_fu_326_p2 = (!ap_const_lv33_778.is_01() || !tmp_24_i_fu_323_p1.read().is_01())? sc_lv<33>(): (sc_biguint<33>(ap_const_lv33_778) + sc_bigint<33>(tmp_24_i_fu_323_p1.read()));
}

void softmax_process_1178::thread_tmp_28_i_fu_338_p0() {
    tmp_28_i_fu_338_p0 = tmp_23_i_reg_449_pp0_iter5_reg.read();
}

void softmax_process_1178::thread_tmp_28_i_fu_338_p1() {
    tmp_28_i_fu_338_p1 = tmp_25_i_reg_455.read();
}

void softmax_process_1178::thread_tmp_28_i_fu_338_p2() {
    tmp_28_i_fu_338_p2 = (!tmp_28_i_fu_338_p0.read().is_01() || !tmp_28_i_fu_338_p1.read().is_01())? sc_lv<64>(): sc_bigint<32>(tmp_28_i_fu_338_p0.read()) * sc_bigint<33>(tmp_28_i_fu_338_p1.read());
}

void softmax_process_1178::thread_tmp_2_fu_285_p1() {
    tmp_2_fu_285_p1 = esl_sext<32,24>(tmp_7_fu_276_p4.read());
}

void softmax_process_1178::thread_tmp_30_i_fu_344_p2() {
    tmp_30_i_fu_344_p2 = (!ap_const_lv64_1544FF.is_01() || !tmp_28_i_reg_460.read().is_01())? sc_lv<64>(): (sc_biguint<64>(ap_const_lv64_1544FF) + sc_biguint<64>(tmp_28_i_reg_460.read()));
}

void softmax_process_1178::thread_tmp_32_i_fu_349_p2() {
    tmp_32_i_fu_349_p2 = (!ap_const_lv24_1E.is_01() || !tmp_8_reg_444_pp0_iter6_reg.read().is_01())? sc_lv<24>(): (sc_biguint<24>(ap_const_lv24_1E) - sc_biguint<24>(tmp_8_reg_444_pp0_iter6_reg.read()));
}

void softmax_process_1178::thread_tmp_37_cast_i_fu_354_p1() {
    tmp_37_cast_i_fu_354_p1 = esl_zext<64,24>(tmp_32_i_fu_349_p2.read());
}

void softmax_process_1178::thread_tmp_38_i_fu_358_p2() {
    tmp_38_i_fu_358_p2 = (!tmp_37_cast_i_fu_354_p1.read().is_01())? sc_lv<64>(): tmp_30_i_fu_344_p2.read() << (unsigned short)tmp_37_cast_i_fu_354_p1.read().to_uint();
}

void softmax_process_1178::thread_tmp_3_fu_289_p3() {
    tmp_3_fu_289_p3 = (!tmp_5_reg_433.read()[0].is_01())? sc_lv<32>(): ((tmp_5_reg_433.read()[0].to_bool())? tmp_fu_272_p1.read(): tmp_2_fu_285_p1.read());
}

void softmax_process_1178::thread_tmp_6_fu_262_p4() {
    tmp_6_fu_262_p4 = neg_mul_fu_257_p2.read().range(64, 41);
}

void softmax_process_1178::thread_tmp_7_fu_276_p4() {
    tmp_7_fu_276_p4 = mul_reg_427.read().range(64, 41);
}

void softmax_process_1178::thread_tmp_8_fu_309_p1() {
    tmp_8_fu_309_p1 = tmp_22_i_fu_302_p3.read().range(24-1, 0);
}

void softmax_process_1178::thread_tmp_9_fu_364_p1() {
    tmp_9_fu_364_p1 = tmp_38_i_fu_358_p2.read().range(63-1, 0);
}

void softmax_process_1178::thread_tmp_V_98_fu_376_p3() {
    tmp_V_98_fu_376_p3 = (!tmp_10_fu_368_p3.read()[0].is_01())? sc_lv<63>(): ((tmp_10_fu_368_p3.read()[0].to_bool())? ap_const_lv63_0: tmp_9_fu_364_p1.read());
}

void softmax_process_1178::thread_tmp_fu_272_p1() {
    tmp_fu_272_p1 = esl_sext<32,24>(tmp_6_fu_262_p4.read());
}

void softmax_process_1178::thread_tmp_i_fu_227_p2() {
    tmp_i_fu_227_p2 = (!in_proc_1_V_V_dout.read().is_01() || !ap_const_lv32_FFFFC694.is_01())? sc_lv<1>(): (sc_bigint<32>(in_proc_1_V_V_dout.read()) < sc_bigint<32>(ap_const_lv32_FFFFC694));
}

void softmax_process_1178::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_1_iter_c_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_proc_1_iter_r_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_quant_iter_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_quant_iter_c_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_216_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_flatten_fu_216_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

