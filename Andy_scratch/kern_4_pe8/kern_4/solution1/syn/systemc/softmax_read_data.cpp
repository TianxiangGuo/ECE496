// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "softmax_read_data.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic softmax_read_data::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic softmax_read_data::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<19> softmax_read_data::ap_ST_fsm_state1 = "1";
const sc_lv<19> softmax_read_data::ap_ST_fsm_state2 = "10";
const sc_lv<19> softmax_read_data::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<19> softmax_read_data::ap_ST_fsm_pp0_stage1 = "1000";
const sc_lv<19> softmax_read_data::ap_ST_fsm_pp0_stage2 = "10000";
const sc_lv<19> softmax_read_data::ap_ST_fsm_pp0_stage3 = "100000";
const sc_lv<19> softmax_read_data::ap_ST_fsm_pp0_stage4 = "1000000";
const sc_lv<19> softmax_read_data::ap_ST_fsm_pp0_stage5 = "10000000";
const sc_lv<19> softmax_read_data::ap_ST_fsm_pp0_stage6 = "100000000";
const sc_lv<19> softmax_read_data::ap_ST_fsm_pp0_stage7 = "1000000000";
const sc_lv<19> softmax_read_data::ap_ST_fsm_pp0_stage8 = "10000000000";
const sc_lv<19> softmax_read_data::ap_ST_fsm_pp0_stage9 = "100000000000";
const sc_lv<19> softmax_read_data::ap_ST_fsm_pp0_stage10 = "1000000000000";
const sc_lv<19> softmax_read_data::ap_ST_fsm_pp0_stage11 = "10000000000000";
const sc_lv<19> softmax_read_data::ap_ST_fsm_pp0_stage12 = "100000000000000";
const sc_lv<19> softmax_read_data::ap_ST_fsm_pp0_stage13 = "1000000000000000";
const sc_lv<19> softmax_read_data::ap_ST_fsm_pp0_stage14 = "10000000000000000";
const sc_lv<19> softmax_read_data::ap_ST_fsm_pp0_stage15 = "100000000000000000";
const sc_lv<19> softmax_read_data::ap_ST_fsm_state20 = "1000000000000000000";
const bool softmax_read_data::ap_const_boolean_1 = true;
const sc_lv<32> softmax_read_data::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> softmax_read_data::ap_const_lv32_3 = "11";
const bool softmax_read_data::ap_const_boolean_0 = false;
const sc_lv<1> softmax_read_data::ap_const_lv1_0 = "0";
const sc_lv<32> softmax_read_data::ap_const_lv32_5 = "101";
const sc_lv<1> softmax_read_data::ap_const_lv1_1 = "1";
const sc_lv<32> softmax_read_data::ap_const_lv32_4 = "100";
const sc_lv<32> softmax_read_data::ap_const_lv32_6 = "110";
const sc_lv<32> softmax_read_data::ap_const_lv32_7 = "111";
const sc_lv<32> softmax_read_data::ap_const_lv32_8 = "1000";
const sc_lv<32> softmax_read_data::ap_const_lv32_9 = "1001";
const sc_lv<32> softmax_read_data::ap_const_lv32_A = "1010";
const sc_lv<32> softmax_read_data::ap_const_lv32_B = "1011";
const sc_lv<32> softmax_read_data::ap_const_lv32_C = "1100";
const sc_lv<32> softmax_read_data::ap_const_lv32_D = "1101";
const sc_lv<32> softmax_read_data::ap_const_lv32_E = "1110";
const sc_lv<32> softmax_read_data::ap_const_lv32_F = "1111";
const sc_lv<32> softmax_read_data::ap_const_lv32_10 = "10000";
const sc_lv<32> softmax_read_data::ap_const_lv32_11 = "10001";
const sc_lv<32> softmax_read_data::ap_const_lv32_2 = "10";
const sc_lv<32> softmax_read_data::ap_const_lv32_1 = "1";
const sc_lv<60> softmax_read_data::ap_const_lv60_0 = "000000000000000000000000000000000000000000000000000000000000";
const sc_lv<28> softmax_read_data::ap_const_lv28_0 = "0000000000000000000000000000";
const sc_lv<32> softmax_read_data::ap_const_lv32_20 = "100000";
const sc_lv<32> softmax_read_data::ap_const_lv32_3F = "111111";
const sc_lv<32> softmax_read_data::ap_const_lv32_24 = "100100";
const sc_lv<29> softmax_read_data::ap_const_lv29_1FFFFFFF = "11111111111111111111111111111";
const sc_lv<60> softmax_read_data::ap_const_lv60_1 = "1";
const sc_lv<32> softmax_read_data::ap_const_lv32_40 = "1000000";
const sc_lv<32> softmax_read_data::ap_const_lv32_5F = "1011111";
const sc_lv<32> softmax_read_data::ap_const_lv32_60 = "1100000";
const sc_lv<32> softmax_read_data::ap_const_lv32_7F = "1111111";
const sc_lv<32> softmax_read_data::ap_const_lv32_80 = "10000000";
const sc_lv<32> softmax_read_data::ap_const_lv32_9F = "10011111";
const sc_lv<32> softmax_read_data::ap_const_lv32_A0 = "10100000";
const sc_lv<32> softmax_read_data::ap_const_lv32_BF = "10111111";
const sc_lv<32> softmax_read_data::ap_const_lv32_C0 = "11000000";
const sc_lv<32> softmax_read_data::ap_const_lv32_DF = "11011111";
const sc_lv<32> softmax_read_data::ap_const_lv32_E0 = "11100000";
const sc_lv<32> softmax_read_data::ap_const_lv32_FF = "11111111";
const sc_lv<32> softmax_read_data::ap_const_lv32_100 = "100000000";
const sc_lv<32> softmax_read_data::ap_const_lv32_11F = "100011111";
const sc_lv<32> softmax_read_data::ap_const_lv32_120 = "100100000";
const sc_lv<32> softmax_read_data::ap_const_lv32_13F = "100111111";
const sc_lv<32> softmax_read_data::ap_const_lv32_140 = "101000000";
const sc_lv<32> softmax_read_data::ap_const_lv32_15F = "101011111";
const sc_lv<32> softmax_read_data::ap_const_lv32_160 = "101100000";
const sc_lv<32> softmax_read_data::ap_const_lv32_17F = "101111111";
const sc_lv<32> softmax_read_data::ap_const_lv32_180 = "110000000";
const sc_lv<32> softmax_read_data::ap_const_lv32_19F = "110011111";
const sc_lv<32> softmax_read_data::ap_const_lv32_1A0 = "110100000";
const sc_lv<32> softmax_read_data::ap_const_lv32_1BF = "110111111";
const sc_lv<32> softmax_read_data::ap_const_lv32_1C0 = "111000000";
const sc_lv<32> softmax_read_data::ap_const_lv32_1DF = "111011111";
const sc_lv<32> softmax_read_data::ap_const_lv32_1E0 = "111100000";
const sc_lv<32> softmax_read_data::ap_const_lv32_1FF = "111111111";
const sc_lv<32> softmax_read_data::ap_const_lv32_80000000 = "10000000000000000000000000000000";
const sc_lv<28> softmax_read_data::ap_const_lv28_1 = "1";
const sc_lv<32> softmax_read_data::ap_const_lv32_12 = "10010";

softmax_read_data::softmax_read_data(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage10);

    SC_METHOD(thread_ap_block_pp0_stage10_01001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage10_11001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage10_subdone);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage11);

    SC_METHOD(thread_ap_block_pp0_stage11_01001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage11_11001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage11_subdone);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage12);

    SC_METHOD(thread_ap_block_pp0_stage12_01001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage12_11001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage12_subdone);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage13);

    SC_METHOD(thread_ap_block_pp0_stage13_01001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage13_11001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage13_subdone);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage14);

    SC_METHOD(thread_ap_block_pp0_stage14_01001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage14_11001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage14_subdone);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage15);

    SC_METHOD(thread_ap_block_pp0_stage15_01001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage15_11001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage15_subdone);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage1_01001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( in_V_id_V0_status );

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( in_V_id_V0_status );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( in_V_id_V0_status );

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_01001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage2_11001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_01001);
    sensitive << ( max_input_V_V_full_n );
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_predicate_op116_write_state6 );

    SC_METHOD(thread_ap_block_pp0_stage3_11001);
    sensitive << ( max_input_V_V_full_n );
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_predicate_op116_write_state6 );

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);
    sensitive << ( max_input_V_V_full_n );
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_predicate_op116_write_state6 );

    SC_METHOD(thread_ap_block_pp0_stage4);

    SC_METHOD(thread_ap_block_pp0_stage4_01001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage4_11001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage4_subdone);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage5);

    SC_METHOD(thread_ap_block_pp0_stage5_01001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage5_11001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage5_subdone);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage6);

    SC_METHOD(thread_ap_block_pp0_stage6_01001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage6_11001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage6_subdone);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage7);

    SC_METHOD(thread_ap_block_pp0_stage7_01001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage7_11001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage7_subdone);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage8);

    SC_METHOD(thread_ap_block_pp0_stage8_01001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage8_11001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage8_subdone);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage9);

    SC_METHOD(thread_ap_block_pp0_stage9_01001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage9_11001);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_pp0_stage9_subdone);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( in_write_n_V_V_full_n );
    sensitive << ( in_sub_max_r_V_V_full_n );
    sensitive << ( in_sub_max_c_V_V_full_n );
    sensitive << ( in_V_id_V0_status );

    SC_METHOD(thread_ap_block_state10_pp0_stage7_iter0);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_state11_pp0_stage8_iter0);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_state12_pp0_stage9_iter0);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_state13_pp0_stage10_iter0);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_state14_pp0_stage11_iter0);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_state15_pp0_stage12_iter0);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_state16_pp0_stage13_iter0);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_state17_pp0_stage14_iter0);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_state18_pp0_stage15_iter0);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_state19_pp0_stage0_iter1);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage1_iter0);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( in_V_id_V0_status );

    SC_METHOD(thread_ap_block_state5_pp0_stage2_iter0);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_state6_pp0_stage3_iter0);
    sensitive << ( max_input_V_V_full_n );
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_predicate_op116_write_state6 );

    SC_METHOD(thread_ap_block_state7_pp0_stage4_iter0);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_state8_pp0_stage5_iter0);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_block_state9_pp0_stage6_iter0);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_ap_condition_554);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_01001 );

    SC_METHOD(thread_ap_condition_559);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_01001 );

    SC_METHOD(thread_ap_condition_564);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_01001 );

    SC_METHOD(thread_ap_condition_569);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_01001 );

    SC_METHOD(thread_ap_condition_574);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_01001 );

    SC_METHOD(thread_ap_condition_579);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_01001 );

    SC_METHOD(thread_ap_condition_584);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_01001 );

    SC_METHOD(thread_ap_condition_589);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8_01001 );

    SC_METHOD(thread_ap_condition_594);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage9_01001 );

    SC_METHOD(thread_ap_condition_599);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage10_01001 );

    SC_METHOD(thread_ap_condition_604);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_block_pp0_stage11_01001 );

    SC_METHOD(thread_ap_condition_609);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_block_pp0_stage12_01001 );

    SC_METHOD(thread_ap_condition_614);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_block_pp0_stage13_01001 );

    SC_METHOD(thread_ap_condition_619);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_block_pp0_stage14_01001 );

    SC_METHOD(thread_ap_condition_624);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_block_pp0_stage15_01001 );

    SC_METHOD(thread_ap_condition_629);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( exitcond_flatten_fu_377_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_303_p4);
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_299 );
    sensitive << ( indvar_flatten_next_reg_813 );

    SC_METHOD(thread_ap_phi_mux_packet_i_phi_fu_314_p4);
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( packet_i_reg_310 );
    sensitive << ( packet_reg_958 );

    SC_METHOD(thread_ap_predicate_op116_write_state6);
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( tmp_21_i_reg_824 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_bound_fu_371_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( bound_fu_371_p00 );

    SC_METHOD(thread_bound_fu_371_p00);
    sensitive << ( tmp_1_reg_792 );

    SC_METHOD(thread_bound_fu_371_p1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( bound_fu_371_p10 );

    SC_METHOD(thread_bound_fu_371_p10);
    sensitive << ( num_batches_reg_787 );

    SC_METHOD(thread_bound_fu_371_p2);
    sensitive << ( bound_fu_371_p0 );
    sensitive << ( bound_fu_371_p1 );

    SC_METHOD(thread_exitcond2_fu_388_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_1_reg_792 );
    sensitive << ( exitcond_flatten_fu_377_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_packet_i_phi_fu_314_p4 );

    SC_METHOD(thread_exitcond_flatten_fu_377_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( bound_reg_804 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_303_p4 );

    SC_METHOD(thread_in_V_data_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_data_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_in_V_data_V_read);
    sensitive << ( in_V_id_V0_update );

    SC_METHOD(thread_in_V_dest_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_dest_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_in_V_dest_V_read);
    sensitive << ( in_V_id_V0_update );

    SC_METHOD(thread_in_V_id_V0_status);
    sensitive << ( in_V_data_V_empty_n );
    sensitive << ( in_V_id_V_empty_n );
    sensitive << ( in_V_dest_V_empty_n );
    sensitive << ( in_V_user_V_empty_n );
    sensitive << ( in_V_last_V_empty_n );

    SC_METHOD(thread_in_V_id_V0_update);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_write_n_V_V_full_n );
    sensitive << ( in_sub_max_r_V_V_full_n );
    sensitive << ( in_sub_max_c_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( in_V_id_V0_status );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_in_V_id_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_id_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_in_V_id_V_read);
    sensitive << ( in_V_id_V0_update );

    SC_METHOD(thread_in_V_last_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_last_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_in_V_last_V_read);
    sensitive << ( in_V_id_V0_update );

    SC_METHOD(thread_in_V_user_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_user_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond_flatten_reg_809 );

    SC_METHOD(thread_in_V_user_V_read);
    sensitive << ( in_V_id_V0_update );

    SC_METHOD(thread_in_sub_max_V_V_blk_n);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_block_pp0_stage11 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_block_pp0_stage12 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_block_pp0_stage13 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_block_pp0_stage14 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_block_pp0_stage15 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_in_sub_max_V_V_din);
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( tmp_V_79_fu_410_p1 );
    sensitive << ( buffer_1_V_reg_834 );
    sensitive << ( buffer_2_V_reg_841 );
    sensitive << ( buffer_3_V_reg_848 );
    sensitive << ( buffer_4_V_reg_855 );
    sensitive << ( buffer_5_V_reg_862 );
    sensitive << ( buffer_6_V_reg_869 );
    sensitive << ( buffer_7_V_reg_876 );
    sensitive << ( buffer_8_V_reg_883 );
    sensitive << ( buffer_9_V_reg_890 );
    sensitive << ( buffer_10_V_reg_897 );
    sensitive << ( buffer_11_V_reg_904 );
    sensitive << ( buffer_12_V_reg_911 );
    sensitive << ( buffer_13_V_reg_918 );
    sensitive << ( buffer_14_V_reg_925 );
    sensitive << ( buffer_15_V_reg_932 );
    sensitive << ( ap_condition_554 );
    sensitive << ( ap_condition_559 );
    sensitive << ( ap_condition_564 );
    sensitive << ( ap_condition_569 );
    sensitive << ( ap_condition_574 );
    sensitive << ( ap_condition_579 );
    sensitive << ( ap_condition_584 );
    sensitive << ( ap_condition_589 );
    sensitive << ( ap_condition_594 );
    sensitive << ( ap_condition_599 );
    sensitive << ( ap_condition_604 );
    sensitive << ( ap_condition_609 );
    sensitive << ( ap_condition_614 );
    sensitive << ( ap_condition_619 );
    sensitive << ( ap_condition_624 );
    sensitive << ( ap_condition_629 );

    SC_METHOD(thread_in_sub_max_V_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage15_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_block_pp0_stage8_11001 );
    sensitive << ( ap_block_pp0_stage9_11001 );
    sensitive << ( ap_block_pp0_stage10_11001 );
    sensitive << ( ap_block_pp0_stage11_11001 );
    sensitive << ( ap_block_pp0_stage12_11001 );
    sensitive << ( ap_block_pp0_stage13_11001 );
    sensitive << ( ap_block_pp0_stage14_11001 );

    SC_METHOD(thread_in_sub_max_c_V_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_sub_max_c_V_V_full_n );

    SC_METHOD(thread_in_sub_max_c_V_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_data_V_dout );
    sensitive << ( in_write_n_V_V_full_n );
    sensitive << ( in_sub_max_r_V_V_full_n );
    sensitive << ( in_sub_max_c_V_V_full_n );
    sensitive << ( in_V_id_V0_status );

    SC_METHOD(thread_in_sub_max_c_V_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_write_n_V_V_full_n );
    sensitive << ( in_sub_max_r_V_V_full_n );
    sensitive << ( in_sub_max_c_V_V_full_n );
    sensitive << ( in_V_id_V0_status );

    SC_METHOD(thread_in_sub_max_r_V_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_sub_max_r_V_V_full_n );

    SC_METHOD(thread_in_sub_max_r_V_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_data_V_dout );
    sensitive << ( in_write_n_V_V_full_n );
    sensitive << ( in_sub_max_r_V_V_full_n );
    sensitive << ( in_sub_max_c_V_V_full_n );
    sensitive << ( in_V_id_V0_status );

    SC_METHOD(thread_in_sub_max_r_V_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_write_n_V_V_full_n );
    sensitive << ( in_sub_max_r_V_V_full_n );
    sensitive << ( in_sub_max_c_V_V_full_n );
    sensitive << ( in_V_id_V0_status );

    SC_METHOD(thread_in_write_n_V_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_write_n_V_V_full_n );

    SC_METHOD(thread_in_write_n_V_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_data_V_dout );
    sensitive << ( in_write_n_V_V_full_n );
    sensitive << ( in_sub_max_r_V_V_full_n );
    sensitive << ( in_sub_max_c_V_V_full_n );
    sensitive << ( in_V_id_V0_status );

    SC_METHOD(thread_in_write_n_V_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_write_n_V_V_full_n );
    sensitive << ( in_sub_max_r_V_V_full_n );
    sensitive << ( in_sub_max_c_V_V_full_n );
    sensitive << ( in_V_id_V0_status );

    SC_METHOD(thread_indvar_flatten_next_fu_382_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_303_p4 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_max_1_0_V_fu_564_p3);
    sensitive << ( tmp_V_79_reg_828 );
    sensitive << ( buffer_1_V_reg_834 );
    sensitive << ( tmp_25_i_fu_560_p2 );

    SC_METHOD(thread_max_1_1_V_fu_574_p3);
    sensitive << ( buffer_2_V_reg_841 );
    sensitive << ( buffer_3_V_reg_848 );
    sensitive << ( tmp_25_1_i_fu_570_p2 );

    SC_METHOD(thread_max_1_2_V_fu_584_p3);
    sensitive << ( buffer_4_V_reg_855 );
    sensitive << ( buffer_5_V_reg_862 );
    sensitive << ( tmp_25_2_i_fu_580_p2 );

    SC_METHOD(thread_max_1_3_V_fu_594_p3);
    sensitive << ( buffer_6_V_reg_869 );
    sensitive << ( buffer_7_V_reg_876 );
    sensitive << ( tmp_25_3_i_fu_590_p2 );

    SC_METHOD(thread_max_1_4_V_fu_604_p3);
    sensitive << ( buffer_8_V_reg_883 );
    sensitive << ( buffer_9_V_reg_890 );
    sensitive << ( tmp_25_4_i_fu_600_p2 );

    SC_METHOD(thread_max_1_5_V_fu_614_p3);
    sensitive << ( buffer_10_V_reg_897 );
    sensitive << ( buffer_11_V_reg_904 );
    sensitive << ( tmp_25_5_i_fu_610_p2 );

    SC_METHOD(thread_max_1_6_V_fu_624_p3);
    sensitive << ( buffer_12_V_reg_911 );
    sensitive << ( buffer_13_V_reg_918 );
    sensitive << ( tmp_25_6_i_fu_620_p2 );

    SC_METHOD(thread_max_1_7_V_fu_634_p3);
    sensitive << ( buffer_14_V_reg_925 );
    sensitive << ( buffer_15_V_reg_932 );
    sensitive << ( tmp_25_7_i_fu_630_p2 );

    SC_METHOD(thread_max_2_0_V_fu_646_p3);
    sensitive << ( max_1_0_V_fu_564_p3 );
    sensitive << ( max_1_1_V_fu_574_p3 );
    sensitive << ( tmp_34_i_fu_640_p2 );

    SC_METHOD(thread_max_2_1_V_fu_660_p3);
    sensitive << ( max_1_2_V_fu_584_p3 );
    sensitive << ( max_1_3_V_fu_594_p3 );
    sensitive << ( tmp_34_1_i_fu_654_p2 );

    SC_METHOD(thread_max_2_2_V_fu_674_p3);
    sensitive << ( max_1_4_V_fu_604_p3 );
    sensitive << ( max_1_5_V_fu_614_p3 );
    sensitive << ( tmp_34_2_i_fu_668_p2 );

    SC_METHOD(thread_max_2_3_V_fu_688_p3);
    sensitive << ( max_1_6_V_fu_624_p3 );
    sensitive << ( max_1_7_V_fu_634_p3 );
    sensitive << ( tmp_34_3_i_fu_682_p2 );

    SC_METHOD(thread_max_3_0_V_fu_702_p3);
    sensitive << ( max_2_0_V_fu_646_p3 );
    sensitive << ( max_2_1_V_fu_660_p3 );
    sensitive << ( tmp_42_i_fu_696_p2 );

    SC_METHOD(thread_max_input_V_V_blk_n);
    sensitive << ( max_input_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_21_i_reg_824 );

    SC_METHOD(thread_max_input_V_V_din);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_predicate_op116_write_state6 );
    sensitive << ( ap_block_pp0_stage3_01001 );
    sensitive << ( tmp_18_i_fu_734_p2 );
    sensitive << ( storemerge9_0200_1_fu_743_p3 );
    sensitive << ( max_val_V_1_0200_1_fu_755_p3 );

    SC_METHOD(thread_max_input_V_V_write);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_predicate_op116_write_state6 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_max_val_V_1_0200_1_fu_755_p3);
    sensitive << ( max_3_0_V_reg_944 );
    sensitive << ( p_0200_1_i_fu_727_p3 );
    sensitive << ( tmp_20_i_fu_750_p2 );

    SC_METHOD(thread_max_val_V_fu_716_p3);
    sensitive << ( max_2_2_V_fu_674_p3 );
    sensitive << ( max_2_3_V_fu_688_p3 );
    sensitive << ( tmp_42_1_i_fu_710_p2 );

    SC_METHOD(thread_num_batches_fu_336_p1);
    sensitive << ( in_V_data_V_dout );

    SC_METHOD(thread_p_0200_1_i_fu_727_p3);
    sensitive << ( tmp_17_i_reg_939 );
    sensitive << ( tmp_V_fu_246 );

    SC_METHOD(thread_packet_cast_i_fu_401_p1);
    sensitive << ( packet_i_mid2_fu_393_p3 );

    SC_METHOD(thread_packet_fu_776_p2);
    sensitive << ( packet_i_mid2_reg_818 );

    SC_METHOD(thread_packet_i_mid2_fu_393_p3);
    sensitive << ( ap_phi_mux_packet_i_phi_fu_314_p4 );
    sensitive << ( exitcond2_fu_388_p2 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_storemerge9_0200_1_fu_743_p3);
    sensitive << ( max_val_V_reg_951 );
    sensitive << ( p_0200_1_i_fu_727_p3 );
    sensitive << ( tmp_19_i_fu_738_p2 );

    SC_METHOD(thread_tmp_15_i_fu_359_p2);
    sensitive << ( tmp_cast423_i_fu_356_p1 );

    SC_METHOD(thread_tmp_17_i_fu_555_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( packet_i_mid2_reg_818 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_tmp_18_i_fu_734_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( max_3_0_V_reg_944 );
    sensitive << ( max_val_V_reg_951 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_tmp_19_i_fu_738_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( max_val_V_reg_951 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( p_0200_1_i_fu_727_p3 );

    SC_METHOD(thread_tmp_20_i_fu_750_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( max_3_0_V_reg_944 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( p_0200_1_i_fu_727_p3 );

    SC_METHOD(thread_tmp_21_i_fu_405_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_15_i_reg_799 );
    sensitive << ( exitcond_flatten_fu_377_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( packet_cast_i_fu_401_p1 );

    SC_METHOD(thread_tmp_25_1_i_fu_570_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( buffer_2_V_reg_841 );
    sensitive << ( buffer_3_V_reg_848 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_tmp_25_2_i_fu_580_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( buffer_4_V_reg_855 );
    sensitive << ( buffer_5_V_reg_862 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_tmp_25_3_i_fu_590_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( buffer_6_V_reg_869 );
    sensitive << ( buffer_7_V_reg_876 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_tmp_25_4_i_fu_600_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( buffer_8_V_reg_883 );
    sensitive << ( buffer_9_V_reg_890 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_tmp_25_5_i_fu_610_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( buffer_10_V_reg_897 );
    sensitive << ( buffer_11_V_reg_904 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_tmp_25_6_i_fu_620_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( buffer_12_V_reg_911 );
    sensitive << ( buffer_13_V_reg_918 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_tmp_25_7_i_fu_630_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( buffer_14_V_reg_925 );
    sensitive << ( buffer_15_V_reg_932 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_tmp_25_i_fu_560_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_V_79_reg_828 );
    sensitive << ( buffer_1_V_reg_834 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_tmp_34_1_i_fu_654_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( max_1_2_V_fu_584_p3 );
    sensitive << ( max_1_3_V_fu_594_p3 );

    SC_METHOD(thread_tmp_34_2_i_fu_668_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( max_1_4_V_fu_604_p3 );
    sensitive << ( max_1_5_V_fu_614_p3 );

    SC_METHOD(thread_tmp_34_3_i_fu_682_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( max_1_6_V_fu_624_p3 );
    sensitive << ( max_1_7_V_fu_634_p3 );

    SC_METHOD(thread_tmp_34_i_fu_640_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( max_1_0_V_fu_564_p3 );
    sensitive << ( max_1_1_V_fu_574_p3 );

    SC_METHOD(thread_tmp_42_1_i_fu_710_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( max_2_2_V_fu_674_p3 );
    sensitive << ( max_2_3_V_fu_688_p3 );

    SC_METHOD(thread_tmp_42_i_fu_696_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_809 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( max_2_0_V_fu_646_p3 );
    sensitive << ( max_2_1_V_fu_660_p3 );

    SC_METHOD(thread_tmp_V_79_fu_410_p1);
    sensitive << ( in_V_data_V_dout );

    SC_METHOD(thread_tmp_V_95_fu_762_p3);
    sensitive << ( tmp_18_i_fu_734_p2 );
    sensitive << ( storemerge9_0200_1_fu_743_p3 );
    sensitive << ( max_val_V_1_0200_1_fu_755_p3 );

    SC_METHOD(thread_tmp_cast423_i_fu_356_p1);
    sensitive << ( tmp_1_reg_792 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_write_n_V_V_full_n );
    sensitive << ( in_sub_max_r_V_V_full_n );
    sensitive << ( in_sub_max_c_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( in_V_id_V0_status );
    sensitive << ( exitcond_flatten_fu_377_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage15_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage4_subdone );
    sensitive << ( ap_block_pp0_stage5_subdone );
    sensitive << ( ap_block_pp0_stage6_subdone );
    sensitive << ( ap_block_pp0_stage7_subdone );
    sensitive << ( ap_block_pp0_stage8_subdone );
    sensitive << ( ap_block_pp0_stage9_subdone );
    sensitive << ( ap_block_pp0_stage10_subdone );
    sensitive << ( ap_block_pp0_stage11_subdone );
    sensitive << ( ap_block_pp0_stage12_subdone );
    sensitive << ( ap_block_pp0_stage13_subdone );
    sensitive << ( ap_block_pp0_stage14_subdone );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000000000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "softmax_read_data_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, in_V_data_V_dout, "(port)in_V_data_V_dout");
    sc_trace(mVcdFile, in_V_data_V_empty_n, "(port)in_V_data_V_empty_n");
    sc_trace(mVcdFile, in_V_data_V_read, "(port)in_V_data_V_read");
    sc_trace(mVcdFile, in_V_id_V_dout, "(port)in_V_id_V_dout");
    sc_trace(mVcdFile, in_V_id_V_empty_n, "(port)in_V_id_V_empty_n");
    sc_trace(mVcdFile, in_V_id_V_read, "(port)in_V_id_V_read");
    sc_trace(mVcdFile, in_V_dest_V_dout, "(port)in_V_dest_V_dout");
    sc_trace(mVcdFile, in_V_dest_V_empty_n, "(port)in_V_dest_V_empty_n");
    sc_trace(mVcdFile, in_V_dest_V_read, "(port)in_V_dest_V_read");
    sc_trace(mVcdFile, in_V_user_V_dout, "(port)in_V_user_V_dout");
    sc_trace(mVcdFile, in_V_user_V_empty_n, "(port)in_V_user_V_empty_n");
    sc_trace(mVcdFile, in_V_user_V_read, "(port)in_V_user_V_read");
    sc_trace(mVcdFile, in_V_last_V_dout, "(port)in_V_last_V_dout");
    sc_trace(mVcdFile, in_V_last_V_empty_n, "(port)in_V_last_V_empty_n");
    sc_trace(mVcdFile, in_V_last_V_read, "(port)in_V_last_V_read");
    sc_trace(mVcdFile, in_write_n_V_V_din, "(port)in_write_n_V_V_din");
    sc_trace(mVcdFile, in_write_n_V_V_full_n, "(port)in_write_n_V_V_full_n");
    sc_trace(mVcdFile, in_write_n_V_V_write, "(port)in_write_n_V_V_write");
    sc_trace(mVcdFile, in_sub_max_r_V_V_din, "(port)in_sub_max_r_V_V_din");
    sc_trace(mVcdFile, in_sub_max_r_V_V_full_n, "(port)in_sub_max_r_V_V_full_n");
    sc_trace(mVcdFile, in_sub_max_r_V_V_write, "(port)in_sub_max_r_V_V_write");
    sc_trace(mVcdFile, in_sub_max_c_V_V_din, "(port)in_sub_max_c_V_V_din");
    sc_trace(mVcdFile, in_sub_max_c_V_V_full_n, "(port)in_sub_max_c_V_V_full_n");
    sc_trace(mVcdFile, in_sub_max_c_V_V_write, "(port)in_sub_max_c_V_V_write");
    sc_trace(mVcdFile, max_input_V_V_din, "(port)max_input_V_V_din");
    sc_trace(mVcdFile, max_input_V_V_full_n, "(port)max_input_V_V_full_n");
    sc_trace(mVcdFile, max_input_V_V_write, "(port)max_input_V_V_write");
    sc_trace(mVcdFile, in_sub_max_V_V_din, "(port)in_sub_max_V_V_din");
    sc_trace(mVcdFile, in_sub_max_V_V_full_n, "(port)in_sub_max_V_V_full_n");
    sc_trace(mVcdFile, in_sub_max_V_V_write, "(port)in_sub_max_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, in_V_data_V_blk_n, "in_V_data_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, exitcond_flatten_reg_809, "exitcond_flatten_reg_809");
    sc_trace(mVcdFile, in_V_id_V_blk_n, "in_V_id_V_blk_n");
    sc_trace(mVcdFile, in_V_dest_V_blk_n, "in_V_dest_V_blk_n");
    sc_trace(mVcdFile, in_V_user_V_blk_n, "in_V_user_V_blk_n");
    sc_trace(mVcdFile, in_V_last_V_blk_n, "in_V_last_V_blk_n");
    sc_trace(mVcdFile, in_write_n_V_V_blk_n, "in_write_n_V_V_blk_n");
    sc_trace(mVcdFile, in_sub_max_r_V_V_blk_n, "in_sub_max_r_V_V_blk_n");
    sc_trace(mVcdFile, in_sub_max_c_V_V_blk_n, "in_sub_max_c_V_V_blk_n");
    sc_trace(mVcdFile, max_input_V_V_blk_n, "max_input_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, tmp_21_i_reg_824, "tmp_21_i_reg_824");
    sc_trace(mVcdFile, in_sub_max_V_V_blk_n, "in_sub_max_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_block_pp0_stage4, "ap_block_pp0_stage4");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage5, "ap_CS_fsm_pp0_stage5");
    sc_trace(mVcdFile, ap_block_pp0_stage5, "ap_block_pp0_stage5");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage6, "ap_CS_fsm_pp0_stage6");
    sc_trace(mVcdFile, ap_block_pp0_stage6, "ap_block_pp0_stage6");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage7, "ap_CS_fsm_pp0_stage7");
    sc_trace(mVcdFile, ap_block_pp0_stage7, "ap_block_pp0_stage7");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage8, "ap_CS_fsm_pp0_stage8");
    sc_trace(mVcdFile, ap_block_pp0_stage8, "ap_block_pp0_stage8");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage9, "ap_CS_fsm_pp0_stage9");
    sc_trace(mVcdFile, ap_block_pp0_stage9, "ap_block_pp0_stage9");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage10, "ap_CS_fsm_pp0_stage10");
    sc_trace(mVcdFile, ap_block_pp0_stage10, "ap_block_pp0_stage10");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage11, "ap_CS_fsm_pp0_stage11");
    sc_trace(mVcdFile, ap_block_pp0_stage11, "ap_block_pp0_stage11");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage12, "ap_CS_fsm_pp0_stage12");
    sc_trace(mVcdFile, ap_block_pp0_stage12, "ap_block_pp0_stage12");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage13, "ap_CS_fsm_pp0_stage13");
    sc_trace(mVcdFile, ap_block_pp0_stage13, "ap_block_pp0_stage13");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage14, "ap_CS_fsm_pp0_stage14");
    sc_trace(mVcdFile, ap_block_pp0_stage14, "ap_block_pp0_stage14");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage15, "ap_CS_fsm_pp0_stage15");
    sc_trace(mVcdFile, ap_block_pp0_stage15, "ap_block_pp0_stage15");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, indvar_flatten_reg_299, "indvar_flatten_reg_299");
    sc_trace(mVcdFile, packet_i_reg_310, "packet_i_reg_310");
    sc_trace(mVcdFile, num_batches_fu_336_p1, "num_batches_fu_336_p1");
    sc_trace(mVcdFile, num_batches_reg_787, "num_batches_reg_787");
    sc_trace(mVcdFile, in_V_id_V0_status, "in_V_id_V0_status");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, tmp_1_reg_792, "tmp_1_reg_792");
    sc_trace(mVcdFile, tmp_15_i_fu_359_p2, "tmp_15_i_fu_359_p2");
    sc_trace(mVcdFile, tmp_15_i_reg_799, "tmp_15_i_reg_799");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, bound_fu_371_p2, "bound_fu_371_p2");
    sc_trace(mVcdFile, bound_reg_804, "bound_reg_804");
    sc_trace(mVcdFile, exitcond_flatten_fu_377_p2, "exitcond_flatten_fu_377_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage0_iter1, "ap_block_state19_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, indvar_flatten_next_fu_382_p2, "indvar_flatten_next_fu_382_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_813, "indvar_flatten_next_reg_813");
    sc_trace(mVcdFile, packet_i_mid2_fu_393_p3, "packet_i_mid2_fu_393_p3");
    sc_trace(mVcdFile, packet_i_mid2_reg_818, "packet_i_mid2_reg_818");
    sc_trace(mVcdFile, tmp_21_i_fu_405_p2, "tmp_21_i_fu_405_p2");
    sc_trace(mVcdFile, tmp_V_79_fu_410_p1, "tmp_V_79_fu_410_p1");
    sc_trace(mVcdFile, tmp_V_79_reg_828, "tmp_V_79_reg_828");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage1_iter0, "ap_block_state4_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, buffer_1_V_reg_834, "buffer_1_V_reg_834");
    sc_trace(mVcdFile, buffer_2_V_reg_841, "buffer_2_V_reg_841");
    sc_trace(mVcdFile, buffer_3_V_reg_848, "buffer_3_V_reg_848");
    sc_trace(mVcdFile, buffer_4_V_reg_855, "buffer_4_V_reg_855");
    sc_trace(mVcdFile, buffer_5_V_reg_862, "buffer_5_V_reg_862");
    sc_trace(mVcdFile, buffer_6_V_reg_869, "buffer_6_V_reg_869");
    sc_trace(mVcdFile, buffer_7_V_reg_876, "buffer_7_V_reg_876");
    sc_trace(mVcdFile, buffer_8_V_reg_883, "buffer_8_V_reg_883");
    sc_trace(mVcdFile, buffer_9_V_reg_890, "buffer_9_V_reg_890");
    sc_trace(mVcdFile, buffer_10_V_reg_897, "buffer_10_V_reg_897");
    sc_trace(mVcdFile, buffer_11_V_reg_904, "buffer_11_V_reg_904");
    sc_trace(mVcdFile, buffer_12_V_reg_911, "buffer_12_V_reg_911");
    sc_trace(mVcdFile, buffer_13_V_reg_918, "buffer_13_V_reg_918");
    sc_trace(mVcdFile, buffer_14_V_reg_925, "buffer_14_V_reg_925");
    sc_trace(mVcdFile, buffer_15_V_reg_932, "buffer_15_V_reg_932");
    sc_trace(mVcdFile, tmp_17_i_fu_555_p2, "tmp_17_i_fu_555_p2");
    sc_trace(mVcdFile, tmp_17_i_reg_939, "tmp_17_i_reg_939");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage2_iter0, "ap_block_state5_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, max_3_0_V_fu_702_p3, "max_3_0_V_fu_702_p3");
    sc_trace(mVcdFile, max_3_0_V_reg_944, "max_3_0_V_reg_944");
    sc_trace(mVcdFile, max_val_V_fu_716_p3, "max_val_V_fu_716_p3");
    sc_trace(mVcdFile, max_val_V_reg_951, "max_val_V_reg_951");
    sc_trace(mVcdFile, packet_fu_776_p2, "packet_fu_776_p2");
    sc_trace(mVcdFile, packet_reg_958, "packet_reg_958");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage15_iter0, "ap_block_state18_pp0_stage15_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage15_11001, "ap_block_pp0_stage15_11001");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_block_pp0_stage15_subdone, "ap_block_pp0_stage15_subdone");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_303_p4, "ap_phi_mux_indvar_flatten_phi_fu_303_p4");
    sc_trace(mVcdFile, ap_phi_mux_packet_i_phi_fu_314_p4, "ap_phi_mux_packet_i_phi_fu_314_p4");
    sc_trace(mVcdFile, in_V_id_V0_update, "in_V_id_V0_update");
    sc_trace(mVcdFile, ap_predicate_op116_write_state6, "ap_predicate_op116_write_state6");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage3_iter0, "ap_block_state6_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage4_iter0, "ap_block_state7_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage4_11001, "ap_block_pp0_stage4_11001");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage5_iter0, "ap_block_state8_pp0_stage5_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage5_11001, "ap_block_pp0_stage5_11001");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage6_iter0, "ap_block_state9_pp0_stage6_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage6_11001, "ap_block_pp0_stage6_11001");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage7_iter0, "ap_block_state10_pp0_stage7_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage7_11001, "ap_block_pp0_stage7_11001");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage8_iter0, "ap_block_state11_pp0_stage8_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage8_11001, "ap_block_pp0_stage8_11001");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage9_iter0, "ap_block_state12_pp0_stage9_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage9_11001, "ap_block_pp0_stage9_11001");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage10_iter0, "ap_block_state13_pp0_stage10_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage10_11001, "ap_block_pp0_stage10_11001");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage11_iter0, "ap_block_state14_pp0_stage11_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage11_11001, "ap_block_pp0_stage11_11001");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage12_iter0, "ap_block_state15_pp0_stage12_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage12_11001, "ap_block_pp0_stage12_11001");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage13_iter0, "ap_block_state16_pp0_stage13_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage13_11001, "ap_block_pp0_stage13_11001");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage14_iter0, "ap_block_state17_pp0_stage14_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage14_11001, "ap_block_pp0_stage14_11001");
    sc_trace(mVcdFile, ap_block_pp0_stage1_01001, "ap_block_pp0_stage1_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage2_01001, "ap_block_pp0_stage2_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage3_01001, "ap_block_pp0_stage3_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage4_01001, "ap_block_pp0_stage4_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage5_01001, "ap_block_pp0_stage5_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage6_01001, "ap_block_pp0_stage6_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage7_01001, "ap_block_pp0_stage7_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage8_01001, "ap_block_pp0_stage8_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage9_01001, "ap_block_pp0_stage9_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage10_01001, "ap_block_pp0_stage10_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage11_01001, "ap_block_pp0_stage11_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage12_01001, "ap_block_pp0_stage12_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage13_01001, "ap_block_pp0_stage13_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage14_01001, "ap_block_pp0_stage14_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage15_01001, "ap_block_pp0_stage15_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_V_95_fu_762_p3, "tmp_V_95_fu_762_p3");
    sc_trace(mVcdFile, tmp_V_fu_246, "tmp_V_fu_246");
    sc_trace(mVcdFile, tmp_cast423_i_fu_356_p1, "tmp_cast423_i_fu_356_p1");
    sc_trace(mVcdFile, bound_fu_371_p0, "bound_fu_371_p0");
    sc_trace(mVcdFile, bound_fu_371_p1, "bound_fu_371_p1");
    sc_trace(mVcdFile, exitcond2_fu_388_p2, "exitcond2_fu_388_p2");
    sc_trace(mVcdFile, packet_cast_i_fu_401_p1, "packet_cast_i_fu_401_p1");
    sc_trace(mVcdFile, tmp_25_i_fu_560_p2, "tmp_25_i_fu_560_p2");
    sc_trace(mVcdFile, tmp_25_1_i_fu_570_p2, "tmp_25_1_i_fu_570_p2");
    sc_trace(mVcdFile, tmp_25_2_i_fu_580_p2, "tmp_25_2_i_fu_580_p2");
    sc_trace(mVcdFile, tmp_25_3_i_fu_590_p2, "tmp_25_3_i_fu_590_p2");
    sc_trace(mVcdFile, tmp_25_4_i_fu_600_p2, "tmp_25_4_i_fu_600_p2");
    sc_trace(mVcdFile, tmp_25_5_i_fu_610_p2, "tmp_25_5_i_fu_610_p2");
    sc_trace(mVcdFile, tmp_25_6_i_fu_620_p2, "tmp_25_6_i_fu_620_p2");
    sc_trace(mVcdFile, tmp_25_7_i_fu_630_p2, "tmp_25_7_i_fu_630_p2");
    sc_trace(mVcdFile, max_1_0_V_fu_564_p3, "max_1_0_V_fu_564_p3");
    sc_trace(mVcdFile, max_1_1_V_fu_574_p3, "max_1_1_V_fu_574_p3");
    sc_trace(mVcdFile, tmp_34_i_fu_640_p2, "tmp_34_i_fu_640_p2");
    sc_trace(mVcdFile, max_1_2_V_fu_584_p3, "max_1_2_V_fu_584_p3");
    sc_trace(mVcdFile, max_1_3_V_fu_594_p3, "max_1_3_V_fu_594_p3");
    sc_trace(mVcdFile, tmp_34_1_i_fu_654_p2, "tmp_34_1_i_fu_654_p2");
    sc_trace(mVcdFile, max_1_4_V_fu_604_p3, "max_1_4_V_fu_604_p3");
    sc_trace(mVcdFile, max_1_5_V_fu_614_p3, "max_1_5_V_fu_614_p3");
    sc_trace(mVcdFile, tmp_34_2_i_fu_668_p2, "tmp_34_2_i_fu_668_p2");
    sc_trace(mVcdFile, max_1_6_V_fu_624_p3, "max_1_6_V_fu_624_p3");
    sc_trace(mVcdFile, max_1_7_V_fu_634_p3, "max_1_7_V_fu_634_p3");
    sc_trace(mVcdFile, tmp_34_3_i_fu_682_p2, "tmp_34_3_i_fu_682_p2");
    sc_trace(mVcdFile, max_2_0_V_fu_646_p3, "max_2_0_V_fu_646_p3");
    sc_trace(mVcdFile, max_2_1_V_fu_660_p3, "max_2_1_V_fu_660_p3");
    sc_trace(mVcdFile, tmp_42_i_fu_696_p2, "tmp_42_i_fu_696_p2");
    sc_trace(mVcdFile, max_2_2_V_fu_674_p3, "max_2_2_V_fu_674_p3");
    sc_trace(mVcdFile, max_2_3_V_fu_688_p3, "max_2_3_V_fu_688_p3");
    sc_trace(mVcdFile, tmp_42_1_i_fu_710_p2, "tmp_42_1_i_fu_710_p2");
    sc_trace(mVcdFile, p_0200_1_i_fu_727_p3, "p_0200_1_i_fu_727_p3");
    sc_trace(mVcdFile, tmp_19_i_fu_738_p2, "tmp_19_i_fu_738_p2");
    sc_trace(mVcdFile, tmp_20_i_fu_750_p2, "tmp_20_i_fu_750_p2");
    sc_trace(mVcdFile, tmp_18_i_fu_734_p2, "tmp_18_i_fu_734_p2");
    sc_trace(mVcdFile, storemerge9_0200_1_fu_743_p3, "storemerge9_0200_1_fu_743_p3");
    sc_trace(mVcdFile, max_val_V_1_0200_1_fu_755_p3, "max_val_V_1_0200_1_fu_755_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage4_subdone, "ap_block_pp0_stage4_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage5_subdone, "ap_block_pp0_stage5_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage6_subdone, "ap_block_pp0_stage6_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage7_subdone, "ap_block_pp0_stage7_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage8_subdone, "ap_block_pp0_stage8_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage9_subdone, "ap_block_pp0_stage9_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage10_subdone, "ap_block_pp0_stage10_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage11_subdone, "ap_block_pp0_stage11_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage12_subdone, "ap_block_pp0_stage12_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage13_subdone, "ap_block_pp0_stage13_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage14_subdone, "ap_block_pp0_stage14_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, bound_fu_371_p00, "bound_fu_371_p00");
    sc_trace(mVcdFile, bound_fu_371_p10, "bound_fu_371_p10");
    sc_trace(mVcdFile, ap_condition_554, "ap_condition_554");
    sc_trace(mVcdFile, ap_condition_559, "ap_condition_559");
    sc_trace(mVcdFile, ap_condition_564, "ap_condition_564");
    sc_trace(mVcdFile, ap_condition_569, "ap_condition_569");
    sc_trace(mVcdFile, ap_condition_574, "ap_condition_574");
    sc_trace(mVcdFile, ap_condition_579, "ap_condition_579");
    sc_trace(mVcdFile, ap_condition_584, "ap_condition_584");
    sc_trace(mVcdFile, ap_condition_589, "ap_condition_589");
    sc_trace(mVcdFile, ap_condition_594, "ap_condition_594");
    sc_trace(mVcdFile, ap_condition_599, "ap_condition_599");
    sc_trace(mVcdFile, ap_condition_604, "ap_condition_604");
    sc_trace(mVcdFile, ap_condition_609, "ap_condition_609");
    sc_trace(mVcdFile, ap_condition_614, "ap_condition_614");
    sc_trace(mVcdFile, ap_condition_619, "ap_condition_619");
    sc_trace(mVcdFile, ap_condition_624, "ap_condition_624");
    sc_trace(mVcdFile, ap_condition_629, "ap_condition_629");
#endif

    }
}

softmax_read_data::~softmax_read_data() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void softmax_read_data::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage15_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_flatten_reg_299 = indvar_flatten_next_reg_813.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        indvar_flatten_reg_299 = ap_const_lv60_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        packet_i_reg_310 = packet_reg_958.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        packet_i_reg_310 = ap_const_lv28_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        bound_reg_804 = bound_fu_371_p2.read();
        tmp_15_i_reg_799 = tmp_15_i_fu_359_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        buffer_10_V_reg_897 = in_V_data_V_dout.read().range(351, 320);
        buffer_11_V_reg_904 = in_V_data_V_dout.read().range(383, 352);
        buffer_12_V_reg_911 = in_V_data_V_dout.read().range(415, 384);
        buffer_13_V_reg_918 = in_V_data_V_dout.read().range(447, 416);
        buffer_14_V_reg_925 = in_V_data_V_dout.read().range(479, 448);
        buffer_15_V_reg_932 = in_V_data_V_dout.read().range(511, 480);
        buffer_2_V_reg_841 = in_V_data_V_dout.read().range(95, 64);
        buffer_3_V_reg_848 = in_V_data_V_dout.read().range(127, 96);
        buffer_4_V_reg_855 = in_V_data_V_dout.read().range(159, 128);
        buffer_5_V_reg_862 = in_V_data_V_dout.read().range(191, 160);
        buffer_6_V_reg_869 = in_V_data_V_dout.read().range(223, 192);
        buffer_7_V_reg_876 = in_V_data_V_dout.read().range(255, 224);
        buffer_8_V_reg_883 = in_V_data_V_dout.read().range(287, 256);
        buffer_9_V_reg_890 = in_V_data_V_dout.read().range(319, 288);
        tmp_V_79_reg_828 = tmp_V_79_fu_410_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        buffer_1_V_reg_834 = in_V_data_V_dout.read().range(63, 32);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten_reg_809 = exitcond_flatten_fu_377_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_flatten_next_reg_813 = indvar_flatten_next_fu_382_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        max_3_0_V_reg_944 = max_3_0_V_fu_702_p3.read();
        max_val_V_reg_951 = max_val_V_fu_716_p3.read();
        tmp_17_i_reg_939 = tmp_17_i_fu_555_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_n_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_c_V_V_full_n.read())))) {
        num_batches_reg_787 = num_batches_fu_336_p1.read();
        tmp_1_reg_792 = in_V_data_V_dout.read().range(63, 36);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_377_p2.read()))) {
        packet_i_mid2_reg_818 = packet_i_mid2_fu_393_p3.read();
        tmp_21_i_reg_824 = tmp_21_i_fu_405_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage15_11001.read(), ap_const_boolean_0))) {
        packet_reg_958 = packet_fu_776_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        tmp_V_fu_246 = tmp_V_95_fu_762_p3.read();
    }
}

void softmax_read_data::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void softmax_read_data::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[3];
}

void softmax_read_data::thread_ap_CS_fsm_pp0_stage10() {
    ap_CS_fsm_pp0_stage10 = ap_CS_fsm.read()[12];
}

void softmax_read_data::thread_ap_CS_fsm_pp0_stage11() {
    ap_CS_fsm_pp0_stage11 = ap_CS_fsm.read()[13];
}

void softmax_read_data::thread_ap_CS_fsm_pp0_stage12() {
    ap_CS_fsm_pp0_stage12 = ap_CS_fsm.read()[14];
}

void softmax_read_data::thread_ap_CS_fsm_pp0_stage13() {
    ap_CS_fsm_pp0_stage13 = ap_CS_fsm.read()[15];
}

void softmax_read_data::thread_ap_CS_fsm_pp0_stage14() {
    ap_CS_fsm_pp0_stage14 = ap_CS_fsm.read()[16];
}

void softmax_read_data::thread_ap_CS_fsm_pp0_stage15() {
    ap_CS_fsm_pp0_stage15 = ap_CS_fsm.read()[17];
}

void softmax_read_data::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[4];
}

void softmax_read_data::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[5];
}

void softmax_read_data::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[6];
}

void softmax_read_data::thread_ap_CS_fsm_pp0_stage5() {
    ap_CS_fsm_pp0_stage5 = ap_CS_fsm.read()[7];
}

void softmax_read_data::thread_ap_CS_fsm_pp0_stage6() {
    ap_CS_fsm_pp0_stage6 = ap_CS_fsm.read()[8];
}

void softmax_read_data::thread_ap_CS_fsm_pp0_stage7() {
    ap_CS_fsm_pp0_stage7 = ap_CS_fsm.read()[9];
}

void softmax_read_data::thread_ap_CS_fsm_pp0_stage8() {
    ap_CS_fsm_pp0_stage8 = ap_CS_fsm.read()[10];
}

void softmax_read_data::thread_ap_CS_fsm_pp0_stage9() {
    ap_CS_fsm_pp0_stage9 = ap_CS_fsm.read()[11];
}

void softmax_read_data::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void softmax_read_data::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void softmax_read_data::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[18];
}

void softmax_read_data::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_read_data::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_read_data::thread_ap_block_pp0_stage10() {
    ap_block_pp0_stage10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_read_data::thread_ap_block_pp0_stage10_01001() {
    ap_block_pp0_stage10_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage10_11001() {
    ap_block_pp0_stage10_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage10_subdone() {
    ap_block_pp0_stage10_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage11() {
    ap_block_pp0_stage11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_read_data::thread_ap_block_pp0_stage11_01001() {
    ap_block_pp0_stage11_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage11_11001() {
    ap_block_pp0_stage11_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage11_subdone() {
    ap_block_pp0_stage11_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage12() {
    ap_block_pp0_stage12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_read_data::thread_ap_block_pp0_stage12_01001() {
    ap_block_pp0_stage12_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage12_11001() {
    ap_block_pp0_stage12_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage12_subdone() {
    ap_block_pp0_stage12_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage13() {
    ap_block_pp0_stage13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_read_data::thread_ap_block_pp0_stage13_01001() {
    ap_block_pp0_stage13_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage13_11001() {
    ap_block_pp0_stage13_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage13_subdone() {
    ap_block_pp0_stage13_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage14() {
    ap_block_pp0_stage14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_read_data::thread_ap_block_pp0_stage14_01001() {
    ap_block_pp0_stage14_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage14_11001() {
    ap_block_pp0_stage14_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage14_subdone() {
    ap_block_pp0_stage14_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage15() {
    ap_block_pp0_stage15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_read_data::thread_ap_block_pp0_stage15_01001() {
    ap_block_pp0_stage15_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage15_11001() {
    ap_block_pp0_stage15_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage15_subdone() {
    ap_block_pp0_stage15_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage1_01001() {
    ap_block_pp0_stage1_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && ((esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read())) || 
  (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read()))));
}

void softmax_read_data::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && ((esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read())) || 
  (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read()))));
}

void softmax_read_data::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && ((esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read())) || 
  (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read()))));
}

void softmax_read_data::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_read_data::thread_ap_block_pp0_stage2_01001() {
    ap_block_pp0_stage2_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_read_data::thread_ap_block_pp0_stage3_01001() {
    ap_block_pp0_stage3_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && ((esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, max_input_V_V_full_n.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op116_write_state6.read()))));
}

void softmax_read_data::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && ((esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, max_input_V_V_full_n.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op116_write_state6.read()))));
}

void softmax_read_data::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && ((esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, max_input_V_V_full_n.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op116_write_state6.read()))));
}

void softmax_read_data::thread_ap_block_pp0_stage4() {
    ap_block_pp0_stage4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_read_data::thread_ap_block_pp0_stage4_01001() {
    ap_block_pp0_stage4_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage4_11001() {
    ap_block_pp0_stage4_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage4_subdone() {
    ap_block_pp0_stage4_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage5() {
    ap_block_pp0_stage5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_read_data::thread_ap_block_pp0_stage5_01001() {
    ap_block_pp0_stage5_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage5_11001() {
    ap_block_pp0_stage5_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage5_subdone() {
    ap_block_pp0_stage5_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage6() {
    ap_block_pp0_stage6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_read_data::thread_ap_block_pp0_stage6_01001() {
    ap_block_pp0_stage6_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage6_11001() {
    ap_block_pp0_stage6_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage6_subdone() {
    ap_block_pp0_stage6_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage7() {
    ap_block_pp0_stage7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_read_data::thread_ap_block_pp0_stage7_01001() {
    ap_block_pp0_stage7_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage7_11001() {
    ap_block_pp0_stage7_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage7_subdone() {
    ap_block_pp0_stage7_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage8() {
    ap_block_pp0_stage8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_read_data::thread_ap_block_pp0_stage8_01001() {
    ap_block_pp0_stage8_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage8_11001() {
    ap_block_pp0_stage8_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage8_subdone() {
    ap_block_pp0_stage8_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage9() {
    ap_block_pp0_stage9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_read_data::thread_ap_block_pp0_stage9_01001() {
    ap_block_pp0_stage9_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage9_11001() {
    ap_block_pp0_stage9_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_pp0_stage9_subdone() {
    ap_block_pp0_stage9_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_n_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_c_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_state10_pp0_stage7_iter0() {
    ap_block_state10_pp0_stage7_iter0 = (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_state11_pp0_stage8_iter0() {
    ap_block_state11_pp0_stage8_iter0 = (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_state12_pp0_stage9_iter0() {
    ap_block_state12_pp0_stage9_iter0 = (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_state13_pp0_stage10_iter0() {
    ap_block_state13_pp0_stage10_iter0 = (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_state14_pp0_stage11_iter0() {
    ap_block_state14_pp0_stage11_iter0 = (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_state15_pp0_stage12_iter0() {
    ap_block_state15_pp0_stage12_iter0 = (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_state16_pp0_stage13_iter0() {
    ap_block_state16_pp0_stage13_iter0 = (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_state17_pp0_stage14_iter0() {
    ap_block_state17_pp0_stage14_iter0 = (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_state18_pp0_stage15_iter0() {
    ap_block_state18_pp0_stage15_iter0 = (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_state19_pp0_stage0_iter1() {
    ap_block_state19_pp0_stage0_iter1 = (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_read_data::thread_ap_block_state4_pp0_stage1_iter0() {
    ap_block_state4_pp0_stage1_iter0 = ((esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read())) || (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read())));
}

void softmax_read_data::thread_ap_block_state5_pp0_stage2_iter0() {
    ap_block_state5_pp0_stage2_iter0 = (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_state6_pp0_stage3_iter0() {
    ap_block_state6_pp0_stage3_iter0 = ((esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, max_input_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op116_write_state6.read())));
}

void softmax_read_data::thread_ap_block_state7_pp0_stage4_iter0() {
    ap_block_state7_pp0_stage4_iter0 = (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_state8_pp0_stage5_iter0() {
    ap_block_state8_pp0_stage5_iter0 = (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_block_state9_pp0_stage6_iter0() {
    ap_block_state9_pp0_stage6_iter0 = (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read()));
}

void softmax_read_data::thread_ap_condition_554() {
    ap_condition_554 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_01001.read(), ap_const_boolean_0));
}

void softmax_read_data::thread_ap_condition_559() {
    ap_condition_559 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0));
}

void softmax_read_data::thread_ap_condition_564() {
    ap_condition_564 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_01001.read(), ap_const_boolean_0));
}

void softmax_read_data::thread_ap_condition_569() {
    ap_condition_569 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_01001.read(), ap_const_boolean_0));
}

void softmax_read_data::thread_ap_condition_574() {
    ap_condition_574 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_01001.read(), ap_const_boolean_0));
}

void softmax_read_data::thread_ap_condition_579() {
    ap_condition_579 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage6_01001.read(), ap_const_boolean_0));
}

void softmax_read_data::thread_ap_condition_584() {
    ap_condition_584 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage7_01001.read(), ap_const_boolean_0));
}

void softmax_read_data::thread_ap_condition_589() {
    ap_condition_589 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage8_01001.read(), ap_const_boolean_0));
}

void softmax_read_data::thread_ap_condition_594() {
    ap_condition_594 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage9_01001.read(), ap_const_boolean_0));
}

void softmax_read_data::thread_ap_condition_599() {
    ap_condition_599 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage10_01001.read(), ap_const_boolean_0));
}

void softmax_read_data::thread_ap_condition_604() {
    ap_condition_604 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage11.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage11_01001.read(), ap_const_boolean_0));
}

void softmax_read_data::thread_ap_condition_609() {
    ap_condition_609 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage12.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage12_01001.read(), ap_const_boolean_0));
}

void softmax_read_data::thread_ap_condition_614() {
    ap_condition_614 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage13.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage13_01001.read(), ap_const_boolean_0));
}

void softmax_read_data::thread_ap_condition_619() {
    ap_condition_619 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage14.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage14_01001.read(), ap_const_boolean_0));
}

void softmax_read_data::thread_ap_condition_624() {
    ap_condition_624 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage15_01001.read(), ap_const_boolean_0));
}

void softmax_read_data::thread_ap_condition_629() {
    ap_condition_629 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0));
}

void softmax_read_data::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_377_p2.read())) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void softmax_read_data::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void softmax_read_data::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void softmax_read_data::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void softmax_read_data::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void softmax_read_data::thread_ap_phi_mux_indvar_flatten_phi_fu_303_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten_phi_fu_303_p4 = indvar_flatten_next_reg_813.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_303_p4 = indvar_flatten_reg_299.read();
    }
}

void softmax_read_data::thread_ap_phi_mux_packet_i_phi_fu_314_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_packet_i_phi_fu_314_p4 = packet_reg_958.read();
    } else {
        ap_phi_mux_packet_i_phi_fu_314_p4 = packet_i_reg_310.read();
    }
}

void softmax_read_data::thread_ap_predicate_op116_write_state6() {
    ap_predicate_op116_write_state6 = (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_21_i_reg_824.read(), ap_const_lv1_1));
}

void softmax_read_data::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void softmax_read_data::thread_bound_fu_371_p0() {
    bound_fu_371_p0 =  (sc_lv<28>) (bound_fu_371_p00.read());
}

void softmax_read_data::thread_bound_fu_371_p00() {
    bound_fu_371_p00 = esl_zext<60,28>(tmp_1_reg_792.read());
}

void softmax_read_data::thread_bound_fu_371_p1() {
    bound_fu_371_p1 =  (sc_lv<32>) (bound_fu_371_p10.read());
}

void softmax_read_data::thread_bound_fu_371_p10() {
    bound_fu_371_p10 = esl_zext<60,32>(num_batches_reg_787.read());
}

void softmax_read_data::thread_bound_fu_371_p2() {
    bound_fu_371_p2 = (!bound_fu_371_p0.read().is_01() || !bound_fu_371_p1.read().is_01())? sc_lv<60>(): sc_biguint<28>(bound_fu_371_p0.read()) * sc_biguint<32>(bound_fu_371_p1.read());
}

void softmax_read_data::thread_exitcond2_fu_388_p2() {
    exitcond2_fu_388_p2 = (!ap_phi_mux_packet_i_phi_fu_314_p4.read().is_01() || !tmp_1_reg_792.read().is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_packet_i_phi_fu_314_p4.read() == tmp_1_reg_792.read());
}

void softmax_read_data::thread_exitcond_flatten_fu_377_p2() {
    exitcond_flatten_fu_377_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_303_p4.read().is_01() || !bound_reg_804.read().is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_303_p4.read() == bound_reg_804.read());
}

void softmax_read_data::thread_in_V_data_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0)))) {
        in_V_data_V_blk_n = in_V_data_V_empty_n.read();
    } else {
        in_V_data_V_blk_n = ap_const_logic_1;
    }
}

void softmax_read_data::thread_in_V_data_V_read() {
    in_V_data_V_read = in_V_id_V0_update.read();
}

void softmax_read_data::thread_in_V_dest_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0)))) {
        in_V_dest_V_blk_n = in_V_dest_V_empty_n.read();
    } else {
        in_V_dest_V_blk_n = ap_const_logic_1;
    }
}

void softmax_read_data::thread_in_V_dest_V_read() {
    in_V_dest_V_read = in_V_id_V0_update.read();
}

void softmax_read_data::thread_in_V_id_V0_status() {
    in_V_id_V0_status = (in_V_data_V_empty_n.read() & in_V_id_V_empty_n.read() & in_V_dest_V_empty_n.read() & in_V_user_V_empty_n.read() & in_V_last_V_empty_n.read());
}

void softmax_read_data::thread_in_V_id_V0_update() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_n_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_c_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        in_V_id_V0_update = ap_const_logic_1;
    } else {
        in_V_id_V0_update = ap_const_logic_0;
    }
}

void softmax_read_data::thread_in_V_id_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0)))) {
        in_V_id_V_blk_n = in_V_id_V_empty_n.read();
    } else {
        in_V_id_V_blk_n = ap_const_logic_1;
    }
}

void softmax_read_data::thread_in_V_id_V_read() {
    in_V_id_V_read = in_V_id_V0_update.read();
}

void softmax_read_data::thread_in_V_last_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0)))) {
        in_V_last_V_blk_n = in_V_last_V_empty_n.read();
    } else {
        in_V_last_V_blk_n = ap_const_logic_1;
    }
}

void softmax_read_data::thread_in_V_last_V_read() {
    in_V_last_V_read = in_V_id_V0_update.read();
}

void softmax_read_data::thread_in_V_user_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0)))) {
        in_V_user_V_blk_n = in_V_user_V_empty_n.read();
    } else {
        in_V_user_V_blk_n = ap_const_logic_1;
    }
}

void softmax_read_data::thread_in_V_user_V_read() {
    in_V_user_V_read = in_V_id_V0_update.read();
}

void softmax_read_data::thread_in_sub_max_V_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage9.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage10.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage11.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage11.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage12.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage12.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage13.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage13.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage14.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage14.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage15.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        in_sub_max_V_V_blk_n = in_sub_max_V_V_full_n.read();
    } else {
        in_sub_max_V_V_blk_n = ap_const_logic_1;
    }
}

void softmax_read_data::thread_in_sub_max_V_V_din() {
    if (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0)) {
        if (esl_seteq<1,1,1>(ap_condition_629.read(), ap_const_boolean_1)) {
            in_sub_max_V_V_din = buffer_15_V_reg_932.read();
        } else if (esl_seteq<1,1,1>(ap_condition_624.read(), ap_const_boolean_1)) {
            in_sub_max_V_V_din = buffer_14_V_reg_925.read();
        } else if (esl_seteq<1,1,1>(ap_condition_619.read(), ap_const_boolean_1)) {
            in_sub_max_V_V_din = buffer_13_V_reg_918.read();
        } else if (esl_seteq<1,1,1>(ap_condition_614.read(), ap_const_boolean_1)) {
            in_sub_max_V_V_din = buffer_12_V_reg_911.read();
        } else if (esl_seteq<1,1,1>(ap_condition_609.read(), ap_const_boolean_1)) {
            in_sub_max_V_V_din = buffer_11_V_reg_904.read();
        } else if (esl_seteq<1,1,1>(ap_condition_604.read(), ap_const_boolean_1)) {
            in_sub_max_V_V_din = buffer_10_V_reg_897.read();
        } else if (esl_seteq<1,1,1>(ap_condition_599.read(), ap_const_boolean_1)) {
            in_sub_max_V_V_din = buffer_9_V_reg_890.read();
        } else if (esl_seteq<1,1,1>(ap_condition_594.read(), ap_const_boolean_1)) {
            in_sub_max_V_V_din = buffer_8_V_reg_883.read();
        } else if (esl_seteq<1,1,1>(ap_condition_589.read(), ap_const_boolean_1)) {
            in_sub_max_V_V_din = buffer_7_V_reg_876.read();
        } else if (esl_seteq<1,1,1>(ap_condition_584.read(), ap_const_boolean_1)) {
            in_sub_max_V_V_din = buffer_6_V_reg_869.read();
        } else if (esl_seteq<1,1,1>(ap_condition_579.read(), ap_const_boolean_1)) {
            in_sub_max_V_V_din = buffer_5_V_reg_862.read();
        } else if (esl_seteq<1,1,1>(ap_condition_574.read(), ap_const_boolean_1)) {
            in_sub_max_V_V_din = buffer_4_V_reg_855.read();
        } else if (esl_seteq<1,1,1>(ap_condition_569.read(), ap_const_boolean_1)) {
            in_sub_max_V_V_din = buffer_3_V_reg_848.read();
        } else if (esl_seteq<1,1,1>(ap_condition_564.read(), ap_const_boolean_1)) {
            in_sub_max_V_V_din = buffer_2_V_reg_841.read();
        } else if (esl_seteq<1,1,1>(ap_condition_559.read(), ap_const_boolean_1)) {
            in_sub_max_V_V_din = buffer_1_V_reg_834.read();
        } else if (esl_seteq<1,1,1>(ap_condition_554.read(), ap_const_boolean_1)) {
            in_sub_max_V_V_din = tmp_V_79_fu_410_p1.read();
        } else {
            in_sub_max_V_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        in_sub_max_V_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void softmax_read_data::thread_in_sub_max_V_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage15_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage10_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage11.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage11_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage12.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage12_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage13.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage13_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage14.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage14_11001.read(), ap_const_boolean_0)))) {
        in_sub_max_V_V_write = ap_const_logic_1;
    } else {
        in_sub_max_V_V_write = ap_const_logic_0;
    }
}

void softmax_read_data::thread_in_sub_max_c_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        in_sub_max_c_V_V_blk_n = in_sub_max_c_V_V_full_n.read();
    } else {
        in_sub_max_c_V_V_blk_n = ap_const_logic_1;
    }
}

void softmax_read_data::thread_in_sub_max_c_V_V_din() {
    in_sub_max_c_V_V_din = in_V_data_V_dout.read().range(63, 32);
}

void softmax_read_data::thread_in_sub_max_c_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_n_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_c_V_V_full_n.read())))) {
        in_sub_max_c_V_V_write = ap_const_logic_1;
    } else {
        in_sub_max_c_V_V_write = ap_const_logic_0;
    }
}

void softmax_read_data::thread_in_sub_max_r_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        in_sub_max_r_V_V_blk_n = in_sub_max_r_V_V_full_n.read();
    } else {
        in_sub_max_r_V_V_blk_n = ap_const_logic_1;
    }
}

void softmax_read_data::thread_in_sub_max_r_V_V_din() {
    in_sub_max_r_V_V_din = in_V_data_V_dout.read().range(32-1, 0);
}

void softmax_read_data::thread_in_sub_max_r_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_n_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_c_V_V_full_n.read())))) {
        in_sub_max_r_V_V_write = ap_const_logic_1;
    } else {
        in_sub_max_r_V_V_write = ap_const_logic_0;
    }
}

void softmax_read_data::thread_in_write_n_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        in_write_n_V_V_blk_n = in_write_n_V_V_full_n.read();
    } else {
        in_write_n_V_V_blk_n = ap_const_logic_1;
    }
}

void softmax_read_data::thread_in_write_n_V_V_din() {
    in_write_n_V_V_din = in_V_data_V_dout.read().range(96-1, 0);
}

void softmax_read_data::thread_in_write_n_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_n_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_c_V_V_full_n.read())))) {
        in_write_n_V_V_write = ap_const_logic_1;
    } else {
        in_write_n_V_V_write = ap_const_logic_0;
    }
}

void softmax_read_data::thread_indvar_flatten_next_fu_382_p2() {
    indvar_flatten_next_fu_382_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_303_p4.read().is_01() || !ap_const_lv60_1.is_01())? sc_lv<60>(): (sc_biguint<60>(ap_phi_mux_indvar_flatten_phi_fu_303_p4.read()) + sc_biguint<60>(ap_const_lv60_1));
}

void softmax_read_data::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void softmax_read_data::thread_max_1_0_V_fu_564_p3() {
    max_1_0_V_fu_564_p3 = (!tmp_25_i_fu_560_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_25_i_fu_560_p2.read()[0].to_bool())? tmp_V_79_reg_828.read(): buffer_1_V_reg_834.read());
}

void softmax_read_data::thread_max_1_1_V_fu_574_p3() {
    max_1_1_V_fu_574_p3 = (!tmp_25_1_i_fu_570_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_25_1_i_fu_570_p2.read()[0].to_bool())? buffer_2_V_reg_841.read(): buffer_3_V_reg_848.read());
}

void softmax_read_data::thread_max_1_2_V_fu_584_p3() {
    max_1_2_V_fu_584_p3 = (!tmp_25_2_i_fu_580_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_25_2_i_fu_580_p2.read()[0].to_bool())? buffer_4_V_reg_855.read(): buffer_5_V_reg_862.read());
}

void softmax_read_data::thread_max_1_3_V_fu_594_p3() {
    max_1_3_V_fu_594_p3 = (!tmp_25_3_i_fu_590_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_25_3_i_fu_590_p2.read()[0].to_bool())? buffer_6_V_reg_869.read(): buffer_7_V_reg_876.read());
}

void softmax_read_data::thread_max_1_4_V_fu_604_p3() {
    max_1_4_V_fu_604_p3 = (!tmp_25_4_i_fu_600_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_25_4_i_fu_600_p2.read()[0].to_bool())? buffer_8_V_reg_883.read(): buffer_9_V_reg_890.read());
}

void softmax_read_data::thread_max_1_5_V_fu_614_p3() {
    max_1_5_V_fu_614_p3 = (!tmp_25_5_i_fu_610_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_25_5_i_fu_610_p2.read()[0].to_bool())? buffer_10_V_reg_897.read(): buffer_11_V_reg_904.read());
}

void softmax_read_data::thread_max_1_6_V_fu_624_p3() {
    max_1_6_V_fu_624_p3 = (!tmp_25_6_i_fu_620_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_25_6_i_fu_620_p2.read()[0].to_bool())? buffer_12_V_reg_911.read(): buffer_13_V_reg_918.read());
}

void softmax_read_data::thread_max_1_7_V_fu_634_p3() {
    max_1_7_V_fu_634_p3 = (!tmp_25_7_i_fu_630_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_25_7_i_fu_630_p2.read()[0].to_bool())? buffer_14_V_reg_925.read(): buffer_15_V_reg_932.read());
}

void softmax_read_data::thread_max_2_0_V_fu_646_p3() {
    max_2_0_V_fu_646_p3 = (!tmp_34_i_fu_640_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_34_i_fu_640_p2.read()[0].to_bool())? max_1_1_V_fu_574_p3.read(): max_1_0_V_fu_564_p3.read());
}

void softmax_read_data::thread_max_2_1_V_fu_660_p3() {
    max_2_1_V_fu_660_p3 = (!tmp_34_1_i_fu_654_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_34_1_i_fu_654_p2.read()[0].to_bool())? max_1_3_V_fu_594_p3.read(): max_1_2_V_fu_584_p3.read());
}

void softmax_read_data::thread_max_2_2_V_fu_674_p3() {
    max_2_2_V_fu_674_p3 = (!tmp_34_2_i_fu_668_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_34_2_i_fu_668_p2.read()[0].to_bool())? max_1_5_V_fu_614_p3.read(): max_1_4_V_fu_604_p3.read());
}

void softmax_read_data::thread_max_2_3_V_fu_688_p3() {
    max_2_3_V_fu_688_p3 = (!tmp_34_3_i_fu_682_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_34_3_i_fu_682_p2.read()[0].to_bool())? max_1_7_V_fu_634_p3.read(): max_1_6_V_fu_624_p3.read());
}

void softmax_read_data::thread_max_3_0_V_fu_702_p3() {
    max_3_0_V_fu_702_p3 = (!tmp_42_i_fu_696_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_42_i_fu_696_p2.read()[0].to_bool())? max_2_1_V_fu_660_p3.read(): max_2_0_V_fu_646_p3.read());
}

void softmax_read_data::thread_max_input_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_809.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_21_i_reg_824.read(), ap_const_lv1_1))) {
        max_input_V_V_blk_n = max_input_V_V_full_n.read();
    } else {
        max_input_V_V_blk_n = ap_const_logic_1;
    }
}

void softmax_read_data::thread_max_input_V_V_din() {
    max_input_V_V_din = (!tmp_18_i_fu_734_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_18_i_fu_734_p2.read()[0].to_bool())? storemerge9_0200_1_fu_743_p3.read(): max_val_V_1_0200_1_fu_755_p3.read());
}

void softmax_read_data::thread_max_input_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op116_write_state6.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        max_input_V_V_write = ap_const_logic_1;
    } else {
        max_input_V_V_write = ap_const_logic_0;
    }
}

void softmax_read_data::thread_max_val_V_1_0200_1_fu_755_p3() {
    max_val_V_1_0200_1_fu_755_p3 = (!tmp_20_i_fu_750_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_20_i_fu_750_p2.read()[0].to_bool())? max_3_0_V_reg_944.read(): p_0200_1_i_fu_727_p3.read());
}

void softmax_read_data::thread_max_val_V_fu_716_p3() {
    max_val_V_fu_716_p3 = (!tmp_42_1_i_fu_710_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_42_1_i_fu_710_p2.read()[0].to_bool())? max_2_3_V_fu_688_p3.read(): max_2_2_V_fu_674_p3.read());
}

void softmax_read_data::thread_num_batches_fu_336_p1() {
    num_batches_fu_336_p1 = in_V_data_V_dout.read().range(32-1, 0);
}

void softmax_read_data::thread_p_0200_1_i_fu_727_p3() {
    p_0200_1_i_fu_727_p3 = (!tmp_17_i_reg_939.read()[0].is_01())? sc_lv<32>(): ((tmp_17_i_reg_939.read()[0].to_bool())? ap_const_lv32_80000000: tmp_V_fu_246.read());
}

void softmax_read_data::thread_packet_cast_i_fu_401_p1() {
    packet_cast_i_fu_401_p1 = esl_zext<29,28>(packet_i_mid2_fu_393_p3.read());
}

void softmax_read_data::thread_packet_fu_776_p2() {
    packet_fu_776_p2 = (!packet_i_mid2_reg_818.read().is_01() || !ap_const_lv28_1.is_01())? sc_lv<28>(): (sc_biguint<28>(packet_i_mid2_reg_818.read()) + sc_biguint<28>(ap_const_lv28_1));
}

void softmax_read_data::thread_packet_i_mid2_fu_393_p3() {
    packet_i_mid2_fu_393_p3 = (!exitcond2_fu_388_p2.read()[0].is_01())? sc_lv<28>(): ((exitcond2_fu_388_p2.read()[0].to_bool())? ap_const_lv28_0: ap_phi_mux_packet_i_phi_fu_314_p4.read());
}

void softmax_read_data::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void softmax_read_data::thread_start_out() {
    start_out = real_start.read();
}

void softmax_read_data::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void softmax_read_data::thread_storemerge9_0200_1_fu_743_p3() {
    storemerge9_0200_1_fu_743_p3 = (!tmp_19_i_fu_738_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_19_i_fu_738_p2.read()[0].to_bool())? max_val_V_reg_951.read(): p_0200_1_i_fu_727_p3.read());
}

void softmax_read_data::thread_tmp_15_i_fu_359_p2() {
    tmp_15_i_fu_359_p2 = (!ap_const_lv29_1FFFFFFF.is_01() || !tmp_cast423_i_fu_356_p1.read().is_01())? sc_lv<29>(): (sc_bigint<29>(ap_const_lv29_1FFFFFFF) + sc_biguint<29>(tmp_cast423_i_fu_356_p1.read()));
}

void softmax_read_data::thread_tmp_17_i_fu_555_p2() {
    tmp_17_i_fu_555_p2 = (!packet_i_mid2_reg_818.read().is_01() || !ap_const_lv28_0.is_01())? sc_lv<1>(): sc_lv<1>(packet_i_mid2_reg_818.read() == ap_const_lv28_0);
}

void softmax_read_data::thread_tmp_18_i_fu_734_p2() {
    tmp_18_i_fu_734_p2 = (!max_3_0_V_reg_944.read().is_01() || !max_val_V_reg_951.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_3_0_V_reg_944.read()) < sc_bigint<32>(max_val_V_reg_951.read()));
}

void softmax_read_data::thread_tmp_19_i_fu_738_p2() {
    tmp_19_i_fu_738_p2 = (!max_val_V_reg_951.read().is_01() || !p_0200_1_i_fu_727_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_val_V_reg_951.read()) > sc_bigint<32>(p_0200_1_i_fu_727_p3.read()));
}

void softmax_read_data::thread_tmp_20_i_fu_750_p2() {
    tmp_20_i_fu_750_p2 = (!max_3_0_V_reg_944.read().is_01() || !p_0200_1_i_fu_727_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_3_0_V_reg_944.read()) > sc_bigint<32>(p_0200_1_i_fu_727_p3.read()));
}

void softmax_read_data::thread_tmp_21_i_fu_405_p2() {
    tmp_21_i_fu_405_p2 = (!packet_cast_i_fu_401_p1.read().is_01() || !tmp_15_i_reg_799.read().is_01())? sc_lv<1>(): sc_lv<1>(packet_cast_i_fu_401_p1.read() == tmp_15_i_reg_799.read());
}

void softmax_read_data::thread_tmp_25_1_i_fu_570_p2() {
    tmp_25_1_i_fu_570_p2 = (!buffer_2_V_reg_841.read().is_01() || !buffer_3_V_reg_848.read().is_01())? sc_lv<1>(): (sc_bigint<32>(buffer_2_V_reg_841.read()) > sc_bigint<32>(buffer_3_V_reg_848.read()));
}

void softmax_read_data::thread_tmp_25_2_i_fu_580_p2() {
    tmp_25_2_i_fu_580_p2 = (!buffer_4_V_reg_855.read().is_01() || !buffer_5_V_reg_862.read().is_01())? sc_lv<1>(): (sc_bigint<32>(buffer_4_V_reg_855.read()) > sc_bigint<32>(buffer_5_V_reg_862.read()));
}

void softmax_read_data::thread_tmp_25_3_i_fu_590_p2() {
    tmp_25_3_i_fu_590_p2 = (!buffer_6_V_reg_869.read().is_01() || !buffer_7_V_reg_876.read().is_01())? sc_lv<1>(): (sc_bigint<32>(buffer_6_V_reg_869.read()) > sc_bigint<32>(buffer_7_V_reg_876.read()));
}

void softmax_read_data::thread_tmp_25_4_i_fu_600_p2() {
    tmp_25_4_i_fu_600_p2 = (!buffer_8_V_reg_883.read().is_01() || !buffer_9_V_reg_890.read().is_01())? sc_lv<1>(): (sc_bigint<32>(buffer_8_V_reg_883.read()) > sc_bigint<32>(buffer_9_V_reg_890.read()));
}

void softmax_read_data::thread_tmp_25_5_i_fu_610_p2() {
    tmp_25_5_i_fu_610_p2 = (!buffer_10_V_reg_897.read().is_01() || !buffer_11_V_reg_904.read().is_01())? sc_lv<1>(): (sc_bigint<32>(buffer_10_V_reg_897.read()) > sc_bigint<32>(buffer_11_V_reg_904.read()));
}

void softmax_read_data::thread_tmp_25_6_i_fu_620_p2() {
    tmp_25_6_i_fu_620_p2 = (!buffer_12_V_reg_911.read().is_01() || !buffer_13_V_reg_918.read().is_01())? sc_lv<1>(): (sc_bigint<32>(buffer_12_V_reg_911.read()) > sc_bigint<32>(buffer_13_V_reg_918.read()));
}

void softmax_read_data::thread_tmp_25_7_i_fu_630_p2() {
    tmp_25_7_i_fu_630_p2 = (!buffer_14_V_reg_925.read().is_01() || !buffer_15_V_reg_932.read().is_01())? sc_lv<1>(): (sc_bigint<32>(buffer_14_V_reg_925.read()) > sc_bigint<32>(buffer_15_V_reg_932.read()));
}

void softmax_read_data::thread_tmp_25_i_fu_560_p2() {
    tmp_25_i_fu_560_p2 = (!tmp_V_79_reg_828.read().is_01() || !buffer_1_V_reg_834.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_V_79_reg_828.read()) > sc_bigint<32>(buffer_1_V_reg_834.read()));
}

void softmax_read_data::thread_tmp_34_1_i_fu_654_p2() {
    tmp_34_1_i_fu_654_p2 = (!max_1_2_V_fu_584_p3.read().is_01() || !max_1_3_V_fu_594_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_1_2_V_fu_584_p3.read()) < sc_bigint<32>(max_1_3_V_fu_594_p3.read()));
}

void softmax_read_data::thread_tmp_34_2_i_fu_668_p2() {
    tmp_34_2_i_fu_668_p2 = (!max_1_4_V_fu_604_p3.read().is_01() || !max_1_5_V_fu_614_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_1_4_V_fu_604_p3.read()) < sc_bigint<32>(max_1_5_V_fu_614_p3.read()));
}

void softmax_read_data::thread_tmp_34_3_i_fu_682_p2() {
    tmp_34_3_i_fu_682_p2 = (!max_1_6_V_fu_624_p3.read().is_01() || !max_1_7_V_fu_634_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_1_6_V_fu_624_p3.read()) < sc_bigint<32>(max_1_7_V_fu_634_p3.read()));
}

void softmax_read_data::thread_tmp_34_i_fu_640_p2() {
    tmp_34_i_fu_640_p2 = (!max_1_0_V_fu_564_p3.read().is_01() || !max_1_1_V_fu_574_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_1_0_V_fu_564_p3.read()) < sc_bigint<32>(max_1_1_V_fu_574_p3.read()));
}

void softmax_read_data::thread_tmp_42_1_i_fu_710_p2() {
    tmp_42_1_i_fu_710_p2 = (!max_2_2_V_fu_674_p3.read().is_01() || !max_2_3_V_fu_688_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_2_2_V_fu_674_p3.read()) < sc_bigint<32>(max_2_3_V_fu_688_p3.read()));
}

void softmax_read_data::thread_tmp_42_i_fu_696_p2() {
    tmp_42_i_fu_696_p2 = (!max_2_0_V_fu_646_p3.read().is_01() || !max_2_1_V_fu_660_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_2_0_V_fu_646_p3.read()) < sc_bigint<32>(max_2_1_V_fu_660_p3.read()));
}

void softmax_read_data::thread_tmp_V_79_fu_410_p1() {
    tmp_V_79_fu_410_p1 = in_V_data_V_dout.read().range(32-1, 0);
}

void softmax_read_data::thread_tmp_V_95_fu_762_p3() {
    tmp_V_95_fu_762_p3 = (!tmp_18_i_fu_734_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_18_i_fu_734_p2.read()[0].to_bool())? storemerge9_0200_1_fu_743_p3.read(): max_val_V_1_0200_1_fu_755_p3.read());
}

void softmax_read_data::thread_tmp_cast423_i_fu_356_p1() {
    tmp_cast423_i_fu_356_p1 = esl_zext<29,28>(tmp_1_reg_792.read());
}

void softmax_read_data::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_id_V0_status.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_n_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_c_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_377_p2.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_377_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 128 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage5_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            }
            break;
        case 256 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage6_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            }
            break;
        case 512 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage7_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            }
            break;
        case 1024 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage8_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            }
            break;
        case 2048 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage9_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            }
            break;
        case 4096 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage10_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            }
            break;
        case 8192 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage11_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            }
            break;
        case 16384 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage12_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            }
            break;
        case 32768 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage13_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            }
            break;
        case 65536 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage14_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            }
            break;
        case 131072 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage15_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            }
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

