// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _AttentionMatmulWrite_HH_
#define _AttentionMatmulWrite_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "kernel_4_mul_mul_16ns_16ns_32_1_1.h"

namespace ap_rtl {

struct AttentionMatmulWrite : public sc_module {
    // Port declarations 55
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<32> > in_n_r_V_V_dout;
    sc_in< sc_logic > in_n_r_V_V_empty_n;
    sc_out< sc_logic > in_n_r_V_V_read;
    sc_in< sc_lv<32> > in_n_c_V_V_dout;
    sc_in< sc_logic > in_n_c_V_V_empty_n;
    sc_out< sc_logic > in_n_c_V_V_read;
    sc_in< sc_lv<32> > in_0_0_V_V_dout;
    sc_in< sc_logic > in_0_0_V_V_empty_n;
    sc_out< sc_logic > in_0_0_V_V_read;
    sc_in< sc_lv<32> > in_0_1_V_V_dout;
    sc_in< sc_logic > in_0_1_V_V_empty_n;
    sc_out< sc_logic > in_0_1_V_V_read;
    sc_in< sc_lv<32> > in_1_0_V_V_dout;
    sc_in< sc_logic > in_1_0_V_V_empty_n;
    sc_out< sc_logic > in_1_0_V_V_read;
    sc_in< sc_lv<32> > in_1_1_V_V_dout;
    sc_in< sc_logic > in_1_1_V_V_empty_n;
    sc_out< sc_logic > in_1_1_V_V_read;
    sc_in< sc_lv<32> > in_2_0_V_V_dout;
    sc_in< sc_logic > in_2_0_V_V_empty_n;
    sc_out< sc_logic > in_2_0_V_V_read;
    sc_in< sc_lv<32> > in_2_1_V_V_dout;
    sc_in< sc_logic > in_2_1_V_V_empty_n;
    sc_out< sc_logic > in_2_1_V_V_read;
    sc_in< sc_lv<32> > in_3_0_V_V_dout;
    sc_in< sc_logic > in_3_0_V_V_empty_n;
    sc_out< sc_logic > in_3_0_V_V_read;
    sc_in< sc_lv<32> > in_3_1_V_V_dout;
    sc_in< sc_logic > in_3_1_V_V_empty_n;
    sc_out< sc_logic > in_3_1_V_V_read;
    sc_out< sc_lv<512> > out_V_data_V_din;
    sc_in< sc_logic > out_V_data_V_full_n;
    sc_out< sc_logic > out_V_data_V_write;
    sc_out< sc_lv<8> > out_V_id_V_din;
    sc_in< sc_logic > out_V_id_V_full_n;
    sc_out< sc_logic > out_V_id_V_write;
    sc_out< sc_lv<8> > out_V_dest_V_din;
    sc_in< sc_logic > out_V_dest_V_full_n;
    sc_out< sc_logic > out_V_dest_V_write;
    sc_out< sc_lv<16> > out_V_user_V_din;
    sc_in< sc_logic > out_V_user_V_full_n;
    sc_out< sc_logic > out_V_user_V_write;
    sc_out< sc_lv<1> > out_V_last_V_din;
    sc_in< sc_logic > out_V_last_V_full_n;
    sc_out< sc_logic > out_V_last_V_write;


    // Module declarations
    AttentionMatmulWrite(sc_module_name name);
    SC_HAS_PROCESS(AttentionMatmulWrite);

    ~AttentionMatmulWrite();

    sc_trace_file* mVcdFile;

    kernel_4_mul_mul_16ns_16ns_32_1_1<1,1,16,16,32>* kernel_4_mul_mul_16ns_16ns_32_1_1_U1865;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > in_n_r_V_V_blk_n;
    sc_signal< sc_logic > in_n_c_V_V_blk_n;
    sc_signal< sc_logic > in_0_0_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > in_0_1_V_V_blk_n;
    sc_signal< sc_logic > in_1_0_V_V_blk_n;
    sc_signal< sc_logic > in_1_1_V_V_blk_n;
    sc_signal< sc_logic > in_2_0_V_V_blk_n;
    sc_signal< sc_logic > in_2_1_V_V_blk_n;
    sc_signal< sc_logic > in_3_0_V_V_blk_n;
    sc_signal< sc_logic > in_3_1_V_V_blk_n;
    sc_signal< sc_logic > out_V_data_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > index_reg_1067;
    sc_signal< sc_logic > out_V_id_V_blk_n;
    sc_signal< sc_logic > out_V_dest_V_blk_n;
    sc_signal< sc_logic > out_V_user_V_blk_n;
    sc_signal< sc_logic > out_V_last_V_blk_n;
    sc_signal< sc_lv<29> > i_op_assign_reg_440;
    sc_signal< sc_lv<32> > tmp_V_reg_1027;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > tmp_V_114_reg_1032;
    sc_signal< sc_lv<16> > tmp_reg_1037;
    sc_signal< sc_lv<29> > tmp_4_reg_1042;
    sc_signal< sc_lv<16> > temp_user_V_fu_494_p2;
    sc_signal< sc_lv<16> > temp_user_V_reg_1048;
    sc_signal< sc_logic > out_V_id_V1_status;
    sc_signal< sc_lv<30> > ret_V_1_fu_503_p2;
    sc_signal< sc_lv<30> > ret_V_1_reg_1053;
    sc_signal< sc_lv<1> > exitcond_fu_509_p2;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<29> > i_fu_514_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > index_fu_520_p1;
    sc_signal< sc_lv<1> > temp_last_V_fu_528_p2;
    sc_signal< sc_lv<1> > temp_last_V_reg_1072;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > out_V_id_V1_update;
    sc_signal< sc_lv<512> > p_Result_s_fu_485_p4;
    sc_signal< sc_lv<512> > tmp_data_V_3_fu_886_p17;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > out_data_8_V_fu_294;
    sc_signal< sc_lv<32> > out_data_8_V_2_fu_602_p3;
    sc_signal< sc_lv<32> > out_data_9_V_fu_298;
    sc_signal< sc_lv<32> > out_data_9_V_2_fu_630_p3;
    sc_signal< sc_lv<32> > out_data_10_V_fu_302;
    sc_signal< sc_lv<32> > out_data_10_V_2_fu_658_p3;
    sc_signal< sc_lv<32> > out_data_11_V_fu_306;
    sc_signal< sc_lv<32> > out_data_11_V_2_fu_686_p3;
    sc_signal< sc_lv<32> > out_data_12_V_fu_310;
    sc_signal< sc_lv<32> > out_data_12_V_2_fu_714_p3;
    sc_signal< sc_lv<32> > out_data_13_V_fu_314;
    sc_signal< sc_lv<32> > out_data_13_V_2_fu_742_p3;
    sc_signal< sc_lv<32> > out_data_14_V_fu_318;
    sc_signal< sc_lv<32> > out_data_14_V_2_fu_770_p3;
    sc_signal< sc_lv<32> > out_data_15_V_fu_322;
    sc_signal< sc_lv<32> > out_data_15_V_2_fu_798_p3;
    sc_signal< sc_lv<32> > out_data_8_V_3_fu_326;
    sc_signal< sc_lv<32> > out_data_8_V_1_fu_594_p3;
    sc_signal< sc_lv<32> > out_data_9_V_3_fu_330;
    sc_signal< sc_lv<32> > out_data_9_V_1_fu_622_p3;
    sc_signal< sc_lv<32> > out_data_10_V_3_fu_334;
    sc_signal< sc_lv<32> > out_data_10_V_1_fu_650_p3;
    sc_signal< sc_lv<32> > out_data_11_V_3_fu_338;
    sc_signal< sc_lv<32> > out_data_11_V_1_fu_678_p3;
    sc_signal< sc_lv<32> > out_data_12_V_3_fu_342;
    sc_signal< sc_lv<32> > out_data_12_V_1_fu_706_p3;
    sc_signal< sc_lv<32> > out_data_13_V_3_fu_346;
    sc_signal< sc_lv<32> > out_data_13_V_1_fu_734_p3;
    sc_signal< sc_lv<32> > out_data_14_V_3_fu_350;
    sc_signal< sc_lv<32> > out_data_14_V_1_fu_762_p3;
    sc_signal< sc_lv<32> > out_data_15_V_3_fu_354;
    sc_signal< sc_lv<32> > out_data_15_V_1_fu_790_p3;
    sc_signal< sc_lv<16> > tmp_11_fu_451_p1;
    sc_signal< sc_lv<16> > tmp_12_fu_455_p1;
    sc_signal< sc_lv<32> > ret_V_fu_923_p2;
    sc_signal< sc_lv<30> > lhs_V_cast_fu_500_p1;
    sc_signal< sc_lv<30> > tmp_54_cast_fu_524_p1;
    sc_signal< sc_lv<4> > tmp_95_t_fu_581_p3;
    sc_signal< sc_lv<1> > cond_fu_588_p2;
    sc_signal< sc_lv<4> > tmp_102_0_15_t_fu_610_p2;
    sc_signal< sc_lv<1> > cond1_fu_616_p2;
    sc_signal< sc_lv<4> > tmp_101_1_06_t_fu_638_p2;
    sc_signal< sc_lv<1> > cond2_fu_644_p2;
    sc_signal< sc_lv<4> > tmp_102_1_18_t_fu_666_p2;
    sc_signal< sc_lv<1> > cond3_fu_672_p2;
    sc_signal< sc_lv<4> > tmp_101_2_09_t_fu_694_p2;
    sc_signal< sc_lv<1> > cond4_fu_700_p2;
    sc_signal< sc_lv<4> > tmp_102_2_111_t_fu_722_p2;
    sc_signal< sc_lv<1> > cond5_fu_728_p2;
    sc_signal< sc_lv<4> > tmp_101_3_012_t_fu_750_p2;
    sc_signal< sc_lv<1> > cond6_fu_756_p2;
    sc_signal< sc_lv<4> > tmp_102_3_114_t_fu_778_p2;
    sc_signal< sc_lv<1> > cond7_fu_784_p2;
    sc_signal< sc_lv<16> > ret_V_fu_923_p0;
    sc_signal< sc_lv<16> > ret_V_fu_923_p1;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<32> > ret_V_fu_923_p00;
    sc_signal< sc_lv<32> > ret_V_fu_923_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state5;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<29> ap_const_lv29_0;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<8> ap_const_lv8_10;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<448> ap_const_lv448_lc_1;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<30> ap_const_lv30_3FFFFFFF;
    static const sc_lv<29> ap_const_lv29_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_7;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_cond1_fu_616_p2();
    void thread_cond2_fu_644_p2();
    void thread_cond3_fu_672_p2();
    void thread_cond4_fu_700_p2();
    void thread_cond5_fu_728_p2();
    void thread_cond6_fu_756_p2();
    void thread_cond7_fu_784_p2();
    void thread_cond_fu_588_p2();
    void thread_exitcond_fu_509_p2();
    void thread_i_fu_514_p2();
    void thread_in_0_0_V_V_blk_n();
    void thread_in_0_0_V_V_read();
    void thread_in_0_1_V_V_blk_n();
    void thread_in_0_1_V_V_read();
    void thread_in_1_0_V_V_blk_n();
    void thread_in_1_0_V_V_read();
    void thread_in_1_1_V_V_blk_n();
    void thread_in_1_1_V_V_read();
    void thread_in_2_0_V_V_blk_n();
    void thread_in_2_0_V_V_read();
    void thread_in_2_1_V_V_blk_n();
    void thread_in_2_1_V_V_read();
    void thread_in_3_0_V_V_blk_n();
    void thread_in_3_0_V_V_read();
    void thread_in_3_1_V_V_blk_n();
    void thread_in_3_1_V_V_read();
    void thread_in_n_c_V_V_blk_n();
    void thread_in_n_c_V_V_read();
    void thread_in_n_r_V_V_blk_n();
    void thread_in_n_r_V_V_read();
    void thread_index_fu_520_p1();
    void thread_internal_ap_ready();
    void thread_lhs_V_cast_fu_500_p1();
    void thread_out_V_data_V_blk_n();
    void thread_out_V_data_V_din();
    void thread_out_V_data_V_write();
    void thread_out_V_dest_V_blk_n();
    void thread_out_V_dest_V_din();
    void thread_out_V_dest_V_write();
    void thread_out_V_id_V1_status();
    void thread_out_V_id_V1_update();
    void thread_out_V_id_V_blk_n();
    void thread_out_V_id_V_din();
    void thread_out_V_id_V_write();
    void thread_out_V_last_V_blk_n();
    void thread_out_V_last_V_din();
    void thread_out_V_last_V_write();
    void thread_out_V_user_V_blk_n();
    void thread_out_V_user_V_din();
    void thread_out_V_user_V_write();
    void thread_out_data_10_V_1_fu_650_p3();
    void thread_out_data_10_V_2_fu_658_p3();
    void thread_out_data_11_V_1_fu_678_p3();
    void thread_out_data_11_V_2_fu_686_p3();
    void thread_out_data_12_V_1_fu_706_p3();
    void thread_out_data_12_V_2_fu_714_p3();
    void thread_out_data_13_V_1_fu_734_p3();
    void thread_out_data_13_V_2_fu_742_p3();
    void thread_out_data_14_V_1_fu_762_p3();
    void thread_out_data_14_V_2_fu_770_p3();
    void thread_out_data_15_V_1_fu_790_p3();
    void thread_out_data_15_V_2_fu_798_p3();
    void thread_out_data_8_V_1_fu_594_p3();
    void thread_out_data_8_V_2_fu_602_p3();
    void thread_out_data_9_V_1_fu_622_p3();
    void thread_out_data_9_V_2_fu_630_p3();
    void thread_p_Result_s_fu_485_p4();
    void thread_real_start();
    void thread_ret_V_1_fu_503_p2();
    void thread_ret_V_fu_923_p0();
    void thread_ret_V_fu_923_p00();
    void thread_ret_V_fu_923_p1();
    void thread_ret_V_fu_923_p10();
    void thread_start_out();
    void thread_start_write();
    void thread_temp_last_V_fu_528_p2();
    void thread_temp_user_V_fu_494_p2();
    void thread_tmp_101_1_06_t_fu_638_p2();
    void thread_tmp_101_2_09_t_fu_694_p2();
    void thread_tmp_101_3_012_t_fu_750_p2();
    void thread_tmp_102_0_15_t_fu_610_p2();
    void thread_tmp_102_1_18_t_fu_666_p2();
    void thread_tmp_102_2_111_t_fu_722_p2();
    void thread_tmp_102_3_114_t_fu_778_p2();
    void thread_tmp_11_fu_451_p1();
    void thread_tmp_12_fu_455_p1();
    void thread_tmp_54_cast_fu_524_p1();
    void thread_tmp_95_t_fu_581_p3();
    void thread_tmp_data_V_3_fu_886_p17();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
