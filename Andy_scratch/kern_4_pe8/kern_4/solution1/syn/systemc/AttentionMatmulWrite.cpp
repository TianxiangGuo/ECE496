// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "AttentionMatmulWrite.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic AttentionMatmulWrite::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic AttentionMatmulWrite::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> AttentionMatmulWrite::ap_ST_fsm_state1 = "1";
const sc_lv<4> AttentionMatmulWrite::ap_ST_fsm_state2 = "10";
const sc_lv<4> AttentionMatmulWrite::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> AttentionMatmulWrite::ap_ST_fsm_state5 = "1000";
const bool AttentionMatmulWrite::ap_const_boolean_1 = true;
const sc_lv<32> AttentionMatmulWrite::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> AttentionMatmulWrite::ap_const_lv32_2 = "10";
const bool AttentionMatmulWrite::ap_const_boolean_0 = false;
const sc_lv<32> AttentionMatmulWrite::ap_const_lv32_1 = "1";
const sc_lv<1> AttentionMatmulWrite::ap_const_lv1_1 = "1";
const sc_lv<1> AttentionMatmulWrite::ap_const_lv1_0 = "0";
const sc_lv<29> AttentionMatmulWrite::ap_const_lv29_0 = "00000000000000000000000000000";
const sc_lv<8> AttentionMatmulWrite::ap_const_lv8_4 = "100";
const sc_lv<8> AttentionMatmulWrite::ap_const_lv8_10 = "10000";
const sc_lv<32> AttentionMatmulWrite::ap_const_lv32_4 = "100";
const sc_lv<32> AttentionMatmulWrite::ap_const_lv32_13 = "10011";
const sc_lv<32> AttentionMatmulWrite::ap_const_lv32_3 = "11";
const sc_lv<32> AttentionMatmulWrite::ap_const_lv32_1F = "11111";
const sc_lv<448> AttentionMatmulWrite::ap_const_lv448_lc_1 = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<16> AttentionMatmulWrite::ap_const_lv16_1 = "1";
const sc_lv<30> AttentionMatmulWrite::ap_const_lv30_3FFFFFFF = "111111111111111111111111111111";
const sc_lv<29> AttentionMatmulWrite::ap_const_lv29_1 = "1";
const sc_lv<3> AttentionMatmulWrite::ap_const_lv3_0 = "000";
const sc_lv<4> AttentionMatmulWrite::ap_const_lv4_0 = "0000";
const sc_lv<4> AttentionMatmulWrite::ap_const_lv4_1 = "1";
const sc_lv<4> AttentionMatmulWrite::ap_const_lv4_2 = "10";
const sc_lv<4> AttentionMatmulWrite::ap_const_lv4_3 = "11";
const sc_lv<4> AttentionMatmulWrite::ap_const_lv4_4 = "100";
const sc_lv<4> AttentionMatmulWrite::ap_const_lv4_5 = "101";
const sc_lv<4> AttentionMatmulWrite::ap_const_lv4_6 = "110";
const sc_lv<4> AttentionMatmulWrite::ap_const_lv4_7 = "111";

AttentionMatmulWrite::AttentionMatmulWrite(sc_module_name name) : sc_module(name), mVcdFile(0) {
    kernel_4_mul_mul_16ns_16ns_32_1_1_U1865 = new kernel_4_mul_mul_16ns_16ns_32_1_1<1,1,16,16,32>("kernel_4_mul_mul_16ns_16ns_32_1_1_U1865");
    kernel_4_mul_mul_16ns_16ns_32_1_1_U1865->din0(ret_V_fu_923_p0);
    kernel_4_mul_mul_16ns_16ns_32_1_1_U1865->din1(ret_V_fu_923_p1);
    kernel_4_mul_mul_16ns_16ns_32_1_1_U1865->dout(ret_V_fu_923_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( in_0_0_V_V_empty_n );
    sensitive << ( in_0_1_V_V_empty_n );
    sensitive << ( in_1_0_V_V_empty_n );
    sensitive << ( in_1_1_V_V_empty_n );
    sensitive << ( in_2_0_V_V_empty_n );
    sensitive << ( in_2_1_V_V_empty_n );
    sensitive << ( in_3_0_V_V_empty_n );
    sensitive << ( in_3_1_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( index_reg_1067 );
    sensitive << ( out_V_id_V1_status );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( in_0_0_V_V_empty_n );
    sensitive << ( in_0_1_V_V_empty_n );
    sensitive << ( in_1_0_V_V_empty_n );
    sensitive << ( in_1_1_V_V_empty_n );
    sensitive << ( in_2_0_V_V_empty_n );
    sensitive << ( in_2_1_V_V_empty_n );
    sensitive << ( in_3_0_V_V_empty_n );
    sensitive << ( in_3_1_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( index_reg_1067 );
    sensitive << ( out_V_id_V1_status );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( in_0_0_V_V_empty_n );
    sensitive << ( in_0_1_V_V_empty_n );
    sensitive << ( in_1_0_V_V_empty_n );
    sensitive << ( in_1_1_V_V_empty_n );
    sensitive << ( in_2_0_V_V_empty_n );
    sensitive << ( in_2_1_V_V_empty_n );
    sensitive << ( in_3_0_V_V_empty_n );
    sensitive << ( in_3_1_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( index_reg_1067 );
    sensitive << ( out_V_id_V1_status );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( in_n_r_V_V_empty_n );
    sensitive << ( in_n_c_V_V_empty_n );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( in_0_0_V_V_empty_n );
    sensitive << ( in_0_1_V_V_empty_n );
    sensitive << ( in_1_0_V_V_empty_n );
    sensitive << ( in_1_1_V_V_empty_n );
    sensitive << ( in_2_0_V_V_empty_n );
    sensitive << ( in_2_1_V_V_empty_n );
    sensitive << ( in_3_0_V_V_empty_n );
    sensitive << ( in_3_1_V_V_empty_n );
    sensitive << ( index_reg_1067 );
    sensitive << ( out_V_id_V1_status );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( exitcond_fu_509_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_cond1_fu_616_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_102_0_15_t_fu_610_p2 );

    SC_METHOD(thread_cond2_fu_644_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_101_1_06_t_fu_638_p2 );

    SC_METHOD(thread_cond3_fu_672_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_102_1_18_t_fu_666_p2 );

    SC_METHOD(thread_cond4_fu_700_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_101_2_09_t_fu_694_p2 );

    SC_METHOD(thread_cond5_fu_728_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_102_2_111_t_fu_722_p2 );

    SC_METHOD(thread_cond6_fu_756_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_101_3_012_t_fu_750_p2 );

    SC_METHOD(thread_cond7_fu_784_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_102_3_114_t_fu_778_p2 );

    SC_METHOD(thread_cond_fu_588_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_95_t_fu_581_p3 );

    SC_METHOD(thread_exitcond_fu_509_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_op_assign_reg_440 );
    sensitive << ( tmp_4_reg_1042 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_i_fu_514_p2);
    sensitive << ( i_op_assign_reg_440 );

    SC_METHOD(thread_in_0_0_V_V_blk_n);
    sensitive << ( in_0_0_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_in_0_0_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_0_1_V_V_blk_n);
    sensitive << ( in_0_1_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_in_0_1_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_1_0_V_V_blk_n);
    sensitive << ( in_1_0_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_in_1_0_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_1_1_V_V_blk_n);
    sensitive << ( in_1_1_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_in_1_1_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_2_0_V_V_blk_n);
    sensitive << ( in_2_0_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_in_2_0_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_2_1_V_V_blk_n);
    sensitive << ( in_2_1_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_in_2_1_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_3_0_V_V_blk_n);
    sensitive << ( in_3_0_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_in_3_0_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_3_1_V_V_blk_n);
    sensitive << ( in_3_1_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_in_3_1_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_n_c_V_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_n_c_V_V_empty_n );

    SC_METHOD(thread_in_n_c_V_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_n_r_V_V_empty_n );
    sensitive << ( in_n_c_V_V_empty_n );

    SC_METHOD(thread_in_n_r_V_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_n_r_V_V_empty_n );

    SC_METHOD(thread_in_n_r_V_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_n_r_V_V_empty_n );
    sensitive << ( in_n_c_V_V_empty_n );

    SC_METHOD(thread_index_fu_520_p1);
    sensitive << ( i_op_assign_reg_440 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_lhs_V_cast_fu_500_p1);
    sensitive << ( tmp_4_reg_1042 );

    SC_METHOD(thread_out_V_data_V_blk_n);
    sensitive << ( out_V_data_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( index_reg_1067 );

    SC_METHOD(thread_out_V_data_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( index_reg_1067 );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( p_Result_s_fu_485_p4 );
    sensitive << ( tmp_data_V_3_fu_886_p17 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_V_data_V_write);
    sensitive << ( out_V_id_V1_update );

    SC_METHOD(thread_out_V_dest_V_blk_n);
    sensitive << ( out_V_dest_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( index_reg_1067 );

    SC_METHOD(thread_out_V_dest_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( index_reg_1067 );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_V_dest_V_write);
    sensitive << ( out_V_id_V1_update );

    SC_METHOD(thread_out_V_id_V1_status);
    sensitive << ( out_V_data_V_full_n );
    sensitive << ( out_V_id_V_full_n );
    sensitive << ( out_V_dest_V_full_n );
    sensitive << ( out_V_user_V_full_n );
    sensitive << ( out_V_last_V_full_n );

    SC_METHOD(thread_out_V_id_V1_update);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( index_reg_1067 );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_V_id_V_blk_n);
    sensitive << ( out_V_id_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( index_reg_1067 );

    SC_METHOD(thread_out_V_id_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( index_reg_1067 );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_V_id_V_write);
    sensitive << ( out_V_id_V1_update );

    SC_METHOD(thread_out_V_last_V_blk_n);
    sensitive << ( out_V_last_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( index_reg_1067 );

    SC_METHOD(thread_out_V_last_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( index_reg_1067 );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( temp_last_V_reg_1072 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_V_last_V_write);
    sensitive << ( out_V_id_V1_update );

    SC_METHOD(thread_out_V_user_V_blk_n);
    sensitive << ( out_V_user_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( index_reg_1067 );

    SC_METHOD(thread_out_V_user_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( index_reg_1067 );
    sensitive << ( temp_user_V_fu_494_p2 );
    sensitive << ( temp_user_V_reg_1048 );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_V_user_V_write);
    sensitive << ( out_V_id_V1_update );

    SC_METHOD(thread_out_data_10_V_1_fu_650_p3);
    sensitive << ( in_1_0_V_V_dout );
    sensitive << ( out_data_10_V_3_fu_334 );
    sensitive << ( cond2_fu_644_p2 );

    SC_METHOD(thread_out_data_10_V_2_fu_658_p3);
    sensitive << ( in_1_0_V_V_dout );
    sensitive << ( out_data_10_V_fu_302 );
    sensitive << ( cond2_fu_644_p2 );

    SC_METHOD(thread_out_data_11_V_1_fu_678_p3);
    sensitive << ( in_1_1_V_V_dout );
    sensitive << ( out_data_11_V_3_fu_338 );
    sensitive << ( cond3_fu_672_p2 );

    SC_METHOD(thread_out_data_11_V_2_fu_686_p3);
    sensitive << ( in_1_1_V_V_dout );
    sensitive << ( out_data_11_V_fu_306 );
    sensitive << ( cond3_fu_672_p2 );

    SC_METHOD(thread_out_data_12_V_1_fu_706_p3);
    sensitive << ( in_2_0_V_V_dout );
    sensitive << ( out_data_12_V_3_fu_342 );
    sensitive << ( cond4_fu_700_p2 );

    SC_METHOD(thread_out_data_12_V_2_fu_714_p3);
    sensitive << ( in_2_0_V_V_dout );
    sensitive << ( out_data_12_V_fu_310 );
    sensitive << ( cond4_fu_700_p2 );

    SC_METHOD(thread_out_data_13_V_1_fu_734_p3);
    sensitive << ( in_2_1_V_V_dout );
    sensitive << ( out_data_13_V_3_fu_346 );
    sensitive << ( cond5_fu_728_p2 );

    SC_METHOD(thread_out_data_13_V_2_fu_742_p3);
    sensitive << ( in_2_1_V_V_dout );
    sensitive << ( out_data_13_V_fu_314 );
    sensitive << ( cond5_fu_728_p2 );

    SC_METHOD(thread_out_data_14_V_1_fu_762_p3);
    sensitive << ( in_3_0_V_V_dout );
    sensitive << ( out_data_14_V_3_fu_350 );
    sensitive << ( cond6_fu_756_p2 );

    SC_METHOD(thread_out_data_14_V_2_fu_770_p3);
    sensitive << ( in_3_0_V_V_dout );
    sensitive << ( out_data_14_V_fu_318 );
    sensitive << ( cond6_fu_756_p2 );

    SC_METHOD(thread_out_data_15_V_1_fu_790_p3);
    sensitive << ( in_3_1_V_V_dout );
    sensitive << ( out_data_15_V_3_fu_354 );
    sensitive << ( cond7_fu_784_p2 );

    SC_METHOD(thread_out_data_15_V_2_fu_798_p3);
    sensitive << ( in_3_1_V_V_dout );
    sensitive << ( out_data_15_V_fu_322 );
    sensitive << ( cond7_fu_784_p2 );

    SC_METHOD(thread_out_data_8_V_1_fu_594_p3);
    sensitive << ( in_0_0_V_V_dout );
    sensitive << ( out_data_8_V_3_fu_326 );
    sensitive << ( cond_fu_588_p2 );

    SC_METHOD(thread_out_data_8_V_2_fu_602_p3);
    sensitive << ( in_0_0_V_V_dout );
    sensitive << ( out_data_8_V_fu_294 );
    sensitive << ( cond_fu_588_p2 );

    SC_METHOD(thread_out_data_9_V_1_fu_622_p3);
    sensitive << ( in_0_1_V_V_dout );
    sensitive << ( out_data_9_V_3_fu_330 );
    sensitive << ( cond1_fu_616_p2 );

    SC_METHOD(thread_out_data_9_V_2_fu_630_p3);
    sensitive << ( in_0_1_V_V_dout );
    sensitive << ( out_data_9_V_fu_298 );
    sensitive << ( cond1_fu_616_p2 );

    SC_METHOD(thread_p_Result_s_fu_485_p4);
    sensitive << ( tmp_V_reg_1027 );
    sensitive << ( tmp_V_114_reg_1032 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_ret_V_1_fu_503_p2);
    sensitive << ( lhs_V_cast_fu_500_p1 );

    SC_METHOD(thread_ret_V_fu_923_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ret_V_fu_923_p00 );

    SC_METHOD(thread_ret_V_fu_923_p00);
    sensitive << ( tmp_11_fu_451_p1 );

    SC_METHOD(thread_ret_V_fu_923_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ret_V_fu_923_p10 );

    SC_METHOD(thread_ret_V_fu_923_p10);
    sensitive << ( tmp_12_fu_455_p1 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_temp_last_V_fu_528_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ret_V_1_reg_1053 );
    sensitive << ( exitcond_fu_509_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( index_fu_520_p1 );
    sensitive << ( tmp_54_cast_fu_524_p1 );

    SC_METHOD(thread_temp_user_V_fu_494_p2);
    sensitive << ( tmp_reg_1037 );

    SC_METHOD(thread_tmp_101_1_06_t_fu_638_p2);
    sensitive << ( tmp_95_t_fu_581_p3 );

    SC_METHOD(thread_tmp_101_2_09_t_fu_694_p2);
    sensitive << ( tmp_95_t_fu_581_p3 );

    SC_METHOD(thread_tmp_101_3_012_t_fu_750_p2);
    sensitive << ( tmp_95_t_fu_581_p3 );

    SC_METHOD(thread_tmp_102_0_15_t_fu_610_p2);
    sensitive << ( tmp_95_t_fu_581_p3 );

    SC_METHOD(thread_tmp_102_1_18_t_fu_666_p2);
    sensitive << ( tmp_95_t_fu_581_p3 );

    SC_METHOD(thread_tmp_102_2_111_t_fu_722_p2);
    sensitive << ( tmp_95_t_fu_581_p3 );

    SC_METHOD(thread_tmp_102_3_114_t_fu_778_p2);
    sensitive << ( tmp_95_t_fu_581_p3 );

    SC_METHOD(thread_tmp_11_fu_451_p1);
    sensitive << ( in_n_r_V_V_dout );

    SC_METHOD(thread_tmp_12_fu_455_p1);
    sensitive << ( in_n_c_V_V_dout );

    SC_METHOD(thread_tmp_54_cast_fu_524_p1);
    sensitive << ( i_op_assign_reg_440 );

    SC_METHOD(thread_tmp_95_t_fu_581_p3);
    sensitive << ( index_reg_1067 );

    SC_METHOD(thread_tmp_data_V_3_fu_886_p17);
    sensitive << ( out_data_8_V_2_fu_602_p3 );
    sensitive << ( out_data_9_V_2_fu_630_p3 );
    sensitive << ( out_data_10_V_2_fu_658_p3 );
    sensitive << ( out_data_11_V_2_fu_686_p3 );
    sensitive << ( out_data_12_V_2_fu_714_p3 );
    sensitive << ( out_data_13_V_2_fu_742_p3 );
    sensitive << ( out_data_14_V_2_fu_770_p3 );
    sensitive << ( out_data_15_V_2_fu_798_p3 );
    sensitive << ( out_data_8_V_1_fu_594_p3 );
    sensitive << ( out_data_9_V_1_fu_622_p3 );
    sensitive << ( out_data_10_V_1_fu_650_p3 );
    sensitive << ( out_data_11_V_1_fu_678_p3 );
    sensitive << ( out_data_12_V_1_fu_706_p3 );
    sensitive << ( out_data_13_V_1_fu_734_p3 );
    sensitive << ( out_data_14_V_1_fu_762_p3 );
    sensitive << ( out_data_15_V_1_fu_790_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_n_r_V_V_empty_n );
    sensitive << ( in_n_c_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( out_V_id_V1_status );
    sensitive << ( exitcond_fu_509_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "AttentionMatmulWrite_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, in_n_r_V_V_dout, "(port)in_n_r_V_V_dout");
    sc_trace(mVcdFile, in_n_r_V_V_empty_n, "(port)in_n_r_V_V_empty_n");
    sc_trace(mVcdFile, in_n_r_V_V_read, "(port)in_n_r_V_V_read");
    sc_trace(mVcdFile, in_n_c_V_V_dout, "(port)in_n_c_V_V_dout");
    sc_trace(mVcdFile, in_n_c_V_V_empty_n, "(port)in_n_c_V_V_empty_n");
    sc_trace(mVcdFile, in_n_c_V_V_read, "(port)in_n_c_V_V_read");
    sc_trace(mVcdFile, in_0_0_V_V_dout, "(port)in_0_0_V_V_dout");
    sc_trace(mVcdFile, in_0_0_V_V_empty_n, "(port)in_0_0_V_V_empty_n");
    sc_trace(mVcdFile, in_0_0_V_V_read, "(port)in_0_0_V_V_read");
    sc_trace(mVcdFile, in_0_1_V_V_dout, "(port)in_0_1_V_V_dout");
    sc_trace(mVcdFile, in_0_1_V_V_empty_n, "(port)in_0_1_V_V_empty_n");
    sc_trace(mVcdFile, in_0_1_V_V_read, "(port)in_0_1_V_V_read");
    sc_trace(mVcdFile, in_1_0_V_V_dout, "(port)in_1_0_V_V_dout");
    sc_trace(mVcdFile, in_1_0_V_V_empty_n, "(port)in_1_0_V_V_empty_n");
    sc_trace(mVcdFile, in_1_0_V_V_read, "(port)in_1_0_V_V_read");
    sc_trace(mVcdFile, in_1_1_V_V_dout, "(port)in_1_1_V_V_dout");
    sc_trace(mVcdFile, in_1_1_V_V_empty_n, "(port)in_1_1_V_V_empty_n");
    sc_trace(mVcdFile, in_1_1_V_V_read, "(port)in_1_1_V_V_read");
    sc_trace(mVcdFile, in_2_0_V_V_dout, "(port)in_2_0_V_V_dout");
    sc_trace(mVcdFile, in_2_0_V_V_empty_n, "(port)in_2_0_V_V_empty_n");
    sc_trace(mVcdFile, in_2_0_V_V_read, "(port)in_2_0_V_V_read");
    sc_trace(mVcdFile, in_2_1_V_V_dout, "(port)in_2_1_V_V_dout");
    sc_trace(mVcdFile, in_2_1_V_V_empty_n, "(port)in_2_1_V_V_empty_n");
    sc_trace(mVcdFile, in_2_1_V_V_read, "(port)in_2_1_V_V_read");
    sc_trace(mVcdFile, in_3_0_V_V_dout, "(port)in_3_0_V_V_dout");
    sc_trace(mVcdFile, in_3_0_V_V_empty_n, "(port)in_3_0_V_V_empty_n");
    sc_trace(mVcdFile, in_3_0_V_V_read, "(port)in_3_0_V_V_read");
    sc_trace(mVcdFile, in_3_1_V_V_dout, "(port)in_3_1_V_V_dout");
    sc_trace(mVcdFile, in_3_1_V_V_empty_n, "(port)in_3_1_V_V_empty_n");
    sc_trace(mVcdFile, in_3_1_V_V_read, "(port)in_3_1_V_V_read");
    sc_trace(mVcdFile, out_V_data_V_din, "(port)out_V_data_V_din");
    sc_trace(mVcdFile, out_V_data_V_full_n, "(port)out_V_data_V_full_n");
    sc_trace(mVcdFile, out_V_data_V_write, "(port)out_V_data_V_write");
    sc_trace(mVcdFile, out_V_id_V_din, "(port)out_V_id_V_din");
    sc_trace(mVcdFile, out_V_id_V_full_n, "(port)out_V_id_V_full_n");
    sc_trace(mVcdFile, out_V_id_V_write, "(port)out_V_id_V_write");
    sc_trace(mVcdFile, out_V_dest_V_din, "(port)out_V_dest_V_din");
    sc_trace(mVcdFile, out_V_dest_V_full_n, "(port)out_V_dest_V_full_n");
    sc_trace(mVcdFile, out_V_dest_V_write, "(port)out_V_dest_V_write");
    sc_trace(mVcdFile, out_V_user_V_din, "(port)out_V_user_V_din");
    sc_trace(mVcdFile, out_V_user_V_full_n, "(port)out_V_user_V_full_n");
    sc_trace(mVcdFile, out_V_user_V_write, "(port)out_V_user_V_write");
    sc_trace(mVcdFile, out_V_last_V_din, "(port)out_V_last_V_din");
    sc_trace(mVcdFile, out_V_last_V_full_n, "(port)out_V_last_V_full_n");
    sc_trace(mVcdFile, out_V_last_V_write, "(port)out_V_last_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, in_n_r_V_V_blk_n, "in_n_r_V_V_blk_n");
    sc_trace(mVcdFile, in_n_c_V_V_blk_n, "in_n_c_V_V_blk_n");
    sc_trace(mVcdFile, in_0_0_V_V_blk_n, "in_0_0_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, in_0_1_V_V_blk_n, "in_0_1_V_V_blk_n");
    sc_trace(mVcdFile, in_1_0_V_V_blk_n, "in_1_0_V_V_blk_n");
    sc_trace(mVcdFile, in_1_1_V_V_blk_n, "in_1_1_V_V_blk_n");
    sc_trace(mVcdFile, in_2_0_V_V_blk_n, "in_2_0_V_V_blk_n");
    sc_trace(mVcdFile, in_2_1_V_V_blk_n, "in_2_1_V_V_blk_n");
    sc_trace(mVcdFile, in_3_0_V_V_blk_n, "in_3_0_V_V_blk_n");
    sc_trace(mVcdFile, in_3_1_V_V_blk_n, "in_3_1_V_V_blk_n");
    sc_trace(mVcdFile, out_V_data_V_blk_n, "out_V_data_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, index_reg_1067, "index_reg_1067");
    sc_trace(mVcdFile, out_V_id_V_blk_n, "out_V_id_V_blk_n");
    sc_trace(mVcdFile, out_V_dest_V_blk_n, "out_V_dest_V_blk_n");
    sc_trace(mVcdFile, out_V_user_V_blk_n, "out_V_user_V_blk_n");
    sc_trace(mVcdFile, out_V_last_V_blk_n, "out_V_last_V_blk_n");
    sc_trace(mVcdFile, i_op_assign_reg_440, "i_op_assign_reg_440");
    sc_trace(mVcdFile, tmp_V_reg_1027, "tmp_V_reg_1027");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, tmp_V_114_reg_1032, "tmp_V_114_reg_1032");
    sc_trace(mVcdFile, tmp_reg_1037, "tmp_reg_1037");
    sc_trace(mVcdFile, tmp_4_reg_1042, "tmp_4_reg_1042");
    sc_trace(mVcdFile, temp_user_V_fu_494_p2, "temp_user_V_fu_494_p2");
    sc_trace(mVcdFile, temp_user_V_reg_1048, "temp_user_V_reg_1048");
    sc_trace(mVcdFile, out_V_id_V1_status, "out_V_id_V1_status");
    sc_trace(mVcdFile, ret_V_1_fu_503_p2, "ret_V_1_fu_503_p2");
    sc_trace(mVcdFile, ret_V_1_reg_1053, "ret_V_1_reg_1053");
    sc_trace(mVcdFile, exitcond_fu_509_p2, "exitcond_fu_509_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_fu_514_p2, "i_fu_514_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, index_fu_520_p1, "index_fu_520_p1");
    sc_trace(mVcdFile, temp_last_V_fu_528_p2, "temp_last_V_fu_528_p2");
    sc_trace(mVcdFile, temp_last_V_reg_1072, "temp_last_V_reg_1072");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, out_V_id_V1_update, "out_V_id_V1_update");
    sc_trace(mVcdFile, p_Result_s_fu_485_p4, "p_Result_s_fu_485_p4");
    sc_trace(mVcdFile, tmp_data_V_3_fu_886_p17, "tmp_data_V_3_fu_886_p17");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, out_data_8_V_fu_294, "out_data_8_V_fu_294");
    sc_trace(mVcdFile, out_data_8_V_2_fu_602_p3, "out_data_8_V_2_fu_602_p3");
    sc_trace(mVcdFile, out_data_9_V_fu_298, "out_data_9_V_fu_298");
    sc_trace(mVcdFile, out_data_9_V_2_fu_630_p3, "out_data_9_V_2_fu_630_p3");
    sc_trace(mVcdFile, out_data_10_V_fu_302, "out_data_10_V_fu_302");
    sc_trace(mVcdFile, out_data_10_V_2_fu_658_p3, "out_data_10_V_2_fu_658_p3");
    sc_trace(mVcdFile, out_data_11_V_fu_306, "out_data_11_V_fu_306");
    sc_trace(mVcdFile, out_data_11_V_2_fu_686_p3, "out_data_11_V_2_fu_686_p3");
    sc_trace(mVcdFile, out_data_12_V_fu_310, "out_data_12_V_fu_310");
    sc_trace(mVcdFile, out_data_12_V_2_fu_714_p3, "out_data_12_V_2_fu_714_p3");
    sc_trace(mVcdFile, out_data_13_V_fu_314, "out_data_13_V_fu_314");
    sc_trace(mVcdFile, out_data_13_V_2_fu_742_p3, "out_data_13_V_2_fu_742_p3");
    sc_trace(mVcdFile, out_data_14_V_fu_318, "out_data_14_V_fu_318");
    sc_trace(mVcdFile, out_data_14_V_2_fu_770_p3, "out_data_14_V_2_fu_770_p3");
    sc_trace(mVcdFile, out_data_15_V_fu_322, "out_data_15_V_fu_322");
    sc_trace(mVcdFile, out_data_15_V_2_fu_798_p3, "out_data_15_V_2_fu_798_p3");
    sc_trace(mVcdFile, out_data_8_V_3_fu_326, "out_data_8_V_3_fu_326");
    sc_trace(mVcdFile, out_data_8_V_1_fu_594_p3, "out_data_8_V_1_fu_594_p3");
    sc_trace(mVcdFile, out_data_9_V_3_fu_330, "out_data_9_V_3_fu_330");
    sc_trace(mVcdFile, out_data_9_V_1_fu_622_p3, "out_data_9_V_1_fu_622_p3");
    sc_trace(mVcdFile, out_data_10_V_3_fu_334, "out_data_10_V_3_fu_334");
    sc_trace(mVcdFile, out_data_10_V_1_fu_650_p3, "out_data_10_V_1_fu_650_p3");
    sc_trace(mVcdFile, out_data_11_V_3_fu_338, "out_data_11_V_3_fu_338");
    sc_trace(mVcdFile, out_data_11_V_1_fu_678_p3, "out_data_11_V_1_fu_678_p3");
    sc_trace(mVcdFile, out_data_12_V_3_fu_342, "out_data_12_V_3_fu_342");
    sc_trace(mVcdFile, out_data_12_V_1_fu_706_p3, "out_data_12_V_1_fu_706_p3");
    sc_trace(mVcdFile, out_data_13_V_3_fu_346, "out_data_13_V_3_fu_346");
    sc_trace(mVcdFile, out_data_13_V_1_fu_734_p3, "out_data_13_V_1_fu_734_p3");
    sc_trace(mVcdFile, out_data_14_V_3_fu_350, "out_data_14_V_3_fu_350");
    sc_trace(mVcdFile, out_data_14_V_1_fu_762_p3, "out_data_14_V_1_fu_762_p3");
    sc_trace(mVcdFile, out_data_15_V_3_fu_354, "out_data_15_V_3_fu_354");
    sc_trace(mVcdFile, out_data_15_V_1_fu_790_p3, "out_data_15_V_1_fu_790_p3");
    sc_trace(mVcdFile, tmp_11_fu_451_p1, "tmp_11_fu_451_p1");
    sc_trace(mVcdFile, tmp_12_fu_455_p1, "tmp_12_fu_455_p1");
    sc_trace(mVcdFile, ret_V_fu_923_p2, "ret_V_fu_923_p2");
    sc_trace(mVcdFile, lhs_V_cast_fu_500_p1, "lhs_V_cast_fu_500_p1");
    sc_trace(mVcdFile, tmp_54_cast_fu_524_p1, "tmp_54_cast_fu_524_p1");
    sc_trace(mVcdFile, tmp_95_t_fu_581_p3, "tmp_95_t_fu_581_p3");
    sc_trace(mVcdFile, cond_fu_588_p2, "cond_fu_588_p2");
    sc_trace(mVcdFile, tmp_102_0_15_t_fu_610_p2, "tmp_102_0_15_t_fu_610_p2");
    sc_trace(mVcdFile, cond1_fu_616_p2, "cond1_fu_616_p2");
    sc_trace(mVcdFile, tmp_101_1_06_t_fu_638_p2, "tmp_101_1_06_t_fu_638_p2");
    sc_trace(mVcdFile, cond2_fu_644_p2, "cond2_fu_644_p2");
    sc_trace(mVcdFile, tmp_102_1_18_t_fu_666_p2, "tmp_102_1_18_t_fu_666_p2");
    sc_trace(mVcdFile, cond3_fu_672_p2, "cond3_fu_672_p2");
    sc_trace(mVcdFile, tmp_101_2_09_t_fu_694_p2, "tmp_101_2_09_t_fu_694_p2");
    sc_trace(mVcdFile, cond4_fu_700_p2, "cond4_fu_700_p2");
    sc_trace(mVcdFile, tmp_102_2_111_t_fu_722_p2, "tmp_102_2_111_t_fu_722_p2");
    sc_trace(mVcdFile, cond5_fu_728_p2, "cond5_fu_728_p2");
    sc_trace(mVcdFile, tmp_101_3_012_t_fu_750_p2, "tmp_101_3_012_t_fu_750_p2");
    sc_trace(mVcdFile, cond6_fu_756_p2, "cond6_fu_756_p2");
    sc_trace(mVcdFile, tmp_102_3_114_t_fu_778_p2, "tmp_102_3_114_t_fu_778_p2");
    sc_trace(mVcdFile, cond7_fu_784_p2, "cond7_fu_784_p2");
    sc_trace(mVcdFile, ret_V_fu_923_p0, "ret_V_fu_923_p0");
    sc_trace(mVcdFile, ret_V_fu_923_p1, "ret_V_fu_923_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ret_V_fu_923_p00, "ret_V_fu_923_p00");
    sc_trace(mVcdFile, ret_V_fu_923_p10, "ret_V_fu_923_p10");
#endif

    }
}

AttentionMatmulWrite::~AttentionMatmulWrite() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete kernel_4_mul_mul_16ns_16ns_32_1_1_U1865;
}

void AttentionMatmulWrite::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(out_V_id_V1_status.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(out_V_id_V1_status.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_509_p2.read(), ap_const_lv1_0))) {
        i_op_assign_reg_440 = i_fu_514_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(out_V_id_V1_status.read(), ap_const_logic_1))) {
        i_op_assign_reg_440 = ap_const_lv29_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_fu_509_p2.read(), ap_const_lv1_0))) {
        index_reg_1067 = index_fu_520_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_data_10_V_3_fu_334 = out_data_10_V_1_fu_650_p3.read();
        out_data_10_V_fu_302 = out_data_10_V_2_fu_658_p3.read();
        out_data_11_V_3_fu_338 = out_data_11_V_1_fu_678_p3.read();
        out_data_11_V_fu_306 = out_data_11_V_2_fu_686_p3.read();
        out_data_12_V_3_fu_342 = out_data_12_V_1_fu_706_p3.read();
        out_data_12_V_fu_310 = out_data_12_V_2_fu_714_p3.read();
        out_data_13_V_3_fu_346 = out_data_13_V_1_fu_734_p3.read();
        out_data_13_V_fu_314 = out_data_13_V_2_fu_742_p3.read();
        out_data_14_V_3_fu_350 = out_data_14_V_1_fu_762_p3.read();
        out_data_14_V_fu_318 = out_data_14_V_2_fu_770_p3.read();
        out_data_15_V_3_fu_354 = out_data_15_V_1_fu_790_p3.read();
        out_data_15_V_fu_322 = out_data_15_V_2_fu_798_p3.read();
        out_data_8_V_3_fu_326 = out_data_8_V_1_fu_594_p3.read();
        out_data_8_V_fu_294 = out_data_8_V_2_fu_602_p3.read();
        out_data_9_V_3_fu_330 = out_data_9_V_1_fu_622_p3.read();
        out_data_9_V_fu_298 = out_data_9_V_2_fu_630_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(out_V_id_V1_status.read(), ap_const_logic_1))) {
        ret_V_1_reg_1053 = ret_V_1_fu_503_p2.read();
        temp_user_V_reg_1048 = temp_user_V_fu_494_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_fu_509_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, index_fu_520_p1.read()))) {
        temp_last_V_reg_1072 = temp_last_V_fu_528_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_n_r_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_n_c_V_V_empty_n.read())))) {
        tmp_4_reg_1042 = ret_V_fu_923_p2.read().range(31, 3);
        tmp_V_114_reg_1032 = in_n_c_V_V_dout.read();
        tmp_V_reg_1027 = in_n_r_V_V_dout.read();
        tmp_reg_1037 = ret_V_fu_923_p2.read().range(19, 4);
    }
}

void AttentionMatmulWrite::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void AttentionMatmulWrite::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void AttentionMatmulWrite::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void AttentionMatmulWrite::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[3];
}

void AttentionMatmulWrite::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void AttentionMatmulWrite::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && (esl_seteq<1,1,1>(ap_const_logic_0, in_0_0_V_V_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, in_0_1_V_V_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, in_1_0_V_V_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, in_1_1_V_V_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, in_2_0_V_V_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, in_2_1_V_V_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, in_3_0_V_V_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, in_3_1_V_V_empty_n.read()) || 
  (esl_seteq<1,1,1>(index_reg_1067.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read()))));
}

void AttentionMatmulWrite::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && (esl_seteq<1,1,1>(ap_const_logic_0, in_0_0_V_V_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, in_0_1_V_V_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, in_1_0_V_V_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, in_1_1_V_V_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, in_2_0_V_V_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, in_2_1_V_V_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, in_3_0_V_V_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, in_3_1_V_V_empty_n.read()) || 
  (esl_seteq<1,1,1>(index_reg_1067.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read()))));
}

void AttentionMatmulWrite::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && (esl_seteq<1,1,1>(ap_const_logic_0, in_0_0_V_V_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, in_0_1_V_V_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, in_1_0_V_V_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, in_1_1_V_V_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, in_2_0_V_V_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, in_2_1_V_V_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, in_3_0_V_V_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, in_3_1_V_V_empty_n.read()) || 
  (esl_seteq<1,1,1>(index_reg_1067.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read()))));
}

void AttentionMatmulWrite::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_n_r_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_n_c_V_V_empty_n.read()));
}

void AttentionMatmulWrite::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void AttentionMatmulWrite::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_logic_0, in_0_0_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_0_1_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_0_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_1_1_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_2_0_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_2_1_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_3_0_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_3_1_V_V_empty_n.read()) || (esl_seteq<1,1,1>(index_reg_1067.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V1_status.read())));
}

void AttentionMatmulWrite::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_509_p2.read())) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void AttentionMatmulWrite::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void AttentionMatmulWrite::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void AttentionMatmulWrite::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void AttentionMatmulWrite::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void AttentionMatmulWrite::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void AttentionMatmulWrite::thread_cond1_fu_616_p2() {
    cond1_fu_616_p2 = (!tmp_102_0_15_t_fu_610_p2.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_102_0_15_t_fu_610_p2.read() == ap_const_lv4_1);
}

void AttentionMatmulWrite::thread_cond2_fu_644_p2() {
    cond2_fu_644_p2 = (!tmp_101_1_06_t_fu_638_p2.read().is_01() || !ap_const_lv4_2.is_01())? sc_lv<1>(): sc_lv<1>(tmp_101_1_06_t_fu_638_p2.read() == ap_const_lv4_2);
}

void AttentionMatmulWrite::thread_cond3_fu_672_p2() {
    cond3_fu_672_p2 = (!tmp_102_1_18_t_fu_666_p2.read().is_01() || !ap_const_lv4_3.is_01())? sc_lv<1>(): sc_lv<1>(tmp_102_1_18_t_fu_666_p2.read() == ap_const_lv4_3);
}

void AttentionMatmulWrite::thread_cond4_fu_700_p2() {
    cond4_fu_700_p2 = (!tmp_101_2_09_t_fu_694_p2.read().is_01() || !ap_const_lv4_4.is_01())? sc_lv<1>(): sc_lv<1>(tmp_101_2_09_t_fu_694_p2.read() == ap_const_lv4_4);
}

void AttentionMatmulWrite::thread_cond5_fu_728_p2() {
    cond5_fu_728_p2 = (!tmp_102_2_111_t_fu_722_p2.read().is_01() || !ap_const_lv4_5.is_01())? sc_lv<1>(): sc_lv<1>(tmp_102_2_111_t_fu_722_p2.read() == ap_const_lv4_5);
}

void AttentionMatmulWrite::thread_cond6_fu_756_p2() {
    cond6_fu_756_p2 = (!tmp_101_3_012_t_fu_750_p2.read().is_01() || !ap_const_lv4_6.is_01())? sc_lv<1>(): sc_lv<1>(tmp_101_3_012_t_fu_750_p2.read() == ap_const_lv4_6);
}

void AttentionMatmulWrite::thread_cond7_fu_784_p2() {
    cond7_fu_784_p2 = (!tmp_102_3_114_t_fu_778_p2.read().is_01() || !ap_const_lv4_7.is_01())? sc_lv<1>(): sc_lv<1>(tmp_102_3_114_t_fu_778_p2.read() == ap_const_lv4_7);
}

void AttentionMatmulWrite::thread_cond_fu_588_p2() {
    cond_fu_588_p2 = (!tmp_95_t_fu_581_p3.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_95_t_fu_581_p3.read() == ap_const_lv4_0);
}

void AttentionMatmulWrite::thread_exitcond_fu_509_p2() {
    exitcond_fu_509_p2 = (!i_op_assign_reg_440.read().is_01() || !tmp_4_reg_1042.read().is_01())? sc_lv<1>(): sc_lv<1>(i_op_assign_reg_440.read() == tmp_4_reg_1042.read());
}

void AttentionMatmulWrite::thread_i_fu_514_p2() {
    i_fu_514_p2 = (!i_op_assign_reg_440.read().is_01() || !ap_const_lv29_1.is_01())? sc_lv<29>(): (sc_biguint<29>(i_op_assign_reg_440.read()) + sc_biguint<29>(ap_const_lv29_1));
}

void AttentionMatmulWrite::thread_in_0_0_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        in_0_0_V_V_blk_n = in_0_0_V_V_empty_n.read();
    } else {
        in_0_0_V_V_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulWrite::thread_in_0_0_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_0_0_V_V_read = ap_const_logic_1;
    } else {
        in_0_0_V_V_read = ap_const_logic_0;
    }
}

void AttentionMatmulWrite::thread_in_0_1_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        in_0_1_V_V_blk_n = in_0_1_V_V_empty_n.read();
    } else {
        in_0_1_V_V_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulWrite::thread_in_0_1_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_0_1_V_V_read = ap_const_logic_1;
    } else {
        in_0_1_V_V_read = ap_const_logic_0;
    }
}

void AttentionMatmulWrite::thread_in_1_0_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        in_1_0_V_V_blk_n = in_1_0_V_V_empty_n.read();
    } else {
        in_1_0_V_V_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulWrite::thread_in_1_0_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_1_0_V_V_read = ap_const_logic_1;
    } else {
        in_1_0_V_V_read = ap_const_logic_0;
    }
}

void AttentionMatmulWrite::thread_in_1_1_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        in_1_1_V_V_blk_n = in_1_1_V_V_empty_n.read();
    } else {
        in_1_1_V_V_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulWrite::thread_in_1_1_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_1_1_V_V_read = ap_const_logic_1;
    } else {
        in_1_1_V_V_read = ap_const_logic_0;
    }
}

void AttentionMatmulWrite::thread_in_2_0_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        in_2_0_V_V_blk_n = in_2_0_V_V_empty_n.read();
    } else {
        in_2_0_V_V_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulWrite::thread_in_2_0_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_2_0_V_V_read = ap_const_logic_1;
    } else {
        in_2_0_V_V_read = ap_const_logic_0;
    }
}

void AttentionMatmulWrite::thread_in_2_1_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        in_2_1_V_V_blk_n = in_2_1_V_V_empty_n.read();
    } else {
        in_2_1_V_V_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulWrite::thread_in_2_1_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_2_1_V_V_read = ap_const_logic_1;
    } else {
        in_2_1_V_V_read = ap_const_logic_0;
    }
}

void AttentionMatmulWrite::thread_in_3_0_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        in_3_0_V_V_blk_n = in_3_0_V_V_empty_n.read();
    } else {
        in_3_0_V_V_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulWrite::thread_in_3_0_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_3_0_V_V_read = ap_const_logic_1;
    } else {
        in_3_0_V_V_read = ap_const_logic_0;
    }
}

void AttentionMatmulWrite::thread_in_3_1_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        in_3_1_V_V_blk_n = in_3_1_V_V_empty_n.read();
    } else {
        in_3_1_V_V_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulWrite::thread_in_3_1_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_3_1_V_V_read = ap_const_logic_1;
    } else {
        in_3_1_V_V_read = ap_const_logic_0;
    }
}

void AttentionMatmulWrite::thread_in_n_c_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        in_n_c_V_V_blk_n = in_n_c_V_V_empty_n.read();
    } else {
        in_n_c_V_V_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulWrite::thread_in_n_c_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_n_r_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_n_c_V_V_empty_n.read())))) {
        in_n_c_V_V_read = ap_const_logic_1;
    } else {
        in_n_c_V_V_read = ap_const_logic_0;
    }
}

void AttentionMatmulWrite::thread_in_n_r_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        in_n_r_V_V_blk_n = in_n_r_V_V_empty_n.read();
    } else {
        in_n_r_V_V_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulWrite::thread_in_n_r_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_n_r_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_n_c_V_V_empty_n.read())))) {
        in_n_r_V_V_read = ap_const_logic_1;
    } else {
        in_n_r_V_V_read = ap_const_logic_0;
    }
}

void AttentionMatmulWrite::thread_index_fu_520_p1() {
    index_fu_520_p1 = i_op_assign_reg_440.read().range(1-1, 0);
}

void AttentionMatmulWrite::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void AttentionMatmulWrite::thread_lhs_V_cast_fu_500_p1() {
    lhs_V_cast_fu_500_p1 = esl_zext<30,29>(tmp_4_reg_1042.read());
}

void AttentionMatmulWrite::thread_out_V_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(index_reg_1067.read(), ap_const_lv1_1)))) {
        out_V_data_V_blk_n = out_V_data_V_full_n.read();
    } else {
        out_V_data_V_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulWrite::thread_out_V_data_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(index_reg_1067.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_V_data_V_din = tmp_data_V_3_fu_886_p17.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(out_V_id_V1_status.read(), ap_const_logic_1))) {
        out_V_data_V_din = p_Result_s_fu_485_p4.read();
    } else {
        out_V_data_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void AttentionMatmulWrite::thread_out_V_data_V_write() {
    out_V_data_V_write = out_V_id_V1_update.read();
}

void AttentionMatmulWrite::thread_out_V_dest_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(index_reg_1067.read(), ap_const_lv1_1)))) {
        out_V_dest_V_blk_n = out_V_dest_V_full_n.read();
    } else {
        out_V_dest_V_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulWrite::thread_out_V_dest_V_din() {
    out_V_dest_V_din = ap_const_lv8_10;
}

void AttentionMatmulWrite::thread_out_V_dest_V_write() {
    out_V_dest_V_write = out_V_id_V1_update.read();
}

void AttentionMatmulWrite::thread_out_V_id_V1_status() {
    out_V_id_V1_status = (out_V_data_V_full_n.read() & out_V_id_V_full_n.read() & out_V_dest_V_full_n.read() & out_V_user_V_full_n.read() & out_V_last_V_full_n.read());
}

void AttentionMatmulWrite::thread_out_V_id_V1_update() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(out_V_id_V1_status.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(index_reg_1067.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        out_V_id_V1_update = ap_const_logic_1;
    } else {
        out_V_id_V1_update = ap_const_logic_0;
    }
}

void AttentionMatmulWrite::thread_out_V_id_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(index_reg_1067.read(), ap_const_lv1_1)))) {
        out_V_id_V_blk_n = out_V_id_V_full_n.read();
    } else {
        out_V_id_V_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulWrite::thread_out_V_id_V_din() {
    out_V_id_V_din = ap_const_lv8_4;
}

void AttentionMatmulWrite::thread_out_V_id_V_write() {
    out_V_id_V_write = out_V_id_V1_update.read();
}

void AttentionMatmulWrite::thread_out_V_last_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(index_reg_1067.read(), ap_const_lv1_1)))) {
        out_V_last_V_blk_n = out_V_last_V_full_n.read();
    } else {
        out_V_last_V_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulWrite::thread_out_V_last_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(index_reg_1067.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_V_last_V_din = temp_last_V_reg_1072.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(out_V_id_V1_status.read(), ap_const_logic_1))) {
        out_V_last_V_din = ap_const_lv1_0;
    } else {
        out_V_last_V_din =  (sc_lv<1>) ("X");
    }
}

void AttentionMatmulWrite::thread_out_V_last_V_write() {
    out_V_last_V_write = out_V_id_V1_update.read();
}

void AttentionMatmulWrite::thread_out_V_user_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(index_reg_1067.read(), ap_const_lv1_1)))) {
        out_V_user_V_blk_n = out_V_user_V_full_n.read();
    } else {
        out_V_user_V_blk_n = ap_const_logic_1;
    }
}

void AttentionMatmulWrite::thread_out_V_user_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(index_reg_1067.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_V_user_V_din = temp_user_V_reg_1048.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(out_V_id_V1_status.read(), ap_const_logic_1))) {
        out_V_user_V_din = temp_user_V_fu_494_p2.read();
    } else {
        out_V_user_V_din =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void AttentionMatmulWrite::thread_out_V_user_V_write() {
    out_V_user_V_write = out_V_id_V1_update.read();
}

void AttentionMatmulWrite::thread_out_data_10_V_1_fu_650_p3() {
    out_data_10_V_1_fu_650_p3 = (!cond2_fu_644_p2.read()[0].is_01())? sc_lv<32>(): ((cond2_fu_644_p2.read()[0].to_bool())? out_data_10_V_3_fu_334.read(): in_1_0_V_V_dout.read());
}

void AttentionMatmulWrite::thread_out_data_10_V_2_fu_658_p3() {
    out_data_10_V_2_fu_658_p3 = (!cond2_fu_644_p2.read()[0].is_01())? sc_lv<32>(): ((cond2_fu_644_p2.read()[0].to_bool())? in_1_0_V_V_dout.read(): out_data_10_V_fu_302.read());
}

void AttentionMatmulWrite::thread_out_data_11_V_1_fu_678_p3() {
    out_data_11_V_1_fu_678_p3 = (!cond3_fu_672_p2.read()[0].is_01())? sc_lv<32>(): ((cond3_fu_672_p2.read()[0].to_bool())? out_data_11_V_3_fu_338.read(): in_1_1_V_V_dout.read());
}

void AttentionMatmulWrite::thread_out_data_11_V_2_fu_686_p3() {
    out_data_11_V_2_fu_686_p3 = (!cond3_fu_672_p2.read()[0].is_01())? sc_lv<32>(): ((cond3_fu_672_p2.read()[0].to_bool())? in_1_1_V_V_dout.read(): out_data_11_V_fu_306.read());
}

void AttentionMatmulWrite::thread_out_data_12_V_1_fu_706_p3() {
    out_data_12_V_1_fu_706_p3 = (!cond4_fu_700_p2.read()[0].is_01())? sc_lv<32>(): ((cond4_fu_700_p2.read()[0].to_bool())? out_data_12_V_3_fu_342.read(): in_2_0_V_V_dout.read());
}

void AttentionMatmulWrite::thread_out_data_12_V_2_fu_714_p3() {
    out_data_12_V_2_fu_714_p3 = (!cond4_fu_700_p2.read()[0].is_01())? sc_lv<32>(): ((cond4_fu_700_p2.read()[0].to_bool())? in_2_0_V_V_dout.read(): out_data_12_V_fu_310.read());
}

void AttentionMatmulWrite::thread_out_data_13_V_1_fu_734_p3() {
    out_data_13_V_1_fu_734_p3 = (!cond5_fu_728_p2.read()[0].is_01())? sc_lv<32>(): ((cond5_fu_728_p2.read()[0].to_bool())? out_data_13_V_3_fu_346.read(): in_2_1_V_V_dout.read());
}

void AttentionMatmulWrite::thread_out_data_13_V_2_fu_742_p3() {
    out_data_13_V_2_fu_742_p3 = (!cond5_fu_728_p2.read()[0].is_01())? sc_lv<32>(): ((cond5_fu_728_p2.read()[0].to_bool())? in_2_1_V_V_dout.read(): out_data_13_V_fu_314.read());
}

void AttentionMatmulWrite::thread_out_data_14_V_1_fu_762_p3() {
    out_data_14_V_1_fu_762_p3 = (!cond6_fu_756_p2.read()[0].is_01())? sc_lv<32>(): ((cond6_fu_756_p2.read()[0].to_bool())? out_data_14_V_3_fu_350.read(): in_3_0_V_V_dout.read());
}

void AttentionMatmulWrite::thread_out_data_14_V_2_fu_770_p3() {
    out_data_14_V_2_fu_770_p3 = (!cond6_fu_756_p2.read()[0].is_01())? sc_lv<32>(): ((cond6_fu_756_p2.read()[0].to_bool())? in_3_0_V_V_dout.read(): out_data_14_V_fu_318.read());
}

void AttentionMatmulWrite::thread_out_data_15_V_1_fu_790_p3() {
    out_data_15_V_1_fu_790_p3 = (!cond7_fu_784_p2.read()[0].is_01())? sc_lv<32>(): ((cond7_fu_784_p2.read()[0].to_bool())? out_data_15_V_3_fu_354.read(): in_3_1_V_V_dout.read());
}

void AttentionMatmulWrite::thread_out_data_15_V_2_fu_798_p3() {
    out_data_15_V_2_fu_798_p3 = (!cond7_fu_784_p2.read()[0].is_01())? sc_lv<32>(): ((cond7_fu_784_p2.read()[0].to_bool())? in_3_1_V_V_dout.read(): out_data_15_V_fu_322.read());
}

void AttentionMatmulWrite::thread_out_data_8_V_1_fu_594_p3() {
    out_data_8_V_1_fu_594_p3 = (!cond_fu_588_p2.read()[0].is_01())? sc_lv<32>(): ((cond_fu_588_p2.read()[0].to_bool())? out_data_8_V_3_fu_326.read(): in_0_0_V_V_dout.read());
}

void AttentionMatmulWrite::thread_out_data_8_V_2_fu_602_p3() {
    out_data_8_V_2_fu_602_p3 = (!cond_fu_588_p2.read()[0].is_01())? sc_lv<32>(): ((cond_fu_588_p2.read()[0].to_bool())? in_0_0_V_V_dout.read(): out_data_8_V_fu_294.read());
}

void AttentionMatmulWrite::thread_out_data_9_V_1_fu_622_p3() {
    out_data_9_V_1_fu_622_p3 = (!cond1_fu_616_p2.read()[0].is_01())? sc_lv<32>(): ((cond1_fu_616_p2.read()[0].to_bool())? out_data_9_V_3_fu_330.read(): in_0_1_V_V_dout.read());
}

void AttentionMatmulWrite::thread_out_data_9_V_2_fu_630_p3() {
    out_data_9_V_2_fu_630_p3 = (!cond1_fu_616_p2.read()[0].is_01())? sc_lv<32>(): ((cond1_fu_616_p2.read()[0].to_bool())? in_0_1_V_V_dout.read(): out_data_9_V_fu_298.read());
}

void AttentionMatmulWrite::thread_p_Result_s_fu_485_p4() {
    p_Result_s_fu_485_p4 = esl_concat<480,32>(esl_concat<448,32>(ap_const_lv448_lc_1, tmp_V_114_reg_1032.read()), tmp_V_reg_1027.read());
}

void AttentionMatmulWrite::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void AttentionMatmulWrite::thread_ret_V_1_fu_503_p2() {
    ret_V_1_fu_503_p2 = (!ap_const_lv30_3FFFFFFF.is_01() || !lhs_V_cast_fu_500_p1.read().is_01())? sc_lv<30>(): (sc_bigint<30>(ap_const_lv30_3FFFFFFF) + sc_biguint<30>(lhs_V_cast_fu_500_p1.read()));
}

void AttentionMatmulWrite::thread_ret_V_fu_923_p0() {
    ret_V_fu_923_p0 =  (sc_lv<16>) (ret_V_fu_923_p00.read());
}

void AttentionMatmulWrite::thread_ret_V_fu_923_p00() {
    ret_V_fu_923_p00 = esl_zext<32,16>(tmp_11_fu_451_p1.read());
}

void AttentionMatmulWrite::thread_ret_V_fu_923_p1() {
    ret_V_fu_923_p1 =  (sc_lv<16>) (ret_V_fu_923_p10.read());
}

void AttentionMatmulWrite::thread_ret_V_fu_923_p10() {
    ret_V_fu_923_p10 = esl_zext<32,16>(tmp_12_fu_455_p1.read());
}

void AttentionMatmulWrite::thread_start_out() {
    start_out = real_start.read();
}

void AttentionMatmulWrite::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void AttentionMatmulWrite::thread_temp_last_V_fu_528_p2() {
    temp_last_V_fu_528_p2 = (!tmp_54_cast_fu_524_p1.read().is_01() || !ret_V_1_reg_1053.read().is_01())? sc_lv<1>(): sc_lv<1>(tmp_54_cast_fu_524_p1.read() == ret_V_1_reg_1053.read());
}

void AttentionMatmulWrite::thread_temp_user_V_fu_494_p2() {
    temp_user_V_fu_494_p2 = (!ap_const_lv16_1.is_01() || !tmp_reg_1037.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(tmp_reg_1037.read()));
}

void AttentionMatmulWrite::thread_tmp_101_1_06_t_fu_638_p2() {
    tmp_101_1_06_t_fu_638_p2 = (tmp_95_t_fu_581_p3.read() | ap_const_lv4_2);
}

void AttentionMatmulWrite::thread_tmp_101_2_09_t_fu_694_p2() {
    tmp_101_2_09_t_fu_694_p2 = (tmp_95_t_fu_581_p3.read() | ap_const_lv4_4);
}

void AttentionMatmulWrite::thread_tmp_101_3_012_t_fu_750_p2() {
    tmp_101_3_012_t_fu_750_p2 = (tmp_95_t_fu_581_p3.read() | ap_const_lv4_6);
}

void AttentionMatmulWrite::thread_tmp_102_0_15_t_fu_610_p2() {
    tmp_102_0_15_t_fu_610_p2 = (tmp_95_t_fu_581_p3.read() | ap_const_lv4_1);
}

void AttentionMatmulWrite::thread_tmp_102_1_18_t_fu_666_p2() {
    tmp_102_1_18_t_fu_666_p2 = (tmp_95_t_fu_581_p3.read() | ap_const_lv4_3);
}

void AttentionMatmulWrite::thread_tmp_102_2_111_t_fu_722_p2() {
    tmp_102_2_111_t_fu_722_p2 = (tmp_95_t_fu_581_p3.read() | ap_const_lv4_5);
}

void AttentionMatmulWrite::thread_tmp_102_3_114_t_fu_778_p2() {
    tmp_102_3_114_t_fu_778_p2 = (tmp_95_t_fu_581_p3.read() | ap_const_lv4_7);
}

void AttentionMatmulWrite::thread_tmp_11_fu_451_p1() {
    tmp_11_fu_451_p1 = in_n_r_V_V_dout.read().range(16-1, 0);
}

void AttentionMatmulWrite::thread_tmp_12_fu_455_p1() {
    tmp_12_fu_455_p1 = in_n_c_V_V_dout.read().range(16-1, 0);
}

void AttentionMatmulWrite::thread_tmp_54_cast_fu_524_p1() {
    tmp_54_cast_fu_524_p1 = esl_zext<30,29>(i_op_assign_reg_440.read());
}

void AttentionMatmulWrite::thread_tmp_95_t_fu_581_p3() {
    tmp_95_t_fu_581_p3 = esl_concat<1,3>(index_reg_1067.read(), ap_const_lv3_0);
}

void AttentionMatmulWrite::thread_tmp_data_V_3_fu_886_p17() {
    tmp_data_V_3_fu_886_p17 = esl_concat<480,32>(esl_concat<448,32>(esl_concat<416,32>(esl_concat<384,32>(esl_concat<352,32>(esl_concat<320,32>(esl_concat<288,32>(esl_concat<256,32>(esl_concat<224,32>(esl_concat<192,32>(esl_concat<160,32>(esl_concat<128,32>(esl_concat<96,32>(esl_concat<64,32>(esl_concat<32,32>(out_data_15_V_1_fu_790_p3.read(), out_data_14_V_1_fu_762_p3.read()), out_data_13_V_1_fu_734_p3.read()), out_data_12_V_1_fu_706_p3.read()), out_data_11_V_1_fu_678_p3.read()), out_data_10_V_1_fu_650_p3.read()), out_data_9_V_1_fu_622_p3.read()), out_data_8_V_1_fu_594_p3.read()), out_data_15_V_2_fu_798_p3.read()), out_data_14_V_2_fu_770_p3.read()), out_data_13_V_2_fu_742_p3.read()), out_data_12_V_2_fu_714_p3.read()), out_data_11_V_2_fu_686_p3.read()), out_data_10_V_2_fu_658_p3.read()), out_data_9_V_2_fu_630_p3.read()), out_data_8_V_2_fu_602_p3.read());
}

void AttentionMatmulWrite::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_n_r_V_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_n_c_V_V_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(out_V_id_V1_status.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_509_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_509_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<4>) ("XXXX");
            break;
    }
}

}

