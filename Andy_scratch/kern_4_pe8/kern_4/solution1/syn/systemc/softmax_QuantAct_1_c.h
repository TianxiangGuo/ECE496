// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _softmax_QuantAct_1_c_HH_
#define _softmax_QuantAct_1_c_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "kernel_4_mul_32ns_64s_95_2_1.h"

namespace ap_rtl {

struct softmax_QuantAct_1_c : public sc_module {
    // Port declarations 31
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<32> > in_quant_iter_c_V_V_dout;
    sc_in< sc_logic > in_quant_iter_c_V_V_empty_n;
    sc_out< sc_logic > in_quant_iter_c_V_V_read;
    sc_in< sc_lv<32> > in_quant_iter_r_V_V_dout;
    sc_in< sc_logic > in_quant_iter_r_V_V_empty_n;
    sc_out< sc_logic > in_quant_iter_r_V_V_read;
    sc_out< sc_lv<32> > in_proc_2_iter_r_V_V_din;
    sc_in< sc_logic > in_proc_2_iter_r_V_V_full_n;
    sc_out< sc_logic > in_proc_2_iter_r_V_V_write;
    sc_out< sc_lv<32> > in_proc_2_iter_c_V_V_din;
    sc_in< sc_logic > in_proc_2_iter_c_V_V_full_n;
    sc_out< sc_logic > in_proc_2_iter_c_V_V_write;
    sc_out< sc_lv<32> > sum_V_V_din;
    sc_in< sc_logic > sum_V_V_full_n;
    sc_out< sc_logic > sum_V_V_write;
    sc_in< sc_lv<64> > in_quant_V_V_dout;
    sc_in< sc_logic > in_quant_V_V_empty_n;
    sc_out< sc_logic > in_quant_V_V_read;
    sc_out< sc_lv<16> > in_proc_2_V_V_din;
    sc_in< sc_logic > in_proc_2_V_V_full_n;
    sc_out< sc_logic > in_proc_2_V_V_write;


    // Module declarations
    softmax_QuantAct_1_c(sc_module_name name);
    SC_HAS_PROCESS(softmax_QuantAct_1_c);

    ~softmax_QuantAct_1_c();

    sc_trace_file* mVcdFile;

    kernel_4_mul_32ns_64s_95_2_1<1,2,32,64,95>* kernel_4_mul_32ns_64s_95_2_1_U1917;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > in_quant_iter_c_V_V_blk_n;
    sc_signal< sc_logic > in_quant_iter_r_V_V_blk_n;
    sc_signal< sc_logic > in_proc_2_iter_r_V_V_blk_n;
    sc_signal< sc_logic > in_proc_2_iter_c_V_V_blk_n;
    sc_signal< sc_logic > sum_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > tmp_51_i_reg_392;
    sc_signal< sc_lv<1> > tmp_51_i_reg_392_pp0_iter4_reg;
    sc_signal< sc_logic > in_quant_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_378;
    sc_signal< sc_logic > in_proc_2_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_378_pp0_iter3_reg;
    sc_signal< sc_lv<64> > indvar_flatten_reg_206;
    sc_signal< sc_lv<32> > l_i_reg_217;
    sc_signal< sc_lv<32> > tmp_V_110_reg_356;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > tmp_V_109_reg_363;
    sc_signal< sc_lv<32> > tmp_i_fu_228_p2;
    sc_signal< sc_lv<32> > tmp_i_reg_368;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > bound_fu_239_p2;
    sc_signal< sc_lv<64> > bound_reg_373;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_245_p2;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter5;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_378_pp0_iter1_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_378_pp0_iter2_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_378_pp0_iter4_reg;
    sc_signal< sc_lv<64> > indvar_flatten_next_fu_250_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > tmp_49_i_fu_269_p2;
    sc_signal< sc_lv<1> > tmp_49_i_reg_387;
    sc_signal< sc_lv<1> > tmp_49_i_reg_387_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_49_i_reg_387_pp0_iter2_reg;
    sc_signal< sc_lv<1> > tmp_49_i_reg_387_pp0_iter3_reg;
    sc_signal< sc_lv<1> > tmp_49_i_reg_387_pp0_iter4_reg;
    sc_signal< sc_lv<1> > tmp_51_i_fu_275_p2;
    sc_signal< sc_lv<1> > tmp_51_i_reg_392_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_51_i_reg_392_pp0_iter2_reg;
    sc_signal< sc_lv<1> > tmp_51_i_reg_392_pp0_iter3_reg;
    sc_signal< sc_lv<32> > l_fu_280_p2;
    sc_signal< sc_lv<64> > tmp_V_111_reg_401;
    sc_signal< sc_lv<1> > tmp_reg_411;
    sc_signal< sc_lv<16> > tmp_13_i_reg_416;
    sc_signal< sc_lv<16> > tmp_V_112_fu_318_p3;
    sc_signal< sc_lv<16> > tmp_V_112_reg_422;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > tmp_V_113_fu_337_p3;
    sc_signal< sc_lv<32> > tmp_V_fu_154;
    sc_signal< sc_lv<32> > bound_fu_239_p0;
    sc_signal< sc_lv<32> > bound_fu_239_p1;
    sc_signal< sc_lv<1> > exitcond_i2_fu_256_p2;
    sc_signal< sc_lv<32> > l_i_mid2_fu_261_p3;
    sc_signal< sc_lv<32> > grp_fu_289_p0;
    sc_signal< sc_lv<95> > grp_fu_289_p2;
    sc_signal< sc_lv<16> > tmp_48_i_fu_313_p2;
    sc_signal< sc_lv<32> > p_5_i_fu_328_p1;
    sc_signal< sc_lv<32> > tmp_50_i_fu_331_p2;
    sc_signal< sc_logic > grp_fu_289_ce;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<64> > bound_fu_239_p00;
    sc_signal< sc_lv<64> > bound_fu_239_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state9;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<95> ap_const_lv95_6048F5EC;
    static const sc_lv<32> ap_const_lv32_41;
    static const sc_lv<32> ap_const_lv32_42;
    static const sc_lv<32> ap_const_lv32_51;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state6_pp0_stage0_iter3();
    void thread_ap_block_state7_pp0_stage0_iter4();
    void thread_ap_block_state8_pp0_stage0_iter5();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_bound_fu_239_p0();
    void thread_bound_fu_239_p00();
    void thread_bound_fu_239_p1();
    void thread_bound_fu_239_p10();
    void thread_bound_fu_239_p2();
    void thread_exitcond_flatten_fu_245_p2();
    void thread_exitcond_i2_fu_256_p2();
    void thread_grp_fu_289_ce();
    void thread_grp_fu_289_p0();
    void thread_in_proc_2_V_V_blk_n();
    void thread_in_proc_2_V_V_din();
    void thread_in_proc_2_V_V_write();
    void thread_in_proc_2_iter_c_V_V_blk_n();
    void thread_in_proc_2_iter_c_V_V_din();
    void thread_in_proc_2_iter_c_V_V_write();
    void thread_in_proc_2_iter_r_V_V_blk_n();
    void thread_in_proc_2_iter_r_V_V_din();
    void thread_in_proc_2_iter_r_V_V_write();
    void thread_in_quant_V_V_blk_n();
    void thread_in_quant_V_V_read();
    void thread_in_quant_iter_c_V_V_blk_n();
    void thread_in_quant_iter_c_V_V_read();
    void thread_in_quant_iter_r_V_V_blk_n();
    void thread_in_quant_iter_r_V_V_read();
    void thread_indvar_flatten_next_fu_250_p2();
    void thread_internal_ap_ready();
    void thread_l_fu_280_p2();
    void thread_l_i_mid2_fu_261_p3();
    void thread_p_5_i_fu_328_p1();
    void thread_real_start();
    void thread_start_out();
    void thread_start_write();
    void thread_sum_V_V_blk_n();
    void thread_sum_V_V_din();
    void thread_sum_V_V_write();
    void thread_tmp_48_i_fu_313_p2();
    void thread_tmp_49_i_fu_269_p2();
    void thread_tmp_50_i_fu_331_p2();
    void thread_tmp_51_i_fu_275_p2();
    void thread_tmp_V_112_fu_318_p3();
    void thread_tmp_V_113_fu_337_p3();
    void thread_tmp_i_fu_228_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
