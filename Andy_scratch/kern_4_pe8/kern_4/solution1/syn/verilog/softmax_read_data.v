// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module softmax_read_data (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_V_data_V_dout,
        in_V_data_V_empty_n,
        in_V_data_V_read,
        in_V_id_V_dout,
        in_V_id_V_empty_n,
        in_V_id_V_read,
        in_V_dest_V_dout,
        in_V_dest_V_empty_n,
        in_V_dest_V_read,
        in_V_user_V_dout,
        in_V_user_V_empty_n,
        in_V_user_V_read,
        in_V_last_V_dout,
        in_V_last_V_empty_n,
        in_V_last_V_read,
        in_write_n_V_V_din,
        in_write_n_V_V_full_n,
        in_write_n_V_V_write,
        in_sub_max_r_V_V_din,
        in_sub_max_r_V_V_full_n,
        in_sub_max_r_V_V_write,
        in_sub_max_c_V_V_din,
        in_sub_max_c_V_V_full_n,
        in_sub_max_c_V_V_write,
        max_input_V_V_din,
        max_input_V_V_full_n,
        max_input_V_V_write,
        in_sub_max_V_V_din,
        in_sub_max_V_V_full_n,
        in_sub_max_V_V_write
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_pp0_stage0 = 19'd4;
parameter    ap_ST_fsm_pp0_stage1 = 19'd8;
parameter    ap_ST_fsm_pp0_stage2 = 19'd16;
parameter    ap_ST_fsm_pp0_stage3 = 19'd32;
parameter    ap_ST_fsm_pp0_stage4 = 19'd64;
parameter    ap_ST_fsm_pp0_stage5 = 19'd128;
parameter    ap_ST_fsm_pp0_stage6 = 19'd256;
parameter    ap_ST_fsm_pp0_stage7 = 19'd512;
parameter    ap_ST_fsm_pp0_stage8 = 19'd1024;
parameter    ap_ST_fsm_pp0_stage9 = 19'd2048;
parameter    ap_ST_fsm_pp0_stage10 = 19'd4096;
parameter    ap_ST_fsm_pp0_stage11 = 19'd8192;
parameter    ap_ST_fsm_pp0_stage12 = 19'd16384;
parameter    ap_ST_fsm_pp0_stage13 = 19'd32768;
parameter    ap_ST_fsm_pp0_stage14 = 19'd65536;
parameter    ap_ST_fsm_pp0_stage15 = 19'd131072;
parameter    ap_ST_fsm_state20 = 19'd262144;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [511:0] in_V_data_V_dout;
input   in_V_data_V_empty_n;
output   in_V_data_V_read;
input  [7:0] in_V_id_V_dout;
input   in_V_id_V_empty_n;
output   in_V_id_V_read;
input  [7:0] in_V_dest_V_dout;
input   in_V_dest_V_empty_n;
output   in_V_dest_V_read;
input  [15:0] in_V_user_V_dout;
input   in_V_user_V_empty_n;
output   in_V_user_V_read;
input  [0:0] in_V_last_V_dout;
input   in_V_last_V_empty_n;
output   in_V_last_V_read;
output  [95:0] in_write_n_V_V_din;
input   in_write_n_V_V_full_n;
output   in_write_n_V_V_write;
output  [31:0] in_sub_max_r_V_V_din;
input   in_sub_max_r_V_V_full_n;
output   in_sub_max_r_V_V_write;
output  [31:0] in_sub_max_c_V_V_din;
input   in_sub_max_c_V_V_full_n;
output   in_sub_max_c_V_V_write;
output  [31:0] max_input_V_V_din;
input   max_input_V_V_full_n;
output   max_input_V_V_write;
output  [31:0] in_sub_max_V_V_din;
input   in_sub_max_V_V_full_n;
output   in_sub_max_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_write_n_V_V_write;
reg in_sub_max_r_V_V_write;
reg in_sub_max_c_V_V_write;
reg max_input_V_V_write;
reg[31:0] in_sub_max_V_V_din;
reg in_sub_max_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    in_V_data_V_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] exitcond_flatten_reg_809;
reg    in_V_id_V_blk_n;
reg    in_V_dest_V_blk_n;
reg    in_V_user_V_blk_n;
reg    in_V_last_V_blk_n;
reg    in_write_n_V_V_blk_n;
reg    in_sub_max_r_V_V_blk_n;
reg    in_sub_max_c_V_V_blk_n;
reg    max_input_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [0:0] tmp_21_i_reg_824;
reg    in_sub_max_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [59:0] indvar_flatten_reg_299;
reg   [27:0] packet_i_reg_310;
wire   [31:0] num_batches_fu_336_p1;
reg   [31:0] num_batches_reg_787;
wire    in_V_id_V0_status;
reg    ap_block_state1;
reg   [27:0] tmp_1_reg_792;
wire   [28:0] tmp_15_i_fu_359_p2;
reg   [28:0] tmp_15_i_reg_799;
wire    ap_CS_fsm_state2;
wire   [59:0] bound_fu_371_p2;
reg   [59:0] bound_reg_804;
wire   [0:0] exitcond_flatten_fu_377_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state19_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [59:0] indvar_flatten_next_fu_382_p2;
reg   [59:0] indvar_flatten_next_reg_813;
wire   [27:0] packet_i_mid2_fu_393_p3;
reg   [27:0] packet_i_mid2_reg_818;
wire   [0:0] tmp_21_i_fu_405_p2;
wire   [31:0] tmp_V_79_fu_410_p1;
reg   [31:0] tmp_V_79_reg_828;
reg    ap_block_state4_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] buffer_1_V_reg_834;
reg   [31:0] buffer_2_V_reg_841;
reg   [31:0] buffer_3_V_reg_848;
reg   [31:0] buffer_4_V_reg_855;
reg   [31:0] buffer_5_V_reg_862;
reg   [31:0] buffer_6_V_reg_869;
reg   [31:0] buffer_7_V_reg_876;
reg   [31:0] buffer_8_V_reg_883;
reg   [31:0] buffer_9_V_reg_890;
reg   [31:0] buffer_10_V_reg_897;
reg   [31:0] buffer_11_V_reg_904;
reg   [31:0] buffer_12_V_reg_911;
reg   [31:0] buffer_13_V_reg_918;
reg   [31:0] buffer_14_V_reg_925;
reg   [31:0] buffer_15_V_reg_932;
wire   [0:0] tmp_17_i_fu_555_p2;
reg   [0:0] tmp_17_i_reg_939;
reg    ap_block_state5_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
wire   [31:0] max_3_0_V_fu_702_p3;
reg   [31:0] max_3_0_V_reg_944;
wire   [31:0] max_val_V_fu_716_p3;
reg   [31:0] max_val_V_reg_951;
wire   [27:0] packet_fu_776_p2;
reg   [27:0] packet_reg_958;
reg    ap_block_state18_pp0_stage15_iter0;
reg    ap_block_pp0_stage15_11001;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_block_pp0_stage15_subdone;
reg   [59:0] ap_phi_mux_indvar_flatten_phi_fu_303_p4;
reg   [27:0] ap_phi_mux_packet_i_phi_fu_314_p4;
reg    in_V_id_V0_update;
reg    ap_predicate_op116_write_state6;
reg    ap_block_state6_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg    ap_block_state7_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_state8_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_11001;
reg    ap_block_state9_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_11001;
reg    ap_block_state10_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_11001;
reg    ap_block_state11_pp0_stage8_iter0;
reg    ap_block_pp0_stage8_11001;
reg    ap_block_state12_pp0_stage9_iter0;
reg    ap_block_pp0_stage9_11001;
reg    ap_block_state13_pp0_stage10_iter0;
reg    ap_block_pp0_stage10_11001;
reg    ap_block_state14_pp0_stage11_iter0;
reg    ap_block_pp0_stage11_11001;
reg    ap_block_state15_pp0_stage12_iter0;
reg    ap_block_pp0_stage12_11001;
reg    ap_block_state16_pp0_stage13_iter0;
reg    ap_block_pp0_stage13_11001;
reg    ap_block_state17_pp0_stage14_iter0;
reg    ap_block_pp0_stage14_11001;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage2_01001;
reg    ap_block_pp0_stage3_01001;
reg    ap_block_pp0_stage4_01001;
reg    ap_block_pp0_stage5_01001;
reg    ap_block_pp0_stage6_01001;
reg    ap_block_pp0_stage7_01001;
reg    ap_block_pp0_stage8_01001;
reg    ap_block_pp0_stage9_01001;
reg    ap_block_pp0_stage10_01001;
reg    ap_block_pp0_stage11_01001;
reg    ap_block_pp0_stage12_01001;
reg    ap_block_pp0_stage13_01001;
reg    ap_block_pp0_stage14_01001;
reg    ap_block_pp0_stage15_01001;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] tmp_V_95_fu_762_p3;
reg   [31:0] tmp_V_fu_246;
wire   [28:0] tmp_cast423_i_fu_356_p1;
wire   [27:0] bound_fu_371_p0;
wire   [31:0] bound_fu_371_p1;
wire   [0:0] exitcond2_fu_388_p2;
wire   [28:0] packet_cast_i_fu_401_p1;
wire   [0:0] tmp_25_i_fu_560_p2;
wire   [0:0] tmp_25_1_i_fu_570_p2;
wire   [0:0] tmp_25_2_i_fu_580_p2;
wire   [0:0] tmp_25_3_i_fu_590_p2;
wire   [0:0] tmp_25_4_i_fu_600_p2;
wire   [0:0] tmp_25_5_i_fu_610_p2;
wire   [0:0] tmp_25_6_i_fu_620_p2;
wire   [0:0] tmp_25_7_i_fu_630_p2;
wire   [31:0] max_1_0_V_fu_564_p3;
wire   [31:0] max_1_1_V_fu_574_p3;
wire   [0:0] tmp_34_i_fu_640_p2;
wire   [31:0] max_1_2_V_fu_584_p3;
wire   [31:0] max_1_3_V_fu_594_p3;
wire   [0:0] tmp_34_1_i_fu_654_p2;
wire   [31:0] max_1_4_V_fu_604_p3;
wire   [31:0] max_1_5_V_fu_614_p3;
wire   [0:0] tmp_34_2_i_fu_668_p2;
wire   [31:0] max_1_6_V_fu_624_p3;
wire   [31:0] max_1_7_V_fu_634_p3;
wire   [0:0] tmp_34_3_i_fu_682_p2;
wire   [31:0] max_2_0_V_fu_646_p3;
wire   [31:0] max_2_1_V_fu_660_p3;
wire   [0:0] tmp_42_i_fu_696_p2;
wire   [31:0] max_2_2_V_fu_674_p3;
wire   [31:0] max_2_3_V_fu_688_p3;
wire   [0:0] tmp_42_1_i_fu_710_p2;
wire   [31:0] p_0200_1_i_fu_727_p3;
wire   [0:0] tmp_19_i_fu_738_p2;
wire   [0:0] tmp_20_i_fu_750_p2;
wire   [0:0] tmp_18_i_fu_734_p2;
wire   [31:0] storemerge9_0200_1_fu_743_p3;
wire   [31:0] max_val_V_1_0200_1_fu_755_p3;
wire    ap_CS_fsm_state20;
reg   [18:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [59:0] bound_fu_371_p00;
wire   [59:0] bound_fu_371_p10;
reg    ap_condition_554;
reg    ap_condition_559;
reg    ap_condition_564;
reg    ap_condition_569;
reg    ap_condition_574;
reg    ap_condition_579;
reg    ap_condition_584;
reg    ap_condition_589;
reg    ap_condition_594;
reg    ap_condition_599;
reg    ap_condition_604;
reg    ap_condition_609;
reg    ap_condition_614;
reg    ap_condition_619;
reg    ap_condition_624;
reg    ap_condition_629;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 19'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_809 == 1'd0))) begin
        indvar_flatten_reg_299 <= indvar_flatten_next_reg_813;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten_reg_299 <= 60'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_809 == 1'd0))) begin
        packet_i_reg_310 <= packet_reg_958;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        packet_i_reg_310 <= 28'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bound_reg_804 <= bound_fu_371_p2;
        tmp_15_i_reg_799 <= tmp_15_i_fu_359_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_809 == 1'd0))) begin
        buffer_10_V_reg_897 <= {{in_V_data_V_dout[351:320]}};
        buffer_11_V_reg_904 <= {{in_V_data_V_dout[383:352]}};
        buffer_12_V_reg_911 <= {{in_V_data_V_dout[415:384]}};
        buffer_13_V_reg_918 <= {{in_V_data_V_dout[447:416]}};
        buffer_14_V_reg_925 <= {{in_V_data_V_dout[479:448]}};
        buffer_15_V_reg_932 <= {{in_V_data_V_dout[511:480]}};
        buffer_2_V_reg_841 <= {{in_V_data_V_dout[95:64]}};
        buffer_3_V_reg_848 <= {{in_V_data_V_dout[127:96]}};
        buffer_4_V_reg_855 <= {{in_V_data_V_dout[159:128]}};
        buffer_5_V_reg_862 <= {{in_V_data_V_dout[191:160]}};
        buffer_6_V_reg_869 <= {{in_V_data_V_dout[223:192]}};
        buffer_7_V_reg_876 <= {{in_V_data_V_dout[255:224]}};
        buffer_8_V_reg_883 <= {{in_V_data_V_dout[287:256]}};
        buffer_9_V_reg_890 <= {{in_V_data_V_dout[319:288]}};
        tmp_V_79_reg_828 <= tmp_V_79_fu_410_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_809 == 1'd0))) begin
        buffer_1_V_reg_834 <= {{in_V_data_V_dout[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten_reg_809 <= exitcond_flatten_fu_377_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_next_reg_813 <= indvar_flatten_next_fu_382_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_809 == 1'd0))) begin
        max_3_0_V_reg_944 <= max_3_0_V_fu_702_p3;
        max_val_V_reg_951 <= max_val_V_fu_716_p3;
        tmp_17_i_reg_939 <= tmp_17_i_fu_555_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (in_sub_max_c_V_V_full_n == 1'b0) | (in_sub_max_r_V_V_full_n == 1'b0) | (in_write_n_V_V_full_n == 1'b0) | (in_V_id_V0_status == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        num_batches_reg_787 <= num_batches_fu_336_p1;
        tmp_1_reg_792 <= {{in_V_data_V_dout[63:36]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_fu_377_p2 == 1'd0))) begin
        packet_i_mid2_reg_818 <= packet_i_mid2_fu_393_p3;
        tmp_21_i_reg_824 <= tmp_21_i_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0))) begin
        packet_reg_958 <= packet_fu_776_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0))) begin
        tmp_V_fu_246 <= tmp_V_95_fu_762_p3;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_377_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_809 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_303_p4 = indvar_flatten_next_reg_813;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_303_p4 = indvar_flatten_reg_299;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_809 == 1'd0))) begin
        ap_phi_mux_packet_i_phi_fu_314_p4 = packet_reg_958;
    end else begin
        ap_phi_mux_packet_i_phi_fu_314_p4 = packet_i_reg_310;
    end
end

always @ (*) begin
    if (((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_809 == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        in_V_data_V_blk_n = in_V_data_V_empty_n;
    end else begin
        in_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_809 == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        in_V_dest_V_blk_n = in_V_dest_V_empty_n;
    end else begin
        in_V_dest_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((ap_done_reg == 1'b1) | (in_sub_max_c_V_V_full_n == 1'b0) | (in_sub_max_r_V_V_full_n == 1'b0) | (in_write_n_V_V_full_n == 1'b0) | (in_V_id_V0_status == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_809 == 1'd0)))) begin
        in_V_id_V0_update = 1'b1;
    end else begin
        in_V_id_V0_update = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_809 == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        in_V_id_V_blk_n = in_V_id_V_empty_n;
    end else begin
        in_V_id_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_809 == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        in_V_last_V_blk_n = in_V_last_V_empty_n;
    end else begin
        in_V_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_809 == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        in_V_user_V_blk_n = in_V_user_V_empty_n;
    end else begin
        in_V_user_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (exitcond_flatten_reg_809 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_809 == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        in_sub_max_V_V_blk_n = in_sub_max_V_V_full_n;
    end else begin
        in_sub_max_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((exitcond_flatten_reg_809 == 1'd0)) begin
        if ((1'b1 == ap_condition_629)) begin
            in_sub_max_V_V_din = buffer_15_V_reg_932;
        end else if ((1'b1 == ap_condition_624)) begin
            in_sub_max_V_V_din = buffer_14_V_reg_925;
        end else if ((1'b1 == ap_condition_619)) begin
            in_sub_max_V_V_din = buffer_13_V_reg_918;
        end else if ((1'b1 == ap_condition_614)) begin
            in_sub_max_V_V_din = buffer_12_V_reg_911;
        end else if ((1'b1 == ap_condition_609)) begin
            in_sub_max_V_V_din = buffer_11_V_reg_904;
        end else if ((1'b1 == ap_condition_604)) begin
            in_sub_max_V_V_din = buffer_10_V_reg_897;
        end else if ((1'b1 == ap_condition_599)) begin
            in_sub_max_V_V_din = buffer_9_V_reg_890;
        end else if ((1'b1 == ap_condition_594)) begin
            in_sub_max_V_V_din = buffer_8_V_reg_883;
        end else if ((1'b1 == ap_condition_589)) begin
            in_sub_max_V_V_din = buffer_7_V_reg_876;
        end else if ((1'b1 == ap_condition_584)) begin
            in_sub_max_V_V_din = buffer_6_V_reg_869;
        end else if ((1'b1 == ap_condition_579)) begin
            in_sub_max_V_V_din = buffer_5_V_reg_862;
        end else if ((1'b1 == ap_condition_574)) begin
            in_sub_max_V_V_din = buffer_4_V_reg_855;
        end else if ((1'b1 == ap_condition_569)) begin
            in_sub_max_V_V_din = buffer_3_V_reg_848;
        end else if ((1'b1 == ap_condition_564)) begin
            in_sub_max_V_V_din = buffer_2_V_reg_841;
        end else if ((1'b1 == ap_condition_559)) begin
            in_sub_max_V_V_din = buffer_1_V_reg_834;
        end else if ((1'b1 == ap_condition_554)) begin
            in_sub_max_V_V_din = tmp_V_79_fu_410_p1;
        end else begin
            in_sub_max_V_V_din = 'bx;
        end
    end else begin
        in_sub_max_V_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_809 == 1'd0)))) begin
        in_sub_max_V_V_write = 1'b1;
    end else begin
        in_sub_max_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        in_sub_max_c_V_V_blk_n = in_sub_max_c_V_V_full_n;
    end else begin
        in_sub_max_c_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (in_sub_max_c_V_V_full_n == 1'b0) | (in_sub_max_r_V_V_full_n == 1'b0) | (in_write_n_V_V_full_n == 1'b0) | (in_V_id_V0_status == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        in_sub_max_c_V_V_write = 1'b1;
    end else begin
        in_sub_max_c_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        in_sub_max_r_V_V_blk_n = in_sub_max_r_V_V_full_n;
    end else begin
        in_sub_max_r_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (in_sub_max_c_V_V_full_n == 1'b0) | (in_sub_max_r_V_V_full_n == 1'b0) | (in_write_n_V_V_full_n == 1'b0) | (in_V_id_V0_status == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        in_sub_max_r_V_V_write = 1'b1;
    end else begin
        in_sub_max_r_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        in_write_n_V_V_blk_n = in_write_n_V_V_full_n;
    end else begin
        in_write_n_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (in_sub_max_c_V_V_full_n == 1'b0) | (in_sub_max_r_V_V_full_n == 1'b0) | (in_write_n_V_V_full_n == 1'b0) | (in_V_id_V0_status == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        in_write_n_V_V_write = 1'b1;
    end else begin
        in_write_n_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_21_i_reg_824 == 1'd1) & (1'b0 == ap_block_pp0_stage3) & (exitcond_flatten_reg_809 == 1'd0))) begin
        max_input_V_V_blk_n = max_input_V_V_full_n;
    end else begin
        max_input_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_predicate_op116_write_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        max_input_V_V_write = 1'b1;
    end else begin
        max_input_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (in_sub_max_c_V_V_full_n == 1'b0) | (in_sub_max_r_V_V_full_n == 1'b0) | (in_write_n_V_V_full_n == 1'b0) | (in_V_id_V0_status == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_fu_377_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_fu_377_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_01001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_01001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_01001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_01001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_01001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_01001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_sub_max_V_V_full_n == 1'b0) & (exitcond_flatten_reg_809 == 1'd0)) | ((in_V_id_V0_status == 1'b0) & (exitcond_flatten_reg_809 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_sub_max_V_V_full_n == 1'b0) & (exitcond_flatten_reg_809 == 1'd0)) | ((in_V_id_V0_status == 1'b0) & (exitcond_flatten_reg_809 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_sub_max_V_V_full_n == 1'b0) & (exitcond_flatten_reg_809 == 1'd0)) | ((in_V_id_V0_status == 1'b0) & (exitcond_flatten_reg_809 == 1'd0))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((ap_predicate_op116_write_state6 == 1'b1) & (max_input_V_V_full_n == 1'b0)) | ((in_sub_max_V_V_full_n == 1'b0) & (exitcond_flatten_reg_809 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((ap_predicate_op116_write_state6 == 1'b1) & (max_input_V_V_full_n == 1'b0)) | ((in_sub_max_V_V_full_n == 1'b0) & (exitcond_flatten_reg_809 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((ap_predicate_op116_write_state6 == 1'b1) & (max_input_V_V_full_n == 1'b0)) | ((in_sub_max_V_V_full_n == 1'b0) & (exitcond_flatten_reg_809 == 1'd0))));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_01001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_01001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_01001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((in_sub_max_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (in_sub_max_c_V_V_full_n == 1'b0) | (in_sub_max_r_V_V_full_n == 1'b0) | (in_write_n_V_V_full_n == 1'b0) | (in_V_id_V0_status == 1'b0) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp0_stage7_iter0 = ((in_sub_max_V_V_full_n == 1'b0) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_state11_pp0_stage8_iter0 = ((in_sub_max_V_V_full_n == 1'b0) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_state12_pp0_stage9_iter0 = ((in_sub_max_V_V_full_n == 1'b0) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_state13_pp0_stage10_iter0 = ((in_sub_max_V_V_full_n == 1'b0) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_state14_pp0_stage11_iter0 = ((in_sub_max_V_V_full_n == 1'b0) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_state15_pp0_stage12_iter0 = ((in_sub_max_V_V_full_n == 1'b0) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_state16_pp0_stage13_iter0 = ((in_sub_max_V_V_full_n == 1'b0) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_state17_pp0_stage14_iter0 = ((in_sub_max_V_V_full_n == 1'b0) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_state18_pp0_stage15_iter0 = ((in_sub_max_V_V_full_n == 1'b0) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_state19_pp0_stage0_iter1 = ((in_sub_max_V_V_full_n == 1'b0) & (exitcond_flatten_reg_809 == 1'd0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage1_iter0 = (((in_sub_max_V_V_full_n == 1'b0) & (exitcond_flatten_reg_809 == 1'd0)) | ((in_V_id_V0_status == 1'b0) & (exitcond_flatten_reg_809 == 1'd0)));
end

always @ (*) begin
    ap_block_state5_pp0_stage2_iter0 = ((in_sub_max_V_V_full_n == 1'b0) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_state6_pp0_stage3_iter0 = (((ap_predicate_op116_write_state6 == 1'b1) & (max_input_V_V_full_n == 1'b0)) | ((in_sub_max_V_V_full_n == 1'b0) & (exitcond_flatten_reg_809 == 1'd0)));
end

always @ (*) begin
    ap_block_state7_pp0_stage4_iter0 = ((in_sub_max_V_V_full_n == 1'b0) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_state8_pp0_stage5_iter0 = ((in_sub_max_V_V_full_n == 1'b0) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_block_state9_pp0_stage6_iter0 = ((in_sub_max_V_V_full_n == 1'b0) & (exitcond_flatten_reg_809 == 1'd0));
end

always @ (*) begin
    ap_condition_554 = ((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_559 = ((1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_564 = ((1'b0 == ap_block_pp0_stage3_01001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_569 = ((1'b0 == ap_block_pp0_stage4_01001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_574 = ((1'b0 == ap_block_pp0_stage5_01001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_579 = ((1'b0 == ap_block_pp0_stage6_01001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_584 = ((1'b0 == ap_block_pp0_stage7_01001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_589 = ((1'b0 == ap_block_pp0_stage8_01001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_594 = ((1'b0 == ap_block_pp0_stage9_01001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_599 = ((1'b0 == ap_block_pp0_stage10_01001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_604 = ((1'b0 == ap_block_pp0_stage11_01001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_609 = ((1'b0 == ap_block_pp0_stage12_01001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_614 = ((1'b0 == ap_block_pp0_stage13_01001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_619 = ((1'b0 == ap_block_pp0_stage14_01001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_624 = ((1'b0 == ap_block_pp0_stage15_01001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_629 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op116_write_state6 = ((tmp_21_i_reg_824 == 1'd1) & (exitcond_flatten_reg_809 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign bound_fu_371_p0 = bound_fu_371_p00;

assign bound_fu_371_p00 = tmp_1_reg_792;

assign bound_fu_371_p1 = bound_fu_371_p10;

assign bound_fu_371_p10 = num_batches_reg_787;

assign bound_fu_371_p2 = (bound_fu_371_p0 * bound_fu_371_p1);

assign exitcond2_fu_388_p2 = ((ap_phi_mux_packet_i_phi_fu_314_p4 == tmp_1_reg_792) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_377_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_303_p4 == bound_reg_804) ? 1'b1 : 1'b0);

assign in_V_data_V_read = in_V_id_V0_update;

assign in_V_dest_V_read = in_V_id_V0_update;

assign in_V_id_V0_status = (in_V_user_V_empty_n & in_V_last_V_empty_n & in_V_id_V_empty_n & in_V_dest_V_empty_n & in_V_data_V_empty_n);

assign in_V_id_V_read = in_V_id_V0_update;

assign in_V_last_V_read = in_V_id_V0_update;

assign in_V_user_V_read = in_V_id_V0_update;

assign in_sub_max_c_V_V_din = {{in_V_data_V_dout[63:32]}};

assign in_sub_max_r_V_V_din = in_V_data_V_dout[31:0];

assign in_write_n_V_V_din = in_V_data_V_dout[95:0];

assign indvar_flatten_next_fu_382_p2 = (ap_phi_mux_indvar_flatten_phi_fu_303_p4 + 60'd1);

assign max_1_0_V_fu_564_p3 = ((tmp_25_i_fu_560_p2[0:0] === 1'b1) ? tmp_V_79_reg_828 : buffer_1_V_reg_834);

assign max_1_1_V_fu_574_p3 = ((tmp_25_1_i_fu_570_p2[0:0] === 1'b1) ? buffer_2_V_reg_841 : buffer_3_V_reg_848);

assign max_1_2_V_fu_584_p3 = ((tmp_25_2_i_fu_580_p2[0:0] === 1'b1) ? buffer_4_V_reg_855 : buffer_5_V_reg_862);

assign max_1_3_V_fu_594_p3 = ((tmp_25_3_i_fu_590_p2[0:0] === 1'b1) ? buffer_6_V_reg_869 : buffer_7_V_reg_876);

assign max_1_4_V_fu_604_p3 = ((tmp_25_4_i_fu_600_p2[0:0] === 1'b1) ? buffer_8_V_reg_883 : buffer_9_V_reg_890);

assign max_1_5_V_fu_614_p3 = ((tmp_25_5_i_fu_610_p2[0:0] === 1'b1) ? buffer_10_V_reg_897 : buffer_11_V_reg_904);

assign max_1_6_V_fu_624_p3 = ((tmp_25_6_i_fu_620_p2[0:0] === 1'b1) ? buffer_12_V_reg_911 : buffer_13_V_reg_918);

assign max_1_7_V_fu_634_p3 = ((tmp_25_7_i_fu_630_p2[0:0] === 1'b1) ? buffer_14_V_reg_925 : buffer_15_V_reg_932);

assign max_2_0_V_fu_646_p3 = ((tmp_34_i_fu_640_p2[0:0] === 1'b1) ? max_1_1_V_fu_574_p3 : max_1_0_V_fu_564_p3);

assign max_2_1_V_fu_660_p3 = ((tmp_34_1_i_fu_654_p2[0:0] === 1'b1) ? max_1_3_V_fu_594_p3 : max_1_2_V_fu_584_p3);

assign max_2_2_V_fu_674_p3 = ((tmp_34_2_i_fu_668_p2[0:0] === 1'b1) ? max_1_5_V_fu_614_p3 : max_1_4_V_fu_604_p3);

assign max_2_3_V_fu_688_p3 = ((tmp_34_3_i_fu_682_p2[0:0] === 1'b1) ? max_1_7_V_fu_634_p3 : max_1_6_V_fu_624_p3);

assign max_3_0_V_fu_702_p3 = ((tmp_42_i_fu_696_p2[0:0] === 1'b1) ? max_2_1_V_fu_660_p3 : max_2_0_V_fu_646_p3);

assign max_input_V_V_din = ((tmp_18_i_fu_734_p2[0:0] === 1'b1) ? storemerge9_0200_1_fu_743_p3 : max_val_V_1_0200_1_fu_755_p3);

assign max_val_V_1_0200_1_fu_755_p3 = ((tmp_20_i_fu_750_p2[0:0] === 1'b1) ? max_3_0_V_reg_944 : p_0200_1_i_fu_727_p3);

assign max_val_V_fu_716_p3 = ((tmp_42_1_i_fu_710_p2[0:0] === 1'b1) ? max_2_3_V_fu_688_p3 : max_2_2_V_fu_674_p3);

assign num_batches_fu_336_p1 = in_V_data_V_dout[31:0];

assign p_0200_1_i_fu_727_p3 = ((tmp_17_i_reg_939[0:0] === 1'b1) ? 32'd2147483648 : tmp_V_fu_246);

assign packet_cast_i_fu_401_p1 = packet_i_mid2_fu_393_p3;

assign packet_fu_776_p2 = (packet_i_mid2_reg_818 + 28'd1);

assign packet_i_mid2_fu_393_p3 = ((exitcond2_fu_388_p2[0:0] === 1'b1) ? 28'd0 : ap_phi_mux_packet_i_phi_fu_314_p4);

assign start_out = real_start;

assign storemerge9_0200_1_fu_743_p3 = ((tmp_19_i_fu_738_p2[0:0] === 1'b1) ? max_val_V_reg_951 : p_0200_1_i_fu_727_p3);

assign tmp_15_i_fu_359_p2 = ($signed(29'd536870911) + $signed(tmp_cast423_i_fu_356_p1));

assign tmp_17_i_fu_555_p2 = ((packet_i_mid2_reg_818 == 28'd0) ? 1'b1 : 1'b0);

assign tmp_18_i_fu_734_p2 = (($signed(max_3_0_V_reg_944) < $signed(max_val_V_reg_951)) ? 1'b1 : 1'b0);

assign tmp_19_i_fu_738_p2 = (($signed(max_val_V_reg_951) > $signed(p_0200_1_i_fu_727_p3)) ? 1'b1 : 1'b0);

assign tmp_20_i_fu_750_p2 = (($signed(max_3_0_V_reg_944) > $signed(p_0200_1_i_fu_727_p3)) ? 1'b1 : 1'b0);

assign tmp_21_i_fu_405_p2 = ((packet_cast_i_fu_401_p1 == tmp_15_i_reg_799) ? 1'b1 : 1'b0);

assign tmp_25_1_i_fu_570_p2 = (($signed(buffer_2_V_reg_841) > $signed(buffer_3_V_reg_848)) ? 1'b1 : 1'b0);

assign tmp_25_2_i_fu_580_p2 = (($signed(buffer_4_V_reg_855) > $signed(buffer_5_V_reg_862)) ? 1'b1 : 1'b0);

assign tmp_25_3_i_fu_590_p2 = (($signed(buffer_6_V_reg_869) > $signed(buffer_7_V_reg_876)) ? 1'b1 : 1'b0);

assign tmp_25_4_i_fu_600_p2 = (($signed(buffer_8_V_reg_883) > $signed(buffer_9_V_reg_890)) ? 1'b1 : 1'b0);

assign tmp_25_5_i_fu_610_p2 = (($signed(buffer_10_V_reg_897) > $signed(buffer_11_V_reg_904)) ? 1'b1 : 1'b0);

assign tmp_25_6_i_fu_620_p2 = (($signed(buffer_12_V_reg_911) > $signed(buffer_13_V_reg_918)) ? 1'b1 : 1'b0);

assign tmp_25_7_i_fu_630_p2 = (($signed(buffer_14_V_reg_925) > $signed(buffer_15_V_reg_932)) ? 1'b1 : 1'b0);

assign tmp_25_i_fu_560_p2 = (($signed(tmp_V_79_reg_828) > $signed(buffer_1_V_reg_834)) ? 1'b1 : 1'b0);

assign tmp_34_1_i_fu_654_p2 = (($signed(max_1_2_V_fu_584_p3) < $signed(max_1_3_V_fu_594_p3)) ? 1'b1 : 1'b0);

assign tmp_34_2_i_fu_668_p2 = (($signed(max_1_4_V_fu_604_p3) < $signed(max_1_5_V_fu_614_p3)) ? 1'b1 : 1'b0);

assign tmp_34_3_i_fu_682_p2 = (($signed(max_1_6_V_fu_624_p3) < $signed(max_1_7_V_fu_634_p3)) ? 1'b1 : 1'b0);

assign tmp_34_i_fu_640_p2 = (($signed(max_1_0_V_fu_564_p3) < $signed(max_1_1_V_fu_574_p3)) ? 1'b1 : 1'b0);

assign tmp_42_1_i_fu_710_p2 = (($signed(max_2_2_V_fu_674_p3) < $signed(max_2_3_V_fu_688_p3)) ? 1'b1 : 1'b0);

assign tmp_42_i_fu_696_p2 = (($signed(max_2_0_V_fu_646_p3) < $signed(max_2_1_V_fu_660_p3)) ? 1'b1 : 1'b0);

assign tmp_V_79_fu_410_p1 = in_V_data_V_dout[31:0];

assign tmp_V_95_fu_762_p3 = ((tmp_18_i_fu_734_p2[0:0] === 1'b1) ? storemerge9_0200_1_fu_743_p3 : max_val_V_1_0200_1_fu_755_p3);

assign tmp_cast423_i_fu_356_p1 = tmp_1_reg_792;

endmodule //softmax_read_data
