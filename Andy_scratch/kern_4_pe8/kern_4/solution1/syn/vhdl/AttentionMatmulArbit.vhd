-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity AttentionMatmulArbit is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    in_r_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    in_r_TVALID : IN STD_LOGIC;
    in_r_TREADY : OUT STD_LOGIC;
    in_r_TID : IN STD_LOGIC_VECTOR (7 downto 0);
    in_r_TDEST : IN STD_LOGIC_VECTOR (7 downto 0);
    in_r_TUSER : IN STD_LOGIC_VECTOR (15 downto 0);
    in_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    out_0_V_data_V_din : OUT STD_LOGIC_VECTOR (511 downto 0);
    out_0_V_data_V_full_n : IN STD_LOGIC;
    out_0_V_data_V_write : OUT STD_LOGIC;
    out_1_V_data_V_din : OUT STD_LOGIC_VECTOR (511 downto 0);
    out_1_V_data_V_full_n : IN STD_LOGIC;
    out_1_V_data_V_write : OUT STD_LOGIC;
    out_0_V_id_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_0_V_id_V_full_n : IN STD_LOGIC;
    out_0_V_id_V_write : OUT STD_LOGIC;
    out_1_V_id_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_1_V_id_V_full_n : IN STD_LOGIC;
    out_1_V_id_V_write : OUT STD_LOGIC;
    out_0_V_dest_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_0_V_dest_V_full_n : IN STD_LOGIC;
    out_0_V_dest_V_write : OUT STD_LOGIC;
    out_1_V_dest_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_1_V_dest_V_full_n : IN STD_LOGIC;
    out_1_V_dest_V_write : OUT STD_LOGIC;
    out_0_V_user_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_0_V_user_V_full_n : IN STD_LOGIC;
    out_0_V_user_V_write : OUT STD_LOGIC;
    out_1_V_user_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_1_V_user_V_full_n : IN STD_LOGIC;
    out_1_V_user_V_write : OUT STD_LOGIC;
    out_0_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_0_V_last_V_full_n : IN STD_LOGIC;
    out_0_V_last_V_write : OUT STD_LOGIC;
    out_1_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_1_V_last_V_full_n : IN STD_LOGIC;
    out_1_V_last_V_write : OUT STD_LOGIC );
end;


architecture behav of AttentionMatmulArbit is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal in_V_data_V_0_data_out : STD_LOGIC_VECTOR (511 downto 0);
    signal in_V_data_V_0_vld_in : STD_LOGIC;
    signal in_V_data_V_0_vld_out : STD_LOGIC;
    signal in_V_data_V_0_ack_in : STD_LOGIC;
    signal in_V_data_V_0_ack_out : STD_LOGIC;
    signal in_V_data_V_0_payload_A : STD_LOGIC_VECTOR (511 downto 0);
    signal in_V_data_V_0_payload_B : STD_LOGIC_VECTOR (511 downto 0);
    signal in_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal in_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal in_V_data_V_0_sel : STD_LOGIC;
    signal in_V_data_V_0_load_A : STD_LOGIC;
    signal in_V_data_V_0_load_B : STD_LOGIC;
    signal in_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal in_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal in_V_id_V_0_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal in_V_id_V_0_vld_in : STD_LOGIC;
    signal in_V_id_V_0_vld_out : STD_LOGIC;
    signal in_V_id_V_0_ack_in : STD_LOGIC;
    signal in_V_id_V_0_ack_out : STD_LOGIC;
    signal in_V_id_V_0_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal in_V_id_V_0_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal in_V_id_V_0_sel_rd : STD_LOGIC := '0';
    signal in_V_id_V_0_sel_wr : STD_LOGIC := '0';
    signal in_V_id_V_0_sel : STD_LOGIC;
    signal in_V_id_V_0_load_A : STD_LOGIC;
    signal in_V_id_V_0_load_B : STD_LOGIC;
    signal in_V_id_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal in_V_id_V_0_state_cmp_full : STD_LOGIC;
    signal in_V_dest_V_0_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal in_V_dest_V_0_vld_in : STD_LOGIC;
    signal in_V_dest_V_0_vld_out : STD_LOGIC;
    signal in_V_dest_V_0_ack_in : STD_LOGIC;
    signal in_V_dest_V_0_ack_out : STD_LOGIC;
    signal in_V_dest_V_0_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal in_V_dest_V_0_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal in_V_dest_V_0_sel_rd : STD_LOGIC := '0';
    signal in_V_dest_V_0_sel_wr : STD_LOGIC := '0';
    signal in_V_dest_V_0_sel : STD_LOGIC;
    signal in_V_dest_V_0_load_A : STD_LOGIC;
    signal in_V_dest_V_0_load_B : STD_LOGIC;
    signal in_V_dest_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal in_V_dest_V_0_state_cmp_full : STD_LOGIC;
    signal in_V_user_V_0_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal in_V_user_V_0_vld_in : STD_LOGIC;
    signal in_V_user_V_0_vld_out : STD_LOGIC;
    signal in_V_user_V_0_ack_in : STD_LOGIC;
    signal in_V_user_V_0_ack_out : STD_LOGIC;
    signal in_V_user_V_0_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal in_V_user_V_0_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal in_V_user_V_0_sel_rd : STD_LOGIC := '0';
    signal in_V_user_V_0_sel_wr : STD_LOGIC := '0';
    signal in_V_user_V_0_sel : STD_LOGIC;
    signal in_V_user_V_0_load_A : STD_LOGIC;
    signal in_V_user_V_0_load_B : STD_LOGIC;
    signal in_V_user_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal in_V_user_V_0_state_cmp_full : STD_LOGIC;
    signal in_V_last_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal in_V_last_V_0_vld_in : STD_LOGIC;
    signal in_V_last_V_0_vld_out : STD_LOGIC;
    signal in_V_last_V_0_ack_in : STD_LOGIC;
    signal in_V_last_V_0_ack_out : STD_LOGIC;
    signal in_V_last_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal in_V_last_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal in_V_last_V_0_sel_rd : STD_LOGIC := '0';
    signal in_V_last_V_0_sel_wr : STD_LOGIC := '0';
    signal in_V_last_V_0_sel : STD_LOGIC;
    signal in_V_last_V_0_load_A : STD_LOGIC;
    signal in_V_last_V_0_load_B : STD_LOGIC;
    signal in_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal in_V_last_V_0_state_cmp_full : STD_LOGIC;
    signal in_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal exitcond1_fu_300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_0_V_data_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp_849_reg_349 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_849_fu_316_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_1_V_data_V_blk_n : STD_LOGIC;
    signal out_0_V_id_V_blk_n : STD_LOGIC;
    signal out_1_V_id_V_blk_n : STD_LOGIC;
    signal out_0_V_dest_V_blk_n : STD_LOGIC;
    signal out_1_V_dest_V_blk_n : STD_LOGIC;
    signal out_0_V_user_V_blk_n : STD_LOGIC;
    signal out_1_V_user_V_blk_n : STD_LOGIC;
    signal out_0_V_last_V_blk_n : STD_LOGIC;
    signal out_1_V_last_V_blk_n : STD_LOGIC;
    signal i_reg_259 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_0_V_id_V1_status : STD_LOGIC;
    signal ap_predicate_op32_write_state2 : BOOLEAN;
    signal out_1_V_id_V1_status : STD_LOGIC;
    signal ap_predicate_op34_write_state2 : BOOLEAN;
    signal ap_block_state2 : BOOLEAN;
    signal iter_1_fu_306_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal iter_1_reg_339 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_848_fu_312_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_848_reg_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_2_fu_329_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_14_reg_362 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_id_V_5_reg_368 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_dest_V_5_reg_374 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_user_V_5_reg_380 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_last_V_5_reg_386 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal iter_reg_248 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal out_0_V_id_V1_update : STD_LOGIC;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal out_1_V_id_V1_update : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (exitcond1_fu_300_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (exitcond1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (exitcond1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    in_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                in_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((in_V_data_V_0_ack_out = ap_const_logic_1) and (in_V_data_V_0_vld_out = ap_const_logic_1))) then 
                                        in_V_data_V_0_sel_rd <= not(in_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    in_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                in_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((in_V_data_V_0_ack_in = ap_const_logic_1) and (in_V_data_V_0_vld_in = ap_const_logic_1))) then 
                                        in_V_data_V_0_sel_wr <= not(in_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    in_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                in_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((in_V_data_V_0_state = ap_const_lv2_2) and (in_V_data_V_0_vld_in = ap_const_logic_0)) or ((in_V_data_V_0_state = ap_const_lv2_3) and (in_V_data_V_0_vld_in = ap_const_logic_0) and (in_V_data_V_0_ack_out = ap_const_logic_1)))) then 
                    in_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((in_V_data_V_0_state = ap_const_lv2_1) and (in_V_data_V_0_ack_out = ap_const_logic_0)) or ((in_V_data_V_0_state = ap_const_lv2_3) and (in_V_data_V_0_ack_out = ap_const_logic_0) and (in_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    in_V_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((in_V_data_V_0_vld_in = ap_const_logic_0) and (in_V_data_V_0_ack_out = ap_const_logic_1))) and not(((in_V_data_V_0_ack_out = ap_const_logic_0) and (in_V_data_V_0_vld_in = ap_const_logic_1))) and (in_V_data_V_0_state = ap_const_lv2_3)) or ((in_V_data_V_0_state = ap_const_lv2_1) and (in_V_data_V_0_ack_out = ap_const_logic_1)) or ((in_V_data_V_0_state = ap_const_lv2_2) and (in_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    in_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    in_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    in_V_dest_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                in_V_dest_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((in_V_dest_V_0_ack_out = ap_const_logic_1) and (in_V_dest_V_0_vld_out = ap_const_logic_1))) then 
                                        in_V_dest_V_0_sel_rd <= not(in_V_dest_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    in_V_dest_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                in_V_dest_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((in_V_dest_V_0_ack_in = ap_const_logic_1) and (in_V_dest_V_0_vld_in = ap_const_logic_1))) then 
                                        in_V_dest_V_0_sel_wr <= not(in_V_dest_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    in_V_dest_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                in_V_dest_V_0_state <= ap_const_lv2_0;
            else
                if ((((in_V_dest_V_0_state = ap_const_lv2_2) and (in_V_dest_V_0_vld_in = ap_const_logic_0)) or ((in_V_dest_V_0_state = ap_const_lv2_3) and (in_V_dest_V_0_vld_in = ap_const_logic_0) and (in_V_dest_V_0_ack_out = ap_const_logic_1)))) then 
                    in_V_dest_V_0_state <= ap_const_lv2_2;
                elsif ((((in_V_dest_V_0_state = ap_const_lv2_1) and (in_V_dest_V_0_ack_out = ap_const_logic_0)) or ((in_V_dest_V_0_state = ap_const_lv2_3) and (in_V_dest_V_0_ack_out = ap_const_logic_0) and (in_V_dest_V_0_vld_in = ap_const_logic_1)))) then 
                    in_V_dest_V_0_state <= ap_const_lv2_1;
                elsif (((not(((in_V_dest_V_0_vld_in = ap_const_logic_0) and (in_V_dest_V_0_ack_out = ap_const_logic_1))) and not(((in_V_dest_V_0_ack_out = ap_const_logic_0) and (in_V_dest_V_0_vld_in = ap_const_logic_1))) and (in_V_dest_V_0_state = ap_const_lv2_3)) or ((in_V_dest_V_0_state = ap_const_lv2_1) and (in_V_dest_V_0_ack_out = ap_const_logic_1)) or ((in_V_dest_V_0_state = ap_const_lv2_2) and (in_V_dest_V_0_vld_in = ap_const_logic_1)))) then 
                    in_V_dest_V_0_state <= ap_const_lv2_3;
                else 
                    in_V_dest_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    in_V_id_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                in_V_id_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((in_V_id_V_0_ack_out = ap_const_logic_1) and (in_V_id_V_0_vld_out = ap_const_logic_1))) then 
                                        in_V_id_V_0_sel_rd <= not(in_V_id_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    in_V_id_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                in_V_id_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((in_V_id_V_0_ack_in = ap_const_logic_1) and (in_V_id_V_0_vld_in = ap_const_logic_1))) then 
                                        in_V_id_V_0_sel_wr <= not(in_V_id_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    in_V_id_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                in_V_id_V_0_state <= ap_const_lv2_0;
            else
                if ((((in_V_id_V_0_state = ap_const_lv2_2) and (in_V_id_V_0_vld_in = ap_const_logic_0)) or ((in_V_id_V_0_state = ap_const_lv2_3) and (in_V_id_V_0_vld_in = ap_const_logic_0) and (in_V_id_V_0_ack_out = ap_const_logic_1)))) then 
                    in_V_id_V_0_state <= ap_const_lv2_2;
                elsif ((((in_V_id_V_0_state = ap_const_lv2_1) and (in_V_id_V_0_ack_out = ap_const_logic_0)) or ((in_V_id_V_0_state = ap_const_lv2_3) and (in_V_id_V_0_ack_out = ap_const_logic_0) and (in_V_id_V_0_vld_in = ap_const_logic_1)))) then 
                    in_V_id_V_0_state <= ap_const_lv2_1;
                elsif (((not(((in_V_id_V_0_vld_in = ap_const_logic_0) and (in_V_id_V_0_ack_out = ap_const_logic_1))) and not(((in_V_id_V_0_ack_out = ap_const_logic_0) and (in_V_id_V_0_vld_in = ap_const_logic_1))) and (in_V_id_V_0_state = ap_const_lv2_3)) or ((in_V_id_V_0_state = ap_const_lv2_1) and (in_V_id_V_0_ack_out = ap_const_logic_1)) or ((in_V_id_V_0_state = ap_const_lv2_2) and (in_V_id_V_0_vld_in = ap_const_logic_1)))) then 
                    in_V_id_V_0_state <= ap_const_lv2_3;
                else 
                    in_V_id_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    in_V_last_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                in_V_last_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((in_V_last_V_0_ack_out = ap_const_logic_1) and (in_V_last_V_0_vld_out = ap_const_logic_1))) then 
                                        in_V_last_V_0_sel_rd <= not(in_V_last_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    in_V_last_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                in_V_last_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((in_V_last_V_0_ack_in = ap_const_logic_1) and (in_V_last_V_0_vld_in = ap_const_logic_1))) then 
                                        in_V_last_V_0_sel_wr <= not(in_V_last_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    in_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                in_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((in_V_last_V_0_state = ap_const_lv2_2) and (in_V_last_V_0_vld_in = ap_const_logic_0)) or ((in_V_last_V_0_state = ap_const_lv2_3) and (in_V_last_V_0_vld_in = ap_const_logic_0) and (in_V_last_V_0_ack_out = ap_const_logic_1)))) then 
                    in_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((in_V_last_V_0_state = ap_const_lv2_1) and (in_V_last_V_0_ack_out = ap_const_logic_0)) or ((in_V_last_V_0_state = ap_const_lv2_3) and (in_V_last_V_0_ack_out = ap_const_logic_0) and (in_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    in_V_last_V_0_state <= ap_const_lv2_1;
                elsif (((not(((in_V_last_V_0_vld_in = ap_const_logic_0) and (in_V_last_V_0_ack_out = ap_const_logic_1))) and not(((in_V_last_V_0_ack_out = ap_const_logic_0) and (in_V_last_V_0_vld_in = ap_const_logic_1))) and (in_V_last_V_0_state = ap_const_lv2_3)) or ((in_V_last_V_0_state = ap_const_lv2_1) and (in_V_last_V_0_ack_out = ap_const_logic_1)) or ((in_V_last_V_0_state = ap_const_lv2_2) and (in_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    in_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    in_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    in_V_user_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                in_V_user_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((in_V_user_V_0_ack_out = ap_const_logic_1) and (in_V_user_V_0_vld_out = ap_const_logic_1))) then 
                                        in_V_user_V_0_sel_rd <= not(in_V_user_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    in_V_user_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                in_V_user_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((in_V_user_V_0_ack_in = ap_const_logic_1) and (in_V_user_V_0_vld_in = ap_const_logic_1))) then 
                                        in_V_user_V_0_sel_wr <= not(in_V_user_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    in_V_user_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                in_V_user_V_0_state <= ap_const_lv2_0;
            else
                if ((((in_V_user_V_0_state = ap_const_lv2_2) and (in_V_user_V_0_vld_in = ap_const_logic_0)) or ((in_V_user_V_0_state = ap_const_lv2_3) and (in_V_user_V_0_vld_in = ap_const_logic_0) and (in_V_user_V_0_ack_out = ap_const_logic_1)))) then 
                    in_V_user_V_0_state <= ap_const_lv2_2;
                elsif ((((in_V_user_V_0_state = ap_const_lv2_1) and (in_V_user_V_0_ack_out = ap_const_logic_0)) or ((in_V_user_V_0_state = ap_const_lv2_3) and (in_V_user_V_0_ack_out = ap_const_logic_0) and (in_V_user_V_0_vld_in = ap_const_logic_1)))) then 
                    in_V_user_V_0_state <= ap_const_lv2_1;
                elsif (((not(((in_V_user_V_0_vld_in = ap_const_logic_0) and (in_V_user_V_0_ack_out = ap_const_logic_1))) and not(((in_V_user_V_0_ack_out = ap_const_logic_0) and (in_V_user_V_0_vld_in = ap_const_logic_1))) and (in_V_user_V_0_state = ap_const_lv2_3)) or ((in_V_user_V_0_state = ap_const_lv2_1) and (in_V_user_V_0_ack_out = ap_const_logic_1)) or ((in_V_user_V_0_state = ap_const_lv2_2) and (in_V_user_V_0_vld_in = ap_const_logic_1)))) then 
                    in_V_user_V_0_state <= ap_const_lv2_3;
                else 
                    in_V_user_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_259_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_324_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_reg_259 <= i_2_fu_329_p2;
            elsif ((not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (exitcond1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_reg_259 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    iter_reg_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                iter_reg_248 <= iter_1_reg_339;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                iter_reg_248 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_V_data_V_0_load_A = ap_const_logic_1)) then
                in_V_data_V_0_payload_A <= in_r_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_V_data_V_0_load_B = ap_const_logic_1)) then
                in_V_data_V_0_payload_B <= in_r_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_V_dest_V_0_load_A = ap_const_logic_1)) then
                in_V_dest_V_0_payload_A <= in_r_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_V_dest_V_0_load_B = ap_const_logic_1)) then
                in_V_dest_V_0_payload_B <= in_r_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_V_id_V_0_load_A = ap_const_logic_1)) then
                in_V_id_V_0_payload_A <= in_r_TID;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_V_id_V_0_load_B = ap_const_logic_1)) then
                in_V_id_V_0_payload_B <= in_r_TID;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_V_last_V_0_load_A = ap_const_logic_1)) then
                in_V_last_V_0_payload_A <= in_r_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_V_last_V_0_load_B = ap_const_logic_1)) then
                in_V_last_V_0_payload_B <= in_r_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_V_user_V_0_load_A = ap_const_logic_1)) then
                in_V_user_V_0_payload_A <= in_r_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_V_user_V_0_load_B = ap_const_logic_1)) then
                in_V_user_V_0_payload_B <= in_r_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                iter_1_reg_339 <= iter_1_fu_306_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (exitcond1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp_848_reg_344 <= tmp_848_fu_312_p1;
                tmp_849_reg_349 <= in_V_data_V_0_data_out(32 downto 32);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_324_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_data_V_14_reg_362 <= in_V_data_V_0_data_out;
                tmp_dest_V_5_reg_374 <= in_V_dest_V_0_data_out;
                tmp_id_V_5_reg_368 <= in_V_id_V_0_data_out;
                tmp_last_V_5_reg_386 <= in_V_last_V_0_data_out;
                tmp_user_V_5_reg_380 <= in_V_user_V_0_data_out;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, in_V_data_V_0_vld_out, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_enable_reg_pp0_iter0, exitcond_fu_324_p2, out_0_V_id_V1_status, ap_predicate_op32_write_state2, out_1_V_id_V1_status, ap_predicate_op34_write_state2, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (exitcond1_fu_300_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (exitcond1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((exitcond_fu_324_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((exitcond_fu_324_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(in_V_data_V_0_vld_out, ap_enable_reg_pp0_iter0, exitcond_fu_324_p2, ap_enable_reg_pp0_iter1, tmp_849_reg_349, out_0_V_id_V1_status, out_1_V_id_V1_status)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_849_reg_349 = ap_const_lv1_1) and (out_1_V_id_V1_status = ap_const_logic_0)) or ((tmp_849_reg_349 = ap_const_lv1_0) and (out_0_V_id_V1_status = ap_const_logic_0)))) or ((exitcond_fu_324_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(in_V_data_V_0_vld_out, ap_enable_reg_pp0_iter0, exitcond_fu_324_p2, ap_enable_reg_pp0_iter1, tmp_849_reg_349, out_0_V_id_V1_status, out_1_V_id_V1_status)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_849_reg_349 = ap_const_lv1_1) and (out_1_V_id_V1_status = ap_const_logic_0)) or ((tmp_849_reg_349 = ap_const_lv1_0) and (out_0_V_id_V1_status = ap_const_logic_0)))) or ((exitcond_fu_324_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(in_V_data_V_0_vld_out, ap_enable_reg_pp0_iter0, exitcond_fu_324_p2, ap_enable_reg_pp0_iter1, tmp_849_reg_349, out_0_V_id_V1_status, out_1_V_id_V1_status)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_849_reg_349 = ap_const_lv1_1) and (out_1_V_id_V1_status = ap_const_logic_0)) or ((tmp_849_reg_349 = ap_const_lv1_0) and (out_0_V_id_V1_status = ap_const_logic_0)))) or ((exitcond_fu_324_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_assign_proc : process(in_V_data_V_0_vld_out, exitcond1_fu_300_p2, out_0_V_id_V1_status, ap_predicate_op32_write_state2, out_1_V_id_V1_status, ap_predicate_op34_write_state2)
    begin
                ap_block_state2 <= (((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)));
    end process;


    ap_block_state3_pp0_stage0_iter0_assign_proc : process(in_V_data_V_0_vld_out, exitcond_fu_324_p2)
    begin
                ap_block_state3_pp0_stage0_iter0 <= ((exitcond_fu_324_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage0_iter1_assign_proc : process(tmp_849_reg_349, out_0_V_id_V1_status, out_1_V_id_V1_status)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((tmp_849_reg_349 = ap_const_lv1_1) and (out_1_V_id_V1_status = ap_const_logic_0)) or ((tmp_849_reg_349 = ap_const_lv1_0) and (out_0_V_id_V1_status = ap_const_logic_0)));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_fu_324_p2)
    begin
        if ((exitcond_fu_324_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, in_V_data_V_0_vld_out, ap_CS_fsm_state2, exitcond1_fu_300_p2, out_0_V_id_V1_status, ap_predicate_op32_write_state2, out_1_V_id_V1_status, ap_predicate_op34_write_state2)
    begin
        if ((not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (exitcond1_fu_300_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op32_write_state2_assign_proc : process(exitcond1_fu_300_p2, tmp_849_fu_316_p3)
    begin
                ap_predicate_op32_write_state2 <= ((tmp_849_fu_316_p3 = ap_const_lv1_0) and (exitcond1_fu_300_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op34_write_state2_assign_proc : process(exitcond1_fu_300_p2, tmp_849_fu_316_p3)
    begin
                ap_predicate_op34_write_state2 <= ((tmp_849_fu_316_p3 = ap_const_lv1_1) and (exitcond1_fu_300_p2 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    exitcond1_fu_300_p2 <= "1" when (iter_reg_248 = ap_const_lv2_2) else "0";
    exitcond_fu_324_p2 <= "1" when (i_reg_259 = tmp_848_reg_344) else "0";
    i_2_fu_329_p2 <= std_logic_vector(unsigned(i_reg_259) + unsigned(ap_const_lv32_1));
    in_V_data_V_0_ack_in <= in_V_data_V_0_state(1);

    in_V_data_V_0_ack_out_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, exitcond_fu_324_p2, out_0_V_id_V1_status, ap_predicate_op32_write_state2, out_1_V_id_V1_status, ap_predicate_op34_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((exitcond_fu_324_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (exitcond1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            in_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            in_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    in_V_data_V_0_data_out_assign_proc : process(in_V_data_V_0_payload_A, in_V_data_V_0_payload_B, in_V_data_V_0_sel)
    begin
        if ((in_V_data_V_0_sel = ap_const_logic_1)) then 
            in_V_data_V_0_data_out <= in_V_data_V_0_payload_B;
        else 
            in_V_data_V_0_data_out <= in_V_data_V_0_payload_A;
        end if; 
    end process;

    in_V_data_V_0_load_A <= (in_V_data_V_0_state_cmp_full and not(in_V_data_V_0_sel_wr));
    in_V_data_V_0_load_B <= (in_V_data_V_0_state_cmp_full and in_V_data_V_0_sel_wr);
    in_V_data_V_0_sel <= in_V_data_V_0_sel_rd;
    in_V_data_V_0_state_cmp_full <= '0' when (in_V_data_V_0_state = ap_const_lv2_1) else '1';
    in_V_data_V_0_vld_in <= in_r_TVALID;
    in_V_data_V_0_vld_out <= in_V_data_V_0_state(0);
    in_V_dest_V_0_ack_in <= in_V_dest_V_0_state(1);

    in_V_dest_V_0_ack_out_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, exitcond_fu_324_p2, out_0_V_id_V1_status, ap_predicate_op32_write_state2, out_1_V_id_V1_status, ap_predicate_op34_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((exitcond_fu_324_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (exitcond1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            in_V_dest_V_0_ack_out <= ap_const_logic_1;
        else 
            in_V_dest_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    in_V_dest_V_0_data_out_assign_proc : process(in_V_dest_V_0_payload_A, in_V_dest_V_0_payload_B, in_V_dest_V_0_sel)
    begin
        if ((in_V_dest_V_0_sel = ap_const_logic_1)) then 
            in_V_dest_V_0_data_out <= in_V_dest_V_0_payload_B;
        else 
            in_V_dest_V_0_data_out <= in_V_dest_V_0_payload_A;
        end if; 
    end process;

    in_V_dest_V_0_load_A <= (in_V_dest_V_0_state_cmp_full and not(in_V_dest_V_0_sel_wr));
    in_V_dest_V_0_load_B <= (in_V_dest_V_0_state_cmp_full and in_V_dest_V_0_sel_wr);
    in_V_dest_V_0_sel <= in_V_dest_V_0_sel_rd;
    in_V_dest_V_0_state_cmp_full <= '0' when (in_V_dest_V_0_state = ap_const_lv2_1) else '1';
    in_V_dest_V_0_vld_in <= in_r_TVALID;
    in_V_dest_V_0_vld_out <= in_V_dest_V_0_state(0);
    in_V_id_V_0_ack_in <= in_V_id_V_0_state(1);

    in_V_id_V_0_ack_out_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, exitcond_fu_324_p2, out_0_V_id_V1_status, ap_predicate_op32_write_state2, out_1_V_id_V1_status, ap_predicate_op34_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((exitcond_fu_324_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (exitcond1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            in_V_id_V_0_ack_out <= ap_const_logic_1;
        else 
            in_V_id_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    in_V_id_V_0_data_out_assign_proc : process(in_V_id_V_0_payload_A, in_V_id_V_0_payload_B, in_V_id_V_0_sel)
    begin
        if ((in_V_id_V_0_sel = ap_const_logic_1)) then 
            in_V_id_V_0_data_out <= in_V_id_V_0_payload_B;
        else 
            in_V_id_V_0_data_out <= in_V_id_V_0_payload_A;
        end if; 
    end process;

    in_V_id_V_0_load_A <= (in_V_id_V_0_state_cmp_full and not(in_V_id_V_0_sel_wr));
    in_V_id_V_0_load_B <= (in_V_id_V_0_state_cmp_full and in_V_id_V_0_sel_wr);
    in_V_id_V_0_sel <= in_V_id_V_0_sel_rd;
    in_V_id_V_0_state_cmp_full <= '0' when (in_V_id_V_0_state = ap_const_lv2_1) else '1';
    in_V_id_V_0_vld_in <= in_r_TVALID;
    in_V_id_V_0_vld_out <= in_V_id_V_0_state(0);
    in_V_last_V_0_ack_in <= in_V_last_V_0_state(1);

    in_V_last_V_0_ack_out_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, exitcond_fu_324_p2, out_0_V_id_V1_status, ap_predicate_op32_write_state2, out_1_V_id_V1_status, ap_predicate_op34_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((exitcond_fu_324_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (exitcond1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            in_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            in_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    in_V_last_V_0_data_out_assign_proc : process(in_V_last_V_0_payload_A, in_V_last_V_0_payload_B, in_V_last_V_0_sel)
    begin
        if ((in_V_last_V_0_sel = ap_const_logic_1)) then 
            in_V_last_V_0_data_out <= in_V_last_V_0_payload_B;
        else 
            in_V_last_V_0_data_out <= in_V_last_V_0_payload_A;
        end if; 
    end process;

    in_V_last_V_0_load_A <= (in_V_last_V_0_state_cmp_full and not(in_V_last_V_0_sel_wr));
    in_V_last_V_0_load_B <= (in_V_last_V_0_state_cmp_full and in_V_last_V_0_sel_wr);
    in_V_last_V_0_sel <= in_V_last_V_0_sel_rd;
    in_V_last_V_0_state_cmp_full <= '0' when (in_V_last_V_0_state = ap_const_lv2_1) else '1';
    in_V_last_V_0_vld_in <= in_r_TVALID;
    in_V_last_V_0_vld_out <= in_V_last_V_0_state(0);
    in_V_user_V_0_ack_in <= in_V_user_V_0_state(1);

    in_V_user_V_0_ack_out_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, exitcond_fu_324_p2, out_0_V_id_V1_status, ap_predicate_op32_write_state2, out_1_V_id_V1_status, ap_predicate_op34_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((exitcond_fu_324_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (exitcond1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            in_V_user_V_0_ack_out <= ap_const_logic_1;
        else 
            in_V_user_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    in_V_user_V_0_data_out_assign_proc : process(in_V_user_V_0_payload_A, in_V_user_V_0_payload_B, in_V_user_V_0_sel)
    begin
        if ((in_V_user_V_0_sel = ap_const_logic_1)) then 
            in_V_user_V_0_data_out <= in_V_user_V_0_payload_B;
        else 
            in_V_user_V_0_data_out <= in_V_user_V_0_payload_A;
        end if; 
    end process;

    in_V_user_V_0_load_A <= (in_V_user_V_0_state_cmp_full and not(in_V_user_V_0_sel_wr));
    in_V_user_V_0_load_B <= (in_V_user_V_0_state_cmp_full and in_V_user_V_0_sel_wr);
    in_V_user_V_0_sel <= in_V_user_V_0_sel_rd;
    in_V_user_V_0_state_cmp_full <= '0' when (in_V_user_V_0_state = ap_const_lv2_1) else '1';
    in_V_user_V_0_vld_in <= in_r_TVALID;
    in_V_user_V_0_vld_out <= in_V_user_V_0_state(0);

    in_r_TDATA_blk_n_assign_proc : process(in_V_data_V_0_state, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, exitcond_fu_324_p2)
    begin
        if ((((exitcond_fu_324_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            in_r_TDATA_blk_n <= in_V_data_V_0_state(0);
        else 
            in_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_r_TREADY <= in_V_last_V_0_state(1);

    internal_ap_ready_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state2, exitcond1_fu_300_p2, out_0_V_id_V1_status, ap_predicate_op32_write_state2, out_1_V_id_V1_status, ap_predicate_op34_write_state2)
    begin
        if ((not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (exitcond1_fu_300_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    iter_1_fu_306_p2 <= std_logic_vector(unsigned(iter_reg_248) + unsigned(ap_const_lv2_1));

    out_0_V_data_V_blk_n_assign_proc : process(out_0_V_data_V_full_n, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_849_reg_349, tmp_849_fu_316_p3)
    begin
        if ((((tmp_849_reg_349 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_849_fu_316_p3 = ap_const_lv1_0) and (exitcond1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            out_0_V_data_V_blk_n <= out_0_V_data_V_full_n;
        else 
            out_0_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_0_V_data_V_din_assign_proc : process(in_V_data_V_0_data_out, in_V_data_V_0_vld_out, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_849_reg_349, out_0_V_id_V1_status, ap_predicate_op32_write_state2, out_1_V_id_V1_status, ap_predicate_op34_write_state2, tmp_data_V_14_reg_362, ap_block_pp0_stage0_01001)
    begin
        if (((tmp_849_reg_349 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_0_V_data_V_din <= tmp_data_V_14_reg_362;
        elsif ((not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_predicate_op32_write_state2 = ap_const_boolean_1))) then 
            out_0_V_data_V_din <= in_V_data_V_0_data_out;
        else 
            out_0_V_data_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    out_0_V_data_V_write <= out_0_V_id_V1_update;

    out_0_V_dest_V_blk_n_assign_proc : process(out_0_V_dest_V_full_n, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_849_reg_349, tmp_849_fu_316_p3)
    begin
        if ((((tmp_849_reg_349 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_849_fu_316_p3 = ap_const_lv1_0) and (exitcond1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            out_0_V_dest_V_blk_n <= out_0_V_dest_V_full_n;
        else 
            out_0_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_0_V_dest_V_din_assign_proc : process(in_V_data_V_0_vld_out, in_V_dest_V_0_data_out, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_849_reg_349, out_0_V_id_V1_status, ap_predicate_op32_write_state2, out_1_V_id_V1_status, ap_predicate_op34_write_state2, tmp_dest_V_5_reg_374, ap_block_pp0_stage0_01001)
    begin
        if (((tmp_849_reg_349 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_0_V_dest_V_din <= tmp_dest_V_5_reg_374;
        elsif ((not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_predicate_op32_write_state2 = ap_const_boolean_1))) then 
            out_0_V_dest_V_din <= in_V_dest_V_0_data_out;
        else 
            out_0_V_dest_V_din <= "XXXXXXXX";
        end if; 
    end process;

    out_0_V_dest_V_write <= out_0_V_id_V1_update;
    out_0_V_id_V1_status <= (out_0_V_user_V_full_n and out_0_V_last_V_full_n and out_0_V_id_V_full_n and out_0_V_dest_V_full_n and out_0_V_data_V_full_n);

    out_0_V_id_V1_update_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_849_reg_349, out_0_V_id_V1_status, ap_predicate_op32_write_state2, out_1_V_id_V1_status, ap_predicate_op34_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_849_reg_349 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)))) then 
            out_0_V_id_V1_update <= ap_const_logic_1;
        else 
            out_0_V_id_V1_update <= ap_const_logic_0;
        end if; 
    end process;


    out_0_V_id_V_blk_n_assign_proc : process(out_0_V_id_V_full_n, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_849_reg_349, tmp_849_fu_316_p3)
    begin
        if ((((tmp_849_reg_349 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_849_fu_316_p3 = ap_const_lv1_0) and (exitcond1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            out_0_V_id_V_blk_n <= out_0_V_id_V_full_n;
        else 
            out_0_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_0_V_id_V_din_assign_proc : process(in_V_data_V_0_vld_out, in_V_id_V_0_data_out, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_849_reg_349, out_0_V_id_V1_status, ap_predicate_op32_write_state2, out_1_V_id_V1_status, ap_predicate_op34_write_state2, tmp_id_V_5_reg_368, ap_block_pp0_stage0_01001)
    begin
        if (((tmp_849_reg_349 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_0_V_id_V_din <= tmp_id_V_5_reg_368;
        elsif ((not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_predicate_op32_write_state2 = ap_const_boolean_1))) then 
            out_0_V_id_V_din <= in_V_id_V_0_data_out;
        else 
            out_0_V_id_V_din <= "XXXXXXXX";
        end if; 
    end process;

    out_0_V_id_V_write <= out_0_V_id_V1_update;

    out_0_V_last_V_blk_n_assign_proc : process(out_0_V_last_V_full_n, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_849_reg_349, tmp_849_fu_316_p3)
    begin
        if ((((tmp_849_reg_349 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_849_fu_316_p3 = ap_const_lv1_0) and (exitcond1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            out_0_V_last_V_blk_n <= out_0_V_last_V_full_n;
        else 
            out_0_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_0_V_last_V_din_assign_proc : process(in_V_data_V_0_vld_out, in_V_last_V_0_data_out, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_849_reg_349, out_0_V_id_V1_status, ap_predicate_op32_write_state2, out_1_V_id_V1_status, ap_predicate_op34_write_state2, tmp_last_V_5_reg_386, ap_block_pp0_stage0_01001)
    begin
        if (((tmp_849_reg_349 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_0_V_last_V_din <= tmp_last_V_5_reg_386;
        elsif ((not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_predicate_op32_write_state2 = ap_const_boolean_1))) then 
            out_0_V_last_V_din <= in_V_last_V_0_data_out;
        else 
            out_0_V_last_V_din <= "X";
        end if; 
    end process;

    out_0_V_last_V_write <= out_0_V_id_V1_update;

    out_0_V_user_V_blk_n_assign_proc : process(out_0_V_user_V_full_n, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_849_reg_349, tmp_849_fu_316_p3)
    begin
        if ((((tmp_849_reg_349 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_849_fu_316_p3 = ap_const_lv1_0) and (exitcond1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            out_0_V_user_V_blk_n <= out_0_V_user_V_full_n;
        else 
            out_0_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_0_V_user_V_din_assign_proc : process(in_V_data_V_0_vld_out, in_V_user_V_0_data_out, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_849_reg_349, out_0_V_id_V1_status, ap_predicate_op32_write_state2, out_1_V_id_V1_status, ap_predicate_op34_write_state2, tmp_user_V_5_reg_380, ap_block_pp0_stage0_01001)
    begin
        if (((tmp_849_reg_349 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_0_V_user_V_din <= tmp_user_V_5_reg_380;
        elsif ((not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_predicate_op32_write_state2 = ap_const_boolean_1))) then 
            out_0_V_user_V_din <= in_V_user_V_0_data_out;
        else 
            out_0_V_user_V_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    out_0_V_user_V_write <= out_0_V_id_V1_update;

    out_1_V_data_V_blk_n_assign_proc : process(out_1_V_data_V_full_n, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_849_reg_349, tmp_849_fu_316_p3)
    begin
        if ((((tmp_849_reg_349 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_849_fu_316_p3 = ap_const_lv1_1) and (exitcond1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            out_1_V_data_V_blk_n <= out_1_V_data_V_full_n;
        else 
            out_1_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_1_V_data_V_din_assign_proc : process(in_V_data_V_0_data_out, in_V_data_V_0_vld_out, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_849_reg_349, out_0_V_id_V1_status, ap_predicate_op32_write_state2, out_1_V_id_V1_status, ap_predicate_op34_write_state2, tmp_data_V_14_reg_362, ap_block_pp0_stage0_01001)
    begin
        if (((tmp_849_reg_349 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_1_V_data_V_din <= tmp_data_V_14_reg_362;
        elsif ((not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_predicate_op34_write_state2 = ap_const_boolean_1))) then 
            out_1_V_data_V_din <= in_V_data_V_0_data_out;
        else 
            out_1_V_data_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    out_1_V_data_V_write <= out_1_V_id_V1_update;

    out_1_V_dest_V_blk_n_assign_proc : process(out_1_V_dest_V_full_n, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_849_reg_349, tmp_849_fu_316_p3)
    begin
        if ((((tmp_849_reg_349 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_849_fu_316_p3 = ap_const_lv1_1) and (exitcond1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            out_1_V_dest_V_blk_n <= out_1_V_dest_V_full_n;
        else 
            out_1_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_1_V_dest_V_din_assign_proc : process(in_V_data_V_0_vld_out, in_V_dest_V_0_data_out, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_849_reg_349, out_0_V_id_V1_status, ap_predicate_op32_write_state2, out_1_V_id_V1_status, ap_predicate_op34_write_state2, tmp_dest_V_5_reg_374, ap_block_pp0_stage0_01001)
    begin
        if (((tmp_849_reg_349 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_1_V_dest_V_din <= tmp_dest_V_5_reg_374;
        elsif ((not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_predicate_op34_write_state2 = ap_const_boolean_1))) then 
            out_1_V_dest_V_din <= in_V_dest_V_0_data_out;
        else 
            out_1_V_dest_V_din <= "XXXXXXXX";
        end if; 
    end process;

    out_1_V_dest_V_write <= out_1_V_id_V1_update;
    out_1_V_id_V1_status <= (out_1_V_user_V_full_n and out_1_V_last_V_full_n and out_1_V_id_V_full_n and out_1_V_dest_V_full_n and out_1_V_data_V_full_n);

    out_1_V_id_V1_update_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_849_reg_349, out_0_V_id_V1_status, ap_predicate_op32_write_state2, out_1_V_id_V1_status, ap_predicate_op34_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_849_reg_349 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)))) then 
            out_1_V_id_V1_update <= ap_const_logic_1;
        else 
            out_1_V_id_V1_update <= ap_const_logic_0;
        end if; 
    end process;


    out_1_V_id_V_blk_n_assign_proc : process(out_1_V_id_V_full_n, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_849_reg_349, tmp_849_fu_316_p3)
    begin
        if ((((tmp_849_reg_349 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_849_fu_316_p3 = ap_const_lv1_1) and (exitcond1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            out_1_V_id_V_blk_n <= out_1_V_id_V_full_n;
        else 
            out_1_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_1_V_id_V_din_assign_proc : process(in_V_data_V_0_vld_out, in_V_id_V_0_data_out, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_849_reg_349, out_0_V_id_V1_status, ap_predicate_op32_write_state2, out_1_V_id_V1_status, ap_predicate_op34_write_state2, tmp_id_V_5_reg_368, ap_block_pp0_stage0_01001)
    begin
        if (((tmp_849_reg_349 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_1_V_id_V_din <= tmp_id_V_5_reg_368;
        elsif ((not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_predicate_op34_write_state2 = ap_const_boolean_1))) then 
            out_1_V_id_V_din <= in_V_id_V_0_data_out;
        else 
            out_1_V_id_V_din <= "XXXXXXXX";
        end if; 
    end process;

    out_1_V_id_V_write <= out_1_V_id_V1_update;

    out_1_V_last_V_blk_n_assign_proc : process(out_1_V_last_V_full_n, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_849_reg_349, tmp_849_fu_316_p3)
    begin
        if ((((tmp_849_reg_349 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_849_fu_316_p3 = ap_const_lv1_1) and (exitcond1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            out_1_V_last_V_blk_n <= out_1_V_last_V_full_n;
        else 
            out_1_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_1_V_last_V_din_assign_proc : process(in_V_data_V_0_vld_out, in_V_last_V_0_data_out, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_849_reg_349, out_0_V_id_V1_status, ap_predicate_op32_write_state2, out_1_V_id_V1_status, ap_predicate_op34_write_state2, tmp_last_V_5_reg_386, ap_block_pp0_stage0_01001)
    begin
        if (((tmp_849_reg_349 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_1_V_last_V_din <= tmp_last_V_5_reg_386;
        elsif ((not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_predicate_op34_write_state2 = ap_const_boolean_1))) then 
            out_1_V_last_V_din <= in_V_last_V_0_data_out;
        else 
            out_1_V_last_V_din <= "X";
        end if; 
    end process;

    out_1_V_last_V_write <= out_1_V_id_V1_update;

    out_1_V_user_V_blk_n_assign_proc : process(out_1_V_user_V_full_n, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_849_reg_349, tmp_849_fu_316_p3)
    begin
        if ((((tmp_849_reg_349 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_849_fu_316_p3 = ap_const_lv1_1) and (exitcond1_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            out_1_V_user_V_blk_n <= out_1_V_user_V_full_n;
        else 
            out_1_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_1_V_user_V_din_assign_proc : process(in_V_data_V_0_vld_out, in_V_user_V_0_data_out, ap_CS_fsm_state2, exitcond1_fu_300_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_849_reg_349, out_0_V_id_V1_status, ap_predicate_op32_write_state2, out_1_V_id_V1_status, ap_predicate_op34_write_state2, tmp_user_V_5_reg_380, ap_block_pp0_stage0_01001)
    begin
        if (((tmp_849_reg_349 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_1_V_user_V_din <= tmp_user_V_5_reg_380;
        elsif ((not((((out_1_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op34_write_state2 = ap_const_boolean_1)) or ((out_0_V_id_V1_status = ap_const_logic_0) and (ap_predicate_op32_write_state2 = ap_const_boolean_1)) or ((exitcond1_fu_300_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_predicate_op34_write_state2 = ap_const_boolean_1))) then 
            out_1_V_user_V_din <= in_V_user_V_0_data_out;
        else 
            out_1_V_user_V_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    out_1_V_user_V_write <= out_1_V_id_V1_update;

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_848_fu_312_p1 <= in_V_data_V_0_data_out(32 - 1 downto 0);
    tmp_849_fu_316_p3 <= in_V_data_V_0_data_out(32 downto 32);
end behav;
