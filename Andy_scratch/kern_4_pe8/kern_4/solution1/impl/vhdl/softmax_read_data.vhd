-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity softmax_read_data is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    in_V_data_V_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    in_V_data_V_empty_n : IN STD_LOGIC;
    in_V_data_V_read : OUT STD_LOGIC;
    in_V_id_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_V_id_V_empty_n : IN STD_LOGIC;
    in_V_id_V_read : OUT STD_LOGIC;
    in_V_dest_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_V_dest_V_empty_n : IN STD_LOGIC;
    in_V_dest_V_read : OUT STD_LOGIC;
    in_V_user_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_V_user_V_empty_n : IN STD_LOGIC;
    in_V_user_V_read : OUT STD_LOGIC;
    in_V_last_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    in_V_last_V_empty_n : IN STD_LOGIC;
    in_V_last_V_read : OUT STD_LOGIC;
    in_write_n_V_V_din : OUT STD_LOGIC_VECTOR (95 downto 0);
    in_write_n_V_V_full_n : IN STD_LOGIC;
    in_write_n_V_V_write : OUT STD_LOGIC;
    in_sub_max_r_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_sub_max_r_V_V_full_n : IN STD_LOGIC;
    in_sub_max_r_V_V_write : OUT STD_LOGIC;
    in_sub_max_c_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_sub_max_c_V_V_full_n : IN STD_LOGIC;
    in_sub_max_c_V_V_write : OUT STD_LOGIC;
    max_input_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    max_input_V_V_full_n : IN STD_LOGIC;
    max_input_V_V_write : OUT STD_LOGIC;
    in_sub_max_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_sub_max_V_V_full_n : IN STD_LOGIC;
    in_sub_max_V_V_write : OUT STD_LOGIC );
end;


architecture behav of softmax_read_data is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv60_0 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv29_1FFFFFFF : STD_LOGIC_VECTOR (28 downto 0) := "11111111111111111111111111111";
    constant ap_const_lv60_1 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_19F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv28_1 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal in_V_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal exitcond_flatten_reg_809 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_V_id_V_blk_n : STD_LOGIC;
    signal in_V_dest_V_blk_n : STD_LOGIC;
    signal in_V_user_V_blk_n : STD_LOGIC;
    signal in_V_last_V_blk_n : STD_LOGIC;
    signal in_write_n_V_V_blk_n : STD_LOGIC;
    signal in_sub_max_r_V_V_blk_n : STD_LOGIC;
    signal in_sub_max_c_V_V_blk_n : STD_LOGIC;
    signal max_input_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal tmp_21_i_reg_824 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_sub_max_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal indvar_flatten_reg_299 : STD_LOGIC_VECTOR (59 downto 0);
    signal packet_i_reg_310 : STD_LOGIC_VECTOR (27 downto 0);
    signal num_batches_fu_336_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_batches_reg_787 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_V_id_V0_status : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal tmp_1_reg_792 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_15_i_fu_359_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_15_i_reg_799 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal bound_fu_371_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal bound_reg_804 : STD_LOGIC_VECTOR (59 downto 0);
    signal exitcond_flatten_fu_377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar_flatten_next_fu_382_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal indvar_flatten_next_reg_813 : STD_LOGIC_VECTOR (59 downto 0);
    signal packet_i_mid2_fu_393_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal packet_i_mid2_reg_818 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_21_i_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_79_fu_410_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_79_reg_828 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state4_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal buffer_1_V_reg_834 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_2_V_reg_841 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_3_V_reg_848 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_4_V_reg_855 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_5_V_reg_862 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_6_V_reg_869 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_7_V_reg_876 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_8_V_reg_883 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_9_V_reg_890 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_10_V_reg_897 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_11_V_reg_904 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_12_V_reg_911 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_13_V_reg_918 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_14_V_reg_925 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_15_V_reg_932 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_i_fu_555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_i_reg_939 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state5_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal max_3_0_V_fu_702_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_3_0_V_reg_944 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_val_V_fu_716_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_val_V_reg_951 : STD_LOGIC_VECTOR (31 downto 0);
    signal packet_fu_776_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal packet_reg_958 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_block_state18_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_phi_mux_indvar_flatten_phi_fu_303_p4 : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_phi_mux_packet_i_phi_fu_314_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal in_V_id_V0_update : STD_LOGIC;
    signal ap_predicate_op116_write_state6 : BOOLEAN;
    signal ap_block_state6_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_state7_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_block_state8_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_block_state9_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_block_state10_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_block_state11_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal ap_block_state12_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal ap_block_state13_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal ap_block_state14_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal ap_block_state15_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal ap_block_state16_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal ap_block_state17_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal ap_block_pp0_stage4_01001 : BOOLEAN;
    signal ap_block_pp0_stage5_01001 : BOOLEAN;
    signal ap_block_pp0_stage6_01001 : BOOLEAN;
    signal ap_block_pp0_stage7_01001 : BOOLEAN;
    signal ap_block_pp0_stage8_01001 : BOOLEAN;
    signal ap_block_pp0_stage9_01001 : BOOLEAN;
    signal ap_block_pp0_stage10_01001 : BOOLEAN;
    signal ap_block_pp0_stage11_01001 : BOOLEAN;
    signal ap_block_pp0_stage12_01001 : BOOLEAN;
    signal ap_block_pp0_stage13_01001 : BOOLEAN;
    signal ap_block_pp0_stage14_01001 : BOOLEAN;
    signal ap_block_pp0_stage15_01001 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_V_95_fu_762_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_fu_246 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_cast423_i_fu_356_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal bound_fu_371_p0 : STD_LOGIC_VECTOR (27 downto 0);
    signal bound_fu_371_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond2_fu_388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal packet_cast_i_fu_401_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_25_i_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_1_i_fu_570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_2_i_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_3_i_fu_590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_4_i_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_5_i_fu_610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_6_i_fu_620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_7_i_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_1_0_V_fu_564_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_1_1_V_fu_574_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_i_fu_640_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_1_2_V_fu_584_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_1_3_V_fu_594_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_1_i_fu_654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_1_4_V_fu_604_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_1_5_V_fu_614_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_2_i_fu_668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_1_6_V_fu_624_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_1_7_V_fu_634_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_3_i_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_2_0_V_fu_646_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_2_1_V_fu_660_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_i_fu_696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_2_2_V_fu_674_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_2_3_V_fu_688_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_1_i_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0200_1_i_fu_727_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_i_fu_738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_i_fu_750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_i_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge9_0200_1_fu_743_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_val_V_1_0200_1_fu_755_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal bound_fu_371_p00 : STD_LOGIC_VECTOR (59 downto 0);
    signal bound_fu_371_p10 : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_condition_554 : BOOLEAN;
    signal ap_condition_559 : BOOLEAN;
    signal ap_condition_564 : BOOLEAN;
    signal ap_condition_569 : BOOLEAN;
    signal ap_condition_574 : BOOLEAN;
    signal ap_condition_579 : BOOLEAN;
    signal ap_condition_584 : BOOLEAN;
    signal ap_condition_589 : BOOLEAN;
    signal ap_condition_594 : BOOLEAN;
    signal ap_condition_599 : BOOLEAN;
    signal ap_condition_604 : BOOLEAN;
    signal ap_condition_609 : BOOLEAN;
    signal ap_condition_614 : BOOLEAN;
    signal ap_condition_619 : BOOLEAN;
    signal ap_condition_624 : BOOLEAN;
    signal ap_condition_629 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_299_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_809 = ap_const_lv1_0))) then 
                indvar_flatten_reg_299 <= indvar_flatten_next_reg_813;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                indvar_flatten_reg_299 <= ap_const_lv60_0;
            end if; 
        end if;
    end process;

    packet_i_reg_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_809 = ap_const_lv1_0))) then 
                packet_i_reg_310 <= packet_reg_958;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                packet_i_reg_310 <= ap_const_lv28_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                bound_reg_804 <= bound_fu_371_p2;
                tmp_15_i_reg_799 <= tmp_15_i_fu_359_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_809 = ap_const_lv1_0))) then
                buffer_10_V_reg_897 <= in_V_data_V_dout(351 downto 320);
                buffer_11_V_reg_904 <= in_V_data_V_dout(383 downto 352);
                buffer_12_V_reg_911 <= in_V_data_V_dout(415 downto 384);
                buffer_13_V_reg_918 <= in_V_data_V_dout(447 downto 416);
                buffer_14_V_reg_925 <= in_V_data_V_dout(479 downto 448);
                buffer_15_V_reg_932 <= in_V_data_V_dout(511 downto 480);
                buffer_2_V_reg_841 <= in_V_data_V_dout(95 downto 64);
                buffer_3_V_reg_848 <= in_V_data_V_dout(127 downto 96);
                buffer_4_V_reg_855 <= in_V_data_V_dout(159 downto 128);
                buffer_5_V_reg_862 <= in_V_data_V_dout(191 downto 160);
                buffer_6_V_reg_869 <= in_V_data_V_dout(223 downto 192);
                buffer_7_V_reg_876 <= in_V_data_V_dout(255 downto 224);
                buffer_8_V_reg_883 <= in_V_data_V_dout(287 downto 256);
                buffer_9_V_reg_890 <= in_V_data_V_dout(319 downto 288);
                tmp_V_79_reg_828 <= tmp_V_79_fu_410_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_809 = ap_const_lv1_0))) then
                buffer_1_V_reg_834 <= in_V_data_V_dout(63 downto 32);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten_reg_809 <= exitcond_flatten_fu_377_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                indvar_flatten_next_reg_813 <= indvar_flatten_next_fu_382_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten_reg_809 = ap_const_lv1_0))) then
                max_3_0_V_reg_944 <= max_3_0_V_fu_702_p3;
                max_val_V_reg_951 <= max_val_V_fu_716_p3;
                tmp_17_i_reg_939 <= tmp_17_i_fu_555_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (in_sub_max_c_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_full_n = ap_const_logic_0) or (in_write_n_V_V_full_n = ap_const_logic_0) or (in_V_id_V0_status = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                num_batches_reg_787 <= num_batches_fu_336_p1;
                tmp_1_reg_792 <= in_V_data_V_dout(63 downto 36);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_377_p2 = ap_const_lv1_0))) then
                packet_i_mid2_reg_818 <= packet_i_mid2_fu_393_p3;
                tmp_21_i_reg_824 <= tmp_21_i_fu_405_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0))) then
                packet_reg_958 <= packet_fu_776_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0))) then
                tmp_V_fu_246 <= tmp_V_95_fu_762_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, in_write_n_V_V_full_n, in_sub_max_r_V_V_full_n, in_sub_max_c_V_V_full_n, ap_enable_reg_pp0_iter0, in_V_id_V0_status, exitcond_flatten_fu_377_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (in_sub_max_c_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_full_n = ap_const_logic_0) or (in_write_n_V_V_full_n = ap_const_logic_0) or (in_V_id_V0_status = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_fu_377_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_fu_377_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(11);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(18);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(in_sub_max_V_V_full_n, exitcond_flatten_reg_809, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_01001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(in_sub_max_V_V_full_n, exitcond_flatten_reg_809, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(in_sub_max_V_V_full_n, exitcond_flatten_reg_809, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_01001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage10_01001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage10_11001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage10_11001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage10_subdone_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage10_subdone <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;

        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage11_01001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage11_01001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage11_11001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage11_11001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage11_subdone_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage11_subdone <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;

        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage12_01001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage12_01001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage12_11001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage12_11001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage12_subdone_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage12_subdone <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;

        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage13_01001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage13_01001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage13_11001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage13_11001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage13_subdone_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage13_subdone <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;

        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage14_01001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage14_01001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage14_11001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage14_11001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage14_subdone_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage14_subdone <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;

        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage15_01001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage15_01001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage15_11001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage15_11001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage15_subdone_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage15_subdone <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage1_01001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809, in_V_id_V0_status)
    begin
                ap_block_pp0_stage1_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((in_sub_max_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((in_V_id_V0_status = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809, in_V_id_V0_status)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((in_sub_max_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((in_V_id_V0_status = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809, in_V_id_V0_status)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((in_sub_max_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((in_V_id_V0_status = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage2_01001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage2_11001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage2_subdone <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_01001_assign_proc : process(max_input_V_V_full_n, in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809, ap_predicate_op116_write_state6)
    begin
                ap_block_pp0_stage3_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((ap_predicate_op116_write_state6 = ap_const_boolean_1) and (max_input_V_V_full_n = ap_const_logic_0)) or ((in_sub_max_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(max_input_V_V_full_n, in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809, ap_predicate_op116_write_state6)
    begin
                ap_block_pp0_stage3_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((ap_predicate_op116_write_state6 = ap_const_boolean_1) and (max_input_V_V_full_n = ap_const_logic_0)) or ((in_sub_max_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(max_input_V_V_full_n, in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809, ap_predicate_op116_write_state6)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((ap_predicate_op116_write_state6 = ap_const_boolean_1) and (max_input_V_V_full_n = ap_const_logic_0)) or ((in_sub_max_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_01001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage4_01001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage4_11001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage4_11001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage4_subdone <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_01001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage5_01001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage5_11001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage5_11001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage5_subdone <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_01001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage6_01001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage6_11001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage6_11001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage6_subdone <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_01001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage7_01001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage7_11001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage7_11001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage7_subdone_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage7_subdone <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;

        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_01001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage8_01001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage8_11001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage8_11001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage8_subdone_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage8_subdone <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;

        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_01001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage9_01001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage9_11001_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage9_11001 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage9_subdone_assign_proc : process(in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809)
    begin
                ap_block_pp0_stage9_subdone <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, in_write_n_V_V_full_n, in_sub_max_r_V_V_full_n, in_sub_max_c_V_V_full_n, in_V_id_V0_status)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (in_sub_max_c_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_full_n = ap_const_logic_0) or (in_write_n_V_V_full_n = ap_const_logic_0) or (in_V_id_V0_status = ap_const_logic_0) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state10_pp0_stage7_iter0_assign_proc : process(in_sub_max_V_V_full_n, exitcond_flatten_reg_809)
    begin
                ap_block_state10_pp0_stage7_iter0 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_state11_pp0_stage8_iter0_assign_proc : process(in_sub_max_V_V_full_n, exitcond_flatten_reg_809)
    begin
                ap_block_state11_pp0_stage8_iter0 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_state12_pp0_stage9_iter0_assign_proc : process(in_sub_max_V_V_full_n, exitcond_flatten_reg_809)
    begin
                ap_block_state12_pp0_stage9_iter0 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_state13_pp0_stage10_iter0_assign_proc : process(in_sub_max_V_V_full_n, exitcond_flatten_reg_809)
    begin
                ap_block_state13_pp0_stage10_iter0 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_state14_pp0_stage11_iter0_assign_proc : process(in_sub_max_V_V_full_n, exitcond_flatten_reg_809)
    begin
                ap_block_state14_pp0_stage11_iter0 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_state15_pp0_stage12_iter0_assign_proc : process(in_sub_max_V_V_full_n, exitcond_flatten_reg_809)
    begin
                ap_block_state15_pp0_stage12_iter0 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_state16_pp0_stage13_iter0_assign_proc : process(in_sub_max_V_V_full_n, exitcond_flatten_reg_809)
    begin
                ap_block_state16_pp0_stage13_iter0 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_state17_pp0_stage14_iter0_assign_proc : process(in_sub_max_V_V_full_n, exitcond_flatten_reg_809)
    begin
                ap_block_state17_pp0_stage14_iter0 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_state18_pp0_stage15_iter0_assign_proc : process(in_sub_max_V_V_full_n, exitcond_flatten_reg_809)
    begin
                ap_block_state18_pp0_stage15_iter0 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_state19_pp0_stage0_iter1_assign_proc : process(in_sub_max_V_V_full_n, exitcond_flatten_reg_809)
    begin
                ap_block_state19_pp0_stage0_iter1 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage1_iter0_assign_proc : process(in_sub_max_V_V_full_n, exitcond_flatten_reg_809, in_V_id_V0_status)
    begin
                ap_block_state4_pp0_stage1_iter0 <= (((in_sub_max_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((in_V_id_V0_status = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0)));
    end process;


    ap_block_state5_pp0_stage2_iter0_assign_proc : process(in_sub_max_V_V_full_n, exitcond_flatten_reg_809)
    begin
                ap_block_state5_pp0_stage2_iter0 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_state6_pp0_stage3_iter0_assign_proc : process(max_input_V_V_full_n, in_sub_max_V_V_full_n, exitcond_flatten_reg_809, ap_predicate_op116_write_state6)
    begin
                ap_block_state6_pp0_stage3_iter0 <= (((ap_predicate_op116_write_state6 = ap_const_boolean_1) and (max_input_V_V_full_n = ap_const_logic_0)) or ((in_sub_max_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0)));
    end process;


    ap_block_state7_pp0_stage4_iter0_assign_proc : process(in_sub_max_V_V_full_n, exitcond_flatten_reg_809)
    begin
                ap_block_state7_pp0_stage4_iter0 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_state8_pp0_stage5_iter0_assign_proc : process(in_sub_max_V_V_full_n, exitcond_flatten_reg_809)
    begin
                ap_block_state8_pp0_stage5_iter0 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_block_state9_pp0_stage6_iter0_assign_proc : process(in_sub_max_V_V_full_n, exitcond_flatten_reg_809)
    begin
                ap_block_state9_pp0_stage6_iter0 <= ((in_sub_max_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;


    ap_condition_554_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_01001)
    begin
                ap_condition_554 <= ((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_559_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_01001)
    begin
                ap_condition_559 <= ((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_564_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_01001)
    begin
                ap_condition_564 <= ((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_569_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_01001)
    begin
                ap_condition_569 <= ((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_574_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_01001)
    begin
                ap_condition_574 <= ((ap_const_boolean_0 = ap_block_pp0_stage5_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_579_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_01001)
    begin
                ap_condition_579 <= ((ap_const_boolean_0 = ap_block_pp0_stage6_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_584_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_01001)
    begin
                ap_condition_584 <= ((ap_const_boolean_0 = ap_block_pp0_stage7_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_589_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_01001)
    begin
                ap_condition_589 <= ((ap_const_boolean_0 = ap_block_pp0_stage8_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_594_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_01001)
    begin
                ap_condition_594 <= ((ap_const_boolean_0 = ap_block_pp0_stage9_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_599_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_01001)
    begin
                ap_condition_599 <= ((ap_const_boolean_0 = ap_block_pp0_stage10_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_604_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_01001)
    begin
                ap_condition_604 <= ((ap_const_boolean_0 = ap_block_pp0_stage11_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_609_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_01001)
    begin
                ap_condition_609 <= ((ap_const_boolean_0 = ap_block_pp0_stage12_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_614_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_01001)
    begin
                ap_condition_614 <= ((ap_const_boolean_0 = ap_block_pp0_stage13_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_619_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_01001)
    begin
                ap_condition_619 <= ((ap_const_boolean_0 = ap_block_pp0_stage14_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_624_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_01001)
    begin
                ap_condition_624 <= ((ap_const_boolean_0 = ap_block_pp0_stage15_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_629_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001)
    begin
                ap_condition_629 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_flatten_fu_377_p2)
    begin
        if ((exitcond_flatten_fu_377_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_303_p4_assign_proc : process(exitcond_flatten_reg_809, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, indvar_flatten_reg_299, indvar_flatten_next_reg_813)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_809 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_303_p4 <= indvar_flatten_next_reg_813;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_303_p4 <= indvar_flatten_reg_299;
        end if; 
    end process;


    ap_phi_mux_packet_i_phi_fu_314_p4_assign_proc : process(exitcond_flatten_reg_809, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, packet_i_reg_310, packet_reg_958)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_809 = ap_const_lv1_0))) then 
            ap_phi_mux_packet_i_phi_fu_314_p4 <= packet_reg_958;
        else 
            ap_phi_mux_packet_i_phi_fu_314_p4 <= packet_i_reg_310;
        end if; 
    end process;


    ap_predicate_op116_write_state6_assign_proc : process(exitcond_flatten_reg_809, tmp_21_i_reg_824)
    begin
                ap_predicate_op116_write_state6 <= ((tmp_21_i_reg_824 = ap_const_lv1_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    bound_fu_371_p0 <= bound_fu_371_p00(28 - 1 downto 0);
    bound_fu_371_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_792),60));
    bound_fu_371_p1 <= bound_fu_371_p10(32 - 1 downto 0);
    bound_fu_371_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(num_batches_reg_787),60));
    bound_fu_371_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound_fu_371_p0) * unsigned(bound_fu_371_p1), 60));
    exitcond2_fu_388_p2 <= "1" when (ap_phi_mux_packet_i_phi_fu_314_p4 = tmp_1_reg_792) else "0";
    exitcond_flatten_fu_377_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_303_p4 = bound_reg_804) else "0";

    in_V_data_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_data_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_809)
    begin
        if (((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_809 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            in_V_data_V_blk_n <= in_V_data_V_empty_n;
        else 
            in_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_V_data_V_read <= in_V_id_V0_update;

    in_V_dest_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_dest_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_809)
    begin
        if (((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_809 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            in_V_dest_V_blk_n <= in_V_dest_V_empty_n;
        else 
            in_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_V_dest_V_read <= in_V_id_V0_update;
    in_V_id_V0_status <= (in_V_user_V_empty_n and in_V_last_V_empty_n and in_V_id_V_empty_n and in_V_dest_V_empty_n and in_V_data_V_empty_n);

    in_V_id_V0_update_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_write_n_V_V_full_n, in_sub_max_r_V_V_full_n, in_sub_max_c_V_V_full_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809, in_V_id_V0_status, ap_block_pp0_stage1_11001)
    begin
        if (((not(((ap_done_reg = ap_const_logic_1) or (in_sub_max_c_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_full_n = ap_const_logic_0) or (in_write_n_V_V_full_n = ap_const_logic_0) or (in_V_id_V0_status = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)))) then 
            in_V_id_V0_update <= ap_const_logic_1;
        else 
            in_V_id_V0_update <= ap_const_logic_0;
        end if; 
    end process;


    in_V_id_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_id_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_809)
    begin
        if (((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_809 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            in_V_id_V_blk_n <= in_V_id_V_empty_n;
        else 
            in_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_V_id_V_read <= in_V_id_V0_update;

    in_V_last_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_last_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_809)
    begin
        if (((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_809 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            in_V_last_V_blk_n <= in_V_last_V_empty_n;
        else 
            in_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_V_last_V_read <= in_V_id_V0_update;

    in_V_user_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_user_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_809)
    begin
        if (((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_809 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            in_V_user_V_blk_n <= in_V_user_V_empty_n;
        else 
            in_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_V_user_V_read <= in_V_id_V0_update;

    in_sub_max_V_V_blk_n_assign_proc : process(in_sub_max_V_V_full_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond_flatten_reg_809, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_809 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            in_sub_max_V_V_blk_n <= in_sub_max_V_V_full_n;
        else 
            in_sub_max_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_sub_max_V_V_din_assign_proc : process(exitcond_flatten_reg_809, tmp_V_79_fu_410_p1, buffer_1_V_reg_834, buffer_2_V_reg_841, buffer_3_V_reg_848, buffer_4_V_reg_855, buffer_5_V_reg_862, buffer_6_V_reg_869, buffer_7_V_reg_876, buffer_8_V_reg_883, buffer_9_V_reg_890, buffer_10_V_reg_897, buffer_11_V_reg_904, buffer_12_V_reg_911, buffer_13_V_reg_918, buffer_14_V_reg_925, buffer_15_V_reg_932, ap_condition_554, ap_condition_559, ap_condition_564, ap_condition_569, ap_condition_574, ap_condition_579, ap_condition_584, ap_condition_589, ap_condition_594, ap_condition_599, ap_condition_604, ap_condition_609, ap_condition_614, ap_condition_619, ap_condition_624, ap_condition_629)
    begin
        if ((exitcond_flatten_reg_809 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_629)) then 
                in_sub_max_V_V_din <= buffer_15_V_reg_932;
            elsif ((ap_const_boolean_1 = ap_condition_624)) then 
                in_sub_max_V_V_din <= buffer_14_V_reg_925;
            elsif ((ap_const_boolean_1 = ap_condition_619)) then 
                in_sub_max_V_V_din <= buffer_13_V_reg_918;
            elsif ((ap_const_boolean_1 = ap_condition_614)) then 
                in_sub_max_V_V_din <= buffer_12_V_reg_911;
            elsif ((ap_const_boolean_1 = ap_condition_609)) then 
                in_sub_max_V_V_din <= buffer_11_V_reg_904;
            elsif ((ap_const_boolean_1 = ap_condition_604)) then 
                in_sub_max_V_V_din <= buffer_10_V_reg_897;
            elsif ((ap_const_boolean_1 = ap_condition_599)) then 
                in_sub_max_V_V_din <= buffer_9_V_reg_890;
            elsif ((ap_const_boolean_1 = ap_condition_594)) then 
                in_sub_max_V_V_din <= buffer_8_V_reg_883;
            elsif ((ap_const_boolean_1 = ap_condition_589)) then 
                in_sub_max_V_V_din <= buffer_7_V_reg_876;
            elsif ((ap_const_boolean_1 = ap_condition_584)) then 
                in_sub_max_V_V_din <= buffer_6_V_reg_869;
            elsif ((ap_const_boolean_1 = ap_condition_579)) then 
                in_sub_max_V_V_din <= buffer_5_V_reg_862;
            elsif ((ap_const_boolean_1 = ap_condition_574)) then 
                in_sub_max_V_V_din <= buffer_4_V_reg_855;
            elsif ((ap_const_boolean_1 = ap_condition_569)) then 
                in_sub_max_V_V_din <= buffer_3_V_reg_848;
            elsif ((ap_const_boolean_1 = ap_condition_564)) then 
                in_sub_max_V_V_din <= buffer_2_V_reg_841;
            elsif ((ap_const_boolean_1 = ap_condition_559)) then 
                in_sub_max_V_V_din <= buffer_1_V_reg_834;
            elsif ((ap_const_boolean_1 = ap_condition_554)) then 
                in_sub_max_V_V_din <= tmp_V_79_fu_410_p1;
            else 
                in_sub_max_V_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            in_sub_max_V_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    in_sub_max_V_V_write_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten_reg_809 = ap_const_lv1_0)))) then 
            in_sub_max_V_V_write <= ap_const_logic_1;
        else 
            in_sub_max_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    in_sub_max_c_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_sub_max_c_V_V_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_sub_max_c_V_V_blk_n <= in_sub_max_c_V_V_full_n;
        else 
            in_sub_max_c_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_sub_max_c_V_V_din <= in_V_data_V_dout(63 downto 32);

    in_sub_max_c_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_write_n_V_V_full_n, in_sub_max_r_V_V_full_n, in_sub_max_c_V_V_full_n, in_V_id_V0_status)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (in_sub_max_c_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_full_n = ap_const_logic_0) or (in_write_n_V_V_full_n = ap_const_logic_0) or (in_V_id_V0_status = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_sub_max_c_V_V_write <= ap_const_logic_1;
        else 
            in_sub_max_c_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    in_sub_max_r_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_sub_max_r_V_V_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_sub_max_r_V_V_blk_n <= in_sub_max_r_V_V_full_n;
        else 
            in_sub_max_r_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_sub_max_r_V_V_din <= in_V_data_V_dout(32 - 1 downto 0);

    in_sub_max_r_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_write_n_V_V_full_n, in_sub_max_r_V_V_full_n, in_sub_max_c_V_V_full_n, in_V_id_V0_status)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (in_sub_max_c_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_full_n = ap_const_logic_0) or (in_write_n_V_V_full_n = ap_const_logic_0) or (in_V_id_V0_status = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_sub_max_r_V_V_write <= ap_const_logic_1;
        else 
            in_sub_max_r_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    in_write_n_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_write_n_V_V_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_write_n_V_V_blk_n <= in_write_n_V_V_full_n;
        else 
            in_write_n_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_write_n_V_V_din <= in_V_data_V_dout(96 - 1 downto 0);

    in_write_n_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_write_n_V_V_full_n, in_sub_max_r_V_V_full_n, in_sub_max_c_V_V_full_n, in_V_id_V0_status)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (in_sub_max_c_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_full_n = ap_const_logic_0) or (in_write_n_V_V_full_n = ap_const_logic_0) or (in_V_id_V0_status = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_write_n_V_V_write <= ap_const_logic_1;
        else 
            in_write_n_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next_fu_382_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_303_p4) + unsigned(ap_const_lv60_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    max_1_0_V_fu_564_p3 <= 
        tmp_V_79_reg_828 when (tmp_25_i_fu_560_p2(0) = '1') else 
        buffer_1_V_reg_834;
    max_1_1_V_fu_574_p3 <= 
        buffer_2_V_reg_841 when (tmp_25_1_i_fu_570_p2(0) = '1') else 
        buffer_3_V_reg_848;
    max_1_2_V_fu_584_p3 <= 
        buffer_4_V_reg_855 when (tmp_25_2_i_fu_580_p2(0) = '1') else 
        buffer_5_V_reg_862;
    max_1_3_V_fu_594_p3 <= 
        buffer_6_V_reg_869 when (tmp_25_3_i_fu_590_p2(0) = '1') else 
        buffer_7_V_reg_876;
    max_1_4_V_fu_604_p3 <= 
        buffer_8_V_reg_883 when (tmp_25_4_i_fu_600_p2(0) = '1') else 
        buffer_9_V_reg_890;
    max_1_5_V_fu_614_p3 <= 
        buffer_10_V_reg_897 when (tmp_25_5_i_fu_610_p2(0) = '1') else 
        buffer_11_V_reg_904;
    max_1_6_V_fu_624_p3 <= 
        buffer_12_V_reg_911 when (tmp_25_6_i_fu_620_p2(0) = '1') else 
        buffer_13_V_reg_918;
    max_1_7_V_fu_634_p3 <= 
        buffer_14_V_reg_925 when (tmp_25_7_i_fu_630_p2(0) = '1') else 
        buffer_15_V_reg_932;
    max_2_0_V_fu_646_p3 <= 
        max_1_1_V_fu_574_p3 when (tmp_34_i_fu_640_p2(0) = '1') else 
        max_1_0_V_fu_564_p3;
    max_2_1_V_fu_660_p3 <= 
        max_1_3_V_fu_594_p3 when (tmp_34_1_i_fu_654_p2(0) = '1') else 
        max_1_2_V_fu_584_p3;
    max_2_2_V_fu_674_p3 <= 
        max_1_5_V_fu_614_p3 when (tmp_34_2_i_fu_668_p2(0) = '1') else 
        max_1_4_V_fu_604_p3;
    max_2_3_V_fu_688_p3 <= 
        max_1_7_V_fu_634_p3 when (tmp_34_3_i_fu_682_p2(0) = '1') else 
        max_1_6_V_fu_624_p3;
    max_3_0_V_fu_702_p3 <= 
        max_2_1_V_fu_660_p3 when (tmp_42_i_fu_696_p2(0) = '1') else 
        max_2_0_V_fu_646_p3;

    max_input_V_V_blk_n_assign_proc : process(max_input_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_reg_809, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, tmp_21_i_reg_824)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_21_i_reg_824 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (exitcond_flatten_reg_809 = ap_const_lv1_0))) then 
            max_input_V_V_blk_n <= max_input_V_V_full_n;
        else 
            max_input_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    max_input_V_V_din <= 
        storemerge9_0200_1_fu_743_p3 when (tmp_18_i_fu_734_p2(0) = '1') else 
        max_val_V_1_0200_1_fu_755_p3;

    max_input_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_predicate_op116_write_state6, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_predicate_op116_write_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            max_input_V_V_write <= ap_const_logic_1;
        else 
            max_input_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    max_val_V_1_0200_1_fu_755_p3 <= 
        max_3_0_V_reg_944 when (tmp_20_i_fu_750_p2(0) = '1') else 
        p_0200_1_i_fu_727_p3;
    max_val_V_fu_716_p3 <= 
        max_2_3_V_fu_688_p3 when (tmp_42_1_i_fu_710_p2(0) = '1') else 
        max_2_2_V_fu_674_p3;
    num_batches_fu_336_p1 <= in_V_data_V_dout(32 - 1 downto 0);
    p_0200_1_i_fu_727_p3 <= 
        ap_const_lv32_80000000 when (tmp_17_i_reg_939(0) = '1') else 
        tmp_V_fu_246;
    packet_cast_i_fu_401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(packet_i_mid2_fu_393_p3),29));
    packet_fu_776_p2 <= std_logic_vector(unsigned(packet_i_mid2_reg_818) + unsigned(ap_const_lv28_1));
    packet_i_mid2_fu_393_p3 <= 
        ap_const_lv28_0 when (exitcond2_fu_388_p2(0) = '1') else 
        ap_phi_mux_packet_i_phi_fu_314_p4;

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    storemerge9_0200_1_fu_743_p3 <= 
        max_val_V_reg_951 when (tmp_19_i_fu_738_p2(0) = '1') else 
        p_0200_1_i_fu_727_p3;
    tmp_15_i_fu_359_p2 <= std_logic_vector(signed(ap_const_lv29_1FFFFFFF) + signed(tmp_cast423_i_fu_356_p1));
    tmp_17_i_fu_555_p2 <= "1" when (packet_i_mid2_reg_818 = ap_const_lv28_0) else "0";
    tmp_18_i_fu_734_p2 <= "1" when (signed(max_3_0_V_reg_944) < signed(max_val_V_reg_951)) else "0";
    tmp_19_i_fu_738_p2 <= "1" when (signed(max_val_V_reg_951) > signed(p_0200_1_i_fu_727_p3)) else "0";
    tmp_20_i_fu_750_p2 <= "1" when (signed(max_3_0_V_reg_944) > signed(p_0200_1_i_fu_727_p3)) else "0";
    tmp_21_i_fu_405_p2 <= "1" when (packet_cast_i_fu_401_p1 = tmp_15_i_reg_799) else "0";
    tmp_25_1_i_fu_570_p2 <= "1" when (signed(buffer_2_V_reg_841) > signed(buffer_3_V_reg_848)) else "0";
    tmp_25_2_i_fu_580_p2 <= "1" when (signed(buffer_4_V_reg_855) > signed(buffer_5_V_reg_862)) else "0";
    tmp_25_3_i_fu_590_p2 <= "1" when (signed(buffer_6_V_reg_869) > signed(buffer_7_V_reg_876)) else "0";
    tmp_25_4_i_fu_600_p2 <= "1" when (signed(buffer_8_V_reg_883) > signed(buffer_9_V_reg_890)) else "0";
    tmp_25_5_i_fu_610_p2 <= "1" when (signed(buffer_10_V_reg_897) > signed(buffer_11_V_reg_904)) else "0";
    tmp_25_6_i_fu_620_p2 <= "1" when (signed(buffer_12_V_reg_911) > signed(buffer_13_V_reg_918)) else "0";
    tmp_25_7_i_fu_630_p2 <= "1" when (signed(buffer_14_V_reg_925) > signed(buffer_15_V_reg_932)) else "0";
    tmp_25_i_fu_560_p2 <= "1" when (signed(tmp_V_79_reg_828) > signed(buffer_1_V_reg_834)) else "0";
    tmp_34_1_i_fu_654_p2 <= "1" when (signed(max_1_2_V_fu_584_p3) < signed(max_1_3_V_fu_594_p3)) else "0";
    tmp_34_2_i_fu_668_p2 <= "1" when (signed(max_1_4_V_fu_604_p3) < signed(max_1_5_V_fu_614_p3)) else "0";
    tmp_34_3_i_fu_682_p2 <= "1" when (signed(max_1_6_V_fu_624_p3) < signed(max_1_7_V_fu_634_p3)) else "0";
    tmp_34_i_fu_640_p2 <= "1" when (signed(max_1_0_V_fu_564_p3) < signed(max_1_1_V_fu_574_p3)) else "0";
    tmp_42_1_i_fu_710_p2 <= "1" when (signed(max_2_2_V_fu_674_p3) < signed(max_2_3_V_fu_688_p3)) else "0";
    tmp_42_i_fu_696_p2 <= "1" when (signed(max_2_0_V_fu_646_p3) < signed(max_2_1_V_fu_660_p3)) else "0";
    tmp_V_79_fu_410_p1 <= in_V_data_V_dout(32 - 1 downto 0);
    tmp_V_95_fu_762_p3 <= 
        storemerge9_0200_1_fu_743_p3 when (tmp_18_i_fu_734_p2(0) = '1') else 
        max_val_V_1_0200_1_fu_755_p3;
    tmp_cast423_i_fu_356_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_792),29));
end behav;
