-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity QuantAct_1_channel is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    in_quant_iter_c_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_quant_iter_c_V_V_empty_n : IN STD_LOGIC;
    in_quant_iter_c_V_V_read : OUT STD_LOGIC;
    in_quant_iter_r_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_quant_iter_r_V_V_empty_n : IN STD_LOGIC;
    in_quant_iter_r_V_V_read : OUT STD_LOGIC;
    in_proc_2_iter_r_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_proc_2_iter_r_V_V_full_n : IN STD_LOGIC;
    in_proc_2_iter_r_V_V_write : OUT STD_LOGIC;
    in_proc_2_iter_c_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_proc_2_iter_c_V_V_full_n : IN STD_LOGIC;
    in_proc_2_iter_c_V_V_write : OUT STD_LOGIC;
    sum_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    sum_V_V_full_n : IN STD_LOGIC;
    sum_V_V_write : OUT STD_LOGIC;
    in_quant_V_V_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
    in_quant_V_V_empty_n : IN STD_LOGIC;
    in_quant_V_V_read : OUT STD_LOGIC;
    in_proc_2_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    in_proc_2_V_V_full_n : IN STD_LOGIC;
    in_proc_2_V_V_write : OUT STD_LOGIC );
end;


architecture behav of QuantAct_1_channel is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_200 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_const_lv32_23F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000111111";
    constant ap_const_lv32_240 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001000000";
    constant ap_const_lv32_27F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001111111";
    constant ap_const_lv32_280 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010000000";
    constant ap_const_lv32_2BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010111111";
    constant ap_const_lv32_2C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011000000";
    constant ap_const_lv32_2FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011111111";
    constant ap_const_lv32_300 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100000000";
    constant ap_const_lv32_33F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100111111";
    constant ap_const_lv32_340 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101000000";
    constant ap_const_lv32_37F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101111111";
    constant ap_const_lv32_380 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110000000";
    constant ap_const_lv32_3BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110111111";
    constant ap_const_lv32_3C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111000000";
    constant ap_const_lv32_3FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111111111";
    constant ap_const_lv95_604134FC : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001100000010000010011010011111100";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal in_quant_iter_c_V_V_blk_n : STD_LOGIC;
    signal in_quant_iter_r_V_V_blk_n : STD_LOGIC;
    signal in_proc_2_iter_r_V_V_blk_n : STD_LOGIC;
    signal in_proc_2_iter_c_V_V_blk_n : STD_LOGIC;
    signal sum_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_62_i_reg_1954 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_i_reg_1954_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_quant_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1925 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_proc_2_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1925_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_248 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_i_reg_259 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_26_reg_1903 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_V_reg_1910 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_fu_270_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_reg_1915 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal bound_fu_281_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound_reg_1920 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_flatten_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_flatten_reg_1925_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1925_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1925_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_292_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_61_i_fu_311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_i_reg_1934 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_i_reg_1934_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_i_reg_1934_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_i_reg_1934_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_i_reg_1934_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_i_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_i_reg_1954_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_i_reg_1954_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_i_reg_1954_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_i_reg_1954_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal l_fu_322_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_171_fu_328_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_171_reg_1963 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_29_1_i_reg_1968 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_29_2_i_reg_1973 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_29_3_i_reg_1978 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_29_4_i_reg_1983 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_29_5_i_reg_1988 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_29_6_i_reg_1993 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_29_7_i_reg_1998 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_29_8_i_reg_2003 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_29_9_i_reg_2008 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_29_i_reg_2013 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_29_10_i_reg_2018 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_29_11_i_reg_2023 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_29_12_i_reg_2028 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_29_13_i_reg_2033 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_29_14_i_reg_2038 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_172_reg_2123 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_i_reg_2128 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_173_reg_2134 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_i_403_reg_2139 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_174_reg_2145 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_2_i_reg_2150 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_175_reg_2156 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_3_i_reg_2161 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_176_reg_2167 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_4_i_reg_2172 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_177_reg_2178 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_5_i_reg_2183 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_178_reg_2189 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_6_i_reg_2194 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_179_reg_2200 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_7_i_reg_2205 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_180_reg_2211 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_8_i_reg_2216 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_181_reg_2222 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_9_i_reg_2227 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_182_reg_2233 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_10_i_reg_2238 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_183_reg_2244 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_11_i_reg_2249 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_184_reg_2255 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_12_i_reg_2260 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_185_reg_2266 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_13_i_reg_2271 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_186_reg_2277 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_14_i_reg_2282 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_187_reg_2288 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_15_i_reg_2293 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_4_i_fu_919_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_4_i_reg_2299 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_4_1_i_fu_930_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_4_1_i_reg_2305 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_2_i_fu_953_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_2_i_reg_2311 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_3_i_fu_978_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_3_i_reg_2317 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_4_4_i_fu_991_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_4_4_i_reg_2323 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_4_5_i_fu_1002_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_4_5_i_reg_2329 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_6_i_fu_1025_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_6_i_reg_2335 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_7_i_fu_1050_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_7_i_reg_2341 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_8_i_fu_1075_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_8_i_reg_2347 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_9_i_fu_1100_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_9_i_reg_2353 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_i_409_fu_1125_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_i_409_reg_2359 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_10_i_fu_1150_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_10_i_reg_2365 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_11_i_fu_1175_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_11_i_reg_2371 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_12_i_fu_1200_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_12_i_reg_2377 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_13_i_fu_1225_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_13_i_reg_2383 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_14_i_fu_1250_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_14_i_reg_2389 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_fu_1731_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_reg_2395 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_fu_1749_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_reg_2400 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp7_fu_1791_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp7_reg_2405 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal sum_0_V_1_fu_136 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_0_V_fu_1328_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_1_V_1_fu_140 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_1_V_fu_1357_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_2_V_1_fu_144 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_2_V_fu_1373_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_3_V_1_fu_148 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_3_V_fu_1389_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_4_V_1_fu_152 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_4_V_fu_1418_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_5_V_1_fu_156 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_5_V_fu_1447_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_6_V_1_fu_160 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_6_V_fu_1463_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_7_V_1_fu_164 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_7_V_fu_1479_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_8_V_1_fu_168 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_8_V_fu_1495_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_9_V_1_fu_172 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_9_V_fu_1511_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_10_V_1_fu_176 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_10_V_fu_1527_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_11_V_1_fu_180 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_11_V_fu_1543_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_12_V_1_fu_184 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_12_V_fu_1559_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_13_V_1_fu_188 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_13_V_fu_1575_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_14_V_1_fu_192 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_14_V_fu_1591_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_15_V_1_fu_196 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_15_V_fu_1607_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_fu_281_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_fu_281_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_i2_fu_298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal l_i_mid2_fu_303_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_485_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_494_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_503_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_512_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_521_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_530_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_539_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_548_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_557_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_566_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_575_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_584_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_593_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_602_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_611_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_620_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_485_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_494_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_503_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_512_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_521_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_530_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_539_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_548_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_557_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_566_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_575_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_584_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_593_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_602_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_611_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_620_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal read2_V_1_i_fu_914_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal read2_V_1_1_i_fu_925_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal read2_V_1_2_i_fu_936_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_4_2_i_fu_941_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_81_2_i_fu_947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_1_3_i_fu_961_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_4_3_i_fu_966_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_81_3_i_fu_972_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_1_4_i_fu_986_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal read2_V_1_5_i_fu_997_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal read2_V_1_6_i_fu_1008_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_4_6_i_fu_1013_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_81_6_i_fu_1019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_1_7_i_fu_1033_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_4_7_i_fu_1038_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_81_7_i_fu_1044_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_1_8_i_fu_1058_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_4_8_i_fu_1063_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_81_8_i_fu_1069_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_1_9_i_fu_1083_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_4_9_i_fu_1088_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_81_9_i_fu_1094_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_1_i_406_fu_1108_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_4_i_407_fu_1113_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_81_i_408_fu_1119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_1_10_i_fu_1133_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_4_10_i_fu_1138_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_81_10_i_fu_1144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_1_11_i_fu_1158_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_4_11_i_fu_1163_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_81_11_i_fu_1169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_1_12_i_fu_1183_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_4_12_i_fu_1188_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_81_12_i_fu_1194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_1_13_i_fu_1208_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_4_13_i_fu_1213_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_81_13_i_fu_1219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_1_14_i_fu_1233_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_4_14_i_fu_1238_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_81_14_i_fu_1244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_i_fu_1306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_i_fu_1311_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_5_i_fu_1318_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_i_fu_1322_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_81_1_i_fu_1335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_1_i_fu_1340_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_5_1_i_fu_1347_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_1_i_fu_1351_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_5_2_i_fu_1364_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_2_i_fu_1367_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_5_3_i_fu_1380_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_3_i_fu_1383_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_81_4_i_fu_1396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_4_i_404_fu_1401_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_5_4_i_fu_1408_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_4_i_fu_1412_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_81_5_i_fu_1425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_5_i_405_fu_1430_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_5_5_i_fu_1437_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_5_i_fu_1441_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_5_6_i_fu_1454_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_6_i_fu_1457_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_5_7_i_fu_1470_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_7_i_fu_1473_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_5_8_i_fu_1486_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_8_i_fu_1489_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_5_9_i_fu_1502_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_9_i_fu_1505_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_5_i_410_fu_1518_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_i_411_fu_1521_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_5_10_i_fu_1534_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_10_i_fu_1537_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_5_11_i_fu_1550_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_11_i_fu_1553_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_5_12_i_fu_1566_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_12_i_fu_1569_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_5_13_i_fu_1582_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_13_i_fu_1585_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_5_14_i_fu_1598_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_14_i_fu_1601_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_fu_1725_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_1719_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_fu_1743_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_fu_1737_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp10_fu_1761_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_fu_1755_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp13_fu_1779_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp12_fu_1773_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp11_fu_1785_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp8_fu_1767_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1797_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_485_ce : STD_LOGIC;
    signal grp_fu_494_ce : STD_LOGIC;
    signal grp_fu_503_ce : STD_LOGIC;
    signal grp_fu_512_ce : STD_LOGIC;
    signal grp_fu_521_ce : STD_LOGIC;
    signal grp_fu_530_ce : STD_LOGIC;
    signal grp_fu_539_ce : STD_LOGIC;
    signal grp_fu_548_ce : STD_LOGIC;
    signal grp_fu_557_ce : STD_LOGIC;
    signal grp_fu_566_ce : STD_LOGIC;
    signal grp_fu_575_ce : STD_LOGIC;
    signal grp_fu_584_ce : STD_LOGIC;
    signal grp_fu_593_ce : STD_LOGIC;
    signal grp_fu_602_ce : STD_LOGIC;
    signal grp_fu_611_ce : STD_LOGIC;
    signal grp_fu_620_ce : STD_LOGIC;
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal bound_fu_281_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound_fu_281_p10 : STD_LOGIC_VECTOR (63 downto 0);

    component softmax_mul_32ns_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (94 downto 0) );
    end component;



begin
    softmax_mul_32ns_bkb_U24 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_485_p0,
        din1 => tmp_171_reg_1963,
        ce => grp_fu_485_ce,
        dout => grp_fu_485_p2);

    softmax_mul_32ns_bkb_U25 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_494_p0,
        din1 => p_Result_29_1_i_reg_1968,
        ce => grp_fu_494_ce,
        dout => grp_fu_494_p2);

    softmax_mul_32ns_bkb_U26 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_503_p0,
        din1 => p_Result_29_2_i_reg_1973,
        ce => grp_fu_503_ce,
        dout => grp_fu_503_p2);

    softmax_mul_32ns_bkb_U27 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_512_p0,
        din1 => p_Result_29_3_i_reg_1978,
        ce => grp_fu_512_ce,
        dout => grp_fu_512_p2);

    softmax_mul_32ns_bkb_U28 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_521_p0,
        din1 => p_Result_29_4_i_reg_1983,
        ce => grp_fu_521_ce,
        dout => grp_fu_521_p2);

    softmax_mul_32ns_bkb_U29 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_530_p0,
        din1 => p_Result_29_5_i_reg_1988,
        ce => grp_fu_530_ce,
        dout => grp_fu_530_p2);

    softmax_mul_32ns_bkb_U30 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_539_p0,
        din1 => p_Result_29_6_i_reg_1993,
        ce => grp_fu_539_ce,
        dout => grp_fu_539_p2);

    softmax_mul_32ns_bkb_U31 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_548_p0,
        din1 => p_Result_29_7_i_reg_1998,
        ce => grp_fu_548_ce,
        dout => grp_fu_548_p2);

    softmax_mul_32ns_bkb_U32 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_557_p0,
        din1 => p_Result_29_8_i_reg_2003,
        ce => grp_fu_557_ce,
        dout => grp_fu_557_p2);

    softmax_mul_32ns_bkb_U33 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_566_p0,
        din1 => p_Result_29_9_i_reg_2008,
        ce => grp_fu_566_ce,
        dout => grp_fu_566_p2);

    softmax_mul_32ns_bkb_U34 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_575_p0,
        din1 => p_Result_29_i_reg_2013,
        ce => grp_fu_575_ce,
        dout => grp_fu_575_p2);

    softmax_mul_32ns_bkb_U35 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_584_p0,
        din1 => p_Result_29_10_i_reg_2018,
        ce => grp_fu_584_ce,
        dout => grp_fu_584_p2);

    softmax_mul_32ns_bkb_U36 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_593_p0,
        din1 => p_Result_29_11_i_reg_2023,
        ce => grp_fu_593_ce,
        dout => grp_fu_593_p2);

    softmax_mul_32ns_bkb_U37 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_602_p0,
        din1 => p_Result_29_12_i_reg_2028,
        ce => grp_fu_602_ce,
        dout => grp_fu_602_p2);

    softmax_mul_32ns_bkb_U38 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_611_p0,
        din1 => p_Result_29_13_i_reg_2033,
        ce => grp_fu_611_ce,
        dout => grp_fu_611_p2);

    softmax_mul_32ns_bkb_U39 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_620_p0,
        din1 => p_Result_29_14_i_reg_2038,
        ce => grp_fu_620_ce,
        dout => grp_fu_620_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_287_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_248 <= indvar_flatten_next_fu_292_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                indvar_flatten_reg_248 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    l_i_reg_259_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_287_p2 = ap_const_lv1_0))) then 
                l_i_reg_259 <= l_fu_322_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                l_i_reg_259 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                bound_reg_1920 <= bound_fu_281_p2;
                tmp_i_reg_1915 <= tmp_i_fu_270_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_flatten_reg_1925 <= exitcond_flatten_fu_287_p2;
                exitcond_flatten_reg_1925_pp0_iter1_reg <= exitcond_flatten_reg_1925;
                tmp_61_i_reg_1934_pp0_iter1_reg <= tmp_61_i_reg_1934;
                tmp_62_i_reg_1954_pp0_iter1_reg <= tmp_62_i_reg_1954;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond_flatten_reg_1925_pp0_iter2_reg <= exitcond_flatten_reg_1925_pp0_iter1_reg;
                exitcond_flatten_reg_1925_pp0_iter3_reg <= exitcond_flatten_reg_1925_pp0_iter2_reg;
                exitcond_flatten_reg_1925_pp0_iter4_reg <= exitcond_flatten_reg_1925_pp0_iter3_reg;
                tmp_61_i_reg_1934_pp0_iter2_reg <= tmp_61_i_reg_1934_pp0_iter1_reg;
                tmp_61_i_reg_1934_pp0_iter3_reg <= tmp_61_i_reg_1934_pp0_iter2_reg;
                tmp_61_i_reg_1934_pp0_iter4_reg <= tmp_61_i_reg_1934_pp0_iter3_reg;
                tmp_62_i_reg_1954_pp0_iter2_reg <= tmp_62_i_reg_1954_pp0_iter1_reg;
                tmp_62_i_reg_1954_pp0_iter3_reg <= tmp_62_i_reg_1954_pp0_iter2_reg;
                tmp_62_i_reg_1954_pp0_iter4_reg <= tmp_62_i_reg_1954_pp0_iter3_reg;
                tmp_62_i_reg_1954_pp0_iter5_reg <= tmp_62_i_reg_1954_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1925_pp0_iter3_reg = ap_const_lv1_0))) then
                p_10_i_reg_2365 <= p_10_i_fu_1150_p3;
                p_11_i_reg_2371 <= p_11_i_fu_1175_p3;
                p_12_i_reg_2377 <= p_12_i_fu_1200_p3;
                p_13_i_reg_2383 <= p_13_i_fu_1225_p3;
                p_14_i_reg_2389 <= p_14_i_fu_1250_p3;
                p_2_i_reg_2311 <= p_2_i_fu_953_p3;
                p_3_i_reg_2317 <= p_3_i_fu_978_p3;
                p_4_1_i_reg_2305 <= p_4_1_i_fu_930_p3;
                p_4_4_i_reg_2323 <= p_4_4_i_fu_991_p3;
                p_4_5_i_reg_2329 <= p_4_5_i_fu_1002_p3;
                p_4_i_reg_2299 <= p_4_i_fu_919_p3;
                p_6_i_reg_2335 <= p_6_i_fu_1025_p3;
                p_7_i_reg_2341 <= p_7_i_fu_1050_p3;
                p_8_i_reg_2347 <= p_8_i_fu_1075_p3;
                p_9_i_reg_2353 <= p_9_i_fu_1100_p3;
                p_i_409_reg_2359 <= p_i_409_fu_1125_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1925 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Result_29_10_i_reg_2018 <= in_quant_V_V_dout(767 downto 704);
                p_Result_29_11_i_reg_2023 <= in_quant_V_V_dout(831 downto 768);
                p_Result_29_12_i_reg_2028 <= in_quant_V_V_dout(895 downto 832);
                p_Result_29_13_i_reg_2033 <= in_quant_V_V_dout(959 downto 896);
                p_Result_29_14_i_reg_2038 <= in_quant_V_V_dout(1023 downto 960);
                p_Result_29_1_i_reg_1968 <= in_quant_V_V_dout(127 downto 64);
                p_Result_29_2_i_reg_1973 <= in_quant_V_V_dout(191 downto 128);
                p_Result_29_3_i_reg_1978 <= in_quant_V_V_dout(255 downto 192);
                p_Result_29_4_i_reg_1983 <= in_quant_V_V_dout(319 downto 256);
                p_Result_29_5_i_reg_1988 <= in_quant_V_V_dout(383 downto 320);
                p_Result_29_6_i_reg_1993 <= in_quant_V_V_dout(447 downto 384);
                p_Result_29_7_i_reg_1998 <= in_quant_V_V_dout(511 downto 448);
                p_Result_29_8_i_reg_2003 <= in_quant_V_V_dout(575 downto 512);
                p_Result_29_9_i_reg_2008 <= in_quant_V_V_dout(639 downto 576);
                p_Result_29_i_reg_2013 <= in_quant_V_V_dout(703 downto 640);
                tmp_171_reg_1963 <= tmp_171_fu_328_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1925_pp0_iter2_reg = ap_const_lv1_0))) then
                read2_V_10_i_reg_2238 <= grp_fu_575_p2(81 downto 66);
                read2_V_11_i_reg_2249 <= grp_fu_584_p2(81 downto 66);
                read2_V_12_i_reg_2260 <= grp_fu_593_p2(81 downto 66);
                read2_V_13_i_reg_2271 <= grp_fu_602_p2(81 downto 66);
                read2_V_14_i_reg_2282 <= grp_fu_611_p2(81 downto 66);
                read2_V_15_i_reg_2293 <= grp_fu_620_p2(81 downto 66);
                read2_V_2_i_reg_2150 <= grp_fu_503_p2(81 downto 66);
                read2_V_3_i_reg_2161 <= grp_fu_512_p2(81 downto 66);
                read2_V_4_i_reg_2172 <= grp_fu_521_p2(81 downto 66);
                read2_V_5_i_reg_2183 <= grp_fu_530_p2(81 downto 66);
                read2_V_6_i_reg_2194 <= grp_fu_539_p2(81 downto 66);
                read2_V_7_i_reg_2205 <= grp_fu_548_p2(81 downto 66);
                read2_V_8_i_reg_2216 <= grp_fu_557_p2(81 downto 66);
                read2_V_9_i_reg_2227 <= grp_fu_566_p2(81 downto 66);
                read2_V_i_403_reg_2139 <= grp_fu_494_p2(81 downto 66);
                read2_V_i_reg_2128 <= grp_fu_485_p2(81 downto 66);
                tmp_172_reg_2123 <= grp_fu_485_p2(65 downto 65);
                tmp_173_reg_2134 <= grp_fu_494_p2(65 downto 65);
                tmp_174_reg_2145 <= grp_fu_503_p2(65 downto 65);
                tmp_175_reg_2156 <= grp_fu_512_p2(65 downto 65);
                tmp_176_reg_2167 <= grp_fu_521_p2(65 downto 65);
                tmp_177_reg_2178 <= grp_fu_530_p2(65 downto 65);
                tmp_178_reg_2189 <= grp_fu_539_p2(65 downto 65);
                tmp_179_reg_2200 <= grp_fu_548_p2(65 downto 65);
                tmp_180_reg_2211 <= grp_fu_557_p2(65 downto 65);
                tmp_181_reg_2222 <= grp_fu_566_p2(65 downto 65);
                tmp_182_reg_2233 <= grp_fu_575_p2(65 downto 65);
                tmp_183_reg_2244 <= grp_fu_584_p2(65 downto 65);
                tmp_184_reg_2255 <= grp_fu_593_p2(65 downto 65);
                tmp_185_reg_2266 <= grp_fu_602_p2(65 downto 65);
                tmp_186_reg_2277 <= grp_fu_611_p2(65 downto 65);
                tmp_187_reg_2288 <= grp_fu_620_p2(65 downto 65);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1925_pp0_iter4_reg = ap_const_lv1_0))) then
                sum_0_V_1_fu_136 <= sum_0_V_fu_1328_p3;
                sum_10_V_1_fu_176 <= sum_10_V_fu_1527_p3;
                sum_11_V_1_fu_180 <= sum_11_V_fu_1543_p3;
                sum_12_V_1_fu_184 <= sum_12_V_fu_1559_p3;
                sum_13_V_1_fu_188 <= sum_13_V_fu_1575_p3;
                sum_14_V_1_fu_192 <= sum_14_V_fu_1591_p3;
                sum_15_V_1_fu_196 <= sum_15_V_fu_1607_p3;
                sum_1_V_1_fu_140 <= sum_1_V_fu_1357_p3;
                sum_2_V_1_fu_144 <= sum_2_V_fu_1373_p3;
                sum_3_V_1_fu_148 <= sum_3_V_fu_1389_p3;
                sum_4_V_1_fu_152 <= sum_4_V_fu_1418_p3;
                sum_5_V_1_fu_156 <= sum_5_V_fu_1447_p3;
                sum_6_V_1_fu_160 <= sum_6_V_fu_1463_p3;
                sum_7_V_1_fu_164 <= sum_7_V_fu_1479_p3;
                sum_8_V_1_fu_168 <= sum_8_V_fu_1495_p3;
                sum_9_V_1_fu_172 <= sum_9_V_fu_1511_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_62_i_reg_1954_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp1_reg_2395 <= tmp1_fu_1731_p2;
                tmp4_reg_2400 <= tmp4_fu_1749_p2;
                tmp7_reg_2405 <= tmp7_fu_1791_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_287_p2 = ap_const_lv1_0))) then
                tmp_61_i_reg_1934 <= tmp_61_i_fu_311_p2;
                tmp_62_i_reg_1954 <= tmp_62_i_fu_317_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_proc_2_iter_c_V_V_full_n = ap_const_logic_0) or (in_proc_2_iter_r_V_V_full_n = ap_const_logic_0) or (in_quant_iter_r_V_V_empty_n = ap_const_logic_0) or (in_quant_iter_c_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_V_26_reg_1903 <= in_quant_iter_c_V_V_dout;
                tmp_V_reg_1910 <= in_quant_iter_r_V_V_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, in_quant_iter_c_V_V_empty_n, in_quant_iter_r_V_V_empty_n, in_proc_2_iter_r_V_V_full_n, in_proc_2_iter_c_V_V_full_n, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, exitcond_flatten_fu_287_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((in_proc_2_iter_c_V_V_full_n = ap_const_logic_0) or (in_proc_2_iter_r_V_V_full_n = ap_const_logic_0) or (in_quant_iter_r_V_V_empty_n = ap_const_logic_0) or (in_quant_iter_c_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (exitcond_flatten_fu_287_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (exitcond_flatten_fu_287_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(3);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(sum_V_V_full_n, in_quant_V_V_empty_n, in_proc_2_V_V_full_n, ap_enable_reg_pp0_iter6, tmp_62_i_reg_1954_pp0_iter5_reg, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1925, ap_enable_reg_pp0_iter5, exitcond_flatten_reg_1925_pp0_iter4_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((exitcond_flatten_reg_1925 = ap_const_lv1_0) and (in_quant_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_62_i_reg_1954_pp0_iter5_reg = ap_const_lv1_1) and (sum_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((in_proc_2_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (exitcond_flatten_reg_1925_pp0_iter4_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(sum_V_V_full_n, in_quant_V_V_empty_n, in_proc_2_V_V_full_n, ap_enable_reg_pp0_iter6, tmp_62_i_reg_1954_pp0_iter5_reg, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1925, ap_enable_reg_pp0_iter5, exitcond_flatten_reg_1925_pp0_iter4_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((exitcond_flatten_reg_1925 = ap_const_lv1_0) and (in_quant_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_62_i_reg_1954_pp0_iter5_reg = ap_const_lv1_1) and (sum_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((in_proc_2_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (exitcond_flatten_reg_1925_pp0_iter4_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(sum_V_V_full_n, in_quant_V_V_empty_n, in_proc_2_V_V_full_n, ap_enable_reg_pp0_iter6, tmp_62_i_reg_1954_pp0_iter5_reg, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1925, ap_enable_reg_pp0_iter5, exitcond_flatten_reg_1925_pp0_iter4_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((exitcond_flatten_reg_1925 = ap_const_lv1_0) and (in_quant_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_62_i_reg_1954_pp0_iter5_reg = ap_const_lv1_1) and (sum_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((in_proc_2_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (exitcond_flatten_reg_1925_pp0_iter4_reg = ap_const_lv1_0)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, in_quant_iter_c_V_V_empty_n, in_quant_iter_r_V_V_empty_n, in_proc_2_iter_r_V_V_full_n, in_proc_2_iter_c_V_V_full_n)
    begin
                ap_block_state1 <= ((in_proc_2_iter_c_V_V_full_n = ap_const_logic_0) or (in_proc_2_iter_r_V_V_full_n = ap_const_logic_0) or (in_quant_iter_r_V_V_empty_n = ap_const_logic_0) or (in_quant_iter_c_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(in_quant_V_V_empty_n, exitcond_flatten_reg_1925)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((exitcond_flatten_reg_1925 = ap_const_lv1_0) and (in_quant_V_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter5_assign_proc : process(in_proc_2_V_V_full_n, exitcond_flatten_reg_1925_pp0_iter4_reg)
    begin
                ap_block_state8_pp0_stage0_iter5 <= ((in_proc_2_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1925_pp0_iter4_reg = ap_const_lv1_0));
    end process;


    ap_block_state9_pp0_stage0_iter6_assign_proc : process(sum_V_V_full_n, tmp_62_i_reg_1954_pp0_iter5_reg)
    begin
                ap_block_state9_pp0_stage0_iter6 <= ((tmp_62_i_reg_1954_pp0_iter5_reg = ap_const_lv1_1) and (sum_V_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_flatten_fu_287_p2)
    begin
        if ((exitcond_flatten_fu_287_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    bound_fu_281_p0 <= bound_fu_281_p00(32 - 1 downto 0);
    bound_fu_281_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_26_reg_1903),64));
    bound_fu_281_p1 <= bound_fu_281_p10(32 - 1 downto 0);
    bound_fu_281_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_reg_1910),64));
    bound_fu_281_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound_fu_281_p0) * unsigned(bound_fu_281_p1), 64));
    exitcond_flatten_fu_287_p2 <= "1" when (indvar_flatten_reg_248 = bound_reg_1920) else "0";
    exitcond_i2_fu_298_p2 <= "1" when (l_i_reg_259 = tmp_V_26_reg_1903) else "0";

    grp_fu_485_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_485_ce <= ap_const_logic_1;
        else 
            grp_fu_485_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_485_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_494_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_494_ce <= ap_const_logic_1;
        else 
            grp_fu_494_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_494_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_503_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_503_ce <= ap_const_logic_1;
        else 
            grp_fu_503_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_503_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_512_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_512_ce <= ap_const_logic_1;
        else 
            grp_fu_512_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_512_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_521_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_521_ce <= ap_const_logic_1;
        else 
            grp_fu_521_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_521_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_530_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_530_ce <= ap_const_logic_1;
        else 
            grp_fu_530_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_530_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_539_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_539_ce <= ap_const_logic_1;
        else 
            grp_fu_539_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_539_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_548_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_548_ce <= ap_const_logic_1;
        else 
            grp_fu_548_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_548_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_557_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_557_ce <= ap_const_logic_1;
        else 
            grp_fu_557_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_557_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_566_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_566_ce <= ap_const_logic_1;
        else 
            grp_fu_566_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_566_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_575_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_575_ce <= ap_const_logic_1;
        else 
            grp_fu_575_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_575_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_584_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_584_ce <= ap_const_logic_1;
        else 
            grp_fu_584_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_584_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_593_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_593_ce <= ap_const_logic_1;
        else 
            grp_fu_593_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_593_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_602_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_602_ce <= ap_const_logic_1;
        else 
            grp_fu_602_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_602_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_611_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_611_ce <= ap_const_logic_1;
        else 
            grp_fu_611_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_611_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_620_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_620_ce <= ap_const_logic_1;
        else 
            grp_fu_620_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_620_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    in_proc_2_V_V_blk_n_assign_proc : process(in_proc_2_V_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, exitcond_flatten_reg_1925_pp0_iter4_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (exitcond_flatten_reg_1925_pp0_iter4_reg = ap_const_lv1_0))) then 
            in_proc_2_V_V_blk_n <= in_proc_2_V_V_full_n;
        else 
            in_proc_2_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_proc_2_V_V_din <= (((((((((((((((p_14_i_reg_2389 & p_13_i_reg_2383) & p_12_i_reg_2377) & p_11_i_reg_2371) & p_10_i_reg_2365) & p_i_409_reg_2359) & p_9_i_reg_2353) & p_8_i_reg_2347) & p_7_i_reg_2341) & p_6_i_reg_2335) & p_5_i_405_fu_1430_p3) & p_4_i_404_fu_1401_p3) & p_3_i_reg_2317) & p_2_i_reg_2311) & p_1_i_fu_1340_p3) & p_i_fu_1311_p3);

    in_proc_2_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, exitcond_flatten_reg_1925_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1925_pp0_iter4_reg = ap_const_lv1_0))) then 
            in_proc_2_V_V_write <= ap_const_logic_1;
        else 
            in_proc_2_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    in_proc_2_iter_c_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_proc_2_iter_c_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_proc_2_iter_c_V_V_blk_n <= in_proc_2_iter_c_V_V_full_n;
        else 
            in_proc_2_iter_c_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_proc_2_iter_c_V_V_din <= in_quant_iter_c_V_V_dout;

    in_proc_2_iter_c_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_quant_iter_c_V_V_empty_n, in_quant_iter_r_V_V_empty_n, in_proc_2_iter_r_V_V_full_n, in_proc_2_iter_c_V_V_full_n)
    begin
        if ((not(((in_proc_2_iter_c_V_V_full_n = ap_const_logic_0) or (in_proc_2_iter_r_V_V_full_n = ap_const_logic_0) or (in_quant_iter_r_V_V_empty_n = ap_const_logic_0) or (in_quant_iter_c_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_proc_2_iter_c_V_V_write <= ap_const_logic_1;
        else 
            in_proc_2_iter_c_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    in_proc_2_iter_r_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_proc_2_iter_r_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_proc_2_iter_r_V_V_blk_n <= in_proc_2_iter_r_V_V_full_n;
        else 
            in_proc_2_iter_r_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_proc_2_iter_r_V_V_din <= in_quant_iter_r_V_V_dout;

    in_proc_2_iter_r_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_quant_iter_c_V_V_empty_n, in_quant_iter_r_V_V_empty_n, in_proc_2_iter_r_V_V_full_n, in_proc_2_iter_c_V_V_full_n)
    begin
        if ((not(((in_proc_2_iter_c_V_V_full_n = ap_const_logic_0) or (in_proc_2_iter_r_V_V_full_n = ap_const_logic_0) or (in_quant_iter_r_V_V_empty_n = ap_const_logic_0) or (in_quant_iter_c_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_proc_2_iter_r_V_V_write <= ap_const_logic_1;
        else 
            in_proc_2_iter_r_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    in_quant_V_V_blk_n_assign_proc : process(in_quant_V_V_empty_n, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1925)
    begin
        if (((exitcond_flatten_reg_1925 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_quant_V_V_blk_n <= in_quant_V_V_empty_n;
        else 
            in_quant_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_quant_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1925, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_flatten_reg_1925 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in_quant_V_V_read <= ap_const_logic_1;
        else 
            in_quant_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    in_quant_iter_c_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_quant_iter_c_V_V_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_quant_iter_c_V_V_blk_n <= in_quant_iter_c_V_V_empty_n;
        else 
            in_quant_iter_c_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_quant_iter_c_V_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_quant_iter_c_V_V_empty_n, in_quant_iter_r_V_V_empty_n, in_proc_2_iter_r_V_V_full_n, in_proc_2_iter_c_V_V_full_n)
    begin
        if ((not(((in_proc_2_iter_c_V_V_full_n = ap_const_logic_0) or (in_proc_2_iter_r_V_V_full_n = ap_const_logic_0) or (in_quant_iter_r_V_V_empty_n = ap_const_logic_0) or (in_quant_iter_c_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_quant_iter_c_V_V_read <= ap_const_logic_1;
        else 
            in_quant_iter_c_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    in_quant_iter_r_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_quant_iter_r_V_V_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_quant_iter_r_V_V_blk_n <= in_quant_iter_r_V_V_empty_n;
        else 
            in_quant_iter_r_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_quant_iter_r_V_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_quant_iter_c_V_V_empty_n, in_quant_iter_r_V_V_empty_n, in_proc_2_iter_r_V_V_full_n, in_proc_2_iter_c_V_V_full_n)
    begin
        if ((not(((in_proc_2_iter_c_V_V_full_n = ap_const_logic_0) or (in_proc_2_iter_r_V_V_full_n = ap_const_logic_0) or (in_quant_iter_r_V_V_empty_n = ap_const_logic_0) or (in_quant_iter_c_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_quant_iter_r_V_V_read <= ap_const_logic_1;
        else 
            in_quant_iter_r_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next_fu_292_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_248) + unsigned(ap_const_lv64_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    l_fu_322_p2 <= std_logic_vector(unsigned(l_i_mid2_fu_303_p3) + unsigned(ap_const_lv32_1));
    l_i_mid2_fu_303_p3 <= 
        ap_const_lv32_0 when (exitcond_i2_fu_298_p2(0) = '1') else 
        l_i_reg_259;
    p_10_i_fu_1150_p3 <= 
        ap_const_lv16_1 when (tmp_81_10_i_fu_1144_p2(0) = '1') else 
        p_4_10_i_fu_1138_p3;
    p_11_i_fu_1175_p3 <= 
        ap_const_lv16_1 when (tmp_81_11_i_fu_1169_p2(0) = '1') else 
        p_4_11_i_fu_1163_p3;
    p_12_i_fu_1200_p3 <= 
        ap_const_lv16_1 when (tmp_81_12_i_fu_1194_p2(0) = '1') else 
        p_4_12_i_fu_1188_p3;
    p_13_i_fu_1225_p3 <= 
        ap_const_lv16_1 when (tmp_81_13_i_fu_1219_p2(0) = '1') else 
        p_4_13_i_fu_1213_p3;
    p_14_i_fu_1250_p3 <= 
        ap_const_lv16_1 when (tmp_81_14_i_fu_1244_p2(0) = '1') else 
        p_4_14_i_fu_1238_p3;
    p_1_i_fu_1340_p3 <= 
        ap_const_lv16_1 when (tmp_81_1_i_fu_1335_p2(0) = '1') else 
        p_4_1_i_reg_2305;
    p_2_i_fu_953_p3 <= 
        ap_const_lv16_1 when (tmp_81_2_i_fu_947_p2(0) = '1') else 
        p_4_2_i_fu_941_p3;
    p_3_i_fu_978_p3 <= 
        ap_const_lv16_1 when (tmp_81_3_i_fu_972_p2(0) = '1') else 
        p_4_3_i_fu_966_p3;
    p_4_10_i_fu_1138_p3 <= 
        read2_V_1_10_i_fu_1133_p2 when (tmp_183_reg_2244(0) = '1') else 
        read2_V_11_i_reg_2249;
    p_4_11_i_fu_1163_p3 <= 
        read2_V_1_11_i_fu_1158_p2 when (tmp_184_reg_2255(0) = '1') else 
        read2_V_12_i_reg_2260;
    p_4_12_i_fu_1188_p3 <= 
        read2_V_1_12_i_fu_1183_p2 when (tmp_185_reg_2266(0) = '1') else 
        read2_V_13_i_reg_2271;
    p_4_13_i_fu_1213_p3 <= 
        read2_V_1_13_i_fu_1208_p2 when (tmp_186_reg_2277(0) = '1') else 
        read2_V_14_i_reg_2282;
    p_4_14_i_fu_1238_p3 <= 
        read2_V_1_14_i_fu_1233_p2 when (tmp_187_reg_2288(0) = '1') else 
        read2_V_15_i_reg_2293;
    p_4_1_i_fu_930_p3 <= 
        read2_V_1_1_i_fu_925_p2 when (tmp_173_reg_2134(0) = '1') else 
        read2_V_i_403_reg_2139;
    p_4_2_i_fu_941_p3 <= 
        read2_V_1_2_i_fu_936_p2 when (tmp_174_reg_2145(0) = '1') else 
        read2_V_2_i_reg_2150;
    p_4_3_i_fu_966_p3 <= 
        read2_V_1_3_i_fu_961_p2 when (tmp_175_reg_2156(0) = '1') else 
        read2_V_3_i_reg_2161;
    p_4_4_i_fu_991_p3 <= 
        read2_V_1_4_i_fu_986_p2 when (tmp_176_reg_2167(0) = '1') else 
        read2_V_4_i_reg_2172;
    p_4_5_i_fu_1002_p3 <= 
        read2_V_1_5_i_fu_997_p2 when (tmp_177_reg_2178(0) = '1') else 
        read2_V_5_i_reg_2183;
    p_4_6_i_fu_1013_p3 <= 
        read2_V_1_6_i_fu_1008_p2 when (tmp_178_reg_2189(0) = '1') else 
        read2_V_6_i_reg_2194;
    p_4_7_i_fu_1038_p3 <= 
        read2_V_1_7_i_fu_1033_p2 when (tmp_179_reg_2200(0) = '1') else 
        read2_V_7_i_reg_2205;
    p_4_8_i_fu_1063_p3 <= 
        read2_V_1_8_i_fu_1058_p2 when (tmp_180_reg_2211(0) = '1') else 
        read2_V_8_i_reg_2216;
    p_4_9_i_fu_1088_p3 <= 
        read2_V_1_9_i_fu_1083_p2 when (tmp_181_reg_2222(0) = '1') else 
        read2_V_9_i_reg_2227;
    p_4_i_404_fu_1401_p3 <= 
        ap_const_lv16_1 when (tmp_81_4_i_fu_1396_p2(0) = '1') else 
        p_4_4_i_reg_2323;
    p_4_i_407_fu_1113_p3 <= 
        read2_V_1_i_406_fu_1108_p2 when (tmp_182_reg_2233(0) = '1') else 
        read2_V_10_i_reg_2238;
    p_4_i_fu_919_p3 <= 
        read2_V_1_i_fu_914_p2 when (tmp_172_reg_2123(0) = '1') else 
        read2_V_i_reg_2128;
        p_5_10_i_fu_1534_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_10_i_reg_2365),32));

        p_5_11_i_fu_1550_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_11_i_reg_2371),32));

        p_5_12_i_fu_1566_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_12_i_reg_2377),32));

        p_5_13_i_fu_1582_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_13_i_reg_2383),32));

        p_5_14_i_fu_1598_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_14_i_reg_2389),32));

        p_5_1_i_fu_1347_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_i_fu_1340_p3),32));

        p_5_2_i_fu_1364_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_2_i_reg_2311),32));

        p_5_3_i_fu_1380_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_3_i_reg_2317),32));

        p_5_4_i_fu_1408_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_4_i_404_fu_1401_p3),32));

        p_5_5_i_fu_1437_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_5_i_405_fu_1430_p3),32));

        p_5_6_i_fu_1454_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_6_i_reg_2335),32));

        p_5_7_i_fu_1470_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_7_i_reg_2341),32));

        p_5_8_i_fu_1486_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_8_i_reg_2347),32));

        p_5_9_i_fu_1502_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_9_i_reg_2353),32));

    p_5_i_405_fu_1430_p3 <= 
        ap_const_lv16_1 when (tmp_81_5_i_fu_1425_p2(0) = '1') else 
        p_4_5_i_reg_2329;
        p_5_i_410_fu_1518_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_i_409_reg_2359),32));

        p_5_i_fu_1318_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_i_fu_1311_p3),32));

    p_6_i_fu_1025_p3 <= 
        ap_const_lv16_1 when (tmp_81_6_i_fu_1019_p2(0) = '1') else 
        p_4_6_i_fu_1013_p3;
    p_7_i_fu_1050_p3 <= 
        ap_const_lv16_1 when (tmp_81_7_i_fu_1044_p2(0) = '1') else 
        p_4_7_i_fu_1038_p3;
    p_8_i_fu_1075_p3 <= 
        ap_const_lv16_1 when (tmp_81_8_i_fu_1069_p2(0) = '1') else 
        p_4_8_i_fu_1063_p3;
    p_9_i_fu_1100_p3 <= 
        ap_const_lv16_1 when (tmp_81_9_i_fu_1094_p2(0) = '1') else 
        p_4_9_i_fu_1088_p3;
    p_i_409_fu_1125_p3 <= 
        ap_const_lv16_1 when (tmp_81_i_408_fu_1119_p2(0) = '1') else 
        p_4_i_407_fu_1113_p3;
    p_i_fu_1311_p3 <= 
        ap_const_lv16_1 when (tmp_81_i_fu_1306_p2(0) = '1') else 
        p_4_i_reg_2299;
    read2_V_1_10_i_fu_1133_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_11_i_reg_2249));
    read2_V_1_11_i_fu_1158_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_12_i_reg_2260));
    read2_V_1_12_i_fu_1183_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_13_i_reg_2271));
    read2_V_1_13_i_fu_1208_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_14_i_reg_2282));
    read2_V_1_14_i_fu_1233_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_15_i_reg_2293));
    read2_V_1_1_i_fu_925_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_i_403_reg_2139));
    read2_V_1_2_i_fu_936_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_2_i_reg_2150));
    read2_V_1_3_i_fu_961_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_3_i_reg_2161));
    read2_V_1_4_i_fu_986_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_4_i_reg_2172));
    read2_V_1_5_i_fu_997_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_5_i_reg_2183));
    read2_V_1_6_i_fu_1008_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_6_i_reg_2194));
    read2_V_1_7_i_fu_1033_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_7_i_reg_2205));
    read2_V_1_8_i_fu_1058_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_8_i_reg_2216));
    read2_V_1_9_i_fu_1083_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_9_i_reg_2227));
    read2_V_1_i_406_fu_1108_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_10_i_reg_2238));
    read2_V_1_i_fu_914_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_i_reg_2128));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sum_0_V_fu_1328_p3 <= 
        p_5_i_fu_1318_p1 when (tmp_61_i_reg_1934_pp0_iter4_reg(0) = '1') else 
        tmp_86_i_fu_1322_p2;
    sum_10_V_fu_1527_p3 <= 
        p_5_i_410_fu_1518_p1 when (tmp_61_i_reg_1934_pp0_iter4_reg(0) = '1') else 
        tmp_86_i_411_fu_1521_p2;
    sum_11_V_fu_1543_p3 <= 
        p_5_10_i_fu_1534_p1 when (tmp_61_i_reg_1934_pp0_iter4_reg(0) = '1') else 
        tmp_86_10_i_fu_1537_p2;
    sum_12_V_fu_1559_p3 <= 
        p_5_11_i_fu_1550_p1 when (tmp_61_i_reg_1934_pp0_iter4_reg(0) = '1') else 
        tmp_86_11_i_fu_1553_p2;
    sum_13_V_fu_1575_p3 <= 
        p_5_12_i_fu_1566_p1 when (tmp_61_i_reg_1934_pp0_iter4_reg(0) = '1') else 
        tmp_86_12_i_fu_1569_p2;
    sum_14_V_fu_1591_p3 <= 
        p_5_13_i_fu_1582_p1 when (tmp_61_i_reg_1934_pp0_iter4_reg(0) = '1') else 
        tmp_86_13_i_fu_1585_p2;
    sum_15_V_fu_1607_p3 <= 
        p_5_14_i_fu_1598_p1 when (tmp_61_i_reg_1934_pp0_iter4_reg(0) = '1') else 
        tmp_86_14_i_fu_1601_p2;
    sum_1_V_fu_1357_p3 <= 
        p_5_1_i_fu_1347_p1 when (tmp_61_i_reg_1934_pp0_iter4_reg(0) = '1') else 
        tmp_86_1_i_fu_1351_p2;
    sum_2_V_fu_1373_p3 <= 
        p_5_2_i_fu_1364_p1 when (tmp_61_i_reg_1934_pp0_iter4_reg(0) = '1') else 
        tmp_86_2_i_fu_1367_p2;
    sum_3_V_fu_1389_p3 <= 
        p_5_3_i_fu_1380_p1 when (tmp_61_i_reg_1934_pp0_iter4_reg(0) = '1') else 
        tmp_86_3_i_fu_1383_p2;
    sum_4_V_fu_1418_p3 <= 
        p_5_4_i_fu_1408_p1 when (tmp_61_i_reg_1934_pp0_iter4_reg(0) = '1') else 
        tmp_86_4_i_fu_1412_p2;
    sum_5_V_fu_1447_p3 <= 
        p_5_5_i_fu_1437_p1 when (tmp_61_i_reg_1934_pp0_iter4_reg(0) = '1') else 
        tmp_86_5_i_fu_1441_p2;
    sum_6_V_fu_1463_p3 <= 
        p_5_6_i_fu_1454_p1 when (tmp_61_i_reg_1934_pp0_iter4_reg(0) = '1') else 
        tmp_86_6_i_fu_1457_p2;
    sum_7_V_fu_1479_p3 <= 
        p_5_7_i_fu_1470_p1 when (tmp_61_i_reg_1934_pp0_iter4_reg(0) = '1') else 
        tmp_86_7_i_fu_1473_p2;
    sum_8_V_fu_1495_p3 <= 
        p_5_8_i_fu_1486_p1 when (tmp_61_i_reg_1934_pp0_iter4_reg(0) = '1') else 
        tmp_86_8_i_fu_1489_p2;
    sum_9_V_fu_1511_p3 <= 
        p_5_9_i_fu_1502_p1 when (tmp_61_i_reg_1934_pp0_iter4_reg(0) = '1') else 
        tmp_86_9_i_fu_1505_p2;

    sum_V_V_blk_n_assign_proc : process(sum_V_V_full_n, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0, tmp_62_i_reg_1954_pp0_iter5_reg)
    begin
        if (((tmp_62_i_reg_1954_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            sum_V_V_blk_n <= sum_V_V_full_n;
        else 
            sum_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    sum_V_V_din <= std_logic_vector(unsigned(tmp7_reg_2405) + unsigned(tmp_fu_1797_p2));

    sum_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter6, tmp_62_i_reg_1954_pp0_iter5_reg, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_62_i_reg_1954_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            sum_V_V_write <= ap_const_logic_1;
        else 
            sum_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp10_fu_1761_p2 <= std_logic_vector(unsigned(sum_10_V_fu_1527_p3) + unsigned(sum_11_V_fu_1543_p3));
    tmp11_fu_1785_p2 <= std_logic_vector(unsigned(tmp13_fu_1779_p2) + unsigned(tmp12_fu_1773_p2));
    tmp12_fu_1773_p2 <= std_logic_vector(unsigned(sum_12_V_fu_1559_p3) + unsigned(sum_13_V_fu_1575_p3));
    tmp13_fu_1779_p2 <= std_logic_vector(unsigned(sum_14_V_fu_1591_p3) + unsigned(sum_15_V_fu_1607_p3));
    tmp1_fu_1731_p2 <= std_logic_vector(unsigned(tmp3_fu_1725_p2) + unsigned(tmp2_fu_1719_p2));
    tmp2_fu_1719_p2 <= std_logic_vector(unsigned(sum_0_V_fu_1328_p3) + unsigned(sum_1_V_fu_1357_p3));
    tmp3_fu_1725_p2 <= std_logic_vector(unsigned(sum_2_V_fu_1373_p3) + unsigned(sum_3_V_fu_1389_p3));
    tmp4_fu_1749_p2 <= std_logic_vector(unsigned(tmp6_fu_1743_p2) + unsigned(tmp5_fu_1737_p2));
    tmp5_fu_1737_p2 <= std_logic_vector(unsigned(sum_4_V_fu_1418_p3) + unsigned(sum_5_V_fu_1447_p3));
    tmp6_fu_1743_p2 <= std_logic_vector(unsigned(sum_6_V_fu_1463_p3) + unsigned(sum_7_V_fu_1479_p3));
    tmp7_fu_1791_p2 <= std_logic_vector(unsigned(tmp11_fu_1785_p2) + unsigned(tmp8_fu_1767_p2));
    tmp8_fu_1767_p2 <= std_logic_vector(unsigned(tmp10_fu_1761_p2) + unsigned(tmp9_fu_1755_p2));
    tmp9_fu_1755_p2 <= std_logic_vector(unsigned(sum_8_V_fu_1495_p3) + unsigned(sum_9_V_fu_1511_p3));
    tmp_171_fu_328_p1 <= in_quant_V_V_dout(64 - 1 downto 0);
    tmp_61_i_fu_311_p2 <= "1" when (l_i_mid2_fu_303_p3 = ap_const_lv32_0) else "0";
    tmp_62_i_fu_317_p2 <= "1" when (l_i_mid2_fu_303_p3 = tmp_i_reg_1915) else "0";
    tmp_81_10_i_fu_1144_p2 <= "1" when (p_4_10_i_fu_1138_p3 = ap_const_lv16_0) else "0";
    tmp_81_11_i_fu_1169_p2 <= "1" when (p_4_11_i_fu_1163_p3 = ap_const_lv16_0) else "0";
    tmp_81_12_i_fu_1194_p2 <= "1" when (p_4_12_i_fu_1188_p3 = ap_const_lv16_0) else "0";
    tmp_81_13_i_fu_1219_p2 <= "1" when (p_4_13_i_fu_1213_p3 = ap_const_lv16_0) else "0";
    tmp_81_14_i_fu_1244_p2 <= "1" when (p_4_14_i_fu_1238_p3 = ap_const_lv16_0) else "0";
    tmp_81_1_i_fu_1335_p2 <= "1" when (p_4_1_i_reg_2305 = ap_const_lv16_0) else "0";
    tmp_81_2_i_fu_947_p2 <= "1" when (p_4_2_i_fu_941_p3 = ap_const_lv16_0) else "0";
    tmp_81_3_i_fu_972_p2 <= "1" when (p_4_3_i_fu_966_p3 = ap_const_lv16_0) else "0";
    tmp_81_4_i_fu_1396_p2 <= "1" when (p_4_4_i_reg_2323 = ap_const_lv16_0) else "0";
    tmp_81_5_i_fu_1425_p2 <= "1" when (p_4_5_i_reg_2329 = ap_const_lv16_0) else "0";
    tmp_81_6_i_fu_1019_p2 <= "1" when (p_4_6_i_fu_1013_p3 = ap_const_lv16_0) else "0";
    tmp_81_7_i_fu_1044_p2 <= "1" when (p_4_7_i_fu_1038_p3 = ap_const_lv16_0) else "0";
    tmp_81_8_i_fu_1069_p2 <= "1" when (p_4_8_i_fu_1063_p3 = ap_const_lv16_0) else "0";
    tmp_81_9_i_fu_1094_p2 <= "1" when (p_4_9_i_fu_1088_p3 = ap_const_lv16_0) else "0";
    tmp_81_i_408_fu_1119_p2 <= "1" when (p_4_i_407_fu_1113_p3 = ap_const_lv16_0) else "0";
    tmp_81_i_fu_1306_p2 <= "1" when (p_4_i_reg_2299 = ap_const_lv16_0) else "0";
    tmp_86_10_i_fu_1537_p2 <= std_logic_vector(signed(p_5_10_i_fu_1534_p1) + signed(sum_11_V_1_fu_180));
    tmp_86_11_i_fu_1553_p2 <= std_logic_vector(signed(p_5_11_i_fu_1550_p1) + signed(sum_12_V_1_fu_184));
    tmp_86_12_i_fu_1569_p2 <= std_logic_vector(signed(p_5_12_i_fu_1566_p1) + signed(sum_13_V_1_fu_188));
    tmp_86_13_i_fu_1585_p2 <= std_logic_vector(signed(p_5_13_i_fu_1582_p1) + signed(sum_14_V_1_fu_192));
    tmp_86_14_i_fu_1601_p2 <= std_logic_vector(signed(p_5_14_i_fu_1598_p1) + signed(sum_15_V_1_fu_196));
    tmp_86_1_i_fu_1351_p2 <= std_logic_vector(signed(p_5_1_i_fu_1347_p1) + signed(sum_1_V_1_fu_140));
    tmp_86_2_i_fu_1367_p2 <= std_logic_vector(signed(p_5_2_i_fu_1364_p1) + signed(sum_2_V_1_fu_144));
    tmp_86_3_i_fu_1383_p2 <= std_logic_vector(signed(p_5_3_i_fu_1380_p1) + signed(sum_3_V_1_fu_148));
    tmp_86_4_i_fu_1412_p2 <= std_logic_vector(signed(p_5_4_i_fu_1408_p1) + signed(sum_4_V_1_fu_152));
    tmp_86_5_i_fu_1441_p2 <= std_logic_vector(signed(p_5_5_i_fu_1437_p1) + signed(sum_5_V_1_fu_156));
    tmp_86_6_i_fu_1457_p2 <= std_logic_vector(signed(p_5_6_i_fu_1454_p1) + signed(sum_6_V_1_fu_160));
    tmp_86_7_i_fu_1473_p2 <= std_logic_vector(signed(p_5_7_i_fu_1470_p1) + signed(sum_7_V_1_fu_164));
    tmp_86_8_i_fu_1489_p2 <= std_logic_vector(signed(p_5_8_i_fu_1486_p1) + signed(sum_8_V_1_fu_168));
    tmp_86_9_i_fu_1505_p2 <= std_logic_vector(signed(p_5_9_i_fu_1502_p1) + signed(sum_9_V_1_fu_172));
    tmp_86_i_411_fu_1521_p2 <= std_logic_vector(signed(p_5_i_410_fu_1518_p1) + signed(sum_10_V_1_fu_176));
    tmp_86_i_fu_1322_p2 <= std_logic_vector(signed(p_5_i_fu_1318_p1) + signed(sum_0_V_1_fu_136));
    tmp_fu_1797_p2 <= std_logic_vector(unsigned(tmp4_reg_2400) + unsigned(tmp1_reg_2395));
    tmp_i_fu_270_p2 <= std_logic_vector(unsigned(tmp_V_26_reg_1903) + unsigned(ap_const_lv32_FFFFFFFF));
end behav;
