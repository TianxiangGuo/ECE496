-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity subtract_max is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    in_sub_max_c_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_sub_max_c_V_V_empty_n : IN STD_LOGIC;
    in_sub_max_c_V_V_read : OUT STD_LOGIC;
    in_sub_max_r_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_sub_max_r_V_V_empty_n : IN STD_LOGIC;
    in_sub_max_r_V_V_read : OUT STD_LOGIC;
    in_proc_1_iter_r_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_proc_1_iter_r_V_V_full_n : IN STD_LOGIC;
    in_proc_1_iter_r_V_V_write : OUT STD_LOGIC;
    in_proc_1_iter_c_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_proc_1_iter_c_V_V_full_n : IN STD_LOGIC;
    in_proc_1_iter_c_V_V_write : OUT STD_LOGIC;
    max_input_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    max_input_V_V_empty_n : IN STD_LOGIC;
    max_input_V_V_read : OUT STD_LOGIC;
    in_sub_max_V_V_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    in_sub_max_V_V_empty_n : IN STD_LOGIC;
    in_sub_max_V_V_read : OUT STD_LOGIC;
    in_proc_1_V_V_din : OUT STD_LOGIC_VECTOR (511 downto 0);
    in_proc_1_V_V_full_n : IN STD_LOGIC;
    in_proc_1_V_V_write : OUT STD_LOGIC );
end;


architecture behav of subtract_max is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_19F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal in_sub_max_c_V_V_blk_n : STD_LOGIC;
    signal in_sub_max_r_V_V_blk_n : STD_LOGIC;
    signal in_proc_1_iter_r_V_V_blk_n : STD_LOGIC;
    signal in_proc_1_iter_c_V_V_blk_n : STD_LOGIC;
    signal max_input_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_i_32_reg_755 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_sub_max_V_V_blk_n : STD_LOGIC;
    signal exitcond_flatten_reg_746 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_proc_1_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_746_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_167 : STD_LOGIC_VECTOR (63 downto 0);
    signal iter_i_reg_178 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_5_reg_730 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_V_4_reg_736 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_fu_195_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound_reg_741 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal exitcond_flatten_fu_201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar_flatten_next_fu_206_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_i_32_fu_225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal iter_fu_231_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_242_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_reg_764 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_1_i_reg_770 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_2_i_reg_776 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_3_i_reg_782 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_4_i_reg_788 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_5_i_reg_794 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_6_i_reg_800 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_7_i_reg_806 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_8_i_reg_812 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_9_i_reg_818 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_i_reg_824 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_10_i_reg_830 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_16_i_reg_836 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_13_i_reg_842 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_14_i_reg_848 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_15_i_reg_854 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_V_fu_116 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_fu_195_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_fu_195_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_i2_fu_212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal iter_i_mid2_fu_217_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_i_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_2_i_fu_404_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_1_i_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_2_1_i_fu_422_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_2_i_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_2_2_i_fu_440_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_3_i_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_2_3_i_fu_458_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_4_i_fu_471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_2_4_i_fu_476_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_5_i_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_2_5_i_fu_494_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_6_i_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_2_6_i_fu_512_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_7_i_fu_525_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_2_7_i_fu_530_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_8_i_fu_543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_2_8_i_fu_548_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_9_i_fu_561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_2_9_i_fu_566_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_i_30_fu_579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_2_i_31_fu_584_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_10_i_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_2_10_i_fu_602_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_11_i_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_2_11_i_fu_620_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_12_i_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_2_12_i_fu_638_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_13_i_fu_651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_2_13_i_fu_656_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_14_i_fu_669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_2_14_i_fu_674_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_679_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_661_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_643_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_625_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_607_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_589_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_571_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_553_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_535_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_517_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_499_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_481_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_463_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_445_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_427_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_409_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal bound_fu_195_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound_fu_195_p10 : STD_LOGIC_VECTOR (63 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_167_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_201_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_reg_167 <= indvar_flatten_next_fu_206_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                indvar_flatten_reg_167 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    iter_i_reg_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_201_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                iter_i_reg_178 <= iter_fu_231_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                iter_i_reg_178 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                bound_reg_741 <= bound_fu_195_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_flatten_reg_746 <= exitcond_flatten_fu_201_p2;
                exitcond_flatten_reg_746_pp0_iter1_reg <= exitcond_flatten_reg_746;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_746 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Result_10_i_reg_830 <= in_sub_max_V_V_dout(383 downto 352);
                p_Result_13_i_reg_842 <= in_sub_max_V_V_dout(447 downto 416);
                p_Result_14_i_reg_848 <= in_sub_max_V_V_dout(479 downto 448);
                p_Result_15_i_reg_854 <= in_sub_max_V_V_dout(511 downto 480);
                p_Result_16_i_reg_836 <= in_sub_max_V_V_dout(415 downto 384);
                p_Result_1_i_reg_770 <= in_sub_max_V_V_dout(63 downto 32);
                p_Result_2_i_reg_776 <= in_sub_max_V_V_dout(95 downto 64);
                p_Result_3_i_reg_782 <= in_sub_max_V_V_dout(127 downto 96);
                p_Result_4_i_reg_788 <= in_sub_max_V_V_dout(159 downto 128);
                p_Result_5_i_reg_794 <= in_sub_max_V_V_dout(191 downto 160);
                p_Result_6_i_reg_800 <= in_sub_max_V_V_dout(223 downto 192);
                p_Result_7_i_reg_806 <= in_sub_max_V_V_dout(255 downto 224);
                p_Result_8_i_reg_812 <= in_sub_max_V_V_dout(287 downto 256);
                p_Result_9_i_reg_818 <= in_sub_max_V_V_dout(319 downto 288);
                p_Result_i_reg_824 <= in_sub_max_V_V_dout(351 downto 320);
                tmp_15_reg_764 <= tmp_15_fu_242_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_proc_1_iter_c_V_V_full_n = ap_const_logic_0) or (in_proc_1_iter_r_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_empty_n = ap_const_logic_0) or (in_sub_max_c_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_V_4_reg_736 <= in_sub_max_r_V_V_dout;
                tmp_V_5_reg_730 <= in_sub_max_c_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_32_reg_755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_V_fu_116 <= max_input_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_201_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_i_32_reg_755 <= tmp_i_32_fu_225_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, in_sub_max_c_V_V_empty_n, in_sub_max_r_V_V_empty_n, in_proc_1_iter_r_V_V_full_n, in_proc_1_iter_c_V_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, exitcond_flatten_fu_201_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((in_proc_1_iter_c_V_V_full_n = ap_const_logic_0) or (in_proc_1_iter_r_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_empty_n = ap_const_logic_0) or (in_sub_max_c_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond_flatten_fu_201_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((exitcond_flatten_fu_201_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(max_input_V_V_empty_n, in_sub_max_V_V_empty_n, in_proc_1_V_V_full_n, ap_enable_reg_pp0_iter1, tmp_i_32_reg_755, exitcond_flatten_reg_746, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_746_pp0_iter1_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_flatten_reg_746 = ap_const_lv1_0) and (in_sub_max_V_V_empty_n = ap_const_logic_0)) or ((tmp_i_32_reg_755 = ap_const_lv1_1) and (max_input_V_V_empty_n = ap_const_logic_0)))) or ((exitcond_flatten_reg_746_pp0_iter1_reg = ap_const_lv1_0) and (in_proc_1_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(max_input_V_V_empty_n, in_sub_max_V_V_empty_n, in_proc_1_V_V_full_n, ap_enable_reg_pp0_iter1, tmp_i_32_reg_755, exitcond_flatten_reg_746, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_746_pp0_iter1_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_flatten_reg_746 = ap_const_lv1_0) and (in_sub_max_V_V_empty_n = ap_const_logic_0)) or ((tmp_i_32_reg_755 = ap_const_lv1_1) and (max_input_V_V_empty_n = ap_const_logic_0)))) or ((exitcond_flatten_reg_746_pp0_iter1_reg = ap_const_lv1_0) and (in_proc_1_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(max_input_V_V_empty_n, in_sub_max_V_V_empty_n, in_proc_1_V_V_full_n, ap_enable_reg_pp0_iter1, tmp_i_32_reg_755, exitcond_flatten_reg_746, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_746_pp0_iter1_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_flatten_reg_746 = ap_const_lv1_0) and (in_sub_max_V_V_empty_n = ap_const_logic_0)) or ((tmp_i_32_reg_755 = ap_const_lv1_1) and (max_input_V_V_empty_n = ap_const_logic_0)))) or ((exitcond_flatten_reg_746_pp0_iter1_reg = ap_const_lv1_0) and (in_proc_1_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, in_sub_max_c_V_V_empty_n, in_sub_max_r_V_V_empty_n, in_proc_1_iter_r_V_V_full_n, in_proc_1_iter_c_V_V_full_n)
    begin
                ap_block_state1 <= ((in_proc_1_iter_c_V_V_full_n = ap_const_logic_0) or (in_proc_1_iter_r_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_empty_n = ap_const_logic_0) or (in_sub_max_c_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(max_input_V_V_empty_n, in_sub_max_V_V_empty_n, tmp_i_32_reg_755, exitcond_flatten_reg_746)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((exitcond_flatten_reg_746 = ap_const_lv1_0) and (in_sub_max_V_V_empty_n = ap_const_logic_0)) or ((tmp_i_32_reg_755 = ap_const_lv1_1) and (max_input_V_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state5_pp0_stage0_iter2_assign_proc : process(in_proc_1_V_V_full_n, exitcond_flatten_reg_746_pp0_iter1_reg)
    begin
                ap_block_state5_pp0_stage0_iter2 <= ((exitcond_flatten_reg_746_pp0_iter1_reg = ap_const_lv1_0) and (in_proc_1_V_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_flatten_fu_201_p2)
    begin
        if ((exitcond_flatten_fu_201_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    bound_fu_195_p0 <= bound_fu_195_p00(32 - 1 downto 0);
    bound_fu_195_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_5_reg_730),64));
    bound_fu_195_p1 <= bound_fu_195_p10(32 - 1 downto 0);
    bound_fu_195_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_4_reg_736),64));
    bound_fu_195_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound_fu_195_p0) * unsigned(bound_fu_195_p1), 64));
    exitcond_flatten_fu_201_p2 <= "1" when (indvar_flatten_reg_167 = bound_reg_741) else "0";
    exitcond_i2_fu_212_p2 <= "1" when (iter_i_reg_178 = tmp_V_5_reg_730) else "0";

    in_proc_1_V_V_blk_n_assign_proc : process(in_proc_1_V_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_flatten_reg_746_pp0_iter1_reg)
    begin
        if (((exitcond_flatten_reg_746_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            in_proc_1_V_V_blk_n <= in_proc_1_V_V_full_n;
        else 
            in_proc_1_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_proc_1_V_V_din <= (((((((((((((((tmp_14_fu_679_p3 & tmp_13_fu_661_p3) & tmp_12_fu_643_p3) & tmp_11_fu_625_p3) & tmp_10_fu_607_p3) & tmp_s_fu_589_p3) & tmp_9_fu_571_p3) & tmp_8_fu_553_p3) & tmp_7_fu_535_p3) & tmp_6_fu_517_p3) & tmp_5_fu_499_p3) & tmp_4_fu_481_p3) & tmp_3_fu_463_p3) & tmp_2_fu_445_p3) & tmp_1_fu_427_p3) & tmp_fu_409_p3);

    in_proc_1_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten_reg_746_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_flatten_reg_746_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in_proc_1_V_V_write <= ap_const_logic_1;
        else 
            in_proc_1_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    in_proc_1_iter_c_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_proc_1_iter_c_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_proc_1_iter_c_V_V_blk_n <= in_proc_1_iter_c_V_V_full_n;
        else 
            in_proc_1_iter_c_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_proc_1_iter_c_V_V_din <= in_sub_max_c_V_V_dout;

    in_proc_1_iter_c_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_sub_max_c_V_V_empty_n, in_sub_max_r_V_V_empty_n, in_proc_1_iter_r_V_V_full_n, in_proc_1_iter_c_V_V_full_n)
    begin
        if ((not(((in_proc_1_iter_c_V_V_full_n = ap_const_logic_0) or (in_proc_1_iter_r_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_empty_n = ap_const_logic_0) or (in_sub_max_c_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_proc_1_iter_c_V_V_write <= ap_const_logic_1;
        else 
            in_proc_1_iter_c_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    in_proc_1_iter_r_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_proc_1_iter_r_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_proc_1_iter_r_V_V_blk_n <= in_proc_1_iter_r_V_V_full_n;
        else 
            in_proc_1_iter_r_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_proc_1_iter_r_V_V_din <= in_sub_max_r_V_V_dout;

    in_proc_1_iter_r_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_sub_max_c_V_V_empty_n, in_sub_max_r_V_V_empty_n, in_proc_1_iter_r_V_V_full_n, in_proc_1_iter_c_V_V_full_n)
    begin
        if ((not(((in_proc_1_iter_c_V_V_full_n = ap_const_logic_0) or (in_proc_1_iter_r_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_empty_n = ap_const_logic_0) or (in_sub_max_c_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_proc_1_iter_r_V_V_write <= ap_const_logic_1;
        else 
            in_proc_1_iter_r_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    in_sub_max_V_V_blk_n_assign_proc : process(in_sub_max_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_746)
    begin
        if (((exitcond_flatten_reg_746 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_sub_max_V_V_blk_n <= in_sub_max_V_V_empty_n;
        else 
            in_sub_max_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_sub_max_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_746, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_flatten_reg_746 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in_sub_max_V_V_read <= ap_const_logic_1;
        else 
            in_sub_max_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    in_sub_max_c_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_sub_max_c_V_V_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_sub_max_c_V_V_blk_n <= in_sub_max_c_V_V_empty_n;
        else 
            in_sub_max_c_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_sub_max_c_V_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_sub_max_c_V_V_empty_n, in_sub_max_r_V_V_empty_n, in_proc_1_iter_r_V_V_full_n, in_proc_1_iter_c_V_V_full_n)
    begin
        if ((not(((in_proc_1_iter_c_V_V_full_n = ap_const_logic_0) or (in_proc_1_iter_r_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_empty_n = ap_const_logic_0) or (in_sub_max_c_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_sub_max_c_V_V_read <= ap_const_logic_1;
        else 
            in_sub_max_c_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    in_sub_max_r_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_sub_max_r_V_V_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_sub_max_r_V_V_blk_n <= in_sub_max_r_V_V_empty_n;
        else 
            in_sub_max_r_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_sub_max_r_V_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_sub_max_c_V_V_empty_n, in_sub_max_r_V_V_empty_n, in_proc_1_iter_r_V_V_full_n, in_proc_1_iter_c_V_V_full_n)
    begin
        if ((not(((in_proc_1_iter_c_V_V_full_n = ap_const_logic_0) or (in_proc_1_iter_r_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_empty_n = ap_const_logic_0) or (in_sub_max_c_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_sub_max_r_V_V_read <= ap_const_logic_1;
        else 
            in_sub_max_r_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next_fu_206_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_167) + unsigned(ap_const_lv64_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    iter_fu_231_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(iter_i_mid2_fu_217_p3));
    iter_i_mid2_fu_217_p3 <= 
        ap_const_lv32_0 when (exitcond_i2_fu_212_p2(0) = '1') else 
        iter_i_reg_178;

    max_input_V_V_blk_n_assign_proc : process(max_input_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_i_32_reg_755)
    begin
        if (((tmp_i_32_reg_755 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            max_input_V_V_blk_n <= max_input_V_V_empty_n;
        else 
            max_input_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    max_input_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_i_32_reg_755, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_i_32_reg_755 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            max_input_V_V_read <= ap_const_logic_1;
        else 
            max_input_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_2_10_i_fu_602_p2 <= std_logic_vector(unsigned(p_Result_10_i_reg_830) - unsigned(tmp_V_fu_116));
    ret_V_2_11_i_fu_620_p2 <= std_logic_vector(unsigned(p_Result_16_i_reg_836) - unsigned(tmp_V_fu_116));
    ret_V_2_12_i_fu_638_p2 <= std_logic_vector(unsigned(p_Result_13_i_reg_842) - unsigned(tmp_V_fu_116));
    ret_V_2_13_i_fu_656_p2 <= std_logic_vector(unsigned(p_Result_14_i_reg_848) - unsigned(tmp_V_fu_116));
    ret_V_2_14_i_fu_674_p2 <= std_logic_vector(unsigned(p_Result_15_i_reg_854) - unsigned(tmp_V_fu_116));
    ret_V_2_1_i_fu_422_p2 <= std_logic_vector(unsigned(p_Result_1_i_reg_770) - unsigned(tmp_V_fu_116));
    ret_V_2_2_i_fu_440_p2 <= std_logic_vector(unsigned(p_Result_2_i_reg_776) - unsigned(tmp_V_fu_116));
    ret_V_2_3_i_fu_458_p2 <= std_logic_vector(unsigned(p_Result_3_i_reg_782) - unsigned(tmp_V_fu_116));
    ret_V_2_4_i_fu_476_p2 <= std_logic_vector(unsigned(p_Result_4_i_reg_788) - unsigned(tmp_V_fu_116));
    ret_V_2_5_i_fu_494_p2 <= std_logic_vector(unsigned(p_Result_5_i_reg_794) - unsigned(tmp_V_fu_116));
    ret_V_2_6_i_fu_512_p2 <= std_logic_vector(unsigned(p_Result_6_i_reg_800) - unsigned(tmp_V_fu_116));
    ret_V_2_7_i_fu_530_p2 <= std_logic_vector(unsigned(p_Result_7_i_reg_806) - unsigned(tmp_V_fu_116));
    ret_V_2_8_i_fu_548_p2 <= std_logic_vector(unsigned(p_Result_8_i_reg_812) - unsigned(tmp_V_fu_116));
    ret_V_2_9_i_fu_566_p2 <= std_logic_vector(unsigned(p_Result_9_i_reg_818) - unsigned(tmp_V_fu_116));
    ret_V_2_i_31_fu_584_p2 <= std_logic_vector(unsigned(p_Result_i_reg_824) - unsigned(tmp_V_fu_116));
    ret_V_2_i_fu_404_p2 <= std_logic_vector(unsigned(tmp_15_reg_764) - unsigned(tmp_V_fu_116));
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_607_p3 <= 
        ap_const_lv32_80000000 when (tmp_19_10_i_fu_597_p2(0) = '1') else 
        ret_V_2_10_i_fu_602_p2;
    tmp_11_fu_625_p3 <= 
        ap_const_lv32_80000000 when (tmp_19_11_i_fu_615_p2(0) = '1') else 
        ret_V_2_11_i_fu_620_p2;
    tmp_12_fu_643_p3 <= 
        ap_const_lv32_80000000 when (tmp_19_12_i_fu_633_p2(0) = '1') else 
        ret_V_2_12_i_fu_638_p2;
    tmp_13_fu_661_p3 <= 
        ap_const_lv32_80000000 when (tmp_19_13_i_fu_651_p2(0) = '1') else 
        ret_V_2_13_i_fu_656_p2;
    tmp_14_fu_679_p3 <= 
        ap_const_lv32_80000000 when (tmp_19_14_i_fu_669_p2(0) = '1') else 
        ret_V_2_14_i_fu_674_p2;
    tmp_15_fu_242_p1 <= in_sub_max_V_V_dout(32 - 1 downto 0);
    tmp_19_10_i_fu_597_p2 <= "1" when (p_Result_10_i_reg_830 = ap_const_lv32_80000000) else "0";
    tmp_19_11_i_fu_615_p2 <= "1" when (p_Result_16_i_reg_836 = ap_const_lv32_80000000) else "0";
    tmp_19_12_i_fu_633_p2 <= "1" when (p_Result_13_i_reg_842 = ap_const_lv32_80000000) else "0";
    tmp_19_13_i_fu_651_p2 <= "1" when (p_Result_14_i_reg_848 = ap_const_lv32_80000000) else "0";
    tmp_19_14_i_fu_669_p2 <= "1" when (p_Result_15_i_reg_854 = ap_const_lv32_80000000) else "0";
    tmp_19_1_i_fu_417_p2 <= "1" when (p_Result_1_i_reg_770 = ap_const_lv32_80000000) else "0";
    tmp_19_2_i_fu_435_p2 <= "1" when (p_Result_2_i_reg_776 = ap_const_lv32_80000000) else "0";
    tmp_19_3_i_fu_453_p2 <= "1" when (p_Result_3_i_reg_782 = ap_const_lv32_80000000) else "0";
    tmp_19_4_i_fu_471_p2 <= "1" when (p_Result_4_i_reg_788 = ap_const_lv32_80000000) else "0";
    tmp_19_5_i_fu_489_p2 <= "1" when (p_Result_5_i_reg_794 = ap_const_lv32_80000000) else "0";
    tmp_19_6_i_fu_507_p2 <= "1" when (p_Result_6_i_reg_800 = ap_const_lv32_80000000) else "0";
    tmp_19_7_i_fu_525_p2 <= "1" when (p_Result_7_i_reg_806 = ap_const_lv32_80000000) else "0";
    tmp_19_8_i_fu_543_p2 <= "1" when (p_Result_8_i_reg_812 = ap_const_lv32_80000000) else "0";
    tmp_19_9_i_fu_561_p2 <= "1" when (p_Result_9_i_reg_818 = ap_const_lv32_80000000) else "0";
    tmp_19_i_30_fu_579_p2 <= "1" when (p_Result_i_reg_824 = ap_const_lv32_80000000) else "0";
    tmp_19_i_fu_399_p2 <= "1" when (tmp_15_reg_764 = ap_const_lv32_80000000) else "0";
    tmp_1_fu_427_p3 <= 
        ap_const_lv32_80000000 when (tmp_19_1_i_fu_417_p2(0) = '1') else 
        ret_V_2_1_i_fu_422_p2;
    tmp_2_fu_445_p3 <= 
        ap_const_lv32_80000000 when (tmp_19_2_i_fu_435_p2(0) = '1') else 
        ret_V_2_2_i_fu_440_p2;
    tmp_3_fu_463_p3 <= 
        ap_const_lv32_80000000 when (tmp_19_3_i_fu_453_p2(0) = '1') else 
        ret_V_2_3_i_fu_458_p2;
    tmp_4_fu_481_p3 <= 
        ap_const_lv32_80000000 when (tmp_19_4_i_fu_471_p2(0) = '1') else 
        ret_V_2_4_i_fu_476_p2;
    tmp_5_fu_499_p3 <= 
        ap_const_lv32_80000000 when (tmp_19_5_i_fu_489_p2(0) = '1') else 
        ret_V_2_5_i_fu_494_p2;
    tmp_6_fu_517_p3 <= 
        ap_const_lv32_80000000 when (tmp_19_6_i_fu_507_p2(0) = '1') else 
        ret_V_2_6_i_fu_512_p2;
    tmp_7_fu_535_p3 <= 
        ap_const_lv32_80000000 when (tmp_19_7_i_fu_525_p2(0) = '1') else 
        ret_V_2_7_i_fu_530_p2;
    tmp_8_fu_553_p3 <= 
        ap_const_lv32_80000000 when (tmp_19_8_i_fu_543_p2(0) = '1') else 
        ret_V_2_8_i_fu_548_p2;
    tmp_9_fu_571_p3 <= 
        ap_const_lv32_80000000 when (tmp_19_9_i_fu_561_p2(0) = '1') else 
        ret_V_2_9_i_fu_566_p2;
    tmp_fu_409_p3 <= 
        ap_const_lv32_80000000 when (tmp_19_i_fu_399_p2(0) = '1') else 
        ret_V_2_i_fu_404_p2;
    tmp_i_32_fu_225_p2 <= "1" when (iter_i_mid2_fu_217_p3 = ap_const_lv32_0) else "0";
    tmp_s_fu_589_p3 <= 
        ap_const_lv32_80000000 when (tmp_19_i_30_fu_579_p2(0) = '1') else 
        ret_V_2_i_31_fu_584_p2;
end behav;
