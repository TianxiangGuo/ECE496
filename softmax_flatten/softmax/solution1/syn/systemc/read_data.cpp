// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "read_data.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic read_data::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic read_data::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> read_data::ap_ST_fsm_state1 = "1";
const sc_lv<3> read_data::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> read_data::ap_ST_fsm_state4 = "100";
const bool read_data::ap_const_boolean_1 = true;
const sc_lv<32> read_data::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> read_data::ap_const_lv1_0 = "0";
const sc_lv<1> read_data::ap_const_lv1_1 = "1";
const sc_lv<2> read_data::ap_const_lv2_0 = "00";
const sc_lv<2> read_data::ap_const_lv2_2 = "10";
const sc_lv<2> read_data::ap_const_lv2_3 = "11";
const sc_lv<2> read_data::ap_const_lv2_1 = "1";
const sc_lv<32> read_data::ap_const_lv32_1 = "1";
const bool read_data::ap_const_boolean_0 = false;
const sc_lv<60> read_data::ap_const_lv60_0 = "000000000000000000000000000000000000000000000000000000000000";
const sc_lv<28> read_data::ap_const_lv28_0 = "0000000000000000000000000000";
const sc_lv<32> read_data::ap_const_lv32_24 = "100100";
const sc_lv<32> read_data::ap_const_lv32_3F = "111111";
const sc_lv<29> read_data::ap_const_lv29_1FFFFFFF = "11111111111111111111111111111";
const sc_lv<60> read_data::ap_const_lv60_1 = "1";
const sc_lv<32> read_data::ap_const_lv32_20 = "100000";
const sc_lv<32> read_data::ap_const_lv32_40 = "1000000";
const sc_lv<32> read_data::ap_const_lv32_5F = "1011111";
const sc_lv<32> read_data::ap_const_lv32_60 = "1100000";
const sc_lv<32> read_data::ap_const_lv32_7F = "1111111";
const sc_lv<32> read_data::ap_const_lv32_80 = "10000000";
const sc_lv<32> read_data::ap_const_lv32_9F = "10011111";
const sc_lv<32> read_data::ap_const_lv32_A0 = "10100000";
const sc_lv<32> read_data::ap_const_lv32_BF = "10111111";
const sc_lv<32> read_data::ap_const_lv32_C0 = "11000000";
const sc_lv<32> read_data::ap_const_lv32_DF = "11011111";
const sc_lv<32> read_data::ap_const_lv32_E0 = "11100000";
const sc_lv<32> read_data::ap_const_lv32_FF = "11111111";
const sc_lv<32> read_data::ap_const_lv32_100 = "100000000";
const sc_lv<32> read_data::ap_const_lv32_11F = "100011111";
const sc_lv<32> read_data::ap_const_lv32_120 = "100100000";
const sc_lv<32> read_data::ap_const_lv32_13F = "100111111";
const sc_lv<32> read_data::ap_const_lv32_140 = "101000000";
const sc_lv<32> read_data::ap_const_lv32_15F = "101011111";
const sc_lv<32> read_data::ap_const_lv32_160 = "101100000";
const sc_lv<32> read_data::ap_const_lv32_17F = "101111111";
const sc_lv<32> read_data::ap_const_lv32_180 = "110000000";
const sc_lv<32> read_data::ap_const_lv32_19F = "110011111";
const sc_lv<32> read_data::ap_const_lv32_1A0 = "110100000";
const sc_lv<32> read_data::ap_const_lv32_1BF = "110111111";
const sc_lv<32> read_data::ap_const_lv32_1C0 = "111000000";
const sc_lv<32> read_data::ap_const_lv32_1DF = "111011111";
const sc_lv<32> read_data::ap_const_lv32_1E0 = "111100000";
const sc_lv<32> read_data::ap_const_lv32_1FF = "111111111";
const sc_lv<28> read_data::ap_const_lv28_1 = "1";
const sc_lv<32> read_data::ap_const_lv32_2 = "10";

read_data::read_data(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( in_V_data_V_0_vld_out );
    sensitive << ( max_input_V_V_full_n );
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_20_i_reg_769 );
    sensitive << ( exitcond_flatten_reg_736 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( in_V_data_V_0_vld_out );
    sensitive << ( max_input_V_V_full_n );
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_20_i_reg_769 );
    sensitive << ( exitcond_flatten_reg_736 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( in_V_data_V_0_vld_out );
    sensitive << ( max_input_V_V_full_n );
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_20_i_reg_769 );
    sensitive << ( exitcond_flatten_reg_736 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( in_V_data_V_0_vld_out );
    sensitive << ( in_write_n_V_V_full_n );
    sensitive << ( in_sub_max_r_V_V_full_n );
    sensitive << ( in_sub_max_c_V_V_full_n );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);
    sensitive << ( in_V_data_V_0_vld_out );
    sensitive << ( exitcond_flatten_fu_268_p2 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( max_input_V_V_full_n );
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( tmp_20_i_reg_769 );
    sensitive << ( exitcond_flatten_reg_736 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_268_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_bound_fu_262_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_262_p00 );

    SC_METHOD(thread_bound_fu_262_p00);
    sensitive << ( unrolled_iterations_fu_224_p4 );

    SC_METHOD(thread_bound_fu_262_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_262_p10 );

    SC_METHOD(thread_bound_fu_262_p10);
    sensitive << ( num_batches_fu_219_p1 );

    SC_METHOD(thread_bound_fu_262_p2);
    sensitive << ( bound_fu_262_p0 );
    sensitive << ( bound_fu_262_p1 );

    SC_METHOD(thread_exitcond2_fu_279_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( packet_i_reg_204 );
    sensitive << ( unrolled_iterations_reg_721 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_exitcond_flatten_fu_268_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( indvar_flatten_reg_193 );
    sensitive << ( bound_reg_731 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_V_data_V_0_ack_in);
    sensitive << ( in_V_data_V_0_state );

    SC_METHOD(thread_in_V_data_V_0_ack_out);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_data_V_0_vld_out );
    sensitive << ( in_write_n_V_V_full_n );
    sensitive << ( in_sub_max_r_V_V_full_n );
    sensitive << ( in_sub_max_c_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_V_data_V_0_data_out);
    sensitive << ( in_V_data_V_0_payload_A );
    sensitive << ( in_V_data_V_0_payload_B );
    sensitive << ( in_V_data_V_0_sel );

    SC_METHOD(thread_in_V_data_V_0_load_A);
    sensitive << ( in_V_data_V_0_sel_wr );
    sensitive << ( in_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_in_V_data_V_0_load_B);
    sensitive << ( in_V_data_V_0_sel_wr );
    sensitive << ( in_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_in_V_data_V_0_sel);
    sensitive << ( in_V_data_V_0_sel_rd );

    SC_METHOD(thread_in_V_data_V_0_state_cmp_full);
    sensitive << ( in_V_data_V_0_state );

    SC_METHOD(thread_in_V_data_V_0_vld_in);
    sensitive << ( in_r_TVALID );

    SC_METHOD(thread_in_V_data_V_0_vld_out);
    sensitive << ( in_V_data_V_0_state );

    SC_METHOD(thread_in_V_last_V_0_ack_out);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_data_V_0_vld_out );
    sensitive << ( in_write_n_V_V_full_n );
    sensitive << ( in_sub_max_r_V_V_full_n );
    sensitive << ( in_sub_max_c_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_V_last_V_0_vld_in);
    sensitive << ( in_r_TVALID );

    SC_METHOD(thread_in_r_TDATA_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );

    SC_METHOD(thread_in_r_TREADY);
    sensitive << ( in_V_last_V_0_state );

    SC_METHOD(thread_in_sub_max_V_V_blk_n);
    sensitive << ( in_sub_max_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_736 );

    SC_METHOD(thread_in_sub_max_V_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_736 );
    sensitive << ( tmp_data_V_2_reg_750 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_in_sub_max_V_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_736 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_sub_max_c_V_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_sub_max_c_V_V_full_n );

    SC_METHOD(thread_in_sub_max_c_V_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_data_V_0_vld_out );
    sensitive << ( in_write_n_V_V_full_n );
    sensitive << ( in_sub_max_r_V_V_full_n );
    sensitive << ( in_sub_max_c_V_V_full_n );
    sensitive << ( unrolled_iterations_fu_224_p4 );

    SC_METHOD(thread_in_sub_max_c_V_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_data_V_0_vld_out );
    sensitive << ( in_write_n_V_V_full_n );
    sensitive << ( in_sub_max_r_V_V_full_n );
    sensitive << ( in_sub_max_c_V_V_full_n );

    SC_METHOD(thread_in_sub_max_r_V_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_sub_max_r_V_V_full_n );

    SC_METHOD(thread_in_sub_max_r_V_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_data_V_0_vld_out );
    sensitive << ( in_write_n_V_V_full_n );
    sensitive << ( in_sub_max_r_V_V_full_n );
    sensitive << ( in_sub_max_c_V_V_full_n );
    sensitive << ( num_batches_fu_219_p1 );

    SC_METHOD(thread_in_sub_max_r_V_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_data_V_0_vld_out );
    sensitive << ( in_write_n_V_V_full_n );
    sensitive << ( in_sub_max_r_V_V_full_n );
    sensitive << ( in_sub_max_c_V_V_full_n );

    SC_METHOD(thread_in_write_n_V_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_write_n_V_V_full_n );

    SC_METHOD(thread_in_write_n_V_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_data_V_0_data_out );
    sensitive << ( in_V_data_V_0_vld_out );
    sensitive << ( in_write_n_V_V_full_n );
    sensitive << ( in_sub_max_r_V_V_full_n );
    sensitive << ( in_sub_max_c_V_V_full_n );

    SC_METHOD(thread_in_write_n_V_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_data_V_0_vld_out );
    sensitive << ( in_write_n_V_V_full_n );
    sensitive << ( in_sub_max_r_V_V_full_n );
    sensitive << ( in_sub_max_c_V_V_full_n );

    SC_METHOD(thread_indvar_flatten_next_fu_273_p2);
    sensitive << ( indvar_flatten_reg_193 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_max_1_0_V_fu_322_p3);
    sensitive << ( tmp_fu_302_p1 );
    sensitive << ( p_Result_20_i_fu_306_p4 );
    sensitive << ( tmp_25_i_fu_316_p2 );

    SC_METHOD(thread_max_1_1_V_fu_356_p3);
    sensitive << ( p_Result_19_1_i_fu_330_p4 );
    sensitive << ( p_Result_20_1_i_fu_340_p4 );
    sensitive << ( tmp_25_1_i_fu_350_p2 );

    SC_METHOD(thread_max_1_2_V_fu_390_p3);
    sensitive << ( p_Result_19_2_i_fu_364_p4 );
    sensitive << ( p_Result_20_2_i_fu_374_p4 );
    sensitive << ( tmp_25_2_i_fu_384_p2 );

    SC_METHOD(thread_max_1_3_V_fu_424_p3);
    sensitive << ( p_Result_19_3_i_fu_398_p4 );
    sensitive << ( p_Result_20_3_i_fu_408_p4 );
    sensitive << ( tmp_25_3_i_fu_418_p2 );

    SC_METHOD(thread_max_1_4_V_fu_458_p3);
    sensitive << ( p_Result_19_4_i_fu_432_p4 );
    sensitive << ( p_Result_20_4_i_fu_442_p4 );
    sensitive << ( tmp_25_4_i_fu_452_p2 );

    SC_METHOD(thread_max_1_5_V_fu_492_p3);
    sensitive << ( p_Result_19_5_i_fu_466_p4 );
    sensitive << ( p_Result_20_5_i_fu_476_p4 );
    sensitive << ( tmp_25_5_i_fu_486_p2 );

    SC_METHOD(thread_max_1_6_V_fu_526_p3);
    sensitive << ( p_Result_19_6_i_fu_500_p4 );
    sensitive << ( p_Result_20_6_i_fu_510_p4 );
    sensitive << ( tmp_25_6_i_fu_520_p2 );

    SC_METHOD(thread_max_1_7_V_fu_560_p3);
    sensitive << ( p_Result_19_7_i_fu_534_p4 );
    sensitive << ( p_Result_20_7_i_fu_544_p4 );
    sensitive << ( tmp_25_7_i_fu_554_p2 );

    SC_METHOD(thread_max_2_0_V_fu_574_p3);
    sensitive << ( max_1_0_V_fu_322_p3 );
    sensitive << ( max_1_1_V_fu_356_p3 );
    sensitive << ( tmp_34_i_fu_568_p2 );

    SC_METHOD(thread_max_2_1_V_fu_588_p3);
    sensitive << ( max_1_2_V_fu_390_p3 );
    sensitive << ( max_1_3_V_fu_424_p3 );
    sensitive << ( tmp_34_1_i_fu_582_p2 );

    SC_METHOD(thread_max_2_2_V_fu_602_p3);
    sensitive << ( max_1_4_V_fu_458_p3 );
    sensitive << ( max_1_5_V_fu_492_p3 );
    sensitive << ( tmp_34_2_i_fu_596_p2 );

    SC_METHOD(thread_max_2_3_V_fu_616_p3);
    sensitive << ( max_1_6_V_fu_526_p3 );
    sensitive << ( max_1_7_V_fu_560_p3 );
    sensitive << ( tmp_34_3_i_fu_610_p2 );

    SC_METHOD(thread_max_3_0_V_fu_630_p3);
    sensitive << ( max_2_0_V_fu_574_p3 );
    sensitive << ( max_2_1_V_fu_588_p3 );
    sensitive << ( tmp_42_i_fu_624_p2 );

    SC_METHOD(thread_max_input_V_V_blk_n);
    sensitive << ( max_input_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_20_i_reg_769 );

    SC_METHOD(thread_max_input_V_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_20_i_reg_769 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( tmp_17_i_fu_673_p2 );
    sensitive << ( storemerge10_0203_s_fu_682_p3 );
    sensitive << ( max_val_V_1_0203_1_fu_694_p3 );

    SC_METHOD(thread_max_input_V_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_20_i_reg_769 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_max_val_V_1_0203_1_fu_694_p3);
    sensitive << ( max_3_0_V_reg_755 );
    sensitive << ( p_0203_1_i_fu_666_p3 );
    sensitive << ( tmp_19_i_fu_689_p2 );

    SC_METHOD(thread_max_val_V_fu_644_p3);
    sensitive << ( max_2_2_V_fu_602_p3 );
    sensitive << ( max_2_3_V_fu_616_p3 );
    sensitive << ( tmp_42_1_i_fu_638_p2 );

    SC_METHOD(thread_num_batches_fu_219_p1);
    sensitive << ( in_V_data_V_0_data_out );

    SC_METHOD(thread_p_0203_1_i_fu_666_p3);
    sensitive << ( tmp_16_i_reg_745 );
    sensitive << ( tmp_V_fu_140 );

    SC_METHOD(thread_p_Result_19_1_i_fu_330_p4);
    sensitive << ( in_V_data_V_0_data_out );

    SC_METHOD(thread_p_Result_19_2_i_fu_364_p4);
    sensitive << ( in_V_data_V_0_data_out );

    SC_METHOD(thread_p_Result_19_3_i_fu_398_p4);
    sensitive << ( in_V_data_V_0_data_out );

    SC_METHOD(thread_p_Result_19_4_i_fu_432_p4);
    sensitive << ( in_V_data_V_0_data_out );

    SC_METHOD(thread_p_Result_19_5_i_fu_466_p4);
    sensitive << ( in_V_data_V_0_data_out );

    SC_METHOD(thread_p_Result_19_6_i_fu_500_p4);
    sensitive << ( in_V_data_V_0_data_out );

    SC_METHOD(thread_p_Result_19_7_i_fu_534_p4);
    sensitive << ( in_V_data_V_0_data_out );

    SC_METHOD(thread_p_Result_20_1_i_fu_340_p4);
    sensitive << ( in_V_data_V_0_data_out );

    SC_METHOD(thread_p_Result_20_2_i_fu_374_p4);
    sensitive << ( in_V_data_V_0_data_out );

    SC_METHOD(thread_p_Result_20_3_i_fu_408_p4);
    sensitive << ( in_V_data_V_0_data_out );

    SC_METHOD(thread_p_Result_20_4_i_fu_442_p4);
    sensitive << ( in_V_data_V_0_data_out );

    SC_METHOD(thread_p_Result_20_5_i_fu_476_p4);
    sensitive << ( in_V_data_V_0_data_out );

    SC_METHOD(thread_p_Result_20_6_i_fu_510_p4);
    sensitive << ( in_V_data_V_0_data_out );

    SC_METHOD(thread_p_Result_20_7_i_fu_544_p4);
    sensitive << ( in_V_data_V_0_data_out );

    SC_METHOD(thread_p_Result_20_i_fu_306_p4);
    sensitive << ( in_V_data_V_0_data_out );

    SC_METHOD(thread_packet_cast_i_fu_292_p1);
    sensitive << ( packet_i_mid2_fu_284_p3 );

    SC_METHOD(thread_packet_fu_657_p2);
    sensitive << ( packet_i_mid2_fu_284_p3 );

    SC_METHOD(thread_packet_i_mid2_fu_284_p3);
    sensitive << ( packet_i_reg_204 );
    sensitive << ( exitcond2_fu_279_p2 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_storemerge10_0203_s_fu_682_p3);
    sensitive << ( max_val_V_reg_762 );
    sensitive << ( p_0203_1_i_fu_666_p3 );
    sensitive << ( tmp_18_i_fu_677_p2 );

    SC_METHOD(thread_tmp_16_i_fu_296_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( packet_i_mid2_fu_284_p3 );

    SC_METHOD(thread_tmp_17_i_fu_673_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_736 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( max_3_0_V_reg_755 );
    sensitive << ( max_val_V_reg_762 );

    SC_METHOD(thread_tmp_18_i_fu_677_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_736 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( max_val_V_reg_762 );
    sensitive << ( p_0203_1_i_fu_666_p3 );

    SC_METHOD(thread_tmp_19_i_fu_689_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_736 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( max_3_0_V_reg_755 );
    sensitive << ( p_0203_1_i_fu_666_p3 );

    SC_METHOD(thread_tmp_20_i_fu_652_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( tmp_i_reg_726 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( packet_cast_i_fu_292_p1 );

    SC_METHOD(thread_tmp_25_1_i_fu_350_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_19_1_i_fu_330_p4 );
    sensitive << ( p_Result_20_1_i_fu_340_p4 );

    SC_METHOD(thread_tmp_25_2_i_fu_384_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_19_2_i_fu_364_p4 );
    sensitive << ( p_Result_20_2_i_fu_374_p4 );

    SC_METHOD(thread_tmp_25_3_i_fu_418_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_19_3_i_fu_398_p4 );
    sensitive << ( p_Result_20_3_i_fu_408_p4 );

    SC_METHOD(thread_tmp_25_4_i_fu_452_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_19_4_i_fu_432_p4 );
    sensitive << ( p_Result_20_4_i_fu_442_p4 );

    SC_METHOD(thread_tmp_25_5_i_fu_486_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_19_5_i_fu_466_p4 );
    sensitive << ( p_Result_20_5_i_fu_476_p4 );

    SC_METHOD(thread_tmp_25_6_i_fu_520_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_19_6_i_fu_500_p4 );
    sensitive << ( p_Result_20_6_i_fu_510_p4 );

    SC_METHOD(thread_tmp_25_7_i_fu_554_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_19_7_i_fu_534_p4 );
    sensitive << ( p_Result_20_7_i_fu_544_p4 );

    SC_METHOD(thread_tmp_25_i_fu_316_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_fu_302_p1 );
    sensitive << ( p_Result_20_i_fu_306_p4 );

    SC_METHOD(thread_tmp_34_1_i_fu_582_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( max_1_2_V_fu_390_p3 );
    sensitive << ( max_1_3_V_fu_424_p3 );

    SC_METHOD(thread_tmp_34_2_i_fu_596_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( max_1_4_V_fu_458_p3 );
    sensitive << ( max_1_5_V_fu_492_p3 );

    SC_METHOD(thread_tmp_34_3_i_fu_610_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( max_1_6_V_fu_526_p3 );
    sensitive << ( max_1_7_V_fu_560_p3 );

    SC_METHOD(thread_tmp_34_i_fu_568_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( max_1_0_V_fu_322_p3 );
    sensitive << ( max_1_1_V_fu_356_p3 );

    SC_METHOD(thread_tmp_42_1_i_fu_638_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( max_2_2_V_fu_602_p3 );
    sensitive << ( max_2_3_V_fu_616_p3 );

    SC_METHOD(thread_tmp_42_i_fu_624_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( max_2_0_V_fu_574_p3 );
    sensitive << ( max_2_1_V_fu_588_p3 );

    SC_METHOD(thread_tmp_V_14_fu_701_p3);
    sensitive << ( tmp_17_i_fu_673_p2 );
    sensitive << ( storemerge10_0203_s_fu_682_p3 );
    sensitive << ( max_val_V_1_0203_1_fu_694_p3 );

    SC_METHOD(thread_tmp_fu_302_p1);
    sensitive << ( in_V_data_V_0_data_out );

    SC_METHOD(thread_tmp_i_fu_248_p2);
    sensitive << ( unrolled_iterations_s_fu_239_p1 );

    SC_METHOD(thread_unrolled_iterations_fu_224_p4);
    sensitive << ( in_V_data_V_0_data_out );

    SC_METHOD(thread_unrolled_iterations_s_fu_239_p1);
    sensitive << ( unrolled_iterations_fu_224_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_data_V_0_vld_out );
    sensitive << ( in_write_n_V_V_full_n );
    sensitive << ( in_sub_max_r_V_V_full_n );
    sensitive << ( in_sub_max_c_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_268_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    in_V_data_V_0_sel_rd = SC_LOGIC_0;
    in_V_data_V_0_sel_wr = SC_LOGIC_0;
    in_V_data_V_0_state = "00";
    in_V_last_V_0_state = "00";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "read_data_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, in_r_TDATA, "(port)in_r_TDATA");
    sc_trace(mVcdFile, in_r_TVALID, "(port)in_r_TVALID");
    sc_trace(mVcdFile, in_r_TREADY, "(port)in_r_TREADY");
    sc_trace(mVcdFile, in_r_TID, "(port)in_r_TID");
    sc_trace(mVcdFile, in_r_TDEST, "(port)in_r_TDEST");
    sc_trace(mVcdFile, in_r_TUSER, "(port)in_r_TUSER");
    sc_trace(mVcdFile, in_r_TLAST, "(port)in_r_TLAST");
    sc_trace(mVcdFile, in_write_n_V_V_din, "(port)in_write_n_V_V_din");
    sc_trace(mVcdFile, in_write_n_V_V_full_n, "(port)in_write_n_V_V_full_n");
    sc_trace(mVcdFile, in_write_n_V_V_write, "(port)in_write_n_V_V_write");
    sc_trace(mVcdFile, in_sub_max_r_V_V_din, "(port)in_sub_max_r_V_V_din");
    sc_trace(mVcdFile, in_sub_max_r_V_V_full_n, "(port)in_sub_max_r_V_V_full_n");
    sc_trace(mVcdFile, in_sub_max_r_V_V_write, "(port)in_sub_max_r_V_V_write");
    sc_trace(mVcdFile, in_sub_max_c_V_V_din, "(port)in_sub_max_c_V_V_din");
    sc_trace(mVcdFile, in_sub_max_c_V_V_full_n, "(port)in_sub_max_c_V_V_full_n");
    sc_trace(mVcdFile, in_sub_max_c_V_V_write, "(port)in_sub_max_c_V_V_write");
    sc_trace(mVcdFile, max_input_V_V_din, "(port)max_input_V_V_din");
    sc_trace(mVcdFile, max_input_V_V_full_n, "(port)max_input_V_V_full_n");
    sc_trace(mVcdFile, max_input_V_V_write, "(port)max_input_V_V_write");
    sc_trace(mVcdFile, in_sub_max_V_V_din, "(port)in_sub_max_V_V_din");
    sc_trace(mVcdFile, in_sub_max_V_V_full_n, "(port)in_sub_max_V_V_full_n");
    sc_trace(mVcdFile, in_sub_max_V_V_write, "(port)in_sub_max_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, in_V_data_V_0_data_out, "in_V_data_V_0_data_out");
    sc_trace(mVcdFile, in_V_data_V_0_vld_in, "in_V_data_V_0_vld_in");
    sc_trace(mVcdFile, in_V_data_V_0_vld_out, "in_V_data_V_0_vld_out");
    sc_trace(mVcdFile, in_V_data_V_0_ack_in, "in_V_data_V_0_ack_in");
    sc_trace(mVcdFile, in_V_data_V_0_ack_out, "in_V_data_V_0_ack_out");
    sc_trace(mVcdFile, in_V_data_V_0_payload_A, "in_V_data_V_0_payload_A");
    sc_trace(mVcdFile, in_V_data_V_0_payload_B, "in_V_data_V_0_payload_B");
    sc_trace(mVcdFile, in_V_data_V_0_sel_rd, "in_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, in_V_data_V_0_sel_wr, "in_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, in_V_data_V_0_sel, "in_V_data_V_0_sel");
    sc_trace(mVcdFile, in_V_data_V_0_load_A, "in_V_data_V_0_load_A");
    sc_trace(mVcdFile, in_V_data_V_0_load_B, "in_V_data_V_0_load_B");
    sc_trace(mVcdFile, in_V_data_V_0_state, "in_V_data_V_0_state");
    sc_trace(mVcdFile, in_V_data_V_0_state_cmp_full, "in_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, in_V_last_V_0_vld_in, "in_V_last_V_0_vld_in");
    sc_trace(mVcdFile, in_V_last_V_0_ack_out, "in_V_last_V_0_ack_out");
    sc_trace(mVcdFile, in_V_last_V_0_state, "in_V_last_V_0_state");
    sc_trace(mVcdFile, in_r_TDATA_blk_n, "in_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_flatten_fu_268_p2, "exitcond_flatten_fu_268_p2");
    sc_trace(mVcdFile, in_write_n_V_V_blk_n, "in_write_n_V_V_blk_n");
    sc_trace(mVcdFile, in_sub_max_r_V_V_blk_n, "in_sub_max_r_V_V_blk_n");
    sc_trace(mVcdFile, in_sub_max_c_V_V_blk_n, "in_sub_max_c_V_V_blk_n");
    sc_trace(mVcdFile, max_input_V_V_blk_n, "max_input_V_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, tmp_20_i_reg_769, "tmp_20_i_reg_769");
    sc_trace(mVcdFile, in_sub_max_V_V_blk_n, "in_sub_max_V_V_blk_n");
    sc_trace(mVcdFile, exitcond_flatten_reg_736, "exitcond_flatten_reg_736");
    sc_trace(mVcdFile, indvar_flatten_reg_193, "indvar_flatten_reg_193");
    sc_trace(mVcdFile, packet_i_reg_204, "packet_i_reg_204");
    sc_trace(mVcdFile, unrolled_iterations_fu_224_p4, "unrolled_iterations_fu_224_p4");
    sc_trace(mVcdFile, unrolled_iterations_reg_721, "unrolled_iterations_reg_721");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, tmp_i_fu_248_p2, "tmp_i_fu_248_p2");
    sc_trace(mVcdFile, tmp_i_reg_726, "tmp_i_reg_726");
    sc_trace(mVcdFile, bound_fu_262_p2, "bound_fu_262_p2");
    sc_trace(mVcdFile, bound_reg_731, "bound_reg_731");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, indvar_flatten_next_fu_273_p2, "indvar_flatten_next_fu_273_p2");
    sc_trace(mVcdFile, tmp_16_i_fu_296_p2, "tmp_16_i_fu_296_p2");
    sc_trace(mVcdFile, tmp_16_i_reg_745, "tmp_16_i_reg_745");
    sc_trace(mVcdFile, tmp_data_V_2_reg_750, "tmp_data_V_2_reg_750");
    sc_trace(mVcdFile, max_3_0_V_fu_630_p3, "max_3_0_V_fu_630_p3");
    sc_trace(mVcdFile, max_3_0_V_reg_755, "max_3_0_V_reg_755");
    sc_trace(mVcdFile, max_val_V_fu_644_p3, "max_val_V_fu_644_p3");
    sc_trace(mVcdFile, max_val_V_reg_762, "max_val_V_reg_762");
    sc_trace(mVcdFile, tmp_20_i_fu_652_p2, "tmp_20_i_fu_652_p2");
    sc_trace(mVcdFile, packet_fu_657_p2, "packet_fu_657_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, num_batches_fu_219_p1, "num_batches_fu_219_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_V_14_fu_701_p3, "tmp_V_14_fu_701_p3");
    sc_trace(mVcdFile, tmp_V_fu_140, "tmp_V_fu_140");
    sc_trace(mVcdFile, unrolled_iterations_s_fu_239_p1, "unrolled_iterations_s_fu_239_p1");
    sc_trace(mVcdFile, bound_fu_262_p0, "bound_fu_262_p0");
    sc_trace(mVcdFile, bound_fu_262_p1, "bound_fu_262_p1");
    sc_trace(mVcdFile, exitcond2_fu_279_p2, "exitcond2_fu_279_p2");
    sc_trace(mVcdFile, packet_i_mid2_fu_284_p3, "packet_i_mid2_fu_284_p3");
    sc_trace(mVcdFile, tmp_fu_302_p1, "tmp_fu_302_p1");
    sc_trace(mVcdFile, p_Result_20_i_fu_306_p4, "p_Result_20_i_fu_306_p4");
    sc_trace(mVcdFile, tmp_25_i_fu_316_p2, "tmp_25_i_fu_316_p2");
    sc_trace(mVcdFile, p_Result_19_1_i_fu_330_p4, "p_Result_19_1_i_fu_330_p4");
    sc_trace(mVcdFile, p_Result_20_1_i_fu_340_p4, "p_Result_20_1_i_fu_340_p4");
    sc_trace(mVcdFile, tmp_25_1_i_fu_350_p2, "tmp_25_1_i_fu_350_p2");
    sc_trace(mVcdFile, p_Result_19_2_i_fu_364_p4, "p_Result_19_2_i_fu_364_p4");
    sc_trace(mVcdFile, p_Result_20_2_i_fu_374_p4, "p_Result_20_2_i_fu_374_p4");
    sc_trace(mVcdFile, tmp_25_2_i_fu_384_p2, "tmp_25_2_i_fu_384_p2");
    sc_trace(mVcdFile, p_Result_19_3_i_fu_398_p4, "p_Result_19_3_i_fu_398_p4");
    sc_trace(mVcdFile, p_Result_20_3_i_fu_408_p4, "p_Result_20_3_i_fu_408_p4");
    sc_trace(mVcdFile, tmp_25_3_i_fu_418_p2, "tmp_25_3_i_fu_418_p2");
    sc_trace(mVcdFile, p_Result_19_4_i_fu_432_p4, "p_Result_19_4_i_fu_432_p4");
    sc_trace(mVcdFile, p_Result_20_4_i_fu_442_p4, "p_Result_20_4_i_fu_442_p4");
    sc_trace(mVcdFile, tmp_25_4_i_fu_452_p2, "tmp_25_4_i_fu_452_p2");
    sc_trace(mVcdFile, p_Result_19_5_i_fu_466_p4, "p_Result_19_5_i_fu_466_p4");
    sc_trace(mVcdFile, p_Result_20_5_i_fu_476_p4, "p_Result_20_5_i_fu_476_p4");
    sc_trace(mVcdFile, tmp_25_5_i_fu_486_p2, "tmp_25_5_i_fu_486_p2");
    sc_trace(mVcdFile, p_Result_19_6_i_fu_500_p4, "p_Result_19_6_i_fu_500_p4");
    sc_trace(mVcdFile, p_Result_20_6_i_fu_510_p4, "p_Result_20_6_i_fu_510_p4");
    sc_trace(mVcdFile, tmp_25_6_i_fu_520_p2, "tmp_25_6_i_fu_520_p2");
    sc_trace(mVcdFile, p_Result_19_7_i_fu_534_p4, "p_Result_19_7_i_fu_534_p4");
    sc_trace(mVcdFile, p_Result_20_7_i_fu_544_p4, "p_Result_20_7_i_fu_544_p4");
    sc_trace(mVcdFile, tmp_25_7_i_fu_554_p2, "tmp_25_7_i_fu_554_p2");
    sc_trace(mVcdFile, max_1_0_V_fu_322_p3, "max_1_0_V_fu_322_p3");
    sc_trace(mVcdFile, max_1_1_V_fu_356_p3, "max_1_1_V_fu_356_p3");
    sc_trace(mVcdFile, tmp_34_i_fu_568_p2, "tmp_34_i_fu_568_p2");
    sc_trace(mVcdFile, max_1_2_V_fu_390_p3, "max_1_2_V_fu_390_p3");
    sc_trace(mVcdFile, max_1_3_V_fu_424_p3, "max_1_3_V_fu_424_p3");
    sc_trace(mVcdFile, tmp_34_1_i_fu_582_p2, "tmp_34_1_i_fu_582_p2");
    sc_trace(mVcdFile, max_1_4_V_fu_458_p3, "max_1_4_V_fu_458_p3");
    sc_trace(mVcdFile, max_1_5_V_fu_492_p3, "max_1_5_V_fu_492_p3");
    sc_trace(mVcdFile, tmp_34_2_i_fu_596_p2, "tmp_34_2_i_fu_596_p2");
    sc_trace(mVcdFile, max_1_6_V_fu_526_p3, "max_1_6_V_fu_526_p3");
    sc_trace(mVcdFile, max_1_7_V_fu_560_p3, "max_1_7_V_fu_560_p3");
    sc_trace(mVcdFile, tmp_34_3_i_fu_610_p2, "tmp_34_3_i_fu_610_p2");
    sc_trace(mVcdFile, max_2_0_V_fu_574_p3, "max_2_0_V_fu_574_p3");
    sc_trace(mVcdFile, max_2_1_V_fu_588_p3, "max_2_1_V_fu_588_p3");
    sc_trace(mVcdFile, tmp_42_i_fu_624_p2, "tmp_42_i_fu_624_p2");
    sc_trace(mVcdFile, max_2_2_V_fu_602_p3, "max_2_2_V_fu_602_p3");
    sc_trace(mVcdFile, max_2_3_V_fu_616_p3, "max_2_3_V_fu_616_p3");
    sc_trace(mVcdFile, tmp_42_1_i_fu_638_p2, "tmp_42_1_i_fu_638_p2");
    sc_trace(mVcdFile, packet_cast_i_fu_292_p1, "packet_cast_i_fu_292_p1");
    sc_trace(mVcdFile, p_0203_1_i_fu_666_p3, "p_0203_1_i_fu_666_p3");
    sc_trace(mVcdFile, tmp_18_i_fu_677_p2, "tmp_18_i_fu_677_p2");
    sc_trace(mVcdFile, tmp_19_i_fu_689_p2, "tmp_19_i_fu_689_p2");
    sc_trace(mVcdFile, tmp_17_i_fu_673_p2, "tmp_17_i_fu_673_p2");
    sc_trace(mVcdFile, storemerge10_0203_s_fu_682_p3, "storemerge10_0203_s_fu_682_p3");
    sc_trace(mVcdFile, max_val_V_1_0203_1_fu_694_p3, "max_val_V_1_0203_1_fu_694_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, bound_fu_262_p00, "bound_fu_262_p00");
    sc_trace(mVcdFile, bound_fu_262_p10, "bound_fu_262_p10");
#endif

    }
}

read_data::~read_data() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void read_data::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_n_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_c_V_V_full_n.read())))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_n_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_c_V_V_full_n.read())))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        in_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_vld_out.read()))) {
            in_V_data_V_0_sel_rd =  (sc_logic) (~in_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        in_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_ack_in.read()))) {
            in_V_data_V_0_sel_wr =  (sc_logic) (~in_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        in_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(in_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(in_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            in_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            in_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(in_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(in_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_ack_out.read()))))) {
            in_V_data_V_0_state = ap_const_lv2_3;
        } else {
            in_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        in_V_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_V_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, in_V_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, in_V_last_V_0_state.read())))) {
            in_V_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, in_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_V_last_V_0_state.read())))) {
            in_V_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, in_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_V_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, in_V_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_V_last_V_0_ack_out.read()))))) {
            in_V_last_V_0_state = ap_const_lv2_3;
        } else {
            in_V_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_268_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_flatten_reg_193 = indvar_flatten_next_fu_273_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_n_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_c_V_V_full_n.read())))) {
        indvar_flatten_reg_193 = ap_const_lv60_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_268_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        packet_i_reg_204 = packet_fu_657_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_n_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_c_V_V_full_n.read())))) {
        packet_i_reg_204 = ap_const_lv28_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_n_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_c_V_V_full_n.read())))) {
        bound_reg_731 = bound_fu_262_p2.read();
        tmp_i_reg_726 = tmp_i_fu_248_p2.read();
        unrolled_iterations_reg_721 = in_V_data_V_0_data_out.read().range(63, 36);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten_reg_736 = exitcond_flatten_fu_268_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_load_A.read())) {
        in_V_data_V_0_payload_A = in_r_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_load_B.read())) {
        in_V_data_V_0_payload_B = in_r_TDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_268_p2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        max_3_0_V_reg_755 = max_3_0_V_fu_630_p3.read();
        max_val_V_reg_762 = max_val_V_fu_644_p3.read();
        tmp_16_i_reg_745 = tmp_16_i_fu_296_p2.read();
        tmp_20_i_reg_769 = tmp_20_i_fu_652_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_736.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_V_fu_140 = tmp_V_14_fu_701_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_268_p2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_data_V_2_reg_750 = in_V_data_V_0_data_out.read();
    }
}

void read_data::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void read_data::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void read_data::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[2];
}

void read_data::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void read_data::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_268_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_736.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_20_i_reg_769.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, max_input_V_V_full_n.read())))));
}

void read_data::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_268_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_736.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_20_i_reg_769.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, max_input_V_V_full_n.read())))));
}

void read_data::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_268_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_736.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_20_i_reg_769.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, max_input_V_V_full_n.read())))));
}

void read_data::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_n_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_c_V_V_full_n.read()));
}

void read_data::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_268_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_out.read()));
}

void read_data::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_736.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_20_i_reg_769.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, max_input_V_V_full_n.read())));
}

void read_data::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_268_p2.read())) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void read_data::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void read_data::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void read_data::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void read_data::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void read_data::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void read_data::thread_bound_fu_262_p0() {
    bound_fu_262_p0 =  (sc_lv<28>) (bound_fu_262_p00.read());
}

void read_data::thread_bound_fu_262_p00() {
    bound_fu_262_p00 = esl_zext<60,28>(unrolled_iterations_fu_224_p4.read());
}

void read_data::thread_bound_fu_262_p1() {
    bound_fu_262_p1 =  (sc_lv<32>) (bound_fu_262_p10.read());
}

void read_data::thread_bound_fu_262_p10() {
    bound_fu_262_p10 = esl_zext<60,32>(num_batches_fu_219_p1.read());
}

void read_data::thread_bound_fu_262_p2() {
    bound_fu_262_p2 = (!bound_fu_262_p0.read().is_01() || !bound_fu_262_p1.read().is_01())? sc_lv<60>(): sc_biguint<28>(bound_fu_262_p0.read()) * sc_biguint<32>(bound_fu_262_p1.read());
}

void read_data::thread_exitcond2_fu_279_p2() {
    exitcond2_fu_279_p2 = (!packet_i_reg_204.read().is_01() || !unrolled_iterations_reg_721.read().is_01())? sc_lv<1>(): sc_lv<1>(packet_i_reg_204.read() == unrolled_iterations_reg_721.read());
}

void read_data::thread_exitcond_flatten_fu_268_p2() {
    exitcond_flatten_fu_268_p2 = (!indvar_flatten_reg_193.read().is_01() || !bound_reg_731.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_193.read() == bound_reg_731.read());
}

void read_data::thread_in_V_data_V_0_ack_in() {
    in_V_data_V_0_ack_in = in_V_data_V_0_state.read()[1];
}

void read_data::thread_in_V_data_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_n_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_c_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_268_p2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        in_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        in_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void read_data::thread_in_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_sel.read())) {
        in_V_data_V_0_data_out = in_V_data_V_0_payload_B.read();
    } else {
        in_V_data_V_0_data_out = in_V_data_V_0_payload_A.read();
    }
}

void read_data::thread_in_V_data_V_0_load_A() {
    in_V_data_V_0_load_A = (in_V_data_V_0_state_cmp_full.read() & ~in_V_data_V_0_sel_wr.read());
}

void read_data::thread_in_V_data_V_0_load_B() {
    in_V_data_V_0_load_B = (in_V_data_V_0_sel_wr.read() & in_V_data_V_0_state_cmp_full.read());
}

void read_data::thread_in_V_data_V_0_sel() {
    in_V_data_V_0_sel = in_V_data_V_0_sel_rd.read();
}

void read_data::thread_in_V_data_V_0_state_cmp_full() {
    in_V_data_V_0_state_cmp_full =  (sc_logic) ((!in_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void read_data::thread_in_V_data_V_0_vld_in() {
    in_V_data_V_0_vld_in = in_r_TVALID.read();
}

void read_data::thread_in_V_data_V_0_vld_out() {
    in_V_data_V_0_vld_out = in_V_data_V_0_state.read()[0];
}

void read_data::thread_in_V_last_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_n_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_c_V_V_full_n.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_268_p2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        in_V_last_V_0_ack_out = ap_const_logic_1;
    } else {
        in_V_last_V_0_ack_out = ap_const_logic_0;
    }
}

void read_data::thread_in_V_last_V_0_vld_in() {
    in_V_last_V_0_vld_in = in_r_TVALID.read();
}

void read_data::thread_in_r_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_268_p2.read())))) {
        in_r_TDATA_blk_n = in_V_data_V_0_state.read()[0];
    } else {
        in_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void read_data::thread_in_r_TREADY() {
    in_r_TREADY = in_V_last_V_0_state.read()[1];
}

void read_data::thread_in_sub_max_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_736.read()))) {
        in_sub_max_V_V_blk_n = in_sub_max_V_V_full_n.read();
    } else {
        in_sub_max_V_V_blk_n = ap_const_logic_1;
    }
}

void read_data::thread_in_sub_max_V_V_din() {
    in_sub_max_V_V_din = tmp_data_V_2_reg_750.read();
}

void read_data::thread_in_sub_max_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_736.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_sub_max_V_V_write = ap_const_logic_1;
    } else {
        in_sub_max_V_V_write = ap_const_logic_0;
    }
}

void read_data::thread_in_sub_max_c_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        in_sub_max_c_V_V_blk_n = in_sub_max_c_V_V_full_n.read();
    } else {
        in_sub_max_c_V_V_blk_n = ap_const_logic_1;
    }
}

void read_data::thread_in_sub_max_c_V_V_din() {
    in_sub_max_c_V_V_din = esl_zext<32,28>(unrolled_iterations_fu_224_p4.read());
}

void read_data::thread_in_sub_max_c_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_n_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_c_V_V_full_n.read())))) {
        in_sub_max_c_V_V_write = ap_const_logic_1;
    } else {
        in_sub_max_c_V_V_write = ap_const_logic_0;
    }
}

void read_data::thread_in_sub_max_r_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        in_sub_max_r_V_V_blk_n = in_sub_max_r_V_V_full_n.read();
    } else {
        in_sub_max_r_V_V_blk_n = ap_const_logic_1;
    }
}

void read_data::thread_in_sub_max_r_V_V_din() {
    in_sub_max_r_V_V_din = num_batches_fu_219_p1.read();
}

void read_data::thread_in_sub_max_r_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_n_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_c_V_V_full_n.read())))) {
        in_sub_max_r_V_V_write = ap_const_logic_1;
    } else {
        in_sub_max_r_V_V_write = ap_const_logic_0;
    }
}

void read_data::thread_in_write_n_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        in_write_n_V_V_blk_n = in_write_n_V_V_full_n.read();
    } else {
        in_write_n_V_V_blk_n = ap_const_logic_1;
    }
}

void read_data::thread_in_write_n_V_V_din() {
    in_write_n_V_V_din = in_V_data_V_0_data_out.read().range(96-1, 0);
}

void read_data::thread_in_write_n_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_n_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_c_V_V_full_n.read())))) {
        in_write_n_V_V_write = ap_const_logic_1;
    } else {
        in_write_n_V_V_write = ap_const_logic_0;
    }
}

void read_data::thread_indvar_flatten_next_fu_273_p2() {
    indvar_flatten_next_fu_273_p2 = (!indvar_flatten_reg_193.read().is_01() || !ap_const_lv60_1.is_01())? sc_lv<60>(): (sc_biguint<60>(indvar_flatten_reg_193.read()) + sc_biguint<60>(ap_const_lv60_1));
}

void read_data::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void read_data::thread_max_1_0_V_fu_322_p3() {
    max_1_0_V_fu_322_p3 = (!tmp_25_i_fu_316_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_25_i_fu_316_p2.read()[0].to_bool())? tmp_fu_302_p1.read(): p_Result_20_i_fu_306_p4.read());
}

void read_data::thread_max_1_1_V_fu_356_p3() {
    max_1_1_V_fu_356_p3 = (!tmp_25_1_i_fu_350_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_25_1_i_fu_350_p2.read()[0].to_bool())? p_Result_19_1_i_fu_330_p4.read(): p_Result_20_1_i_fu_340_p4.read());
}

void read_data::thread_max_1_2_V_fu_390_p3() {
    max_1_2_V_fu_390_p3 = (!tmp_25_2_i_fu_384_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_25_2_i_fu_384_p2.read()[0].to_bool())? p_Result_19_2_i_fu_364_p4.read(): p_Result_20_2_i_fu_374_p4.read());
}

void read_data::thread_max_1_3_V_fu_424_p3() {
    max_1_3_V_fu_424_p3 = (!tmp_25_3_i_fu_418_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_25_3_i_fu_418_p2.read()[0].to_bool())? p_Result_19_3_i_fu_398_p4.read(): p_Result_20_3_i_fu_408_p4.read());
}

void read_data::thread_max_1_4_V_fu_458_p3() {
    max_1_4_V_fu_458_p3 = (!tmp_25_4_i_fu_452_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_25_4_i_fu_452_p2.read()[0].to_bool())? p_Result_19_4_i_fu_432_p4.read(): p_Result_20_4_i_fu_442_p4.read());
}

void read_data::thread_max_1_5_V_fu_492_p3() {
    max_1_5_V_fu_492_p3 = (!tmp_25_5_i_fu_486_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_25_5_i_fu_486_p2.read()[0].to_bool())? p_Result_19_5_i_fu_466_p4.read(): p_Result_20_5_i_fu_476_p4.read());
}

void read_data::thread_max_1_6_V_fu_526_p3() {
    max_1_6_V_fu_526_p3 = (!tmp_25_6_i_fu_520_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_25_6_i_fu_520_p2.read()[0].to_bool())? p_Result_19_6_i_fu_500_p4.read(): p_Result_20_6_i_fu_510_p4.read());
}

void read_data::thread_max_1_7_V_fu_560_p3() {
    max_1_7_V_fu_560_p3 = (!tmp_25_7_i_fu_554_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_25_7_i_fu_554_p2.read()[0].to_bool())? p_Result_19_7_i_fu_534_p4.read(): p_Result_20_7_i_fu_544_p4.read());
}

void read_data::thread_max_2_0_V_fu_574_p3() {
    max_2_0_V_fu_574_p3 = (!tmp_34_i_fu_568_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_34_i_fu_568_p2.read()[0].to_bool())? max_1_1_V_fu_356_p3.read(): max_1_0_V_fu_322_p3.read());
}

void read_data::thread_max_2_1_V_fu_588_p3() {
    max_2_1_V_fu_588_p3 = (!tmp_34_1_i_fu_582_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_34_1_i_fu_582_p2.read()[0].to_bool())? max_1_3_V_fu_424_p3.read(): max_1_2_V_fu_390_p3.read());
}

void read_data::thread_max_2_2_V_fu_602_p3() {
    max_2_2_V_fu_602_p3 = (!tmp_34_2_i_fu_596_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_34_2_i_fu_596_p2.read()[0].to_bool())? max_1_5_V_fu_492_p3.read(): max_1_4_V_fu_458_p3.read());
}

void read_data::thread_max_2_3_V_fu_616_p3() {
    max_2_3_V_fu_616_p3 = (!tmp_34_3_i_fu_610_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_34_3_i_fu_610_p2.read()[0].to_bool())? max_1_7_V_fu_560_p3.read(): max_1_6_V_fu_526_p3.read());
}

void read_data::thread_max_3_0_V_fu_630_p3() {
    max_3_0_V_fu_630_p3 = (!tmp_42_i_fu_624_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_42_i_fu_624_p2.read()[0].to_bool())? max_2_1_V_fu_588_p3.read(): max_2_0_V_fu_574_p3.read());
}

void read_data::thread_max_input_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_20_i_reg_769.read()))) {
        max_input_V_V_blk_n = max_input_V_V_full_n.read();
    } else {
        max_input_V_V_blk_n = ap_const_logic_1;
    }
}

void read_data::thread_max_input_V_V_din() {
    max_input_V_V_din = (!tmp_17_i_fu_673_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_17_i_fu_673_p2.read()[0].to_bool())? storemerge10_0203_s_fu_682_p3.read(): max_val_V_1_0203_1_fu_694_p3.read());
}

void read_data::thread_max_input_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_20_i_reg_769.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        max_input_V_V_write = ap_const_logic_1;
    } else {
        max_input_V_V_write = ap_const_logic_0;
    }
}

void read_data::thread_max_val_V_1_0203_1_fu_694_p3() {
    max_val_V_1_0203_1_fu_694_p3 = (!tmp_19_i_fu_689_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_19_i_fu_689_p2.read()[0].to_bool())? max_3_0_V_reg_755.read(): p_0203_1_i_fu_666_p3.read());
}

void read_data::thread_max_val_V_fu_644_p3() {
    max_val_V_fu_644_p3 = (!tmp_42_1_i_fu_638_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_42_1_i_fu_638_p2.read()[0].to_bool())? max_2_3_V_fu_616_p3.read(): max_2_2_V_fu_602_p3.read());
}

void read_data::thread_num_batches_fu_219_p1() {
    num_batches_fu_219_p1 = in_V_data_V_0_data_out.read().range(32-1, 0);
}

void read_data::thread_p_0203_1_i_fu_666_p3() {
    p_0203_1_i_fu_666_p3 = (!tmp_16_i_reg_745.read()[0].is_01())? sc_lv<32>(): ((tmp_16_i_reg_745.read()[0].to_bool())? ap_const_lv32_0: tmp_V_fu_140.read());
}

void read_data::thread_p_Result_19_1_i_fu_330_p4() {
    p_Result_19_1_i_fu_330_p4 = in_V_data_V_0_data_out.read().range(95, 64);
}

void read_data::thread_p_Result_19_2_i_fu_364_p4() {
    p_Result_19_2_i_fu_364_p4 = in_V_data_V_0_data_out.read().range(159, 128);
}

void read_data::thread_p_Result_19_3_i_fu_398_p4() {
    p_Result_19_3_i_fu_398_p4 = in_V_data_V_0_data_out.read().range(223, 192);
}

void read_data::thread_p_Result_19_4_i_fu_432_p4() {
    p_Result_19_4_i_fu_432_p4 = in_V_data_V_0_data_out.read().range(287, 256);
}

void read_data::thread_p_Result_19_5_i_fu_466_p4() {
    p_Result_19_5_i_fu_466_p4 = in_V_data_V_0_data_out.read().range(351, 320);
}

void read_data::thread_p_Result_19_6_i_fu_500_p4() {
    p_Result_19_6_i_fu_500_p4 = in_V_data_V_0_data_out.read().range(415, 384);
}

void read_data::thread_p_Result_19_7_i_fu_534_p4() {
    p_Result_19_7_i_fu_534_p4 = in_V_data_V_0_data_out.read().range(479, 448);
}

void read_data::thread_p_Result_20_1_i_fu_340_p4() {
    p_Result_20_1_i_fu_340_p4 = in_V_data_V_0_data_out.read().range(127, 96);
}

void read_data::thread_p_Result_20_2_i_fu_374_p4() {
    p_Result_20_2_i_fu_374_p4 = in_V_data_V_0_data_out.read().range(191, 160);
}

void read_data::thread_p_Result_20_3_i_fu_408_p4() {
    p_Result_20_3_i_fu_408_p4 = in_V_data_V_0_data_out.read().range(255, 224);
}

void read_data::thread_p_Result_20_4_i_fu_442_p4() {
    p_Result_20_4_i_fu_442_p4 = in_V_data_V_0_data_out.read().range(319, 288);
}

void read_data::thread_p_Result_20_5_i_fu_476_p4() {
    p_Result_20_5_i_fu_476_p4 = in_V_data_V_0_data_out.read().range(383, 352);
}

void read_data::thread_p_Result_20_6_i_fu_510_p4() {
    p_Result_20_6_i_fu_510_p4 = in_V_data_V_0_data_out.read().range(447, 416);
}

void read_data::thread_p_Result_20_7_i_fu_544_p4() {
    p_Result_20_7_i_fu_544_p4 = in_V_data_V_0_data_out.read().range(511, 480);
}

void read_data::thread_p_Result_20_i_fu_306_p4() {
    p_Result_20_i_fu_306_p4 = in_V_data_V_0_data_out.read().range(63, 32);
}

void read_data::thread_packet_cast_i_fu_292_p1() {
    packet_cast_i_fu_292_p1 = esl_zext<29,28>(packet_i_mid2_fu_284_p3.read());
}

void read_data::thread_packet_fu_657_p2() {
    packet_fu_657_p2 = (!packet_i_mid2_fu_284_p3.read().is_01() || !ap_const_lv28_1.is_01())? sc_lv<28>(): (sc_biguint<28>(packet_i_mid2_fu_284_p3.read()) + sc_biguint<28>(ap_const_lv28_1));
}

void read_data::thread_packet_i_mid2_fu_284_p3() {
    packet_i_mid2_fu_284_p3 = (!exitcond2_fu_279_p2.read()[0].is_01())? sc_lv<28>(): ((exitcond2_fu_279_p2.read()[0].to_bool())? ap_const_lv28_0: packet_i_reg_204.read());
}

void read_data::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void read_data::thread_start_out() {
    start_out = real_start.read();
}

void read_data::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void read_data::thread_storemerge10_0203_s_fu_682_p3() {
    storemerge10_0203_s_fu_682_p3 = (!tmp_18_i_fu_677_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_18_i_fu_677_p2.read()[0].to_bool())? max_val_V_reg_762.read(): p_0203_1_i_fu_666_p3.read());
}

void read_data::thread_tmp_16_i_fu_296_p2() {
    tmp_16_i_fu_296_p2 = (!packet_i_mid2_fu_284_p3.read().is_01() || !ap_const_lv28_0.is_01())? sc_lv<1>(): sc_lv<1>(packet_i_mid2_fu_284_p3.read() == ap_const_lv28_0);
}

void read_data::thread_tmp_17_i_fu_673_p2() {
    tmp_17_i_fu_673_p2 = (!max_3_0_V_reg_755.read().is_01() || !max_val_V_reg_762.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_3_0_V_reg_755.read()) < sc_bigint<32>(max_val_V_reg_762.read()));
}

void read_data::thread_tmp_18_i_fu_677_p2() {
    tmp_18_i_fu_677_p2 = (!max_val_V_reg_762.read().is_01() || !p_0203_1_i_fu_666_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_val_V_reg_762.read()) > sc_bigint<32>(p_0203_1_i_fu_666_p3.read()));
}

void read_data::thread_tmp_19_i_fu_689_p2() {
    tmp_19_i_fu_689_p2 = (!max_3_0_V_reg_755.read().is_01() || !p_0203_1_i_fu_666_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_3_0_V_reg_755.read()) > sc_bigint<32>(p_0203_1_i_fu_666_p3.read()));
}

void read_data::thread_tmp_20_i_fu_652_p2() {
    tmp_20_i_fu_652_p2 = (!packet_cast_i_fu_292_p1.read().is_01() || !tmp_i_reg_726.read().is_01())? sc_lv<1>(): sc_lv<1>(packet_cast_i_fu_292_p1.read() == tmp_i_reg_726.read());
}

void read_data::thread_tmp_25_1_i_fu_350_p2() {
    tmp_25_1_i_fu_350_p2 = (!p_Result_19_1_i_fu_330_p4.read().is_01() || !p_Result_20_1_i_fu_340_p4.read().is_01())? sc_lv<1>(): (sc_bigint<32>(p_Result_19_1_i_fu_330_p4.read()) > sc_bigint<32>(p_Result_20_1_i_fu_340_p4.read()));
}

void read_data::thread_tmp_25_2_i_fu_384_p2() {
    tmp_25_2_i_fu_384_p2 = (!p_Result_19_2_i_fu_364_p4.read().is_01() || !p_Result_20_2_i_fu_374_p4.read().is_01())? sc_lv<1>(): (sc_bigint<32>(p_Result_19_2_i_fu_364_p4.read()) > sc_bigint<32>(p_Result_20_2_i_fu_374_p4.read()));
}

void read_data::thread_tmp_25_3_i_fu_418_p2() {
    tmp_25_3_i_fu_418_p2 = (!p_Result_19_3_i_fu_398_p4.read().is_01() || !p_Result_20_3_i_fu_408_p4.read().is_01())? sc_lv<1>(): (sc_bigint<32>(p_Result_19_3_i_fu_398_p4.read()) > sc_bigint<32>(p_Result_20_3_i_fu_408_p4.read()));
}

void read_data::thread_tmp_25_4_i_fu_452_p2() {
    tmp_25_4_i_fu_452_p2 = (!p_Result_19_4_i_fu_432_p4.read().is_01() || !p_Result_20_4_i_fu_442_p4.read().is_01())? sc_lv<1>(): (sc_bigint<32>(p_Result_19_4_i_fu_432_p4.read()) > sc_bigint<32>(p_Result_20_4_i_fu_442_p4.read()));
}

void read_data::thread_tmp_25_5_i_fu_486_p2() {
    tmp_25_5_i_fu_486_p2 = (!p_Result_19_5_i_fu_466_p4.read().is_01() || !p_Result_20_5_i_fu_476_p4.read().is_01())? sc_lv<1>(): (sc_bigint<32>(p_Result_19_5_i_fu_466_p4.read()) > sc_bigint<32>(p_Result_20_5_i_fu_476_p4.read()));
}

void read_data::thread_tmp_25_6_i_fu_520_p2() {
    tmp_25_6_i_fu_520_p2 = (!p_Result_19_6_i_fu_500_p4.read().is_01() || !p_Result_20_6_i_fu_510_p4.read().is_01())? sc_lv<1>(): (sc_bigint<32>(p_Result_19_6_i_fu_500_p4.read()) > sc_bigint<32>(p_Result_20_6_i_fu_510_p4.read()));
}

void read_data::thread_tmp_25_7_i_fu_554_p2() {
    tmp_25_7_i_fu_554_p2 = (!p_Result_19_7_i_fu_534_p4.read().is_01() || !p_Result_20_7_i_fu_544_p4.read().is_01())? sc_lv<1>(): (sc_bigint<32>(p_Result_19_7_i_fu_534_p4.read()) > sc_bigint<32>(p_Result_20_7_i_fu_544_p4.read()));
}

void read_data::thread_tmp_25_i_fu_316_p2() {
    tmp_25_i_fu_316_p2 = (!tmp_fu_302_p1.read().is_01() || !p_Result_20_i_fu_306_p4.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_fu_302_p1.read()) > sc_bigint<32>(p_Result_20_i_fu_306_p4.read()));
}

void read_data::thread_tmp_34_1_i_fu_582_p2() {
    tmp_34_1_i_fu_582_p2 = (!max_1_2_V_fu_390_p3.read().is_01() || !max_1_3_V_fu_424_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_1_2_V_fu_390_p3.read()) < sc_bigint<32>(max_1_3_V_fu_424_p3.read()));
}

void read_data::thread_tmp_34_2_i_fu_596_p2() {
    tmp_34_2_i_fu_596_p2 = (!max_1_4_V_fu_458_p3.read().is_01() || !max_1_5_V_fu_492_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_1_4_V_fu_458_p3.read()) < sc_bigint<32>(max_1_5_V_fu_492_p3.read()));
}

void read_data::thread_tmp_34_3_i_fu_610_p2() {
    tmp_34_3_i_fu_610_p2 = (!max_1_6_V_fu_526_p3.read().is_01() || !max_1_7_V_fu_560_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_1_6_V_fu_526_p3.read()) < sc_bigint<32>(max_1_7_V_fu_560_p3.read()));
}

void read_data::thread_tmp_34_i_fu_568_p2() {
    tmp_34_i_fu_568_p2 = (!max_1_0_V_fu_322_p3.read().is_01() || !max_1_1_V_fu_356_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_1_0_V_fu_322_p3.read()) < sc_bigint<32>(max_1_1_V_fu_356_p3.read()));
}

void read_data::thread_tmp_42_1_i_fu_638_p2() {
    tmp_42_1_i_fu_638_p2 = (!max_2_2_V_fu_602_p3.read().is_01() || !max_2_3_V_fu_616_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_2_2_V_fu_602_p3.read()) < sc_bigint<32>(max_2_3_V_fu_616_p3.read()));
}

void read_data::thread_tmp_42_i_fu_624_p2() {
    tmp_42_i_fu_624_p2 = (!max_2_0_V_fu_574_p3.read().is_01() || !max_2_1_V_fu_588_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_2_0_V_fu_574_p3.read()) < sc_bigint<32>(max_2_1_V_fu_588_p3.read()));
}

void read_data::thread_tmp_V_14_fu_701_p3() {
    tmp_V_14_fu_701_p3 = (!tmp_17_i_fu_673_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_17_i_fu_673_p2.read()[0].to_bool())? storemerge10_0203_s_fu_682_p3.read(): max_val_V_1_0203_1_fu_694_p3.read());
}

void read_data::thread_tmp_fu_302_p1() {
    tmp_fu_302_p1 = in_V_data_V_0_data_out.read().range(32-1, 0);
}

void read_data::thread_tmp_i_fu_248_p2() {
    tmp_i_fu_248_p2 = (!ap_const_lv29_1FFFFFFF.is_01() || !unrolled_iterations_s_fu_239_p1.read().is_01())? sc_lv<29>(): (sc_bigint<29>(ap_const_lv29_1FFFFFFF) + sc_biguint<29>(unrolled_iterations_s_fu_239_p1.read()));
}

void read_data::thread_unrolled_iterations_fu_224_p4() {
    unrolled_iterations_fu_224_p4 = in_V_data_V_0_data_out.read().range(63, 36);
}

void read_data::thread_unrolled_iterations_s_fu_239_p1() {
    unrolled_iterations_s_fu_239_p1 = esl_zext<29,28>(unrolled_iterations_fu_224_p4.read());
}

void read_data::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_out.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_write_n_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_r_V_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, in_sub_max_c_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_268_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_268_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

