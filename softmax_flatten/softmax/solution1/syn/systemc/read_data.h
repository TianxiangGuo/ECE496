// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _read_data_HH_
#define _read_data_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct read_data : public sc_module {
    // Port declarations 32
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<512> > in_r_TDATA;
    sc_in< sc_logic > in_r_TVALID;
    sc_out< sc_logic > in_r_TREADY;
    sc_in< sc_lv<8> > in_r_TID;
    sc_in< sc_lv<8> > in_r_TDEST;
    sc_in< sc_lv<16> > in_r_TUSER;
    sc_in< sc_lv<1> > in_r_TLAST;
    sc_out< sc_lv<96> > in_write_n_V_V_din;
    sc_in< sc_logic > in_write_n_V_V_full_n;
    sc_out< sc_logic > in_write_n_V_V_write;
    sc_out< sc_lv<32> > in_sub_max_r_V_V_din;
    sc_in< sc_logic > in_sub_max_r_V_V_full_n;
    sc_out< sc_logic > in_sub_max_r_V_V_write;
    sc_out< sc_lv<32> > in_sub_max_c_V_V_din;
    sc_in< sc_logic > in_sub_max_c_V_V_full_n;
    sc_out< sc_logic > in_sub_max_c_V_V_write;
    sc_out< sc_lv<32> > max_input_V_V_din;
    sc_in< sc_logic > max_input_V_V_full_n;
    sc_out< sc_logic > max_input_V_V_write;
    sc_out< sc_lv<512> > in_sub_max_V_V_din;
    sc_in< sc_logic > in_sub_max_V_V_full_n;
    sc_out< sc_logic > in_sub_max_V_V_write;


    // Module declarations
    read_data(sc_module_name name);
    SC_HAS_PROCESS(read_data);

    ~read_data();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<512> > in_V_data_V_0_data_out;
    sc_signal< sc_logic > in_V_data_V_0_vld_in;
    sc_signal< sc_logic > in_V_data_V_0_vld_out;
    sc_signal< sc_logic > in_V_data_V_0_ack_in;
    sc_signal< sc_logic > in_V_data_V_0_ack_out;
    sc_signal< sc_lv<512> > in_V_data_V_0_payload_A;
    sc_signal< sc_lv<512> > in_V_data_V_0_payload_B;
    sc_signal< sc_logic > in_V_data_V_0_sel_rd;
    sc_signal< sc_logic > in_V_data_V_0_sel_wr;
    sc_signal< sc_logic > in_V_data_V_0_sel;
    sc_signal< sc_logic > in_V_data_V_0_load_A;
    sc_signal< sc_logic > in_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > in_V_data_V_0_state;
    sc_signal< sc_logic > in_V_data_V_0_state_cmp_full;
    sc_signal< sc_logic > in_V_last_V_0_vld_in;
    sc_signal< sc_logic > in_V_last_V_0_ack_out;
    sc_signal< sc_lv<2> > in_V_last_V_0_state;
    sc_signal< sc_logic > in_r_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_268_p2;
    sc_signal< sc_logic > in_write_n_V_V_blk_n;
    sc_signal< sc_logic > in_sub_max_r_V_V_blk_n;
    sc_signal< sc_logic > in_sub_max_c_V_V_blk_n;
    sc_signal< sc_logic > max_input_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > tmp_20_i_reg_769;
    sc_signal< sc_logic > in_sub_max_V_V_blk_n;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_736;
    sc_signal< sc_lv<60> > indvar_flatten_reg_193;
    sc_signal< sc_lv<28> > packet_i_reg_204;
    sc_signal< sc_lv<28> > unrolled_iterations_fu_224_p4;
    sc_signal< sc_lv<28> > unrolled_iterations_reg_721;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<29> > tmp_i_fu_248_p2;
    sc_signal< sc_lv<29> > tmp_i_reg_726;
    sc_signal< sc_lv<60> > bound_fu_262_p2;
    sc_signal< sc_lv<60> > bound_reg_731;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<60> > indvar_flatten_next_fu_273_p2;
    sc_signal< sc_lv<1> > tmp_16_i_fu_296_p2;
    sc_signal< sc_lv<1> > tmp_16_i_reg_745;
    sc_signal< sc_lv<512> > tmp_data_V_2_reg_750;
    sc_signal< sc_lv<32> > max_3_0_V_fu_630_p3;
    sc_signal< sc_lv<32> > max_3_0_V_reg_755;
    sc_signal< sc_lv<32> > max_val_V_fu_644_p3;
    sc_signal< sc_lv<32> > max_val_V_reg_762;
    sc_signal< sc_lv<1> > tmp_20_i_fu_652_p2;
    sc_signal< sc_lv<28> > packet_fu_657_p2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_lv<32> > num_batches_fu_219_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > tmp_V_14_fu_701_p3;
    sc_signal< sc_lv<32> > tmp_V_fu_140;
    sc_signal< sc_lv<29> > unrolled_iterations_s_fu_239_p1;
    sc_signal< sc_lv<28> > bound_fu_262_p0;
    sc_signal< sc_lv<32> > bound_fu_262_p1;
    sc_signal< sc_lv<1> > exitcond2_fu_279_p2;
    sc_signal< sc_lv<28> > packet_i_mid2_fu_284_p3;
    sc_signal< sc_lv<32> > tmp_fu_302_p1;
    sc_signal< sc_lv<32> > p_Result_20_i_fu_306_p4;
    sc_signal< sc_lv<1> > tmp_25_i_fu_316_p2;
    sc_signal< sc_lv<32> > p_Result_19_1_i_fu_330_p4;
    sc_signal< sc_lv<32> > p_Result_20_1_i_fu_340_p4;
    sc_signal< sc_lv<1> > tmp_25_1_i_fu_350_p2;
    sc_signal< sc_lv<32> > p_Result_19_2_i_fu_364_p4;
    sc_signal< sc_lv<32> > p_Result_20_2_i_fu_374_p4;
    sc_signal< sc_lv<1> > tmp_25_2_i_fu_384_p2;
    sc_signal< sc_lv<32> > p_Result_19_3_i_fu_398_p4;
    sc_signal< sc_lv<32> > p_Result_20_3_i_fu_408_p4;
    sc_signal< sc_lv<1> > tmp_25_3_i_fu_418_p2;
    sc_signal< sc_lv<32> > p_Result_19_4_i_fu_432_p4;
    sc_signal< sc_lv<32> > p_Result_20_4_i_fu_442_p4;
    sc_signal< sc_lv<1> > tmp_25_4_i_fu_452_p2;
    sc_signal< sc_lv<32> > p_Result_19_5_i_fu_466_p4;
    sc_signal< sc_lv<32> > p_Result_20_5_i_fu_476_p4;
    sc_signal< sc_lv<1> > tmp_25_5_i_fu_486_p2;
    sc_signal< sc_lv<32> > p_Result_19_6_i_fu_500_p4;
    sc_signal< sc_lv<32> > p_Result_20_6_i_fu_510_p4;
    sc_signal< sc_lv<1> > tmp_25_6_i_fu_520_p2;
    sc_signal< sc_lv<32> > p_Result_19_7_i_fu_534_p4;
    sc_signal< sc_lv<32> > p_Result_20_7_i_fu_544_p4;
    sc_signal< sc_lv<1> > tmp_25_7_i_fu_554_p2;
    sc_signal< sc_lv<32> > max_1_0_V_fu_322_p3;
    sc_signal< sc_lv<32> > max_1_1_V_fu_356_p3;
    sc_signal< sc_lv<1> > tmp_34_i_fu_568_p2;
    sc_signal< sc_lv<32> > max_1_2_V_fu_390_p3;
    sc_signal< sc_lv<32> > max_1_3_V_fu_424_p3;
    sc_signal< sc_lv<1> > tmp_34_1_i_fu_582_p2;
    sc_signal< sc_lv<32> > max_1_4_V_fu_458_p3;
    sc_signal< sc_lv<32> > max_1_5_V_fu_492_p3;
    sc_signal< sc_lv<1> > tmp_34_2_i_fu_596_p2;
    sc_signal< sc_lv<32> > max_1_6_V_fu_526_p3;
    sc_signal< sc_lv<32> > max_1_7_V_fu_560_p3;
    sc_signal< sc_lv<1> > tmp_34_3_i_fu_610_p2;
    sc_signal< sc_lv<32> > max_2_0_V_fu_574_p3;
    sc_signal< sc_lv<32> > max_2_1_V_fu_588_p3;
    sc_signal< sc_lv<1> > tmp_42_i_fu_624_p2;
    sc_signal< sc_lv<32> > max_2_2_V_fu_602_p3;
    sc_signal< sc_lv<32> > max_2_3_V_fu_616_p3;
    sc_signal< sc_lv<1> > tmp_42_1_i_fu_638_p2;
    sc_signal< sc_lv<29> > packet_cast_i_fu_292_p1;
    sc_signal< sc_lv<32> > p_0203_1_i_fu_666_p3;
    sc_signal< sc_lv<1> > tmp_18_i_fu_677_p2;
    sc_signal< sc_lv<1> > tmp_19_i_fu_689_p2;
    sc_signal< sc_lv<1> > tmp_17_i_fu_673_p2;
    sc_signal< sc_lv<32> > storemerge10_0203_s_fu_682_p3;
    sc_signal< sc_lv<32> > max_val_V_1_0203_1_fu_694_p3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<60> > bound_fu_262_p00;
    sc_signal< sc_lv<60> > bound_fu_262_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state4;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<60> ap_const_lv60_0;
    static const sc_lv<28> ap_const_lv28_0;
    static const sc_lv<32> ap_const_lv32_24;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<29> ap_const_lv29_1FFFFFFF;
    static const sc_lv<60> ap_const_lv60_1;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_5F;
    static const sc_lv<32> ap_const_lv32_60;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<32> ap_const_lv32_80;
    static const sc_lv<32> ap_const_lv32_9F;
    static const sc_lv<32> ap_const_lv32_A0;
    static const sc_lv<32> ap_const_lv32_BF;
    static const sc_lv<32> ap_const_lv32_C0;
    static const sc_lv<32> ap_const_lv32_DF;
    static const sc_lv<32> ap_const_lv32_E0;
    static const sc_lv<32> ap_const_lv32_FF;
    static const sc_lv<32> ap_const_lv32_100;
    static const sc_lv<32> ap_const_lv32_11F;
    static const sc_lv<32> ap_const_lv32_120;
    static const sc_lv<32> ap_const_lv32_13F;
    static const sc_lv<32> ap_const_lv32_140;
    static const sc_lv<32> ap_const_lv32_15F;
    static const sc_lv<32> ap_const_lv32_160;
    static const sc_lv<32> ap_const_lv32_17F;
    static const sc_lv<32> ap_const_lv32_180;
    static const sc_lv<32> ap_const_lv32_19F;
    static const sc_lv<32> ap_const_lv32_1A0;
    static const sc_lv<32> ap_const_lv32_1BF;
    static const sc_lv<32> ap_const_lv32_1C0;
    static const sc_lv<32> ap_const_lv32_1DF;
    static const sc_lv<32> ap_const_lv32_1E0;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<28> ap_const_lv28_1;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_bound_fu_262_p0();
    void thread_bound_fu_262_p00();
    void thread_bound_fu_262_p1();
    void thread_bound_fu_262_p10();
    void thread_bound_fu_262_p2();
    void thread_exitcond2_fu_279_p2();
    void thread_exitcond_flatten_fu_268_p2();
    void thread_in_V_data_V_0_ack_in();
    void thread_in_V_data_V_0_ack_out();
    void thread_in_V_data_V_0_data_out();
    void thread_in_V_data_V_0_load_A();
    void thread_in_V_data_V_0_load_B();
    void thread_in_V_data_V_0_sel();
    void thread_in_V_data_V_0_state_cmp_full();
    void thread_in_V_data_V_0_vld_in();
    void thread_in_V_data_V_0_vld_out();
    void thread_in_V_last_V_0_ack_out();
    void thread_in_V_last_V_0_vld_in();
    void thread_in_r_TDATA_blk_n();
    void thread_in_r_TREADY();
    void thread_in_sub_max_V_V_blk_n();
    void thread_in_sub_max_V_V_din();
    void thread_in_sub_max_V_V_write();
    void thread_in_sub_max_c_V_V_blk_n();
    void thread_in_sub_max_c_V_V_din();
    void thread_in_sub_max_c_V_V_write();
    void thread_in_sub_max_r_V_V_blk_n();
    void thread_in_sub_max_r_V_V_din();
    void thread_in_sub_max_r_V_V_write();
    void thread_in_write_n_V_V_blk_n();
    void thread_in_write_n_V_V_din();
    void thread_in_write_n_V_V_write();
    void thread_indvar_flatten_next_fu_273_p2();
    void thread_internal_ap_ready();
    void thread_max_1_0_V_fu_322_p3();
    void thread_max_1_1_V_fu_356_p3();
    void thread_max_1_2_V_fu_390_p3();
    void thread_max_1_3_V_fu_424_p3();
    void thread_max_1_4_V_fu_458_p3();
    void thread_max_1_5_V_fu_492_p3();
    void thread_max_1_6_V_fu_526_p3();
    void thread_max_1_7_V_fu_560_p3();
    void thread_max_2_0_V_fu_574_p3();
    void thread_max_2_1_V_fu_588_p3();
    void thread_max_2_2_V_fu_602_p3();
    void thread_max_2_3_V_fu_616_p3();
    void thread_max_3_0_V_fu_630_p3();
    void thread_max_input_V_V_blk_n();
    void thread_max_input_V_V_din();
    void thread_max_input_V_V_write();
    void thread_max_val_V_1_0203_1_fu_694_p3();
    void thread_max_val_V_fu_644_p3();
    void thread_num_batches_fu_219_p1();
    void thread_p_0203_1_i_fu_666_p3();
    void thread_p_Result_19_1_i_fu_330_p4();
    void thread_p_Result_19_2_i_fu_364_p4();
    void thread_p_Result_19_3_i_fu_398_p4();
    void thread_p_Result_19_4_i_fu_432_p4();
    void thread_p_Result_19_5_i_fu_466_p4();
    void thread_p_Result_19_6_i_fu_500_p4();
    void thread_p_Result_19_7_i_fu_534_p4();
    void thread_p_Result_20_1_i_fu_340_p4();
    void thread_p_Result_20_2_i_fu_374_p4();
    void thread_p_Result_20_3_i_fu_408_p4();
    void thread_p_Result_20_4_i_fu_442_p4();
    void thread_p_Result_20_5_i_fu_476_p4();
    void thread_p_Result_20_6_i_fu_510_p4();
    void thread_p_Result_20_7_i_fu_544_p4();
    void thread_p_Result_20_i_fu_306_p4();
    void thread_packet_cast_i_fu_292_p1();
    void thread_packet_fu_657_p2();
    void thread_packet_i_mid2_fu_284_p3();
    void thread_real_start();
    void thread_start_out();
    void thread_start_write();
    void thread_storemerge10_0203_s_fu_682_p3();
    void thread_tmp_16_i_fu_296_p2();
    void thread_tmp_17_i_fu_673_p2();
    void thread_tmp_18_i_fu_677_p2();
    void thread_tmp_19_i_fu_689_p2();
    void thread_tmp_20_i_fu_652_p2();
    void thread_tmp_25_1_i_fu_350_p2();
    void thread_tmp_25_2_i_fu_384_p2();
    void thread_tmp_25_3_i_fu_418_p2();
    void thread_tmp_25_4_i_fu_452_p2();
    void thread_tmp_25_5_i_fu_486_p2();
    void thread_tmp_25_6_i_fu_520_p2();
    void thread_tmp_25_7_i_fu_554_p2();
    void thread_tmp_25_i_fu_316_p2();
    void thread_tmp_34_1_i_fu_582_p2();
    void thread_tmp_34_2_i_fu_596_p2();
    void thread_tmp_34_3_i_fu_610_p2();
    void thread_tmp_34_i_fu_568_p2();
    void thread_tmp_42_1_i_fu_638_p2();
    void thread_tmp_42_i_fu_624_p2();
    void thread_tmp_V_14_fu_701_p3();
    void thread_tmp_fu_302_p1();
    void thread_tmp_i_fu_248_p2();
    void thread_unrolled_iterations_fu_224_p4();
    void thread_unrolled_iterations_s_fu_239_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
