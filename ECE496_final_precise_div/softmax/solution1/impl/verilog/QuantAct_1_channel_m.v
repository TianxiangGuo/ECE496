// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module QuantAct_1_channel_m (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_quant_iter_c_V_V_dout,
        in_quant_iter_c_V_V_empty_n,
        in_quant_iter_c_V_V_read,
        in_quant_iter_r_V_V_dout,
        in_quant_iter_r_V_V_empty_n,
        in_quant_iter_r_V_V_read,
        in_proc_2_iter_r_V_V_din,
        in_proc_2_iter_r_V_V_full_n,
        in_proc_2_iter_r_V_V_write,
        in_proc_2_iter_c_V_V_din,
        in_proc_2_iter_c_V_V_full_n,
        in_proc_2_iter_c_V_V_write,
        sum_V_V_din,
        sum_V_V_full_n,
        sum_V_V_write,
        in_quant_V_V_dout,
        in_quant_V_V_empty_n,
        in_quant_V_V_read,
        in_proc_2_V_V_din,
        in_proc_2_V_V_full_n,
        in_proc_2_V_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state9 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] in_quant_iter_c_V_V_dout;
input   in_quant_iter_c_V_V_empty_n;
output   in_quant_iter_c_V_V_read;
input  [31:0] in_quant_iter_r_V_V_dout;
input   in_quant_iter_r_V_V_empty_n;
output   in_quant_iter_r_V_V_read;
output  [31:0] in_proc_2_iter_r_V_V_din;
input   in_proc_2_iter_r_V_V_full_n;
output   in_proc_2_iter_r_V_V_write;
output  [31:0] in_proc_2_iter_c_V_V_din;
input   in_proc_2_iter_c_V_V_full_n;
output   in_proc_2_iter_c_V_V_write;
output  [31:0] sum_V_V_din;
input   sum_V_V_full_n;
output   sum_V_V_write;
input  [1023:0] in_quant_V_V_dout;
input   in_quant_V_V_empty_n;
output   in_quant_V_V_read;
output  [255:0] in_proc_2_V_V_din;
input   in_proc_2_V_V_full_n;
output   in_proc_2_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_quant_iter_c_V_V_read;
reg in_quant_iter_r_V_V_read;
reg in_proc_2_iter_r_V_V_write;
reg in_proc_2_iter_c_V_V_write;
reg sum_V_V_write;
reg in_quant_V_V_read;
reg in_proc_2_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    in_quant_iter_c_V_V_blk_n;
reg    in_quant_iter_r_V_V_blk_n;
reg    in_proc_2_iter_r_V_V_blk_n;
reg    in_proc_2_iter_c_V_V_blk_n;
reg    sum_V_V_blk_n;
reg    ap_enable_reg_pp0_iter5;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_22_i_reg_1752;
reg   [0:0] tmp_22_i_reg_1752_pp0_iter4_reg;
reg    in_quant_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] exitcond_flatten_reg_1723;
reg    in_proc_2_V_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] exitcond_flatten_reg_1723_pp0_iter3_reg;
reg   [63:0] indvar_flatten_reg_246;
reg   [31:0] l_i_reg_257;
reg   [31:0] tmp_V_26_reg_1701;
reg    ap_block_state1;
reg   [31:0] tmp_V_reg_1708;
wire   [31:0] tmp_i_fu_268_p2;
reg   [31:0] tmp_i_reg_1713;
wire    ap_CS_fsm_state2;
wire   [63:0] bound_fu_279_p2;
reg   [63:0] bound_reg_1718;
wire   [0:0] exitcond_flatten_fu_285_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
reg    ap_block_state7_pp0_stage0_iter4;
reg    ap_block_state8_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten_reg_1723_pp0_iter1_reg;
reg   [0:0] exitcond_flatten_reg_1723_pp0_iter2_reg;
wire   [63:0] indvar_flatten_next_fu_290_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_21_i_fu_309_p2;
reg   [0:0] tmp_21_i_reg_1732;
reg   [0:0] tmp_21_i_reg_1732_pp0_iter1_reg;
reg   [0:0] tmp_21_i_reg_1732_pp0_iter2_reg;
reg   [0:0] tmp_21_i_reg_1732_pp0_iter3_reg;
wire   [0:0] tmp_22_i_fu_315_p2;
reg   [0:0] tmp_22_i_reg_1752_pp0_iter1_reg;
reg   [0:0] tmp_22_i_reg_1752_pp0_iter2_reg;
reg   [0:0] tmp_22_i_reg_1752_pp0_iter3_reg;
wire   [31:0] l_fu_320_p2;
wire   [63:0] tmp_164_fu_326_p1;
reg  signed [63:0] tmp_164_reg_1761;
reg  signed [63:0] p_Result_28_1_i_reg_1766;
reg  signed [63:0] p_Result_28_2_i_reg_1771;
reg  signed [63:0] p_Result_28_3_i_reg_1776;
reg  signed [63:0] p_Result_28_4_i_reg_1781;
reg  signed [63:0] p_Result_28_5_i_reg_1786;
reg  signed [63:0] p_Result_28_6_i_reg_1791;
reg  signed [63:0] p_Result_28_7_i_reg_1796;
reg  signed [63:0] p_Result_28_8_i_reg_1801;
reg  signed [63:0] p_Result_28_9_i_reg_1806;
reg  signed [63:0] p_Result_28_i_reg_1811;
reg  signed [63:0] p_Result_28_10_i_reg_1816;
reg  signed [63:0] p_Result_28_11_i_reg_1821;
reg  signed [63:0] p_Result_28_12_i_reg_1826;
reg  signed [63:0] p_Result_28_13_i_reg_1831;
reg  signed [63:0] p_Result_28_14_i_reg_1836;
reg   [0:0] tmp_165_reg_1921;
reg   [15:0] read2_V_i_reg_1926;
reg   [0:0] tmp_166_reg_1932;
reg   [15:0] read2_V_i_357_reg_1937;
reg   [0:0] tmp_167_reg_1943;
reg   [15:0] read2_V_2_i_reg_1948;
reg   [0:0] tmp_168_reg_1954;
reg   [15:0] read2_V_3_i_reg_1959;
reg   [0:0] tmp_169_reg_1965;
reg   [15:0] read2_V_4_i_reg_1970;
reg   [0:0] tmp_170_reg_1976;
reg   [15:0] read2_V_5_i_reg_1981;
reg   [0:0] tmp_171_reg_1987;
reg   [15:0] read2_V_6_i_reg_1992;
reg   [0:0] tmp_172_reg_1998;
reg   [15:0] read2_V_7_i_reg_2003;
reg   [0:0] tmp_173_reg_2009;
reg   [15:0] read2_V_8_i_reg_2014;
reg   [0:0] tmp_174_reg_2020;
reg   [15:0] read2_V_9_i_reg_2025;
reg   [0:0] tmp_175_reg_2031;
reg   [15:0] read2_V_10_i_reg_2036;
reg   [0:0] tmp_176_reg_2042;
reg   [15:0] read2_V_11_i_reg_2047;
reg   [0:0] tmp_177_reg_2053;
reg   [15:0] read2_V_12_i_reg_2058;
reg   [0:0] tmp_178_reg_2064;
reg   [15:0] read2_V_13_i_reg_2069;
reg   [0:0] tmp_179_reg_2075;
reg   [15:0] read2_V_14_i_reg_2080;
reg   [0:0] tmp_180_reg_2086;
reg   [15:0] read2_V_15_i_reg_2091;
wire   [31:0] sum_0_V_fu_981_p3;
reg   [31:0] sum_0_V_reg_2097;
wire   [31:0] sum_1_V_fu_1009_p3;
reg   [31:0] sum_1_V_reg_2102;
wire   [31:0] sum_4_V_fu_1093_p3;
reg   [31:0] sum_4_V_reg_2107;
wire   [31:0] sum_5_V_fu_1121_p3;
reg   [31:0] sum_5_V_reg_2112;
wire   [31:0] sum_12_V_fu_1317_p3;
reg   [31:0] sum_12_V_reg_2117;
wire   [31:0] sum_13_V_fu_1345_p3;
reg   [31:0] sum_13_V_reg_2122;
wire   [31:0] tmp3_fu_1525_p2;
reg   [31:0] tmp3_reg_2127;
wire   [31:0] tmp6_fu_1531_p2;
reg   [31:0] tmp6_reg_2132;
wire   [31:0] tmp9_fu_1537_p2;
reg   [31:0] tmp9_reg_2137;
wire   [31:0] tmp10_fu_1543_p2;
reg   [31:0] tmp10_reg_2142;
wire   [31:0] tmp13_fu_1549_p2;
reg   [31:0] tmp13_reg_2147;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_block_pp0_stage0_01001;
reg   [31:0] sum_0_V_1_fu_134;
reg   [31:0] sum_1_V_1_fu_138;
reg   [31:0] sum_2_V_1_fu_142;
wire   [31:0] sum_2_V_fu_1037_p3;
reg   [31:0] sum_3_V_1_fu_146;
wire   [31:0] sum_3_V_fu_1065_p3;
reg   [31:0] sum_4_V_1_fu_150;
reg   [31:0] sum_5_V_1_fu_154;
reg   [31:0] sum_6_V_1_fu_158;
wire   [31:0] sum_6_V_fu_1149_p3;
reg   [31:0] sum_7_V_1_fu_162;
wire   [31:0] sum_7_V_fu_1177_p3;
reg   [31:0] sum_8_V_1_fu_166;
wire   [31:0] sum_8_V_fu_1205_p3;
reg   [31:0] sum_9_V_1_fu_170;
wire   [31:0] sum_9_V_fu_1233_p3;
reg   [31:0] sum_10_V_1_fu_174;
wire   [31:0] sum_10_V_fu_1261_p3;
reg   [31:0] sum_11_V_1_fu_178;
wire   [31:0] sum_11_V_fu_1289_p3;
reg   [31:0] sum_12_V_1_fu_182;
reg   [31:0] sum_13_V_1_fu_186;
reg   [31:0] sum_14_V_1_fu_190;
wire   [31:0] sum_14_V_fu_1373_p3;
reg   [31:0] sum_15_V_1_fu_194;
wire   [31:0] sum_15_V_fu_1401_p3;
wire   [31:0] bound_fu_279_p0;
wire   [31:0] bound_fu_279_p1;
wire   [0:0] exitcond_i2_fu_296_p2;
wire   [31:0] l_i_mid2_fu_301_p3;
wire   [31:0] grp_fu_483_p0;
wire   [31:0] grp_fu_492_p0;
wire   [31:0] grp_fu_501_p0;
wire   [31:0] grp_fu_510_p0;
wire   [31:0] grp_fu_519_p0;
wire   [31:0] grp_fu_528_p0;
wire   [31:0] grp_fu_537_p0;
wire   [31:0] grp_fu_546_p0;
wire   [31:0] grp_fu_555_p0;
wire   [31:0] grp_fu_564_p0;
wire   [31:0] grp_fu_573_p0;
wire   [31:0] grp_fu_582_p0;
wire   [31:0] grp_fu_591_p0;
wire   [31:0] grp_fu_600_p0;
wire   [31:0] grp_fu_609_p0;
wire   [31:0] grp_fu_618_p0;
wire   [94:0] grp_fu_483_p2;
wire   [94:0] grp_fu_492_p2;
wire   [94:0] grp_fu_501_p2;
wire   [94:0] grp_fu_510_p2;
wire   [94:0] grp_fu_519_p2;
wire   [94:0] grp_fu_528_p2;
wire   [94:0] grp_fu_537_p2;
wire   [94:0] grp_fu_546_p2;
wire   [94:0] grp_fu_555_p2;
wire   [94:0] grp_fu_564_p2;
wire   [94:0] grp_fu_573_p2;
wire   [94:0] grp_fu_582_p2;
wire   [94:0] grp_fu_591_p2;
wire   [94:0] grp_fu_600_p2;
wire   [94:0] grp_fu_609_p2;
wire   [94:0] grp_fu_618_p2;
wire   [15:0] read2_V_1_i_fu_960_p2;
wire  signed [15:0] p_1_i_fu_965_p3;
wire  signed [31:0] p_2_i_fu_971_p1;
wire   [31:0] tmp_75_i_fu_975_p2;
wire   [15:0] read2_V_1_1_i_fu_988_p2;
wire  signed [15:0] p_1_1_i_fu_993_p3;
wire  signed [31:0] p_2_1_i_fu_999_p1;
wire   [31:0] tmp_75_1_i_fu_1003_p2;
wire   [15:0] read2_V_1_2_i_fu_1016_p2;
wire  signed [15:0] p_1_2_i_fu_1021_p3;
wire  signed [31:0] p_2_2_i_fu_1027_p1;
wire   [31:0] tmp_75_2_i_fu_1031_p2;
wire   [15:0] read2_V_1_3_i_fu_1044_p2;
wire  signed [15:0] p_1_3_i_fu_1049_p3;
wire  signed [31:0] p_2_3_i_fu_1055_p1;
wire   [31:0] tmp_75_3_i_fu_1059_p2;
wire   [15:0] read2_V_1_4_i_fu_1072_p2;
wire  signed [15:0] p_1_4_i_fu_1077_p3;
wire  signed [31:0] p_2_4_i_fu_1083_p1;
wire   [31:0] tmp_75_4_i_fu_1087_p2;
wire   [15:0] read2_V_1_5_i_fu_1100_p2;
wire  signed [15:0] p_1_5_i_fu_1105_p3;
wire  signed [31:0] p_2_5_i_fu_1111_p1;
wire   [31:0] tmp_75_5_i_fu_1115_p2;
wire   [15:0] read2_V_1_6_i_fu_1128_p2;
wire  signed [15:0] p_1_6_i_fu_1133_p3;
wire  signed [31:0] p_2_6_i_fu_1139_p1;
wire   [31:0] tmp_75_6_i_fu_1143_p2;
wire   [15:0] read2_V_1_7_i_fu_1156_p2;
wire  signed [15:0] p_1_7_i_fu_1161_p3;
wire  signed [31:0] p_2_7_i_fu_1167_p1;
wire   [31:0] tmp_75_7_i_fu_1171_p2;
wire   [15:0] read2_V_1_8_i_fu_1184_p2;
wire  signed [15:0] p_1_8_i_fu_1189_p3;
wire  signed [31:0] p_2_8_i_fu_1195_p1;
wire   [31:0] tmp_75_8_i_fu_1199_p2;
wire   [15:0] read2_V_1_9_i_fu_1212_p2;
wire  signed [15:0] p_1_9_i_fu_1217_p3;
wire  signed [31:0] p_2_9_i_fu_1223_p1;
wire   [31:0] tmp_75_9_i_fu_1227_p2;
wire   [15:0] read2_V_1_i_358_fu_1240_p2;
wire  signed [15:0] p_1_i_359_fu_1245_p3;
wire  signed [31:0] p_2_i_360_fu_1251_p1;
wire   [31:0] tmp_75_i_361_fu_1255_p2;
wire   [15:0] read2_V_1_10_i_fu_1268_p2;
wire  signed [15:0] p_1_10_i_fu_1273_p3;
wire  signed [31:0] p_2_10_i_fu_1279_p1;
wire   [31:0] tmp_75_10_i_fu_1283_p2;
wire   [15:0] read2_V_1_11_i_fu_1296_p2;
wire  signed [15:0] p_1_11_i_fu_1301_p3;
wire  signed [31:0] p_2_11_i_fu_1307_p1;
wire   [31:0] tmp_75_11_i_fu_1311_p2;
wire   [15:0] read2_V_1_12_i_fu_1324_p2;
wire  signed [15:0] p_1_12_i_fu_1329_p3;
wire  signed [31:0] p_2_12_i_fu_1335_p1;
wire   [31:0] tmp_75_12_i_fu_1339_p2;
wire   [15:0] read2_V_1_13_i_fu_1352_p2;
wire  signed [15:0] p_1_13_i_fu_1357_p3;
wire  signed [31:0] p_2_13_i_fu_1363_p1;
wire   [31:0] tmp_75_13_i_fu_1367_p2;
wire   [15:0] read2_V_1_14_i_fu_1380_p2;
wire  signed [15:0] p_1_14_i_fu_1385_p3;
wire  signed [31:0] p_2_14_i_fu_1391_p1;
wire   [31:0] tmp_75_14_i_fu_1395_p2;
wire   [31:0] tmp2_fu_1555_p2;
wire   [31:0] tmp5_fu_1564_p2;
wire   [31:0] tmp4_fu_1568_p2;
wire   [31:0] tmp1_fu_1559_p2;
wire   [31:0] tmp12_fu_1583_p2;
wire   [31:0] tmp11_fu_1587_p2;
wire   [31:0] tmp8_fu_1579_p2;
wire   [31:0] tmp7_fu_1592_p2;
wire   [31:0] tmp_fu_1573_p2;
reg    grp_fu_483_ce;
reg    grp_fu_492_ce;
reg    grp_fu_501_ce;
reg    grp_fu_510_ce;
reg    grp_fu_519_ce;
reg    grp_fu_528_ce;
reg    grp_fu_537_ce;
reg    grp_fu_546_ce;
reg    grp_fu_555_ce;
reg    grp_fu_564_ce;
reg    grp_fu_573_ce;
reg    grp_fu_582_ce;
reg    grp_fu_591_ce;
reg    grp_fu_600_ce;
reg    grp_fu_609_ce;
reg    grp_fu_618_ce;
wire    ap_CS_fsm_state9;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [63:0] bound_fu_279_p00;
wire   [63:0] bound_fu_279_p10;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

softmax_mul_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
softmax_mul_32ns_bkb_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_483_p0),
    .din1(tmp_164_reg_1761),
    .ce(grp_fu_483_ce),
    .dout(grp_fu_483_p2)
);

softmax_mul_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
softmax_mul_32ns_bkb_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_492_p0),
    .din1(p_Result_28_1_i_reg_1766),
    .ce(grp_fu_492_ce),
    .dout(grp_fu_492_p2)
);

softmax_mul_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
softmax_mul_32ns_bkb_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_501_p0),
    .din1(p_Result_28_2_i_reg_1771),
    .ce(grp_fu_501_ce),
    .dout(grp_fu_501_p2)
);

softmax_mul_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
softmax_mul_32ns_bkb_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_510_p0),
    .din1(p_Result_28_3_i_reg_1776),
    .ce(grp_fu_510_ce),
    .dout(grp_fu_510_p2)
);

softmax_mul_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
softmax_mul_32ns_bkb_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_519_p0),
    .din1(p_Result_28_4_i_reg_1781),
    .ce(grp_fu_519_ce),
    .dout(grp_fu_519_p2)
);

softmax_mul_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
softmax_mul_32ns_bkb_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_528_p0),
    .din1(p_Result_28_5_i_reg_1786),
    .ce(grp_fu_528_ce),
    .dout(grp_fu_528_p2)
);

softmax_mul_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
softmax_mul_32ns_bkb_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_537_p0),
    .din1(p_Result_28_6_i_reg_1791),
    .ce(grp_fu_537_ce),
    .dout(grp_fu_537_p2)
);

softmax_mul_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
softmax_mul_32ns_bkb_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_546_p0),
    .din1(p_Result_28_7_i_reg_1796),
    .ce(grp_fu_546_ce),
    .dout(grp_fu_546_p2)
);

softmax_mul_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
softmax_mul_32ns_bkb_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_555_p0),
    .din1(p_Result_28_8_i_reg_1801),
    .ce(grp_fu_555_ce),
    .dout(grp_fu_555_p2)
);

softmax_mul_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
softmax_mul_32ns_bkb_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_564_p0),
    .din1(p_Result_28_9_i_reg_1806),
    .ce(grp_fu_564_ce),
    .dout(grp_fu_564_p2)
);

softmax_mul_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
softmax_mul_32ns_bkb_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_573_p0),
    .din1(p_Result_28_i_reg_1811),
    .ce(grp_fu_573_ce),
    .dout(grp_fu_573_p2)
);

softmax_mul_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
softmax_mul_32ns_bkb_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_582_p0),
    .din1(p_Result_28_10_i_reg_1816),
    .ce(grp_fu_582_ce),
    .dout(grp_fu_582_p2)
);

softmax_mul_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
softmax_mul_32ns_bkb_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_591_p0),
    .din1(p_Result_28_11_i_reg_1821),
    .ce(grp_fu_591_ce),
    .dout(grp_fu_591_p2)
);

softmax_mul_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
softmax_mul_32ns_bkb_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_600_p0),
    .din1(p_Result_28_12_i_reg_1826),
    .ce(grp_fu_600_ce),
    .dout(grp_fu_600_p2)
);

softmax_mul_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
softmax_mul_32ns_bkb_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_609_p0),
    .din1(p_Result_28_13_i_reg_1831),
    .ce(grp_fu_609_ce),
    .dout(grp_fu_609_p2)
);

softmax_mul_32ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 95 ))
softmax_mul_32ns_bkb_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_618_p0),
    .din1(p_Result_28_14_i_reg_1836),
    .ce(grp_fu_618_ce),
    .dout(grp_fu_618_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_285_p2 == 1'd0))) begin
        indvar_flatten_reg_246 <= indvar_flatten_next_fu_290_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten_reg_246 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_285_p2 == 1'd0))) begin
        l_i_reg_257 <= l_fu_320_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        l_i_reg_257 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bound_reg_1718 <= bound_fu_279_p2;
        tmp_i_reg_1713 <= tmp_i_fu_268_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten_reg_1723 <= exitcond_flatten_fu_285_p2;
        exitcond_flatten_reg_1723_pp0_iter1_reg <= exitcond_flatten_reg_1723;
        tmp_21_i_reg_1732_pp0_iter1_reg <= tmp_21_i_reg_1732;
        tmp_22_i_reg_1752_pp0_iter1_reg <= tmp_22_i_reg_1752;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond_flatten_reg_1723_pp0_iter2_reg <= exitcond_flatten_reg_1723_pp0_iter1_reg;
        exitcond_flatten_reg_1723_pp0_iter3_reg <= exitcond_flatten_reg_1723_pp0_iter2_reg;
        tmp_21_i_reg_1732_pp0_iter2_reg <= tmp_21_i_reg_1732_pp0_iter1_reg;
        tmp_21_i_reg_1732_pp0_iter3_reg <= tmp_21_i_reg_1732_pp0_iter2_reg;
        tmp_22_i_reg_1752_pp0_iter2_reg <= tmp_22_i_reg_1752_pp0_iter1_reg;
        tmp_22_i_reg_1752_pp0_iter3_reg <= tmp_22_i_reg_1752_pp0_iter2_reg;
        tmp_22_i_reg_1752_pp0_iter4_reg <= tmp_22_i_reg_1752_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1723 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_28_10_i_reg_1816 <= {{in_quant_V_V_dout[767:704]}};
        p_Result_28_11_i_reg_1821 <= {{in_quant_V_V_dout[831:768]}};
        p_Result_28_12_i_reg_1826 <= {{in_quant_V_V_dout[895:832]}};
        p_Result_28_13_i_reg_1831 <= {{in_quant_V_V_dout[959:896]}};
        p_Result_28_14_i_reg_1836 <= {{in_quant_V_V_dout[1023:960]}};
        p_Result_28_1_i_reg_1766 <= {{in_quant_V_V_dout[127:64]}};
        p_Result_28_2_i_reg_1771 <= {{in_quant_V_V_dout[191:128]}};
        p_Result_28_3_i_reg_1776 <= {{in_quant_V_V_dout[255:192]}};
        p_Result_28_4_i_reg_1781 <= {{in_quant_V_V_dout[319:256]}};
        p_Result_28_5_i_reg_1786 <= {{in_quant_V_V_dout[383:320]}};
        p_Result_28_6_i_reg_1791 <= {{in_quant_V_V_dout[447:384]}};
        p_Result_28_7_i_reg_1796 <= {{in_quant_V_V_dout[511:448]}};
        p_Result_28_8_i_reg_1801 <= {{in_quant_V_V_dout[575:512]}};
        p_Result_28_9_i_reg_1806 <= {{in_quant_V_V_dout[639:576]}};
        p_Result_28_i_reg_1811 <= {{in_quant_V_V_dout[703:640]}};
        tmp_164_reg_1761 <= tmp_164_fu_326_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1723_pp0_iter2_reg == 1'd0))) begin
        read2_V_10_i_reg_2036 <= {{grp_fu_573_p2[81:66]}};
        read2_V_11_i_reg_2047 <= {{grp_fu_582_p2[81:66]}};
        read2_V_12_i_reg_2058 <= {{grp_fu_591_p2[81:66]}};
        read2_V_13_i_reg_2069 <= {{grp_fu_600_p2[81:66]}};
        read2_V_14_i_reg_2080 <= {{grp_fu_609_p2[81:66]}};
        read2_V_15_i_reg_2091 <= {{grp_fu_618_p2[81:66]}};
        read2_V_2_i_reg_1948 <= {{grp_fu_501_p2[81:66]}};
        read2_V_3_i_reg_1959 <= {{grp_fu_510_p2[81:66]}};
        read2_V_4_i_reg_1970 <= {{grp_fu_519_p2[81:66]}};
        read2_V_5_i_reg_1981 <= {{grp_fu_528_p2[81:66]}};
        read2_V_6_i_reg_1992 <= {{grp_fu_537_p2[81:66]}};
        read2_V_7_i_reg_2003 <= {{grp_fu_546_p2[81:66]}};
        read2_V_8_i_reg_2014 <= {{grp_fu_555_p2[81:66]}};
        read2_V_9_i_reg_2025 <= {{grp_fu_564_p2[81:66]}};
        read2_V_i_357_reg_1937 <= {{grp_fu_492_p2[81:66]}};
        read2_V_i_reg_1926 <= {{grp_fu_483_p2[81:66]}};
        tmp_165_reg_1921 <= grp_fu_483_p2[32'd65];
        tmp_166_reg_1932 <= grp_fu_492_p2[32'd65];
        tmp_167_reg_1943 <= grp_fu_501_p2[32'd65];
        tmp_168_reg_1954 <= grp_fu_510_p2[32'd65];
        tmp_169_reg_1965 <= grp_fu_519_p2[32'd65];
        tmp_170_reg_1976 <= grp_fu_528_p2[32'd65];
        tmp_171_reg_1987 <= grp_fu_537_p2[32'd65];
        tmp_172_reg_1998 <= grp_fu_546_p2[32'd65];
        tmp_173_reg_2009 <= grp_fu_555_p2[32'd65];
        tmp_174_reg_2020 <= grp_fu_564_p2[32'd65];
        tmp_175_reg_2031 <= grp_fu_573_p2[32'd65];
        tmp_176_reg_2042 <= grp_fu_582_p2[32'd65];
        tmp_177_reg_2053 <= grp_fu_591_p2[32'd65];
        tmp_178_reg_2064 <= grp_fu_600_p2[32'd65];
        tmp_179_reg_2075 <= grp_fu_609_p2[32'd65];
        tmp_180_reg_2086 <= grp_fu_618_p2[32'd65];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1723_pp0_iter3_reg == 1'd0))) begin
        sum_0_V_1_fu_134 <= sum_0_V_fu_981_p3;
        sum_10_V_1_fu_174 <= sum_10_V_fu_1261_p3;
        sum_11_V_1_fu_178 <= sum_11_V_fu_1289_p3;
        sum_12_V_1_fu_182 <= sum_12_V_fu_1317_p3;
        sum_13_V_1_fu_186 <= sum_13_V_fu_1345_p3;
        sum_14_V_1_fu_190 <= sum_14_V_fu_1373_p3;
        sum_15_V_1_fu_194 <= sum_15_V_fu_1401_p3;
        sum_1_V_1_fu_138 <= sum_1_V_fu_1009_p3;
        sum_2_V_1_fu_142 <= sum_2_V_fu_1037_p3;
        sum_3_V_1_fu_146 <= sum_3_V_fu_1065_p3;
        sum_4_V_1_fu_150 <= sum_4_V_fu_1093_p3;
        sum_5_V_1_fu_154 <= sum_5_V_fu_1121_p3;
        sum_6_V_1_fu_158 <= sum_6_V_fu_1149_p3;
        sum_7_V_1_fu_162 <= sum_7_V_fu_1177_p3;
        sum_8_V_1_fu_166 <= sum_8_V_fu_1205_p3;
        sum_9_V_1_fu_170 <= sum_9_V_fu_1233_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1723_pp0_iter3_reg == 1'd0))) begin
        sum_0_V_reg_2097 <= sum_0_V_fu_981_p3;
        sum_12_V_reg_2117 <= sum_12_V_fu_1317_p3;
        sum_13_V_reg_2122 <= sum_13_V_fu_1345_p3;
        sum_1_V_reg_2102 <= sum_1_V_fu_1009_p3;
        sum_4_V_reg_2107 <= sum_4_V_fu_1093_p3;
        sum_5_V_reg_2112 <= sum_5_V_fu_1121_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_22_i_reg_1752_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp10_reg_2142 <= tmp10_fu_1543_p2;
        tmp13_reg_2147 <= tmp13_fu_1549_p2;
        tmp3_reg_2127 <= tmp3_fu_1525_p2;
        tmp6_reg_2132 <= tmp6_fu_1531_p2;
        tmp9_reg_2137 <= tmp9_fu_1537_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_285_p2 == 1'd0))) begin
        tmp_21_i_reg_1732 <= tmp_21_i_fu_309_p2;
        tmp_22_i_reg_1752 <= tmp_22_i_fu_315_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((in_proc_2_iter_c_V_V_full_n == 1'b0) | (in_proc_2_iter_r_V_V_full_n == 1'b0) | (in_quant_iter_r_V_V_empty_n == 1'b0) | (in_quant_iter_c_V_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_V_26_reg_1701 <= in_quant_iter_c_V_V_dout;
        tmp_V_reg_1708 <= in_quant_iter_r_V_V_dout;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_285_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_483_ce = 1'b1;
    end else begin
        grp_fu_483_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_492_ce = 1'b1;
    end else begin
        grp_fu_492_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_501_ce = 1'b1;
    end else begin
        grp_fu_501_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_510_ce = 1'b1;
    end else begin
        grp_fu_510_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_519_ce = 1'b1;
    end else begin
        grp_fu_519_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_528_ce = 1'b1;
    end else begin
        grp_fu_528_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_537_ce = 1'b1;
    end else begin
        grp_fu_537_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_546_ce = 1'b1;
    end else begin
        grp_fu_546_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_555_ce = 1'b1;
    end else begin
        grp_fu_555_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_564_ce = 1'b1;
    end else begin
        grp_fu_564_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_573_ce = 1'b1;
    end else begin
        grp_fu_573_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_582_ce = 1'b1;
    end else begin
        grp_fu_582_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_591_ce = 1'b1;
    end else begin
        grp_fu_591_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_600_ce = 1'b1;
    end else begin
        grp_fu_600_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_609_ce = 1'b1;
    end else begin
        grp_fu_609_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_618_ce = 1'b1;
    end else begin
        grp_fu_618_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (exitcond_flatten_reg_1723_pp0_iter3_reg == 1'd0))) begin
        in_proc_2_V_V_blk_n = in_proc_2_V_V_full_n;
    end else begin
        in_proc_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1723_pp0_iter3_reg == 1'd0))) begin
        in_proc_2_V_V_write = 1'b1;
    end else begin
        in_proc_2_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        in_proc_2_iter_c_V_V_blk_n = in_proc_2_iter_c_V_V_full_n;
    end else begin
        in_proc_2_iter_c_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((in_proc_2_iter_c_V_V_full_n == 1'b0) | (in_proc_2_iter_r_V_V_full_n == 1'b0) | (in_quant_iter_r_V_V_empty_n == 1'b0) | (in_quant_iter_c_V_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        in_proc_2_iter_c_V_V_write = 1'b1;
    end else begin
        in_proc_2_iter_c_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        in_proc_2_iter_r_V_V_blk_n = in_proc_2_iter_r_V_V_full_n;
    end else begin
        in_proc_2_iter_r_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((in_proc_2_iter_c_V_V_full_n == 1'b0) | (in_proc_2_iter_r_V_V_full_n == 1'b0) | (in_quant_iter_r_V_V_empty_n == 1'b0) | (in_quant_iter_c_V_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        in_proc_2_iter_r_V_V_write = 1'b1;
    end else begin
        in_proc_2_iter_r_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1723 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_quant_V_V_blk_n = in_quant_V_V_empty_n;
    end else begin
        in_quant_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1723 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_quant_V_V_read = 1'b1;
    end else begin
        in_quant_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        in_quant_iter_c_V_V_blk_n = in_quant_iter_c_V_V_empty_n;
    end else begin
        in_quant_iter_c_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((in_proc_2_iter_c_V_V_full_n == 1'b0) | (in_proc_2_iter_r_V_V_full_n == 1'b0) | (in_quant_iter_r_V_V_empty_n == 1'b0) | (in_quant_iter_c_V_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        in_quant_iter_c_V_V_read = 1'b1;
    end else begin
        in_quant_iter_c_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        in_quant_iter_r_V_V_blk_n = in_quant_iter_r_V_V_empty_n;
    end else begin
        in_quant_iter_r_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((in_proc_2_iter_c_V_V_full_n == 1'b0) | (in_proc_2_iter_r_V_V_full_n == 1'b0) | (in_quant_iter_r_V_V_empty_n == 1'b0) | (in_quant_iter_c_V_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        in_quant_iter_r_V_V_read = 1'b1;
    end else begin
        in_quant_iter_r_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_22_i_reg_1752_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        sum_V_V_blk_n = sum_V_V_full_n;
    end else begin
        sum_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_22_i_reg_1752_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_V_V_write = 1'b1;
    end else begin
        sum_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((in_proc_2_iter_c_V_V_full_n == 1'b0) | (in_proc_2_iter_r_V_V_full_n == 1'b0) | (in_quant_iter_r_V_V_empty_n == 1'b0) | (in_quant_iter_c_V_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond_flatten_fu_285_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond_flatten_fu_285_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((exitcond_flatten_reg_1723 == 1'd0) & (in_quant_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_22_i_reg_1752_pp0_iter4_reg == 1'd1) & (sum_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((in_proc_2_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (exitcond_flatten_reg_1723_pp0_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((exitcond_flatten_reg_1723 == 1'd0) & (in_quant_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_22_i_reg_1752_pp0_iter4_reg == 1'd1) & (sum_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((in_proc_2_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (exitcond_flatten_reg_1723_pp0_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((exitcond_flatten_reg_1723 == 1'd0) & (in_quant_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((tmp_22_i_reg_1752_pp0_iter4_reg == 1'd1) & (sum_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((in_proc_2_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (exitcond_flatten_reg_1723_pp0_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_state1 = ((in_proc_2_iter_c_V_V_full_n == 1'b0) | (in_proc_2_iter_r_V_V_full_n == 1'b0) | (in_quant_iter_r_V_V_empty_n == 1'b0) | (in_quant_iter_c_V_V_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((exitcond_flatten_reg_1723 == 1'd0) & (in_quant_V_V_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter4 = ((in_proc_2_V_V_full_n == 1'b0) & (exitcond_flatten_reg_1723_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state8_pp0_stage0_iter5 = ((tmp_22_i_reg_1752_pp0_iter4_reg == 1'd1) & (sum_V_V_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign bound_fu_279_p0 = bound_fu_279_p00;

assign bound_fu_279_p00 = tmp_V_26_reg_1701;

assign bound_fu_279_p1 = bound_fu_279_p10;

assign bound_fu_279_p10 = tmp_V_reg_1708;

assign bound_fu_279_p2 = (bound_fu_279_p0 * bound_fu_279_p1);

assign exitcond_flatten_fu_285_p2 = ((indvar_flatten_reg_246 == bound_reg_1718) ? 1'b1 : 1'b0);

assign exitcond_i2_fu_296_p2 = ((l_i_reg_257 == tmp_V_26_reg_1701) ? 1'b1 : 1'b0);

assign grp_fu_483_p0 = 95'd1614886140;

assign grp_fu_492_p0 = 95'd1614886140;

assign grp_fu_501_p0 = 95'd1614886140;

assign grp_fu_510_p0 = 95'd1614886140;

assign grp_fu_519_p0 = 95'd1614886140;

assign grp_fu_528_p0 = 95'd1614886140;

assign grp_fu_537_p0 = 95'd1614886140;

assign grp_fu_546_p0 = 95'd1614886140;

assign grp_fu_555_p0 = 95'd1614886140;

assign grp_fu_564_p0 = 95'd1614886140;

assign grp_fu_573_p0 = 95'd1614886140;

assign grp_fu_582_p0 = 95'd1614886140;

assign grp_fu_591_p0 = 95'd1614886140;

assign grp_fu_600_p0 = 95'd1614886140;

assign grp_fu_609_p0 = 95'd1614886140;

assign grp_fu_618_p0 = 95'd1614886140;

assign in_proc_2_V_V_din = {{{{{{{{{{{{{{{{p_1_14_i_fu_1385_p3}, {p_1_13_i_fu_1357_p3}}, {p_1_12_i_fu_1329_p3}}, {p_1_11_i_fu_1301_p3}}, {p_1_10_i_fu_1273_p3}}, {p_1_i_359_fu_1245_p3}}, {p_1_9_i_fu_1217_p3}}, {p_1_8_i_fu_1189_p3}}, {p_1_7_i_fu_1161_p3}}, {p_1_6_i_fu_1133_p3}}, {p_1_5_i_fu_1105_p3}}, {p_1_4_i_fu_1077_p3}}, {p_1_3_i_fu_1049_p3}}, {p_1_2_i_fu_1021_p3}}, {p_1_1_i_fu_993_p3}}, {p_1_i_fu_965_p3}};

assign in_proc_2_iter_c_V_V_din = in_quant_iter_c_V_V_dout;

assign in_proc_2_iter_r_V_V_din = in_quant_iter_r_V_V_dout;

assign indvar_flatten_next_fu_290_p2 = (indvar_flatten_reg_246 + 64'd1);

assign l_fu_320_p2 = (l_i_mid2_fu_301_p3 + 32'd1);

assign l_i_mid2_fu_301_p3 = ((exitcond_i2_fu_296_p2[0:0] === 1'b1) ? 32'd0 : l_i_reg_257);

assign p_1_10_i_fu_1273_p3 = ((tmp_176_reg_2042[0:0] === 1'b1) ? read2_V_1_10_i_fu_1268_p2 : read2_V_11_i_reg_2047);

assign p_1_11_i_fu_1301_p3 = ((tmp_177_reg_2053[0:0] === 1'b1) ? read2_V_1_11_i_fu_1296_p2 : read2_V_12_i_reg_2058);

assign p_1_12_i_fu_1329_p3 = ((tmp_178_reg_2064[0:0] === 1'b1) ? read2_V_1_12_i_fu_1324_p2 : read2_V_13_i_reg_2069);

assign p_1_13_i_fu_1357_p3 = ((tmp_179_reg_2075[0:0] === 1'b1) ? read2_V_1_13_i_fu_1352_p2 : read2_V_14_i_reg_2080);

assign p_1_14_i_fu_1385_p3 = ((tmp_180_reg_2086[0:0] === 1'b1) ? read2_V_1_14_i_fu_1380_p2 : read2_V_15_i_reg_2091);

assign p_1_1_i_fu_993_p3 = ((tmp_166_reg_1932[0:0] === 1'b1) ? read2_V_1_1_i_fu_988_p2 : read2_V_i_357_reg_1937);

assign p_1_2_i_fu_1021_p3 = ((tmp_167_reg_1943[0:0] === 1'b1) ? read2_V_1_2_i_fu_1016_p2 : read2_V_2_i_reg_1948);

assign p_1_3_i_fu_1049_p3 = ((tmp_168_reg_1954[0:0] === 1'b1) ? read2_V_1_3_i_fu_1044_p2 : read2_V_3_i_reg_1959);

assign p_1_4_i_fu_1077_p3 = ((tmp_169_reg_1965[0:0] === 1'b1) ? read2_V_1_4_i_fu_1072_p2 : read2_V_4_i_reg_1970);

assign p_1_5_i_fu_1105_p3 = ((tmp_170_reg_1976[0:0] === 1'b1) ? read2_V_1_5_i_fu_1100_p2 : read2_V_5_i_reg_1981);

assign p_1_6_i_fu_1133_p3 = ((tmp_171_reg_1987[0:0] === 1'b1) ? read2_V_1_6_i_fu_1128_p2 : read2_V_6_i_reg_1992);

assign p_1_7_i_fu_1161_p3 = ((tmp_172_reg_1998[0:0] === 1'b1) ? read2_V_1_7_i_fu_1156_p2 : read2_V_7_i_reg_2003);

assign p_1_8_i_fu_1189_p3 = ((tmp_173_reg_2009[0:0] === 1'b1) ? read2_V_1_8_i_fu_1184_p2 : read2_V_8_i_reg_2014);

assign p_1_9_i_fu_1217_p3 = ((tmp_174_reg_2020[0:0] === 1'b1) ? read2_V_1_9_i_fu_1212_p2 : read2_V_9_i_reg_2025);

assign p_1_i_359_fu_1245_p3 = ((tmp_175_reg_2031[0:0] === 1'b1) ? read2_V_1_i_358_fu_1240_p2 : read2_V_10_i_reg_2036);

assign p_1_i_fu_965_p3 = ((tmp_165_reg_1921[0:0] === 1'b1) ? read2_V_1_i_fu_960_p2 : read2_V_i_reg_1926);

assign p_2_10_i_fu_1279_p1 = p_1_10_i_fu_1273_p3;

assign p_2_11_i_fu_1307_p1 = p_1_11_i_fu_1301_p3;

assign p_2_12_i_fu_1335_p1 = p_1_12_i_fu_1329_p3;

assign p_2_13_i_fu_1363_p1 = p_1_13_i_fu_1357_p3;

assign p_2_14_i_fu_1391_p1 = p_1_14_i_fu_1385_p3;

assign p_2_1_i_fu_999_p1 = p_1_1_i_fu_993_p3;

assign p_2_2_i_fu_1027_p1 = p_1_2_i_fu_1021_p3;

assign p_2_3_i_fu_1055_p1 = p_1_3_i_fu_1049_p3;

assign p_2_4_i_fu_1083_p1 = p_1_4_i_fu_1077_p3;

assign p_2_5_i_fu_1111_p1 = p_1_5_i_fu_1105_p3;

assign p_2_6_i_fu_1139_p1 = p_1_6_i_fu_1133_p3;

assign p_2_7_i_fu_1167_p1 = p_1_7_i_fu_1161_p3;

assign p_2_8_i_fu_1195_p1 = p_1_8_i_fu_1189_p3;

assign p_2_9_i_fu_1223_p1 = p_1_9_i_fu_1217_p3;

assign p_2_i_360_fu_1251_p1 = p_1_i_359_fu_1245_p3;

assign p_2_i_fu_971_p1 = p_1_i_fu_965_p3;

assign read2_V_1_10_i_fu_1268_p2 = (16'd1 + read2_V_11_i_reg_2047);

assign read2_V_1_11_i_fu_1296_p2 = (16'd1 + read2_V_12_i_reg_2058);

assign read2_V_1_12_i_fu_1324_p2 = (16'd1 + read2_V_13_i_reg_2069);

assign read2_V_1_13_i_fu_1352_p2 = (16'd1 + read2_V_14_i_reg_2080);

assign read2_V_1_14_i_fu_1380_p2 = (16'd1 + read2_V_15_i_reg_2091);

assign read2_V_1_1_i_fu_988_p2 = (16'd1 + read2_V_i_357_reg_1937);

assign read2_V_1_2_i_fu_1016_p2 = (16'd1 + read2_V_2_i_reg_1948);

assign read2_V_1_3_i_fu_1044_p2 = (16'd1 + read2_V_3_i_reg_1959);

assign read2_V_1_4_i_fu_1072_p2 = (16'd1 + read2_V_4_i_reg_1970);

assign read2_V_1_5_i_fu_1100_p2 = (16'd1 + read2_V_5_i_reg_1981);

assign read2_V_1_6_i_fu_1128_p2 = (16'd1 + read2_V_6_i_reg_1992);

assign read2_V_1_7_i_fu_1156_p2 = (16'd1 + read2_V_7_i_reg_2003);

assign read2_V_1_8_i_fu_1184_p2 = (16'd1 + read2_V_8_i_reg_2014);

assign read2_V_1_9_i_fu_1212_p2 = (16'd1 + read2_V_9_i_reg_2025);

assign read2_V_1_i_358_fu_1240_p2 = (16'd1 + read2_V_10_i_reg_2036);

assign read2_V_1_i_fu_960_p2 = (16'd1 + read2_V_i_reg_1926);

assign start_out = real_start;

assign sum_0_V_fu_981_p3 = ((tmp_21_i_reg_1732_pp0_iter3_reg[0:0] === 1'b1) ? p_2_i_fu_971_p1 : tmp_75_i_fu_975_p2);

assign sum_10_V_fu_1261_p3 = ((tmp_21_i_reg_1732_pp0_iter3_reg[0:0] === 1'b1) ? p_2_i_360_fu_1251_p1 : tmp_75_i_361_fu_1255_p2);

assign sum_11_V_fu_1289_p3 = ((tmp_21_i_reg_1732_pp0_iter3_reg[0:0] === 1'b1) ? p_2_10_i_fu_1279_p1 : tmp_75_10_i_fu_1283_p2);

assign sum_12_V_fu_1317_p3 = ((tmp_21_i_reg_1732_pp0_iter3_reg[0:0] === 1'b1) ? p_2_11_i_fu_1307_p1 : tmp_75_11_i_fu_1311_p2);

assign sum_13_V_fu_1345_p3 = ((tmp_21_i_reg_1732_pp0_iter3_reg[0:0] === 1'b1) ? p_2_12_i_fu_1335_p1 : tmp_75_12_i_fu_1339_p2);

assign sum_14_V_fu_1373_p3 = ((tmp_21_i_reg_1732_pp0_iter3_reg[0:0] === 1'b1) ? p_2_13_i_fu_1363_p1 : tmp_75_13_i_fu_1367_p2);

assign sum_15_V_fu_1401_p3 = ((tmp_21_i_reg_1732_pp0_iter3_reg[0:0] === 1'b1) ? p_2_14_i_fu_1391_p1 : tmp_75_14_i_fu_1395_p2);

assign sum_1_V_fu_1009_p3 = ((tmp_21_i_reg_1732_pp0_iter3_reg[0:0] === 1'b1) ? p_2_1_i_fu_999_p1 : tmp_75_1_i_fu_1003_p2);

assign sum_2_V_fu_1037_p3 = ((tmp_21_i_reg_1732_pp0_iter3_reg[0:0] === 1'b1) ? p_2_2_i_fu_1027_p1 : tmp_75_2_i_fu_1031_p2);

assign sum_3_V_fu_1065_p3 = ((tmp_21_i_reg_1732_pp0_iter3_reg[0:0] === 1'b1) ? p_2_3_i_fu_1055_p1 : tmp_75_3_i_fu_1059_p2);

assign sum_4_V_fu_1093_p3 = ((tmp_21_i_reg_1732_pp0_iter3_reg[0:0] === 1'b1) ? p_2_4_i_fu_1083_p1 : tmp_75_4_i_fu_1087_p2);

assign sum_5_V_fu_1121_p3 = ((tmp_21_i_reg_1732_pp0_iter3_reg[0:0] === 1'b1) ? p_2_5_i_fu_1111_p1 : tmp_75_5_i_fu_1115_p2);

assign sum_6_V_fu_1149_p3 = ((tmp_21_i_reg_1732_pp0_iter3_reg[0:0] === 1'b1) ? p_2_6_i_fu_1139_p1 : tmp_75_6_i_fu_1143_p2);

assign sum_7_V_fu_1177_p3 = ((tmp_21_i_reg_1732_pp0_iter3_reg[0:0] === 1'b1) ? p_2_7_i_fu_1167_p1 : tmp_75_7_i_fu_1171_p2);

assign sum_8_V_fu_1205_p3 = ((tmp_21_i_reg_1732_pp0_iter3_reg[0:0] === 1'b1) ? p_2_8_i_fu_1195_p1 : tmp_75_8_i_fu_1199_p2);

assign sum_9_V_fu_1233_p3 = ((tmp_21_i_reg_1732_pp0_iter3_reg[0:0] === 1'b1) ? p_2_9_i_fu_1223_p1 : tmp_75_9_i_fu_1227_p2);

assign sum_V_V_din = (tmp7_fu_1592_p2 + tmp_fu_1573_p2);

assign tmp10_fu_1543_p2 = (sum_10_V_fu_1261_p3 + sum_11_V_fu_1289_p3);

assign tmp11_fu_1587_p2 = (tmp13_reg_2147 + tmp12_fu_1583_p2);

assign tmp12_fu_1583_p2 = (sum_12_V_reg_2117 + sum_13_V_reg_2122);

assign tmp13_fu_1549_p2 = (sum_14_V_fu_1373_p3 + sum_15_V_fu_1401_p3);

assign tmp1_fu_1559_p2 = (tmp3_reg_2127 + tmp2_fu_1555_p2);

assign tmp2_fu_1555_p2 = (sum_0_V_reg_2097 + sum_1_V_reg_2102);

assign tmp3_fu_1525_p2 = (sum_2_V_fu_1037_p3 + sum_3_V_fu_1065_p3);

assign tmp4_fu_1568_p2 = (tmp6_reg_2132 + tmp5_fu_1564_p2);

assign tmp5_fu_1564_p2 = (sum_4_V_reg_2107 + sum_5_V_reg_2112);

assign tmp6_fu_1531_p2 = (sum_6_V_fu_1149_p3 + sum_7_V_fu_1177_p3);

assign tmp7_fu_1592_p2 = (tmp11_fu_1587_p2 + tmp8_fu_1579_p2);

assign tmp8_fu_1579_p2 = (tmp10_reg_2142 + tmp9_reg_2137);

assign tmp9_fu_1537_p2 = (sum_8_V_fu_1205_p3 + sum_9_V_fu_1233_p3);

assign tmp_164_fu_326_p1 = in_quant_V_V_dout[63:0];

assign tmp_21_i_fu_309_p2 = ((l_i_mid2_fu_301_p3 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_22_i_fu_315_p2 = ((l_i_mid2_fu_301_p3 == tmp_i_reg_1713) ? 1'b1 : 1'b0);

assign tmp_75_10_i_fu_1283_p2 = ($signed(p_2_10_i_fu_1279_p1) + $signed(sum_11_V_1_fu_178));

assign tmp_75_11_i_fu_1311_p2 = ($signed(p_2_11_i_fu_1307_p1) + $signed(sum_12_V_1_fu_182));

assign tmp_75_12_i_fu_1339_p2 = ($signed(p_2_12_i_fu_1335_p1) + $signed(sum_13_V_1_fu_186));

assign tmp_75_13_i_fu_1367_p2 = ($signed(p_2_13_i_fu_1363_p1) + $signed(sum_14_V_1_fu_190));

assign tmp_75_14_i_fu_1395_p2 = ($signed(p_2_14_i_fu_1391_p1) + $signed(sum_15_V_1_fu_194));

assign tmp_75_1_i_fu_1003_p2 = ($signed(p_2_1_i_fu_999_p1) + $signed(sum_1_V_1_fu_138));

assign tmp_75_2_i_fu_1031_p2 = ($signed(p_2_2_i_fu_1027_p1) + $signed(sum_2_V_1_fu_142));

assign tmp_75_3_i_fu_1059_p2 = ($signed(p_2_3_i_fu_1055_p1) + $signed(sum_3_V_1_fu_146));

assign tmp_75_4_i_fu_1087_p2 = ($signed(p_2_4_i_fu_1083_p1) + $signed(sum_4_V_1_fu_150));

assign tmp_75_5_i_fu_1115_p2 = ($signed(p_2_5_i_fu_1111_p1) + $signed(sum_5_V_1_fu_154));

assign tmp_75_6_i_fu_1143_p2 = ($signed(p_2_6_i_fu_1139_p1) + $signed(sum_6_V_1_fu_158));

assign tmp_75_7_i_fu_1171_p2 = ($signed(p_2_7_i_fu_1167_p1) + $signed(sum_7_V_1_fu_162));

assign tmp_75_8_i_fu_1199_p2 = ($signed(p_2_8_i_fu_1195_p1) + $signed(sum_8_V_1_fu_166));

assign tmp_75_9_i_fu_1227_p2 = ($signed(p_2_9_i_fu_1223_p1) + $signed(sum_9_V_1_fu_170));

assign tmp_75_i_361_fu_1255_p2 = ($signed(p_2_i_360_fu_1251_p1) + $signed(sum_10_V_1_fu_174));

assign tmp_75_i_fu_975_p2 = ($signed(p_2_i_fu_971_p1) + $signed(sum_0_V_1_fu_134));

assign tmp_fu_1573_p2 = (tmp4_fu_1568_p2 + tmp1_fu_1559_p2);

assign tmp_i_fu_268_p2 = ($signed(tmp_V_26_reg_1701) + $signed(32'd4294967295));

endmodule //QuantAct_1_channel_m
