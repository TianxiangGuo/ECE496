-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity read_data is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    in_r_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    in_r_TVALID : IN STD_LOGIC;
    in_r_TREADY : OUT STD_LOGIC;
    in_r_TID : IN STD_LOGIC_VECTOR (7 downto 0);
    in_r_TDEST : IN STD_LOGIC_VECTOR (7 downto 0);
    in_r_TUSER : IN STD_LOGIC_VECTOR (15 downto 0);
    in_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in_write_n_V_V_din : OUT STD_LOGIC_VECTOR (95 downto 0);
    in_write_n_V_V_full_n : IN STD_LOGIC;
    in_write_n_V_V_write : OUT STD_LOGIC;
    in_sub_max_r_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_sub_max_r_V_V_full_n : IN STD_LOGIC;
    in_sub_max_r_V_V_write : OUT STD_LOGIC;
    in_sub_max_c_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_sub_max_c_V_V_full_n : IN STD_LOGIC;
    in_sub_max_c_V_V_write : OUT STD_LOGIC;
    max_input_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    max_input_V_V_full_n : IN STD_LOGIC;
    max_input_V_V_write : OUT STD_LOGIC;
    in_sub_max_V_V_din : OUT STD_LOGIC_VECTOR (511 downto 0);
    in_sub_max_V_V_full_n : IN STD_LOGIC;
    in_sub_max_V_V_write : OUT STD_LOGIC );
end;


architecture behav of read_data is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv60_0 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv29_1FFFFFFF : STD_LOGIC_VECTOR (28 downto 0) := "11111111111111111111111111111";
    constant ap_const_lv60_1 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_19F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv28_1 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal in_V_data_V_0_data_out : STD_LOGIC_VECTOR (511 downto 0);
    signal in_V_data_V_0_vld_in : STD_LOGIC;
    signal in_V_data_V_0_vld_out : STD_LOGIC;
    signal in_V_data_V_0_ack_in : STD_LOGIC;
    signal in_V_data_V_0_ack_out : STD_LOGIC;
    signal in_V_data_V_0_payload_A : STD_LOGIC_VECTOR (511 downto 0);
    signal in_V_data_V_0_payload_B : STD_LOGIC_VECTOR (511 downto 0);
    signal in_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal in_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal in_V_data_V_0_sel : STD_LOGIC;
    signal in_V_data_V_0_load_A : STD_LOGIC;
    signal in_V_data_V_0_load_B : STD_LOGIC;
    signal in_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal in_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal in_V_last_V_0_vld_in : STD_LOGIC;
    signal in_V_last_V_0_ack_out : STD_LOGIC;
    signal in_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal in_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_flatten_fu_260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_write_n_V_V_blk_n : STD_LOGIC;
    signal in_sub_max_r_V_V_blk_n : STD_LOGIC;
    signal in_sub_max_c_V_V_blk_n : STD_LOGIC;
    signal max_input_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp_20_i_reg_761 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_sub_max_V_V_blk_n : STD_LOGIC;
    signal exitcond_flatten_reg_728 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_185 : STD_LOGIC_VECTOR (59 downto 0);
    signal packet_i_reg_196 : STD_LOGIC_VECTOR (27 downto 0);
    signal unrolled_iterations_fu_216_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal unrolled_iterations_reg_713 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_i_fu_240_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_i_reg_718 : STD_LOGIC_VECTOR (28 downto 0);
    signal bound_fu_254_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal bound_reg_723 : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar_flatten_next_fu_265_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_16_i_fu_288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_i_reg_737 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_2_reg_742 : STD_LOGIC_VECTOR (511 downto 0);
    signal max_3_0_V_fu_622_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_3_0_V_reg_747 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_val_V_fu_636_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_val_V_reg_754 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_i_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal packet_fu_649_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal num_batches_fu_211_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_V_22_fu_693_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_fu_132 : STD_LOGIC_VECTOR (31 downto 0);
    signal unrolled_iterations_s_fu_231_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal bound_fu_254_p0 : STD_LOGIC_VECTOR (27 downto 0);
    signal bound_fu_254_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond2_fu_271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal packet_i_mid2_fu_276_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_fu_294_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_i_fu_298_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_i_fu_308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_21_1_i_fu_322_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_1_i_fu_332_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_1_i_fu_342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_21_2_i_fu_356_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_2_i_fu_366_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_2_i_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_21_3_i_fu_390_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_3_i_fu_400_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_3_i_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_21_4_i_fu_424_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_4_i_fu_434_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_4_i_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_21_5_i_fu_458_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_5_i_fu_468_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_5_i_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_21_6_i_fu_492_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_6_i_fu_502_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_6_i_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_21_7_i_fu_526_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_22_7_i_fu_536_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_7_i_fu_546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_1_0_V_fu_314_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_1_1_V_fu_348_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_i_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_1_2_V_fu_382_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_1_3_V_fu_416_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_1_i_fu_574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_1_4_V_fu_450_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_1_5_V_fu_484_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_2_i_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_1_6_V_fu_518_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_1_7_V_fu_552_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_3_i_fu_602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_2_0_V_fu_566_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_2_1_V_fu_580_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_i_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_2_2_V_fu_594_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_2_3_V_fu_608_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_1_i_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal packet_cast_i_fu_284_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_0203_1_i_fu_658_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_i_fu_669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_i_fu_681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_i_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge10_0203_s_fu_674_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_val_V_1_0203_1_fu_686_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal bound_fu_254_p00 : STD_LOGIC_VECTOR (59 downto 0);
    signal bound_fu_254_p10 : STD_LOGIC_VECTOR (59 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (in_V_data_V_0_vld_out = ap_const_logic_0) or (in_sub_max_c_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_full_n = ap_const_logic_0) or (in_write_n_V_V_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((real_start = ap_const_logic_0) or (in_V_data_V_0_vld_out = ap_const_logic_0) or (in_sub_max_c_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_full_n = ap_const_logic_0) or (in_write_n_V_V_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    in_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                in_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((in_V_data_V_0_ack_out = ap_const_logic_1) and (in_V_data_V_0_vld_out = ap_const_logic_1))) then 
                                        in_V_data_V_0_sel_rd <= not(in_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    in_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                in_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((in_V_data_V_0_ack_in = ap_const_logic_1) and (in_V_data_V_0_vld_in = ap_const_logic_1))) then 
                                        in_V_data_V_0_sel_wr <= not(in_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    in_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                in_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((in_V_data_V_0_state = ap_const_lv2_2) and (in_V_data_V_0_vld_in = ap_const_logic_0)) or ((in_V_data_V_0_state = ap_const_lv2_3) and (in_V_data_V_0_vld_in = ap_const_logic_0) and (in_V_data_V_0_ack_out = ap_const_logic_1)))) then 
                    in_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((in_V_data_V_0_state = ap_const_lv2_1) and (in_V_data_V_0_ack_out = ap_const_logic_0)) or ((in_V_data_V_0_state = ap_const_lv2_3) and (in_V_data_V_0_ack_out = ap_const_logic_0) and (in_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    in_V_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((in_V_data_V_0_vld_in = ap_const_logic_0) and (in_V_data_V_0_ack_out = ap_const_logic_1))) and not(((in_V_data_V_0_ack_out = ap_const_logic_0) and (in_V_data_V_0_vld_in = ap_const_logic_1))) and (in_V_data_V_0_state = ap_const_lv2_3)) or ((in_V_data_V_0_state = ap_const_lv2_1) and (in_V_data_V_0_ack_out = ap_const_logic_1)) or ((in_V_data_V_0_state = ap_const_lv2_2) and (in_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    in_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    in_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    in_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                in_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((in_V_last_V_0_state = ap_const_lv2_2) and (in_V_last_V_0_vld_in = ap_const_logic_0)) or ((in_V_last_V_0_state = ap_const_lv2_3) and (in_V_last_V_0_vld_in = ap_const_logic_0) and (in_V_last_V_0_ack_out = ap_const_logic_1)))) then 
                    in_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((in_V_last_V_0_state = ap_const_lv2_1) and (in_V_last_V_0_ack_out = ap_const_logic_0)) or ((in_V_last_V_0_state = ap_const_lv2_3) and (in_V_last_V_0_ack_out = ap_const_logic_0) and (in_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    in_V_last_V_0_state <= ap_const_lv2_1;
                elsif (((not(((in_V_last_V_0_vld_in = ap_const_logic_0) and (in_V_last_V_0_ack_out = ap_const_logic_1))) and not(((in_V_last_V_0_ack_out = ap_const_logic_0) and (in_V_last_V_0_vld_in = ap_const_logic_1))) and (in_V_last_V_0_state = ap_const_lv2_3)) or ((in_V_last_V_0_state = ap_const_lv2_1) and (in_V_last_V_0_ack_out = ap_const_logic_1)) or ((in_V_last_V_0_state = ap_const_lv2_2) and (in_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    in_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    in_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_185_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_260_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_185 <= indvar_flatten_next_fu_265_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (in_V_data_V_0_vld_out = ap_const_logic_0) or (in_sub_max_c_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_full_n = ap_const_logic_0) or (in_write_n_V_V_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_185 <= ap_const_lv60_0;
            end if; 
        end if;
    end process;

    packet_i_reg_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_260_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                packet_i_reg_196 <= packet_fu_649_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (in_V_data_V_0_vld_out = ap_const_logic_0) or (in_sub_max_c_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_full_n = ap_const_logic_0) or (in_write_n_V_V_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                packet_i_reg_196 <= ap_const_lv28_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (in_V_data_V_0_vld_out = ap_const_logic_0) or (in_sub_max_c_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_full_n = ap_const_logic_0) or (in_write_n_V_V_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                bound_reg_723 <= bound_fu_254_p2;
                tmp_i_reg_718 <= tmp_i_fu_240_p2;
                unrolled_iterations_reg_713 <= in_V_data_V_0_data_out(63 downto 36);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten_reg_728 <= exitcond_flatten_fu_260_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_V_data_V_0_load_A = ap_const_logic_1)) then
                in_V_data_V_0_payload_A <= in_r_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_V_data_V_0_load_B = ap_const_logic_1)) then
                in_V_data_V_0_payload_B <= in_r_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_260_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                max_3_0_V_reg_747 <= max_3_0_V_fu_622_p3;
                max_val_V_reg_754 <= max_val_V_fu_636_p3;
                tmp_16_i_reg_737 <= tmp_16_i_fu_288_p2;
                tmp_20_i_reg_761 <= tmp_20_i_fu_644_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_728 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_V_fu_132 <= tmp_V_22_fu_693_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_260_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_data_V_2_reg_742 <= in_V_data_V_0_data_out;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, in_V_data_V_0_vld_out, in_write_n_V_V_full_n, in_sub_max_r_V_V_full_n, in_sub_max_c_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_fu_260_p2, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (in_V_data_V_0_vld_out = ap_const_logic_0) or (in_sub_max_c_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_full_n = ap_const_logic_0) or (in_write_n_V_V_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((exitcond_flatten_fu_260_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((exitcond_flatten_fu_260_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(in_V_data_V_0_vld_out, max_input_V_V_full_n, in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_fu_260_p2, ap_enable_reg_pp0_iter1, tmp_20_i_reg_761, exitcond_flatten_reg_728)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_flatten_reg_728 = ap_const_lv1_0) and (in_sub_max_V_V_full_n = ap_const_logic_0)) or ((tmp_20_i_reg_761 = ap_const_lv1_1) and (max_input_V_V_full_n = ap_const_logic_0)))) or ((exitcond_flatten_fu_260_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(in_V_data_V_0_vld_out, max_input_V_V_full_n, in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_fu_260_p2, ap_enable_reg_pp0_iter1, tmp_20_i_reg_761, exitcond_flatten_reg_728)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_flatten_reg_728 = ap_const_lv1_0) and (in_sub_max_V_V_full_n = ap_const_logic_0)) or ((tmp_20_i_reg_761 = ap_const_lv1_1) and (max_input_V_V_full_n = ap_const_logic_0)))) or ((exitcond_flatten_fu_260_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(in_V_data_V_0_vld_out, max_input_V_V_full_n, in_sub_max_V_V_full_n, ap_enable_reg_pp0_iter0, exitcond_flatten_fu_260_p2, ap_enable_reg_pp0_iter1, tmp_20_i_reg_761, exitcond_flatten_reg_728)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_flatten_reg_728 = ap_const_lv1_0) and (in_sub_max_V_V_full_n = ap_const_logic_0)) or ((tmp_20_i_reg_761 = ap_const_lv1_1) and (max_input_V_V_full_n = ap_const_logic_0)))) or ((exitcond_flatten_fu_260_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, in_V_data_V_0_vld_out, in_write_n_V_V_full_n, in_sub_max_r_V_V_full_n, in_sub_max_c_V_V_full_n)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (in_V_data_V_0_vld_out = ap_const_logic_0) or (in_sub_max_c_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_full_n = ap_const_logic_0) or (in_write_n_V_V_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(in_V_data_V_0_vld_out, exitcond_flatten_fu_260_p2)
    begin
                ap_block_state2_pp0_stage0_iter0 <= ((exitcond_flatten_fu_260_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter1_assign_proc : process(max_input_V_V_full_n, in_sub_max_V_V_full_n, tmp_20_i_reg_761, exitcond_flatten_reg_728)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (((exitcond_flatten_reg_728 = ap_const_lv1_0) and (in_sub_max_V_V_full_n = ap_const_logic_0)) or ((tmp_20_i_reg_761 = ap_const_lv1_1) and (max_input_V_V_full_n = ap_const_logic_0)));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_260_p2)
    begin
        if ((exitcond_flatten_fu_260_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    bound_fu_254_p0 <= bound_fu_254_p00(28 - 1 downto 0);
    bound_fu_254_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(unrolled_iterations_fu_216_p4),60));
    bound_fu_254_p1 <= bound_fu_254_p10(32 - 1 downto 0);
    bound_fu_254_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(num_batches_fu_211_p1),60));
    bound_fu_254_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound_fu_254_p0) * unsigned(bound_fu_254_p1), 60));
    exitcond2_fu_271_p2 <= "1" when (packet_i_reg_196 = unrolled_iterations_reg_713) else "0";
    exitcond_flatten_fu_260_p2 <= "1" when (indvar_flatten_reg_185 = bound_reg_723) else "0";
    in_V_data_V_0_ack_in <= in_V_data_V_0_state(1);

    in_V_data_V_0_ack_out_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_data_V_0_vld_out, in_write_n_V_V_full_n, in_sub_max_r_V_V_full_n, in_sub_max_c_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, exitcond_flatten_fu_260_p2, ap_block_pp0_stage0_11001)
    begin
        if ((((exitcond_flatten_fu_260_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((real_start = ap_const_logic_0) or (in_V_data_V_0_vld_out = ap_const_logic_0) or (in_sub_max_c_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_full_n = ap_const_logic_0) or (in_write_n_V_V_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            in_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    in_V_data_V_0_data_out_assign_proc : process(in_V_data_V_0_payload_A, in_V_data_V_0_payload_B, in_V_data_V_0_sel)
    begin
        if ((in_V_data_V_0_sel = ap_const_logic_1)) then 
            in_V_data_V_0_data_out <= in_V_data_V_0_payload_B;
        else 
            in_V_data_V_0_data_out <= in_V_data_V_0_payload_A;
        end if; 
    end process;

    in_V_data_V_0_load_A <= (in_V_data_V_0_state_cmp_full and not(in_V_data_V_0_sel_wr));
    in_V_data_V_0_load_B <= (in_V_data_V_0_state_cmp_full and in_V_data_V_0_sel_wr);
    in_V_data_V_0_sel <= in_V_data_V_0_sel_rd;
    in_V_data_V_0_state_cmp_full <= '0' when (in_V_data_V_0_state = ap_const_lv2_1) else '1';
    in_V_data_V_0_vld_in <= in_r_TVALID;
    in_V_data_V_0_vld_out <= in_V_data_V_0_state(0);

    in_V_last_V_0_ack_out_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_data_V_0_vld_out, in_write_n_V_V_full_n, in_sub_max_r_V_V_full_n, in_sub_max_c_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, exitcond_flatten_fu_260_p2, ap_block_pp0_stage0_11001)
    begin
        if ((((exitcond_flatten_fu_260_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((real_start = ap_const_logic_0) or (in_V_data_V_0_vld_out = ap_const_logic_0) or (in_sub_max_c_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_full_n = ap_const_logic_0) or (in_write_n_V_V_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            in_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    in_V_last_V_0_vld_in <= in_r_TVALID;

    in_r_TDATA_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_data_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, exitcond_flatten_fu_260_p2)
    begin
        if ((((exitcond_flatten_fu_260_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_r_TDATA_blk_n <= in_V_data_V_0_state(0);
        else 
            in_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_r_TREADY <= in_V_last_V_0_state(1);

    in_sub_max_V_V_blk_n_assign_proc : process(in_sub_max_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_728)
    begin
        if (((exitcond_flatten_reg_728 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_sub_max_V_V_blk_n <= in_sub_max_V_V_full_n;
        else 
            in_sub_max_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_sub_max_V_V_din <= tmp_data_V_2_reg_742;

    in_sub_max_V_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_728, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_flatten_reg_728 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_sub_max_V_V_write <= ap_const_logic_1;
        else 
            in_sub_max_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    in_sub_max_c_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_sub_max_c_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_sub_max_c_V_V_blk_n <= in_sub_max_c_V_V_full_n;
        else 
            in_sub_max_c_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_sub_max_c_V_V_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(unrolled_iterations_fu_216_p4),32));

    in_sub_max_c_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_data_V_0_vld_out, in_write_n_V_V_full_n, in_sub_max_r_V_V_full_n, in_sub_max_c_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (in_V_data_V_0_vld_out = ap_const_logic_0) or (in_sub_max_c_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_full_n = ap_const_logic_0) or (in_write_n_V_V_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_sub_max_c_V_V_write <= ap_const_logic_1;
        else 
            in_sub_max_c_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    in_sub_max_r_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_sub_max_r_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_sub_max_r_V_V_blk_n <= in_sub_max_r_V_V_full_n;
        else 
            in_sub_max_r_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_sub_max_r_V_V_din <= num_batches_fu_211_p1;

    in_sub_max_r_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_data_V_0_vld_out, in_write_n_V_V_full_n, in_sub_max_r_V_V_full_n, in_sub_max_c_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (in_V_data_V_0_vld_out = ap_const_logic_0) or (in_sub_max_c_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_full_n = ap_const_logic_0) or (in_write_n_V_V_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_sub_max_r_V_V_write <= ap_const_logic_1;
        else 
            in_sub_max_r_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    in_write_n_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_write_n_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_write_n_V_V_blk_n <= in_write_n_V_V_full_n;
        else 
            in_write_n_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_write_n_V_V_din <= in_V_data_V_0_data_out(96 - 1 downto 0);

    in_write_n_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_V_data_V_0_vld_out, in_write_n_V_V_full_n, in_sub_max_r_V_V_full_n, in_sub_max_c_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (in_V_data_V_0_vld_out = ap_const_logic_0) or (in_sub_max_c_V_V_full_n = ap_const_logic_0) or (in_sub_max_r_V_V_full_n = ap_const_logic_0) or (in_write_n_V_V_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_write_n_V_V_write <= ap_const_logic_1;
        else 
            in_write_n_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next_fu_265_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_185) + unsigned(ap_const_lv60_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    max_1_0_V_fu_314_p3 <= 
        tmp_fu_294_p1 when (tmp_28_i_fu_308_p2(0) = '1') else 
        p_Result_22_i_fu_298_p4;
    max_1_1_V_fu_348_p3 <= 
        p_Result_21_1_i_fu_322_p4 when (tmp_28_1_i_fu_342_p2(0) = '1') else 
        p_Result_22_1_i_fu_332_p4;
    max_1_2_V_fu_382_p3 <= 
        p_Result_21_2_i_fu_356_p4 when (tmp_28_2_i_fu_376_p2(0) = '1') else 
        p_Result_22_2_i_fu_366_p4;
    max_1_3_V_fu_416_p3 <= 
        p_Result_21_3_i_fu_390_p4 when (tmp_28_3_i_fu_410_p2(0) = '1') else 
        p_Result_22_3_i_fu_400_p4;
    max_1_4_V_fu_450_p3 <= 
        p_Result_21_4_i_fu_424_p4 when (tmp_28_4_i_fu_444_p2(0) = '1') else 
        p_Result_22_4_i_fu_434_p4;
    max_1_5_V_fu_484_p3 <= 
        p_Result_21_5_i_fu_458_p4 when (tmp_28_5_i_fu_478_p2(0) = '1') else 
        p_Result_22_5_i_fu_468_p4;
    max_1_6_V_fu_518_p3 <= 
        p_Result_21_6_i_fu_492_p4 when (tmp_28_6_i_fu_512_p2(0) = '1') else 
        p_Result_22_6_i_fu_502_p4;
    max_1_7_V_fu_552_p3 <= 
        p_Result_21_7_i_fu_526_p4 when (tmp_28_7_i_fu_546_p2(0) = '1') else 
        p_Result_22_7_i_fu_536_p4;
    max_2_0_V_fu_566_p3 <= 
        max_1_1_V_fu_348_p3 when (tmp_37_i_fu_560_p2(0) = '1') else 
        max_1_0_V_fu_314_p3;
    max_2_1_V_fu_580_p3 <= 
        max_1_3_V_fu_416_p3 when (tmp_37_1_i_fu_574_p2(0) = '1') else 
        max_1_2_V_fu_382_p3;
    max_2_2_V_fu_594_p3 <= 
        max_1_5_V_fu_484_p3 when (tmp_37_2_i_fu_588_p2(0) = '1') else 
        max_1_4_V_fu_450_p3;
    max_2_3_V_fu_608_p3 <= 
        max_1_7_V_fu_552_p3 when (tmp_37_3_i_fu_602_p2(0) = '1') else 
        max_1_6_V_fu_518_p3;
    max_3_0_V_fu_622_p3 <= 
        max_2_1_V_fu_580_p3 when (tmp_45_i_fu_616_p2(0) = '1') else 
        max_2_0_V_fu_566_p3;

    max_input_V_V_blk_n_assign_proc : process(max_input_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_20_i_reg_761)
    begin
        if (((tmp_20_i_reg_761 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            max_input_V_V_blk_n <= max_input_V_V_full_n;
        else 
            max_input_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    max_input_V_V_din <= 
        storemerge10_0203_s_fu_674_p3 when (tmp_17_i_fu_665_p2(0) = '1') else 
        max_val_V_1_0203_1_fu_686_p3;

    max_input_V_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_20_i_reg_761, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_20_i_reg_761 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            max_input_V_V_write <= ap_const_logic_1;
        else 
            max_input_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    max_val_V_1_0203_1_fu_686_p3 <= 
        max_3_0_V_reg_747 when (tmp_19_i_fu_681_p2(0) = '1') else 
        p_0203_1_i_fu_658_p3;
    max_val_V_fu_636_p3 <= 
        max_2_3_V_fu_608_p3 when (tmp_45_1_i_fu_630_p2(0) = '1') else 
        max_2_2_V_fu_594_p3;
    num_batches_fu_211_p1 <= in_V_data_V_0_data_out(32 - 1 downto 0);
    p_0203_1_i_fu_658_p3 <= 
        ap_const_lv32_0 when (tmp_16_i_reg_737(0) = '1') else 
        tmp_V_fu_132;
    p_Result_21_1_i_fu_322_p4 <= in_V_data_V_0_data_out(95 downto 64);
    p_Result_21_2_i_fu_356_p4 <= in_V_data_V_0_data_out(159 downto 128);
    p_Result_21_3_i_fu_390_p4 <= in_V_data_V_0_data_out(223 downto 192);
    p_Result_21_4_i_fu_424_p4 <= in_V_data_V_0_data_out(287 downto 256);
    p_Result_21_5_i_fu_458_p4 <= in_V_data_V_0_data_out(351 downto 320);
    p_Result_21_6_i_fu_492_p4 <= in_V_data_V_0_data_out(415 downto 384);
    p_Result_21_7_i_fu_526_p4 <= in_V_data_V_0_data_out(479 downto 448);
    p_Result_22_1_i_fu_332_p4 <= in_V_data_V_0_data_out(127 downto 96);
    p_Result_22_2_i_fu_366_p4 <= in_V_data_V_0_data_out(191 downto 160);
    p_Result_22_3_i_fu_400_p4 <= in_V_data_V_0_data_out(255 downto 224);
    p_Result_22_4_i_fu_434_p4 <= in_V_data_V_0_data_out(319 downto 288);
    p_Result_22_5_i_fu_468_p4 <= in_V_data_V_0_data_out(383 downto 352);
    p_Result_22_6_i_fu_502_p4 <= in_V_data_V_0_data_out(447 downto 416);
    p_Result_22_7_i_fu_536_p4 <= in_V_data_V_0_data_out(511 downto 480);
    p_Result_22_i_fu_298_p4 <= in_V_data_V_0_data_out(63 downto 32);
    packet_cast_i_fu_284_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(packet_i_mid2_fu_276_p3),29));
    packet_fu_649_p2 <= std_logic_vector(unsigned(packet_i_mid2_fu_276_p3) + unsigned(ap_const_lv28_1));
    packet_i_mid2_fu_276_p3 <= 
        ap_const_lv28_0 when (exitcond2_fu_271_p2(0) = '1') else 
        packet_i_reg_196;

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    storemerge10_0203_s_fu_674_p3 <= 
        max_val_V_reg_754 when (tmp_18_i_fu_669_p2(0) = '1') else 
        p_0203_1_i_fu_658_p3;
    tmp_16_i_fu_288_p2 <= "1" when (packet_i_mid2_fu_276_p3 = ap_const_lv28_0) else "0";
    tmp_17_i_fu_665_p2 <= "1" when (signed(max_3_0_V_reg_747) < signed(max_val_V_reg_754)) else "0";
    tmp_18_i_fu_669_p2 <= "1" when (signed(max_val_V_reg_754) > signed(p_0203_1_i_fu_658_p3)) else "0";
    tmp_19_i_fu_681_p2 <= "1" when (signed(max_3_0_V_reg_747) > signed(p_0203_1_i_fu_658_p3)) else "0";
    tmp_20_i_fu_644_p2 <= "1" when (packet_cast_i_fu_284_p1 = tmp_i_reg_718) else "0";
    tmp_28_1_i_fu_342_p2 <= "1" when (signed(p_Result_21_1_i_fu_322_p4) > signed(p_Result_22_1_i_fu_332_p4)) else "0";
    tmp_28_2_i_fu_376_p2 <= "1" when (signed(p_Result_21_2_i_fu_356_p4) > signed(p_Result_22_2_i_fu_366_p4)) else "0";
    tmp_28_3_i_fu_410_p2 <= "1" when (signed(p_Result_21_3_i_fu_390_p4) > signed(p_Result_22_3_i_fu_400_p4)) else "0";
    tmp_28_4_i_fu_444_p2 <= "1" when (signed(p_Result_21_4_i_fu_424_p4) > signed(p_Result_22_4_i_fu_434_p4)) else "0";
    tmp_28_5_i_fu_478_p2 <= "1" when (signed(p_Result_21_5_i_fu_458_p4) > signed(p_Result_22_5_i_fu_468_p4)) else "0";
    tmp_28_6_i_fu_512_p2 <= "1" when (signed(p_Result_21_6_i_fu_492_p4) > signed(p_Result_22_6_i_fu_502_p4)) else "0";
    tmp_28_7_i_fu_546_p2 <= "1" when (signed(p_Result_21_7_i_fu_526_p4) > signed(p_Result_22_7_i_fu_536_p4)) else "0";
    tmp_28_i_fu_308_p2 <= "1" when (signed(tmp_fu_294_p1) > signed(p_Result_22_i_fu_298_p4)) else "0";
    tmp_37_1_i_fu_574_p2 <= "1" when (signed(max_1_2_V_fu_382_p3) < signed(max_1_3_V_fu_416_p3)) else "0";
    tmp_37_2_i_fu_588_p2 <= "1" when (signed(max_1_4_V_fu_450_p3) < signed(max_1_5_V_fu_484_p3)) else "0";
    tmp_37_3_i_fu_602_p2 <= "1" when (signed(max_1_6_V_fu_518_p3) < signed(max_1_7_V_fu_552_p3)) else "0";
    tmp_37_i_fu_560_p2 <= "1" when (signed(max_1_0_V_fu_314_p3) < signed(max_1_1_V_fu_348_p3)) else "0";
    tmp_45_1_i_fu_630_p2 <= "1" when (signed(max_2_2_V_fu_594_p3) < signed(max_2_3_V_fu_608_p3)) else "0";
    tmp_45_i_fu_616_p2 <= "1" when (signed(max_2_0_V_fu_566_p3) < signed(max_2_1_V_fu_580_p3)) else "0";
    tmp_V_22_fu_693_p3 <= 
        storemerge10_0203_s_fu_674_p3 when (tmp_17_i_fu_665_p2(0) = '1') else 
        max_val_V_1_0203_1_fu_686_p3;
    tmp_fu_294_p1 <= in_V_data_V_0_data_out(32 - 1 downto 0);
    tmp_i_fu_240_p2 <= std_logic_vector(signed(ap_const_lv29_1FFFFFFF) + signed(unrolled_iterations_s_fu_231_p1));
    unrolled_iterations_fu_216_p4 <= in_V_data_V_0_data_out(63 downto 36);
    unrolled_iterations_s_fu_231_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(unrolled_iterations_fu_216_p4),29));
end behav;
