-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity QuantAct_1_channel_m is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    in_quant_iter_c_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_quant_iter_c_V_V_empty_n : IN STD_LOGIC;
    in_quant_iter_c_V_V_read : OUT STD_LOGIC;
    in_quant_iter_r_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_quant_iter_r_V_V_empty_n : IN STD_LOGIC;
    in_quant_iter_r_V_V_read : OUT STD_LOGIC;
    in_proc_2_iter_r_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_proc_2_iter_r_V_V_full_n : IN STD_LOGIC;
    in_proc_2_iter_r_V_V_write : OUT STD_LOGIC;
    in_proc_2_iter_c_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_proc_2_iter_c_V_V_full_n : IN STD_LOGIC;
    in_proc_2_iter_c_V_V_write : OUT STD_LOGIC;
    sum_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    sum_V_V_full_n : IN STD_LOGIC;
    sum_V_V_write : OUT STD_LOGIC;
    in_quant_V_V_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
    in_quant_V_V_empty_n : IN STD_LOGIC;
    in_quant_V_V_read : OUT STD_LOGIC;
    in_proc_2_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    in_proc_2_V_V_full_n : IN STD_LOGIC;
    in_proc_2_V_V_write : OUT STD_LOGIC );
end;


architecture behav of QuantAct_1_channel_m is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_200 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_const_lv32_23F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000111111";
    constant ap_const_lv32_240 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001000000";
    constant ap_const_lv32_27F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001111111";
    constant ap_const_lv32_280 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010000000";
    constant ap_const_lv32_2BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010111111";
    constant ap_const_lv32_2C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011000000";
    constant ap_const_lv32_2FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011111111";
    constant ap_const_lv32_300 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100000000";
    constant ap_const_lv32_33F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100111111";
    constant ap_const_lv32_340 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101000000";
    constant ap_const_lv32_37F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101111111";
    constant ap_const_lv32_380 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110000000";
    constant ap_const_lv32_3BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110111111";
    constant ap_const_lv32_3C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111000000";
    constant ap_const_lv32_3FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111111111";
    constant ap_const_lv95_604134FC : STD_LOGIC_VECTOR (94 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001100000010000010011010011111100";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal in_quant_iter_c_V_V_blk_n : STD_LOGIC;
    signal in_quant_iter_r_V_V_blk_n : STD_LOGIC;
    signal in_proc_2_iter_r_V_V_blk_n : STD_LOGIC;
    signal in_proc_2_iter_c_V_V_blk_n : STD_LOGIC;
    signal sum_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_22_i_reg_1752 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_i_reg_1752_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_quant_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1723 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_proc_2_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1723_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_246 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_i_reg_257 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_26_reg_1701 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_V_reg_1708 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_fu_268_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_reg_1713 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal bound_fu_279_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound_reg_1718 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_flatten_fu_285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_flatten_reg_1723_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1723_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_290_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_21_i_fu_309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_i_reg_1732 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_i_reg_1732_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_i_reg_1732_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_i_reg_1732_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_i_fu_315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_i_reg_1752_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_i_reg_1752_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_i_reg_1752_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal l_fu_320_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_164_fu_326_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_164_reg_1761 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_28_1_i_reg_1766 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_28_2_i_reg_1771 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_28_3_i_reg_1776 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_28_4_i_reg_1781 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_28_5_i_reg_1786 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_28_6_i_reg_1791 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_28_7_i_reg_1796 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_28_8_i_reg_1801 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_28_9_i_reg_1806 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_28_i_reg_1811 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_28_10_i_reg_1816 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_28_11_i_reg_1821 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_28_12_i_reg_1826 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_28_13_i_reg_1831 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_28_14_i_reg_1836 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_165_reg_1921 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_i_reg_1926 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_166_reg_1932 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_i_357_reg_1937 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_167_reg_1943 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_2_i_reg_1948 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_168_reg_1954 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_3_i_reg_1959 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_169_reg_1965 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_4_i_reg_1970 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_170_reg_1976 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_5_i_reg_1981 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_171_reg_1987 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_6_i_reg_1992 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_172_reg_1998 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_7_i_reg_2003 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_173_reg_2009 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_8_i_reg_2014 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_174_reg_2020 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_9_i_reg_2025 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_175_reg_2031 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_10_i_reg_2036 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_176_reg_2042 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_11_i_reg_2047 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_177_reg_2053 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_12_i_reg_2058 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_178_reg_2064 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_13_i_reg_2069 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_179_reg_2075 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_14_i_reg_2080 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_180_reg_2086 : STD_LOGIC_VECTOR (0 downto 0);
    signal read2_V_15_i_reg_2091 : STD_LOGIC_VECTOR (15 downto 0);
    signal sum_0_V_fu_981_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_0_V_reg_2097 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_1_V_fu_1009_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_1_V_reg_2102 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_4_V_fu_1093_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_4_V_reg_2107 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_5_V_fu_1121_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_5_V_reg_2112 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_12_V_fu_1317_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_12_V_reg_2117 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_13_V_fu_1345_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_13_V_reg_2122 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_fu_1525_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_reg_2127 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_fu_1531_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_reg_2132 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_fu_1537_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_reg_2137 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp10_fu_1543_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp10_reg_2142 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp13_fu_1549_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp13_reg_2147 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal sum_0_V_1_fu_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_1_V_1_fu_138 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_2_V_1_fu_142 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_2_V_fu_1037_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_3_V_1_fu_146 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_3_V_fu_1065_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_4_V_1_fu_150 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_5_V_1_fu_154 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_6_V_1_fu_158 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_6_V_fu_1149_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_7_V_1_fu_162 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_7_V_fu_1177_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_8_V_1_fu_166 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_8_V_fu_1205_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_9_V_1_fu_170 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_9_V_fu_1233_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_10_V_1_fu_174 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_10_V_fu_1261_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_11_V_1_fu_178 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_11_V_fu_1289_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_12_V_1_fu_182 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_13_V_1_fu_186 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_14_V_1_fu_190 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_14_V_fu_1373_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_15_V_1_fu_194 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_15_V_fu_1401_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_fu_279_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_fu_279_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_i2_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal l_i_mid2_fu_301_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_483_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_492_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_501_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_510_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_519_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_528_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_537_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_546_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_555_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_564_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_573_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_582_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_591_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_600_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_609_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_618_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_483_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_492_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_501_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_510_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_519_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_528_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_537_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_546_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_555_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_564_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_573_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_582_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_591_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_600_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_609_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_618_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal read2_V_1_i_fu_960_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_i_fu_965_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_2_i_fu_971_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_i_fu_975_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal read2_V_1_1_i_fu_988_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_1_i_fu_993_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_2_1_i_fu_999_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_1_i_fu_1003_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal read2_V_1_2_i_fu_1016_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_2_i_fu_1021_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_2_2_i_fu_1027_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_2_i_fu_1031_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal read2_V_1_3_i_fu_1044_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_3_i_fu_1049_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_2_3_i_fu_1055_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_3_i_fu_1059_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal read2_V_1_4_i_fu_1072_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_4_i_fu_1077_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_2_4_i_fu_1083_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_4_i_fu_1087_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal read2_V_1_5_i_fu_1100_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_5_i_fu_1105_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_2_5_i_fu_1111_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_5_i_fu_1115_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal read2_V_1_6_i_fu_1128_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_6_i_fu_1133_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_2_6_i_fu_1139_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_6_i_fu_1143_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal read2_V_1_7_i_fu_1156_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_7_i_fu_1161_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_2_7_i_fu_1167_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_7_i_fu_1171_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal read2_V_1_8_i_fu_1184_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_8_i_fu_1189_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_2_8_i_fu_1195_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_8_i_fu_1199_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal read2_V_1_9_i_fu_1212_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_9_i_fu_1217_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_2_9_i_fu_1223_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_9_i_fu_1227_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal read2_V_1_i_358_fu_1240_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_i_359_fu_1245_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_2_i_360_fu_1251_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_i_361_fu_1255_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal read2_V_1_10_i_fu_1268_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_10_i_fu_1273_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_2_10_i_fu_1279_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_10_i_fu_1283_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal read2_V_1_11_i_fu_1296_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_11_i_fu_1301_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_2_11_i_fu_1307_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_11_i_fu_1311_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal read2_V_1_12_i_fu_1324_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_12_i_fu_1329_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_2_12_i_fu_1335_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_12_i_fu_1339_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal read2_V_1_13_i_fu_1352_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_13_i_fu_1357_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_2_13_i_fu_1363_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_13_i_fu_1367_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal read2_V_1_14_i_fu_1380_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_14_i_fu_1385_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_2_14_i_fu_1391_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_14_i_fu_1395_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_1555_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_fu_1564_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_fu_1568_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_fu_1559_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp12_fu_1583_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp11_fu_1587_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp8_fu_1579_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp7_fu_1592_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1573_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_483_ce : STD_LOGIC;
    signal grp_fu_492_ce : STD_LOGIC;
    signal grp_fu_501_ce : STD_LOGIC;
    signal grp_fu_510_ce : STD_LOGIC;
    signal grp_fu_519_ce : STD_LOGIC;
    signal grp_fu_528_ce : STD_LOGIC;
    signal grp_fu_537_ce : STD_LOGIC;
    signal grp_fu_546_ce : STD_LOGIC;
    signal grp_fu_555_ce : STD_LOGIC;
    signal grp_fu_564_ce : STD_LOGIC;
    signal grp_fu_573_ce : STD_LOGIC;
    signal grp_fu_582_ce : STD_LOGIC;
    signal grp_fu_591_ce : STD_LOGIC;
    signal grp_fu_600_ce : STD_LOGIC;
    signal grp_fu_609_ce : STD_LOGIC;
    signal grp_fu_618_ce : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal bound_fu_279_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound_fu_279_p10 : STD_LOGIC_VECTOR (63 downto 0);

    component softmax_mul_32ns_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (94 downto 0) );
    end component;



begin
    softmax_mul_32ns_bkb_U24 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_483_p0,
        din1 => tmp_164_reg_1761,
        ce => grp_fu_483_ce,
        dout => grp_fu_483_p2);

    softmax_mul_32ns_bkb_U25 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_492_p0,
        din1 => p_Result_28_1_i_reg_1766,
        ce => grp_fu_492_ce,
        dout => grp_fu_492_p2);

    softmax_mul_32ns_bkb_U26 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_501_p0,
        din1 => p_Result_28_2_i_reg_1771,
        ce => grp_fu_501_ce,
        dout => grp_fu_501_p2);

    softmax_mul_32ns_bkb_U27 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_510_p0,
        din1 => p_Result_28_3_i_reg_1776,
        ce => grp_fu_510_ce,
        dout => grp_fu_510_p2);

    softmax_mul_32ns_bkb_U28 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_519_p0,
        din1 => p_Result_28_4_i_reg_1781,
        ce => grp_fu_519_ce,
        dout => grp_fu_519_p2);

    softmax_mul_32ns_bkb_U29 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_528_p0,
        din1 => p_Result_28_5_i_reg_1786,
        ce => grp_fu_528_ce,
        dout => grp_fu_528_p2);

    softmax_mul_32ns_bkb_U30 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_537_p0,
        din1 => p_Result_28_6_i_reg_1791,
        ce => grp_fu_537_ce,
        dout => grp_fu_537_p2);

    softmax_mul_32ns_bkb_U31 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_546_p0,
        din1 => p_Result_28_7_i_reg_1796,
        ce => grp_fu_546_ce,
        dout => grp_fu_546_p2);

    softmax_mul_32ns_bkb_U32 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_555_p0,
        din1 => p_Result_28_8_i_reg_1801,
        ce => grp_fu_555_ce,
        dout => grp_fu_555_p2);

    softmax_mul_32ns_bkb_U33 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_564_p0,
        din1 => p_Result_28_9_i_reg_1806,
        ce => grp_fu_564_ce,
        dout => grp_fu_564_p2);

    softmax_mul_32ns_bkb_U34 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_573_p0,
        din1 => p_Result_28_i_reg_1811,
        ce => grp_fu_573_ce,
        dout => grp_fu_573_p2);

    softmax_mul_32ns_bkb_U35 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_582_p0,
        din1 => p_Result_28_10_i_reg_1816,
        ce => grp_fu_582_ce,
        dout => grp_fu_582_p2);

    softmax_mul_32ns_bkb_U36 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_591_p0,
        din1 => p_Result_28_11_i_reg_1821,
        ce => grp_fu_591_ce,
        dout => grp_fu_591_p2);

    softmax_mul_32ns_bkb_U37 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_600_p0,
        din1 => p_Result_28_12_i_reg_1826,
        ce => grp_fu_600_ce,
        dout => grp_fu_600_p2);

    softmax_mul_32ns_bkb_U38 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_609_p0,
        din1 => p_Result_28_13_i_reg_1831,
        ce => grp_fu_609_ce,
        dout => grp_fu_609_p2);

    softmax_mul_32ns_bkb_U39 : component softmax_mul_32ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 64,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_618_p0,
        din1 => p_Result_28_14_i_reg_1836,
        ce => grp_fu_618_ce,
        dout => grp_fu_618_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_246_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_285_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_246 <= indvar_flatten_next_fu_290_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                indvar_flatten_reg_246 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    l_i_reg_257_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_285_p2 = ap_const_lv1_0))) then 
                l_i_reg_257 <= l_fu_320_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                l_i_reg_257 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                bound_reg_1718 <= bound_fu_279_p2;
                tmp_i_reg_1713 <= tmp_i_fu_268_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_flatten_reg_1723 <= exitcond_flatten_fu_285_p2;
                exitcond_flatten_reg_1723_pp0_iter1_reg <= exitcond_flatten_reg_1723;
                tmp_21_i_reg_1732_pp0_iter1_reg <= tmp_21_i_reg_1732;
                tmp_22_i_reg_1752_pp0_iter1_reg <= tmp_22_i_reg_1752;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond_flatten_reg_1723_pp0_iter2_reg <= exitcond_flatten_reg_1723_pp0_iter1_reg;
                exitcond_flatten_reg_1723_pp0_iter3_reg <= exitcond_flatten_reg_1723_pp0_iter2_reg;
                tmp_21_i_reg_1732_pp0_iter2_reg <= tmp_21_i_reg_1732_pp0_iter1_reg;
                tmp_21_i_reg_1732_pp0_iter3_reg <= tmp_21_i_reg_1732_pp0_iter2_reg;
                tmp_22_i_reg_1752_pp0_iter2_reg <= tmp_22_i_reg_1752_pp0_iter1_reg;
                tmp_22_i_reg_1752_pp0_iter3_reg <= tmp_22_i_reg_1752_pp0_iter2_reg;
                tmp_22_i_reg_1752_pp0_iter4_reg <= tmp_22_i_reg_1752_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1723 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Result_28_10_i_reg_1816 <= in_quant_V_V_dout(767 downto 704);
                p_Result_28_11_i_reg_1821 <= in_quant_V_V_dout(831 downto 768);
                p_Result_28_12_i_reg_1826 <= in_quant_V_V_dout(895 downto 832);
                p_Result_28_13_i_reg_1831 <= in_quant_V_V_dout(959 downto 896);
                p_Result_28_14_i_reg_1836 <= in_quant_V_V_dout(1023 downto 960);
                p_Result_28_1_i_reg_1766 <= in_quant_V_V_dout(127 downto 64);
                p_Result_28_2_i_reg_1771 <= in_quant_V_V_dout(191 downto 128);
                p_Result_28_3_i_reg_1776 <= in_quant_V_V_dout(255 downto 192);
                p_Result_28_4_i_reg_1781 <= in_quant_V_V_dout(319 downto 256);
                p_Result_28_5_i_reg_1786 <= in_quant_V_V_dout(383 downto 320);
                p_Result_28_6_i_reg_1791 <= in_quant_V_V_dout(447 downto 384);
                p_Result_28_7_i_reg_1796 <= in_quant_V_V_dout(511 downto 448);
                p_Result_28_8_i_reg_1801 <= in_quant_V_V_dout(575 downto 512);
                p_Result_28_9_i_reg_1806 <= in_quant_V_V_dout(639 downto 576);
                p_Result_28_i_reg_1811 <= in_quant_V_V_dout(703 downto 640);
                tmp_164_reg_1761 <= tmp_164_fu_326_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1723_pp0_iter2_reg = ap_const_lv1_0))) then
                read2_V_10_i_reg_2036 <= grp_fu_573_p2(81 downto 66);
                read2_V_11_i_reg_2047 <= grp_fu_582_p2(81 downto 66);
                read2_V_12_i_reg_2058 <= grp_fu_591_p2(81 downto 66);
                read2_V_13_i_reg_2069 <= grp_fu_600_p2(81 downto 66);
                read2_V_14_i_reg_2080 <= grp_fu_609_p2(81 downto 66);
                read2_V_15_i_reg_2091 <= grp_fu_618_p2(81 downto 66);
                read2_V_2_i_reg_1948 <= grp_fu_501_p2(81 downto 66);
                read2_V_3_i_reg_1959 <= grp_fu_510_p2(81 downto 66);
                read2_V_4_i_reg_1970 <= grp_fu_519_p2(81 downto 66);
                read2_V_5_i_reg_1981 <= grp_fu_528_p2(81 downto 66);
                read2_V_6_i_reg_1992 <= grp_fu_537_p2(81 downto 66);
                read2_V_7_i_reg_2003 <= grp_fu_546_p2(81 downto 66);
                read2_V_8_i_reg_2014 <= grp_fu_555_p2(81 downto 66);
                read2_V_9_i_reg_2025 <= grp_fu_564_p2(81 downto 66);
                read2_V_i_357_reg_1937 <= grp_fu_492_p2(81 downto 66);
                read2_V_i_reg_1926 <= grp_fu_483_p2(81 downto 66);
                tmp_165_reg_1921 <= grp_fu_483_p2(65 downto 65);
                tmp_166_reg_1932 <= grp_fu_492_p2(65 downto 65);
                tmp_167_reg_1943 <= grp_fu_501_p2(65 downto 65);
                tmp_168_reg_1954 <= grp_fu_510_p2(65 downto 65);
                tmp_169_reg_1965 <= grp_fu_519_p2(65 downto 65);
                tmp_170_reg_1976 <= grp_fu_528_p2(65 downto 65);
                tmp_171_reg_1987 <= grp_fu_537_p2(65 downto 65);
                tmp_172_reg_1998 <= grp_fu_546_p2(65 downto 65);
                tmp_173_reg_2009 <= grp_fu_555_p2(65 downto 65);
                tmp_174_reg_2020 <= grp_fu_564_p2(65 downto 65);
                tmp_175_reg_2031 <= grp_fu_573_p2(65 downto 65);
                tmp_176_reg_2042 <= grp_fu_582_p2(65 downto 65);
                tmp_177_reg_2053 <= grp_fu_591_p2(65 downto 65);
                tmp_178_reg_2064 <= grp_fu_600_p2(65 downto 65);
                tmp_179_reg_2075 <= grp_fu_609_p2(65 downto 65);
                tmp_180_reg_2086 <= grp_fu_618_p2(65 downto 65);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1723_pp0_iter3_reg = ap_const_lv1_0))) then
                sum_0_V_1_fu_134 <= sum_0_V_fu_981_p3;
                sum_10_V_1_fu_174 <= sum_10_V_fu_1261_p3;
                sum_11_V_1_fu_178 <= sum_11_V_fu_1289_p3;
                sum_12_V_1_fu_182 <= sum_12_V_fu_1317_p3;
                sum_13_V_1_fu_186 <= sum_13_V_fu_1345_p3;
                sum_14_V_1_fu_190 <= sum_14_V_fu_1373_p3;
                sum_15_V_1_fu_194 <= sum_15_V_fu_1401_p3;
                sum_1_V_1_fu_138 <= sum_1_V_fu_1009_p3;
                sum_2_V_1_fu_142 <= sum_2_V_fu_1037_p3;
                sum_3_V_1_fu_146 <= sum_3_V_fu_1065_p3;
                sum_4_V_1_fu_150 <= sum_4_V_fu_1093_p3;
                sum_5_V_1_fu_154 <= sum_5_V_fu_1121_p3;
                sum_6_V_1_fu_158 <= sum_6_V_fu_1149_p3;
                sum_7_V_1_fu_162 <= sum_7_V_fu_1177_p3;
                sum_8_V_1_fu_166 <= sum_8_V_fu_1205_p3;
                sum_9_V_1_fu_170 <= sum_9_V_fu_1233_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1723_pp0_iter3_reg = ap_const_lv1_0))) then
                sum_0_V_reg_2097 <= sum_0_V_fu_981_p3;
                sum_12_V_reg_2117 <= sum_12_V_fu_1317_p3;
                sum_13_V_reg_2122 <= sum_13_V_fu_1345_p3;
                sum_1_V_reg_2102 <= sum_1_V_fu_1009_p3;
                sum_4_V_reg_2107 <= sum_4_V_fu_1093_p3;
                sum_5_V_reg_2112 <= sum_5_V_fu_1121_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_22_i_reg_1752_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp10_reg_2142 <= tmp10_fu_1543_p2;
                tmp13_reg_2147 <= tmp13_fu_1549_p2;
                tmp3_reg_2127 <= tmp3_fu_1525_p2;
                tmp6_reg_2132 <= tmp6_fu_1531_p2;
                tmp9_reg_2137 <= tmp9_fu_1537_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_285_p2 = ap_const_lv1_0))) then
                tmp_21_i_reg_1732 <= tmp_21_i_fu_309_p2;
                tmp_22_i_reg_1752 <= tmp_22_i_fu_315_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_proc_2_iter_c_V_V_full_n = ap_const_logic_0) or (in_proc_2_iter_r_V_V_full_n = ap_const_logic_0) or (in_quant_iter_r_V_V_empty_n = ap_const_logic_0) or (in_quant_iter_c_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_V_26_reg_1701 <= in_quant_iter_c_V_V_dout;
                tmp_V_reg_1708 <= in_quant_iter_r_V_V_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, in_quant_iter_c_V_V_empty_n, in_quant_iter_r_V_V_empty_n, in_proc_2_iter_r_V_V_full_n, in_proc_2_iter_c_V_V_full_n, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, exitcond_flatten_fu_285_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((in_proc_2_iter_c_V_V_full_n = ap_const_logic_0) or (in_proc_2_iter_r_V_V_full_n = ap_const_logic_0) or (in_quant_iter_r_V_V_empty_n = ap_const_logic_0) or (in_quant_iter_c_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (exitcond_flatten_fu_285_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (exitcond_flatten_fu_285_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state9 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(sum_V_V_full_n, in_quant_V_V_empty_n, in_proc_2_V_V_full_n, ap_enable_reg_pp0_iter5, tmp_22_i_reg_1752_pp0_iter4_reg, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1723, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1723_pp0_iter3_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((exitcond_flatten_reg_1723 = ap_const_lv1_0) and (in_quant_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_22_i_reg_1752_pp0_iter4_reg = ap_const_lv1_1) and (sum_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((in_proc_2_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (exitcond_flatten_reg_1723_pp0_iter3_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(sum_V_V_full_n, in_quant_V_V_empty_n, in_proc_2_V_V_full_n, ap_enable_reg_pp0_iter5, tmp_22_i_reg_1752_pp0_iter4_reg, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1723, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1723_pp0_iter3_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((exitcond_flatten_reg_1723 = ap_const_lv1_0) and (in_quant_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_22_i_reg_1752_pp0_iter4_reg = ap_const_lv1_1) and (sum_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((in_proc_2_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (exitcond_flatten_reg_1723_pp0_iter3_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(sum_V_V_full_n, in_quant_V_V_empty_n, in_proc_2_V_V_full_n, ap_enable_reg_pp0_iter5, tmp_22_i_reg_1752_pp0_iter4_reg, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1723, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1723_pp0_iter3_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((exitcond_flatten_reg_1723 = ap_const_lv1_0) and (in_quant_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_22_i_reg_1752_pp0_iter4_reg = ap_const_lv1_1) and (sum_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((in_proc_2_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (exitcond_flatten_reg_1723_pp0_iter3_reg = ap_const_lv1_0)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, in_quant_iter_c_V_V_empty_n, in_quant_iter_r_V_V_empty_n, in_proc_2_iter_r_V_V_full_n, in_proc_2_iter_c_V_V_full_n)
    begin
                ap_block_state1 <= ((in_proc_2_iter_c_V_V_full_n = ap_const_logic_0) or (in_proc_2_iter_r_V_V_full_n = ap_const_logic_0) or (in_quant_iter_r_V_V_empty_n = ap_const_logic_0) or (in_quant_iter_c_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(in_quant_V_V_empty_n, exitcond_flatten_reg_1723)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((exitcond_flatten_reg_1723 = ap_const_lv1_0) and (in_quant_V_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter4_assign_proc : process(in_proc_2_V_V_full_n, exitcond_flatten_reg_1723_pp0_iter3_reg)
    begin
                ap_block_state7_pp0_stage0_iter4 <= ((in_proc_2_V_V_full_n = ap_const_logic_0) and (exitcond_flatten_reg_1723_pp0_iter3_reg = ap_const_lv1_0));
    end process;


    ap_block_state8_pp0_stage0_iter5_assign_proc : process(sum_V_V_full_n, tmp_22_i_reg_1752_pp0_iter4_reg)
    begin
                ap_block_state8_pp0_stage0_iter5 <= ((tmp_22_i_reg_1752_pp0_iter4_reg = ap_const_lv1_1) and (sum_V_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_flatten_fu_285_p2)
    begin
        if ((exitcond_flatten_fu_285_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    bound_fu_279_p0 <= bound_fu_279_p00(32 - 1 downto 0);
    bound_fu_279_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_26_reg_1701),64));
    bound_fu_279_p1 <= bound_fu_279_p10(32 - 1 downto 0);
    bound_fu_279_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_reg_1708),64));
    bound_fu_279_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound_fu_279_p0) * unsigned(bound_fu_279_p1), 64));
    exitcond_flatten_fu_285_p2 <= "1" when (indvar_flatten_reg_246 = bound_reg_1718) else "0";
    exitcond_i2_fu_296_p2 <= "1" when (l_i_reg_257 = tmp_V_26_reg_1701) else "0";

    grp_fu_483_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_483_ce <= ap_const_logic_1;
        else 
            grp_fu_483_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_483_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_492_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_492_ce <= ap_const_logic_1;
        else 
            grp_fu_492_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_492_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_501_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_501_ce <= ap_const_logic_1;
        else 
            grp_fu_501_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_501_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_510_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_510_ce <= ap_const_logic_1;
        else 
            grp_fu_510_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_510_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_519_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_519_ce <= ap_const_logic_1;
        else 
            grp_fu_519_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_519_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_528_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_528_ce <= ap_const_logic_1;
        else 
            grp_fu_528_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_528_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_537_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_537_ce <= ap_const_logic_1;
        else 
            grp_fu_537_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_537_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_546_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_546_ce <= ap_const_logic_1;
        else 
            grp_fu_546_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_546_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_555_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_555_ce <= ap_const_logic_1;
        else 
            grp_fu_555_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_555_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_564_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_564_ce <= ap_const_logic_1;
        else 
            grp_fu_564_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_564_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_573_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_573_ce <= ap_const_logic_1;
        else 
            grp_fu_573_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_573_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_582_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_582_ce <= ap_const_logic_1;
        else 
            grp_fu_582_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_582_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_591_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_591_ce <= ap_const_logic_1;
        else 
            grp_fu_591_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_591_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_600_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_600_ce <= ap_const_logic_1;
        else 
            grp_fu_600_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_600_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_609_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_609_ce <= ap_const_logic_1;
        else 
            grp_fu_609_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_609_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    grp_fu_618_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_618_ce <= ap_const_logic_1;
        else 
            grp_fu_618_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_618_p0 <= ap_const_lv95_604134FC(32 - 1 downto 0);

    in_proc_2_V_V_blk_n_assign_proc : process(in_proc_2_V_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1723_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (exitcond_flatten_reg_1723_pp0_iter3_reg = ap_const_lv1_0))) then 
            in_proc_2_V_V_blk_n <= in_proc_2_V_V_full_n;
        else 
            in_proc_2_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_proc_2_V_V_din <= (((((((((((((((p_1_14_i_fu_1385_p3 & p_1_13_i_fu_1357_p3) & p_1_12_i_fu_1329_p3) & p_1_11_i_fu_1301_p3) & p_1_10_i_fu_1273_p3) & p_1_i_359_fu_1245_p3) & p_1_9_i_fu_1217_p3) & p_1_8_i_fu_1189_p3) & p_1_7_i_fu_1161_p3) & p_1_6_i_fu_1133_p3) & p_1_5_i_fu_1105_p3) & p_1_4_i_fu_1077_p3) & p_1_3_i_fu_1049_p3) & p_1_2_i_fu_1021_p3) & p_1_1_i_fu_993_p3) & p_1_i_fu_965_p3);

    in_proc_2_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, exitcond_flatten_reg_1723_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1723_pp0_iter3_reg = ap_const_lv1_0))) then 
            in_proc_2_V_V_write <= ap_const_logic_1;
        else 
            in_proc_2_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    in_proc_2_iter_c_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_proc_2_iter_c_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_proc_2_iter_c_V_V_blk_n <= in_proc_2_iter_c_V_V_full_n;
        else 
            in_proc_2_iter_c_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_proc_2_iter_c_V_V_din <= in_quant_iter_c_V_V_dout;

    in_proc_2_iter_c_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_quant_iter_c_V_V_empty_n, in_quant_iter_r_V_V_empty_n, in_proc_2_iter_r_V_V_full_n, in_proc_2_iter_c_V_V_full_n)
    begin
        if ((not(((in_proc_2_iter_c_V_V_full_n = ap_const_logic_0) or (in_proc_2_iter_r_V_V_full_n = ap_const_logic_0) or (in_quant_iter_r_V_V_empty_n = ap_const_logic_0) or (in_quant_iter_c_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_proc_2_iter_c_V_V_write <= ap_const_logic_1;
        else 
            in_proc_2_iter_c_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    in_proc_2_iter_r_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_proc_2_iter_r_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_proc_2_iter_r_V_V_blk_n <= in_proc_2_iter_r_V_V_full_n;
        else 
            in_proc_2_iter_r_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_proc_2_iter_r_V_V_din <= in_quant_iter_r_V_V_dout;

    in_proc_2_iter_r_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_quant_iter_c_V_V_empty_n, in_quant_iter_r_V_V_empty_n, in_proc_2_iter_r_V_V_full_n, in_proc_2_iter_c_V_V_full_n)
    begin
        if ((not(((in_proc_2_iter_c_V_V_full_n = ap_const_logic_0) or (in_proc_2_iter_r_V_V_full_n = ap_const_logic_0) or (in_quant_iter_r_V_V_empty_n = ap_const_logic_0) or (in_quant_iter_c_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_proc_2_iter_r_V_V_write <= ap_const_logic_1;
        else 
            in_proc_2_iter_r_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    in_quant_V_V_blk_n_assign_proc : process(in_quant_V_V_empty_n, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1723)
    begin
        if (((exitcond_flatten_reg_1723 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_quant_V_V_blk_n <= in_quant_V_V_empty_n;
        else 
            in_quant_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_quant_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1723, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_flatten_reg_1723 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in_quant_V_V_read <= ap_const_logic_1;
        else 
            in_quant_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    in_quant_iter_c_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_quant_iter_c_V_V_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_quant_iter_c_V_V_blk_n <= in_quant_iter_c_V_V_empty_n;
        else 
            in_quant_iter_c_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_quant_iter_c_V_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_quant_iter_c_V_V_empty_n, in_quant_iter_r_V_V_empty_n, in_proc_2_iter_r_V_V_full_n, in_proc_2_iter_c_V_V_full_n)
    begin
        if ((not(((in_proc_2_iter_c_V_V_full_n = ap_const_logic_0) or (in_proc_2_iter_r_V_V_full_n = ap_const_logic_0) or (in_quant_iter_r_V_V_empty_n = ap_const_logic_0) or (in_quant_iter_c_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_quant_iter_c_V_V_read <= ap_const_logic_1;
        else 
            in_quant_iter_c_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    in_quant_iter_r_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_quant_iter_r_V_V_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_quant_iter_r_V_V_blk_n <= in_quant_iter_r_V_V_empty_n;
        else 
            in_quant_iter_r_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_quant_iter_r_V_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_quant_iter_c_V_V_empty_n, in_quant_iter_r_V_V_empty_n, in_proc_2_iter_r_V_V_full_n, in_proc_2_iter_c_V_V_full_n)
    begin
        if ((not(((in_proc_2_iter_c_V_V_full_n = ap_const_logic_0) or (in_proc_2_iter_r_V_V_full_n = ap_const_logic_0) or (in_quant_iter_r_V_V_empty_n = ap_const_logic_0) or (in_quant_iter_c_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_quant_iter_r_V_V_read <= ap_const_logic_1;
        else 
            in_quant_iter_r_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next_fu_290_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_246) + unsigned(ap_const_lv64_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    l_fu_320_p2 <= std_logic_vector(unsigned(l_i_mid2_fu_301_p3) + unsigned(ap_const_lv32_1));
    l_i_mid2_fu_301_p3 <= 
        ap_const_lv32_0 when (exitcond_i2_fu_296_p2(0) = '1') else 
        l_i_reg_257;
    p_1_10_i_fu_1273_p3 <= 
        read2_V_1_10_i_fu_1268_p2 when (tmp_176_reg_2042(0) = '1') else 
        read2_V_11_i_reg_2047;
    p_1_11_i_fu_1301_p3 <= 
        read2_V_1_11_i_fu_1296_p2 when (tmp_177_reg_2053(0) = '1') else 
        read2_V_12_i_reg_2058;
    p_1_12_i_fu_1329_p3 <= 
        read2_V_1_12_i_fu_1324_p2 when (tmp_178_reg_2064(0) = '1') else 
        read2_V_13_i_reg_2069;
    p_1_13_i_fu_1357_p3 <= 
        read2_V_1_13_i_fu_1352_p2 when (tmp_179_reg_2075(0) = '1') else 
        read2_V_14_i_reg_2080;
    p_1_14_i_fu_1385_p3 <= 
        read2_V_1_14_i_fu_1380_p2 when (tmp_180_reg_2086(0) = '1') else 
        read2_V_15_i_reg_2091;
    p_1_1_i_fu_993_p3 <= 
        read2_V_1_1_i_fu_988_p2 when (tmp_166_reg_1932(0) = '1') else 
        read2_V_i_357_reg_1937;
    p_1_2_i_fu_1021_p3 <= 
        read2_V_1_2_i_fu_1016_p2 when (tmp_167_reg_1943(0) = '1') else 
        read2_V_2_i_reg_1948;
    p_1_3_i_fu_1049_p3 <= 
        read2_V_1_3_i_fu_1044_p2 when (tmp_168_reg_1954(0) = '1') else 
        read2_V_3_i_reg_1959;
    p_1_4_i_fu_1077_p3 <= 
        read2_V_1_4_i_fu_1072_p2 when (tmp_169_reg_1965(0) = '1') else 
        read2_V_4_i_reg_1970;
    p_1_5_i_fu_1105_p3 <= 
        read2_V_1_5_i_fu_1100_p2 when (tmp_170_reg_1976(0) = '1') else 
        read2_V_5_i_reg_1981;
    p_1_6_i_fu_1133_p3 <= 
        read2_V_1_6_i_fu_1128_p2 when (tmp_171_reg_1987(0) = '1') else 
        read2_V_6_i_reg_1992;
    p_1_7_i_fu_1161_p3 <= 
        read2_V_1_7_i_fu_1156_p2 when (tmp_172_reg_1998(0) = '1') else 
        read2_V_7_i_reg_2003;
    p_1_8_i_fu_1189_p3 <= 
        read2_V_1_8_i_fu_1184_p2 when (tmp_173_reg_2009(0) = '1') else 
        read2_V_8_i_reg_2014;
    p_1_9_i_fu_1217_p3 <= 
        read2_V_1_9_i_fu_1212_p2 when (tmp_174_reg_2020(0) = '1') else 
        read2_V_9_i_reg_2025;
    p_1_i_359_fu_1245_p3 <= 
        read2_V_1_i_358_fu_1240_p2 when (tmp_175_reg_2031(0) = '1') else 
        read2_V_10_i_reg_2036;
    p_1_i_fu_965_p3 <= 
        read2_V_1_i_fu_960_p2 when (tmp_165_reg_1921(0) = '1') else 
        read2_V_i_reg_1926;
        p_2_10_i_fu_1279_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_10_i_fu_1273_p3),32));

        p_2_11_i_fu_1307_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_11_i_fu_1301_p3),32));

        p_2_12_i_fu_1335_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_12_i_fu_1329_p3),32));

        p_2_13_i_fu_1363_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_13_i_fu_1357_p3),32));

        p_2_14_i_fu_1391_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_14_i_fu_1385_p3),32));

        p_2_1_i_fu_999_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_1_i_fu_993_p3),32));

        p_2_2_i_fu_1027_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_2_i_fu_1021_p3),32));

        p_2_3_i_fu_1055_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_3_i_fu_1049_p3),32));

        p_2_4_i_fu_1083_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_4_i_fu_1077_p3),32));

        p_2_5_i_fu_1111_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_5_i_fu_1105_p3),32));

        p_2_6_i_fu_1139_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_6_i_fu_1133_p3),32));

        p_2_7_i_fu_1167_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_7_i_fu_1161_p3),32));

        p_2_8_i_fu_1195_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_8_i_fu_1189_p3),32));

        p_2_9_i_fu_1223_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_9_i_fu_1217_p3),32));

        p_2_i_360_fu_1251_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_i_359_fu_1245_p3),32));

        p_2_i_fu_971_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_i_fu_965_p3),32));

    read2_V_1_10_i_fu_1268_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_11_i_reg_2047));
    read2_V_1_11_i_fu_1296_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_12_i_reg_2058));
    read2_V_1_12_i_fu_1324_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_13_i_reg_2069));
    read2_V_1_13_i_fu_1352_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_14_i_reg_2080));
    read2_V_1_14_i_fu_1380_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_15_i_reg_2091));
    read2_V_1_1_i_fu_988_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_i_357_reg_1937));
    read2_V_1_2_i_fu_1016_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_2_i_reg_1948));
    read2_V_1_3_i_fu_1044_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_3_i_reg_1959));
    read2_V_1_4_i_fu_1072_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_4_i_reg_1970));
    read2_V_1_5_i_fu_1100_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_5_i_reg_1981));
    read2_V_1_6_i_fu_1128_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_6_i_reg_1992));
    read2_V_1_7_i_fu_1156_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_7_i_reg_2003));
    read2_V_1_8_i_fu_1184_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_8_i_reg_2014));
    read2_V_1_9_i_fu_1212_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_9_i_reg_2025));
    read2_V_1_i_358_fu_1240_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_10_i_reg_2036));
    read2_V_1_i_fu_960_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(read2_V_i_reg_1926));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sum_0_V_fu_981_p3 <= 
        p_2_i_fu_971_p1 when (tmp_21_i_reg_1732_pp0_iter3_reg(0) = '1') else 
        tmp_75_i_fu_975_p2;
    sum_10_V_fu_1261_p3 <= 
        p_2_i_360_fu_1251_p1 when (tmp_21_i_reg_1732_pp0_iter3_reg(0) = '1') else 
        tmp_75_i_361_fu_1255_p2;
    sum_11_V_fu_1289_p3 <= 
        p_2_10_i_fu_1279_p1 when (tmp_21_i_reg_1732_pp0_iter3_reg(0) = '1') else 
        tmp_75_10_i_fu_1283_p2;
    sum_12_V_fu_1317_p3 <= 
        p_2_11_i_fu_1307_p1 when (tmp_21_i_reg_1732_pp0_iter3_reg(0) = '1') else 
        tmp_75_11_i_fu_1311_p2;
    sum_13_V_fu_1345_p3 <= 
        p_2_12_i_fu_1335_p1 when (tmp_21_i_reg_1732_pp0_iter3_reg(0) = '1') else 
        tmp_75_12_i_fu_1339_p2;
    sum_14_V_fu_1373_p3 <= 
        p_2_13_i_fu_1363_p1 when (tmp_21_i_reg_1732_pp0_iter3_reg(0) = '1') else 
        tmp_75_13_i_fu_1367_p2;
    sum_15_V_fu_1401_p3 <= 
        p_2_14_i_fu_1391_p1 when (tmp_21_i_reg_1732_pp0_iter3_reg(0) = '1') else 
        tmp_75_14_i_fu_1395_p2;
    sum_1_V_fu_1009_p3 <= 
        p_2_1_i_fu_999_p1 when (tmp_21_i_reg_1732_pp0_iter3_reg(0) = '1') else 
        tmp_75_1_i_fu_1003_p2;
    sum_2_V_fu_1037_p3 <= 
        p_2_2_i_fu_1027_p1 when (tmp_21_i_reg_1732_pp0_iter3_reg(0) = '1') else 
        tmp_75_2_i_fu_1031_p2;
    sum_3_V_fu_1065_p3 <= 
        p_2_3_i_fu_1055_p1 when (tmp_21_i_reg_1732_pp0_iter3_reg(0) = '1') else 
        tmp_75_3_i_fu_1059_p2;
    sum_4_V_fu_1093_p3 <= 
        p_2_4_i_fu_1083_p1 when (tmp_21_i_reg_1732_pp0_iter3_reg(0) = '1') else 
        tmp_75_4_i_fu_1087_p2;
    sum_5_V_fu_1121_p3 <= 
        p_2_5_i_fu_1111_p1 when (tmp_21_i_reg_1732_pp0_iter3_reg(0) = '1') else 
        tmp_75_5_i_fu_1115_p2;
    sum_6_V_fu_1149_p3 <= 
        p_2_6_i_fu_1139_p1 when (tmp_21_i_reg_1732_pp0_iter3_reg(0) = '1') else 
        tmp_75_6_i_fu_1143_p2;
    sum_7_V_fu_1177_p3 <= 
        p_2_7_i_fu_1167_p1 when (tmp_21_i_reg_1732_pp0_iter3_reg(0) = '1') else 
        tmp_75_7_i_fu_1171_p2;
    sum_8_V_fu_1205_p3 <= 
        p_2_8_i_fu_1195_p1 when (tmp_21_i_reg_1732_pp0_iter3_reg(0) = '1') else 
        tmp_75_8_i_fu_1199_p2;
    sum_9_V_fu_1233_p3 <= 
        p_2_9_i_fu_1223_p1 when (tmp_21_i_reg_1732_pp0_iter3_reg(0) = '1') else 
        tmp_75_9_i_fu_1227_p2;

    sum_V_V_blk_n_assign_proc : process(sum_V_V_full_n, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0, tmp_22_i_reg_1752_pp0_iter4_reg)
    begin
        if (((tmp_22_i_reg_1752_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            sum_V_V_blk_n <= sum_V_V_full_n;
        else 
            sum_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    sum_V_V_din <= std_logic_vector(unsigned(tmp7_fu_1592_p2) + unsigned(tmp_fu_1573_p2));

    sum_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, tmp_22_i_reg_1752_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_22_i_reg_1752_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            sum_V_V_write <= ap_const_logic_1;
        else 
            sum_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp10_fu_1543_p2 <= std_logic_vector(unsigned(sum_10_V_fu_1261_p3) + unsigned(sum_11_V_fu_1289_p3));
    tmp11_fu_1587_p2 <= std_logic_vector(unsigned(tmp13_reg_2147) + unsigned(tmp12_fu_1583_p2));
    tmp12_fu_1583_p2 <= std_logic_vector(unsigned(sum_12_V_reg_2117) + unsigned(sum_13_V_reg_2122));
    tmp13_fu_1549_p2 <= std_logic_vector(unsigned(sum_14_V_fu_1373_p3) + unsigned(sum_15_V_fu_1401_p3));
    tmp1_fu_1559_p2 <= std_logic_vector(unsigned(tmp3_reg_2127) + unsigned(tmp2_fu_1555_p2));
    tmp2_fu_1555_p2 <= std_logic_vector(unsigned(sum_0_V_reg_2097) + unsigned(sum_1_V_reg_2102));
    tmp3_fu_1525_p2 <= std_logic_vector(unsigned(sum_2_V_fu_1037_p3) + unsigned(sum_3_V_fu_1065_p3));
    tmp4_fu_1568_p2 <= std_logic_vector(unsigned(tmp6_reg_2132) + unsigned(tmp5_fu_1564_p2));
    tmp5_fu_1564_p2 <= std_logic_vector(unsigned(sum_4_V_reg_2107) + unsigned(sum_5_V_reg_2112));
    tmp6_fu_1531_p2 <= std_logic_vector(unsigned(sum_6_V_fu_1149_p3) + unsigned(sum_7_V_fu_1177_p3));
    tmp7_fu_1592_p2 <= std_logic_vector(unsigned(tmp11_fu_1587_p2) + unsigned(tmp8_fu_1579_p2));
    tmp8_fu_1579_p2 <= std_logic_vector(unsigned(tmp10_reg_2142) + unsigned(tmp9_reg_2137));
    tmp9_fu_1537_p2 <= std_logic_vector(unsigned(sum_8_V_fu_1205_p3) + unsigned(sum_9_V_fu_1233_p3));
    tmp_164_fu_326_p1 <= in_quant_V_V_dout(64 - 1 downto 0);
    tmp_21_i_fu_309_p2 <= "1" when (l_i_mid2_fu_301_p3 = ap_const_lv32_0) else "0";
    tmp_22_i_fu_315_p2 <= "1" when (l_i_mid2_fu_301_p3 = tmp_i_reg_1713) else "0";
    tmp_75_10_i_fu_1283_p2 <= std_logic_vector(signed(p_2_10_i_fu_1279_p1) + signed(sum_11_V_1_fu_178));
    tmp_75_11_i_fu_1311_p2 <= std_logic_vector(signed(p_2_11_i_fu_1307_p1) + signed(sum_12_V_1_fu_182));
    tmp_75_12_i_fu_1339_p2 <= std_logic_vector(signed(p_2_12_i_fu_1335_p1) + signed(sum_13_V_1_fu_186));
    tmp_75_13_i_fu_1367_p2 <= std_logic_vector(signed(p_2_13_i_fu_1363_p1) + signed(sum_14_V_1_fu_190));
    tmp_75_14_i_fu_1395_p2 <= std_logic_vector(signed(p_2_14_i_fu_1391_p1) + signed(sum_15_V_1_fu_194));
    tmp_75_1_i_fu_1003_p2 <= std_logic_vector(signed(p_2_1_i_fu_999_p1) + signed(sum_1_V_1_fu_138));
    tmp_75_2_i_fu_1031_p2 <= std_logic_vector(signed(p_2_2_i_fu_1027_p1) + signed(sum_2_V_1_fu_142));
    tmp_75_3_i_fu_1059_p2 <= std_logic_vector(signed(p_2_3_i_fu_1055_p1) + signed(sum_3_V_1_fu_146));
    tmp_75_4_i_fu_1087_p2 <= std_logic_vector(signed(p_2_4_i_fu_1083_p1) + signed(sum_4_V_1_fu_150));
    tmp_75_5_i_fu_1115_p2 <= std_logic_vector(signed(p_2_5_i_fu_1111_p1) + signed(sum_5_V_1_fu_154));
    tmp_75_6_i_fu_1143_p2 <= std_logic_vector(signed(p_2_6_i_fu_1139_p1) + signed(sum_6_V_1_fu_158));
    tmp_75_7_i_fu_1171_p2 <= std_logic_vector(signed(p_2_7_i_fu_1167_p1) + signed(sum_7_V_1_fu_162));
    tmp_75_8_i_fu_1199_p2 <= std_logic_vector(signed(p_2_8_i_fu_1195_p1) + signed(sum_8_V_1_fu_166));
    tmp_75_9_i_fu_1227_p2 <= std_logic_vector(signed(p_2_9_i_fu_1223_p1) + signed(sum_9_V_1_fu_170));
    tmp_75_i_361_fu_1255_p2 <= std_logic_vector(signed(p_2_i_360_fu_1251_p1) + signed(sum_10_V_1_fu_174));
    tmp_75_i_fu_975_p2 <= std_logic_vector(signed(p_2_i_fu_971_p1) + signed(sum_0_V_1_fu_134));
    tmp_fu_1573_p2 <= std_logic_vector(unsigned(tmp4_fu_1568_p2) + unsigned(tmp1_fu_1559_p2));
    tmp_i_fu_268_p2 <= std_logic_vector(unsigned(tmp_V_26_reg_1701) + unsigned(ap_const_lv32_FFFFFFFF));
end behav;
