-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity softmax is
port (
    in_r_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    in_r_TID : IN STD_LOGIC_VECTOR (7 downto 0);
    in_r_TDEST : IN STD_LOGIC_VECTOR (7 downto 0);
    in_r_TUSER : IN STD_LOGIC_VECTOR (15 downto 0);
    in_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    out_r_TDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    out_r_TID : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_r_TDEST : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_r_TUSER : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_r_TVALID : IN STD_LOGIC;
    in_r_TREADY : OUT STD_LOGIC;
    out_r_TVALID : OUT STD_LOGIC;
    out_r_TREADY : IN STD_LOGIC );
end;


architecture behav of softmax is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "softmax,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu19eg-ffvc1760-2-i,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=4.320000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=130,HLS_SYN_DSP=277,HLS_SYN_FF=60626,HLS_SYN_LUT=55126,HLS_VERSION=2018_3}";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_rst_n_inv : STD_LOGIC;
    signal read_data_U0_ap_start : STD_LOGIC;
    signal read_data_U0_start_full_n : STD_LOGIC;
    signal read_data_U0_ap_done : STD_LOGIC;
    signal read_data_U0_ap_continue : STD_LOGIC;
    signal read_data_U0_ap_idle : STD_LOGIC;
    signal read_data_U0_ap_ready : STD_LOGIC;
    signal read_data_U0_start_out : STD_LOGIC;
    signal read_data_U0_start_write : STD_LOGIC;
    signal read_data_U0_in_r_TREADY : STD_LOGIC;
    signal read_data_U0_in_write_n_V_V_din : STD_LOGIC_VECTOR (95 downto 0);
    signal read_data_U0_in_write_n_V_V_write : STD_LOGIC;
    signal read_data_U0_in_sub_max_r_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal read_data_U0_in_sub_max_r_V_V_write : STD_LOGIC;
    signal read_data_U0_in_sub_max_c_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal read_data_U0_in_sub_max_c_V_V_write : STD_LOGIC;
    signal read_data_U0_max_input_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal read_data_U0_max_input_V_V_write : STD_LOGIC;
    signal read_data_U0_in_sub_max_V_V_din : STD_LOGIC_VECTOR (511 downto 0);
    signal read_data_U0_in_sub_max_V_V_write : STD_LOGIC;
    signal subtract_max_U0_ap_start : STD_LOGIC;
    signal subtract_max_U0_ap_done : STD_LOGIC;
    signal subtract_max_U0_ap_continue : STD_LOGIC;
    signal subtract_max_U0_ap_idle : STD_LOGIC;
    signal subtract_max_U0_ap_ready : STD_LOGIC;
    signal subtract_max_U0_start_out : STD_LOGIC;
    signal subtract_max_U0_start_write : STD_LOGIC;
    signal subtract_max_U0_in_sub_max_c_V_V_read : STD_LOGIC;
    signal subtract_max_U0_in_sub_max_r_V_V_read : STD_LOGIC;
    signal subtract_max_U0_in_proc_1_iter_r_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal subtract_max_U0_in_proc_1_iter_r_V_V_write : STD_LOGIC;
    signal subtract_max_U0_in_proc_1_iter_c_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal subtract_max_U0_in_proc_1_iter_c_V_V_write : STD_LOGIC;
    signal subtract_max_U0_max_input_V_V_read : STD_LOGIC;
    signal subtract_max_U0_in_sub_max_V_V_read : STD_LOGIC;
    signal subtract_max_U0_in_proc_1_V_V_din : STD_LOGIC_VECTOR (511 downto 0);
    signal subtract_max_U0_in_proc_1_V_V_write : STD_LOGIC;
    signal process_1_U0_ap_start : STD_LOGIC;
    signal process_1_U0_ap_done : STD_LOGIC;
    signal process_1_U0_ap_continue : STD_LOGIC;
    signal process_1_U0_ap_idle : STD_LOGIC;
    signal process_1_U0_ap_ready : STD_LOGIC;
    signal process_1_U0_start_out : STD_LOGIC;
    signal process_1_U0_start_write : STD_LOGIC;
    signal process_1_U0_in_proc_1_iter_c_V_V_read : STD_LOGIC;
    signal process_1_U0_in_proc_1_iter_r_V_V_read : STD_LOGIC;
    signal process_1_U0_in_quant_iter_r_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal process_1_U0_in_quant_iter_r_V_V_write : STD_LOGIC;
    signal process_1_U0_in_quant_iter_c_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal process_1_U0_in_quant_iter_c_V_V_write : STD_LOGIC;
    signal process_1_U0_in_proc_1_V_V_read : STD_LOGIC;
    signal process_1_U0_in_quant_V_V_din : STD_LOGIC_VECTOR (1023 downto 0);
    signal process_1_U0_in_quant_V_V_write : STD_LOGIC;
    signal QuantAct_1_channel_m_U0_ap_start : STD_LOGIC;
    signal QuantAct_1_channel_m_U0_ap_done : STD_LOGIC;
    signal QuantAct_1_channel_m_U0_ap_continue : STD_LOGIC;
    signal QuantAct_1_channel_m_U0_ap_idle : STD_LOGIC;
    signal QuantAct_1_channel_m_U0_ap_ready : STD_LOGIC;
    signal QuantAct_1_channel_m_U0_start_out : STD_LOGIC;
    signal QuantAct_1_channel_m_U0_start_write : STD_LOGIC;
    signal QuantAct_1_channel_m_U0_in_quant_iter_c_V_V_read : STD_LOGIC;
    signal QuantAct_1_channel_m_U0_in_quant_iter_r_V_V_read : STD_LOGIC;
    signal QuantAct_1_channel_m_U0_in_proc_2_iter_r_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal QuantAct_1_channel_m_U0_in_proc_2_iter_r_V_V_write : STD_LOGIC;
    signal QuantAct_1_channel_m_U0_in_proc_2_iter_c_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal QuantAct_1_channel_m_U0_in_proc_2_iter_c_V_V_write : STD_LOGIC;
    signal QuantAct_1_channel_m_U0_sum_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal QuantAct_1_channel_m_U0_sum_V_V_write : STD_LOGIC;
    signal QuantAct_1_channel_m_U0_in_quant_V_V_read : STD_LOGIC;
    signal QuantAct_1_channel_m_U0_in_proc_2_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal QuantAct_1_channel_m_U0_in_proc_2_V_V_write : STD_LOGIC;
    signal softmax_divide_preci_U0_ap_start : STD_LOGIC;
    signal softmax_divide_preci_U0_ap_done : STD_LOGIC;
    signal softmax_divide_preci_U0_ap_continue : STD_LOGIC;
    signal softmax_divide_preci_U0_ap_idle : STD_LOGIC;
    signal softmax_divide_preci_U0_ap_ready : STD_LOGIC;
    signal softmax_divide_preci_U0_in_proc_2_iter_c_V_V_read : STD_LOGIC;
    signal softmax_divide_preci_U0_in_proc_2_iter_r_V_V_read : STD_LOGIC;
    signal softmax_divide_preci_U0_in_write_iter_c_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal softmax_divide_preci_U0_in_write_iter_c_V_V_write : STD_LOGIC;
    signal softmax_divide_preci_U0_sum_V_V_read : STD_LOGIC;
    signal softmax_divide_preci_U0_in_proc_2_V_V_read : STD_LOGIC;
    signal softmax_divide_preci_U0_in_write_V_V_din : STD_LOGIC_VECTOR (127 downto 0);
    signal softmax_divide_preci_U0_in_write_V_V_write : STD_LOGIC;
    signal write_U0_ap_start : STD_LOGIC;
    signal write_U0_ap_done : STD_LOGIC;
    signal write_U0_ap_continue : STD_LOGIC;
    signal write_U0_ap_idle : STD_LOGIC;
    signal write_U0_ap_ready : STD_LOGIC;
    signal write_U0_out_r_TDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal write_U0_out_r_TVALID : STD_LOGIC;
    signal write_U0_out_r_TID : STD_LOGIC_VECTOR (7 downto 0);
    signal write_U0_out_r_TDEST : STD_LOGIC_VECTOR (7 downto 0);
    signal write_U0_out_r_TUSER : STD_LOGIC_VECTOR (15 downto 0);
    signal write_U0_out_r_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal write_U0_in_write_n_V_V_read : STD_LOGIC;
    signal write_U0_in_write_iter_c_V_V_read : STD_LOGIC;
    signal write_U0_in_write_V_V_read : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal in_write_n_V_V_full_n : STD_LOGIC;
    signal in_write_n_V_V_dout : STD_LOGIC_VECTOR (95 downto 0);
    signal in_write_n_V_V_empty_n : STD_LOGIC;
    signal in_sub_max_r_V_V_full_n : STD_LOGIC;
    signal in_sub_max_r_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal in_sub_max_r_V_V_empty_n : STD_LOGIC;
    signal in_sub_max_c_V_V_full_n : STD_LOGIC;
    signal in_sub_max_c_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal in_sub_max_c_V_V_empty_n : STD_LOGIC;
    signal max_input_V_V_full_n : STD_LOGIC;
    signal max_input_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal max_input_V_V_empty_n : STD_LOGIC;
    signal in_sub_max_V_V_full_n : STD_LOGIC;
    signal in_sub_max_V_V_dout : STD_LOGIC_VECTOR (511 downto 0);
    signal in_sub_max_V_V_empty_n : STD_LOGIC;
    signal in_proc_1_iter_r_V_V_full_n : STD_LOGIC;
    signal in_proc_1_iter_r_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal in_proc_1_iter_r_V_V_empty_n : STD_LOGIC;
    signal in_proc_1_iter_c_V_V_full_n : STD_LOGIC;
    signal in_proc_1_iter_c_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal in_proc_1_iter_c_V_V_empty_n : STD_LOGIC;
    signal in_proc_1_V_V_full_n : STD_LOGIC;
    signal in_proc_1_V_V_dout : STD_LOGIC_VECTOR (511 downto 0);
    signal in_proc_1_V_V_empty_n : STD_LOGIC;
    signal in_quant_iter_r_V_V_full_n : STD_LOGIC;
    signal in_quant_iter_r_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal in_quant_iter_r_V_V_empty_n : STD_LOGIC;
    signal in_quant_iter_c_V_V_full_n : STD_LOGIC;
    signal in_quant_iter_c_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal in_quant_iter_c_V_V_empty_n : STD_LOGIC;
    signal in_quant_V_V_full_n : STD_LOGIC;
    signal in_quant_V_V_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal in_quant_V_V_empty_n : STD_LOGIC;
    signal in_proc_2_iter_r_V_V_full_n : STD_LOGIC;
    signal in_proc_2_iter_r_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal in_proc_2_iter_r_V_V_empty_n : STD_LOGIC;
    signal in_proc_2_iter_c_V_V_full_n : STD_LOGIC;
    signal in_proc_2_iter_c_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal in_proc_2_iter_c_V_V_empty_n : STD_LOGIC;
    signal sum_V_V_full_n : STD_LOGIC;
    signal sum_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_V_V_empty_n : STD_LOGIC;
    signal in_proc_2_V_V_full_n : STD_LOGIC;
    signal in_proc_2_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal in_proc_2_V_V_empty_n : STD_LOGIC;
    signal in_write_iter_c_V_V_full_n : STD_LOGIC;
    signal in_write_iter_c_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal in_write_iter_c_V_V_empty_n : STD_LOGIC;
    signal in_write_V_V_full_n : STD_LOGIC;
    signal in_write_V_V_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal in_write_V_V_empty_n : STD_LOGIC;
    signal start_for_subtract_max_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_subtract_max_U0_full_n : STD_LOGIC;
    signal start_for_subtract_max_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_subtract_max_U0_empty_n : STD_LOGIC;
    signal start_for_write_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_write_U0_full_n : STD_LOGIC;
    signal start_for_write_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_write_U0_empty_n : STD_LOGIC;
    signal start_for_process_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_process_1_U0_full_n : STD_LOGIC;
    signal start_for_process_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_process_1_U0_empty_n : STD_LOGIC;
    signal start_for_QuantAct_1_channel_m_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_QuantAct_1_channel_m_U0_full_n : STD_LOGIC;
    signal start_for_QuantAct_1_channel_m_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_QuantAct_1_channel_m_U0_empty_n : STD_LOGIC;
    signal start_for_softmax_divide_preci_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_softmax_divide_preci_U0_full_n : STD_LOGIC;
    signal start_for_softmax_divide_preci_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_softmax_divide_preci_U0_empty_n : STD_LOGIC;
    signal softmax_divide_preci_U0_start_full_n : STD_LOGIC;
    signal softmax_divide_preci_U0_start_write : STD_LOGIC;
    signal write_U0_start_full_n : STD_LOGIC;
    signal write_U0_start_write : STD_LOGIC;

    component read_data IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_r_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        in_r_TVALID : IN STD_LOGIC;
        in_r_TREADY : OUT STD_LOGIC;
        in_r_TID : IN STD_LOGIC_VECTOR (7 downto 0);
        in_r_TDEST : IN STD_LOGIC_VECTOR (7 downto 0);
        in_r_TUSER : IN STD_LOGIC_VECTOR (15 downto 0);
        in_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        in_write_n_V_V_din : OUT STD_LOGIC_VECTOR (95 downto 0);
        in_write_n_V_V_full_n : IN STD_LOGIC;
        in_write_n_V_V_write : OUT STD_LOGIC;
        in_sub_max_r_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        in_sub_max_r_V_V_full_n : IN STD_LOGIC;
        in_sub_max_r_V_V_write : OUT STD_LOGIC;
        in_sub_max_c_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        in_sub_max_c_V_V_full_n : IN STD_LOGIC;
        in_sub_max_c_V_V_write : OUT STD_LOGIC;
        max_input_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        max_input_V_V_full_n : IN STD_LOGIC;
        max_input_V_V_write : OUT STD_LOGIC;
        in_sub_max_V_V_din : OUT STD_LOGIC_VECTOR (511 downto 0);
        in_sub_max_V_V_full_n : IN STD_LOGIC;
        in_sub_max_V_V_write : OUT STD_LOGIC );
    end component;


    component subtract_max IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_sub_max_c_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_sub_max_c_V_V_empty_n : IN STD_LOGIC;
        in_sub_max_c_V_V_read : OUT STD_LOGIC;
        in_sub_max_r_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_sub_max_r_V_V_empty_n : IN STD_LOGIC;
        in_sub_max_r_V_V_read : OUT STD_LOGIC;
        in_proc_1_iter_r_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        in_proc_1_iter_r_V_V_full_n : IN STD_LOGIC;
        in_proc_1_iter_r_V_V_write : OUT STD_LOGIC;
        in_proc_1_iter_c_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        in_proc_1_iter_c_V_V_full_n : IN STD_LOGIC;
        in_proc_1_iter_c_V_V_write : OUT STD_LOGIC;
        max_input_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        max_input_V_V_empty_n : IN STD_LOGIC;
        max_input_V_V_read : OUT STD_LOGIC;
        in_sub_max_V_V_dout : IN STD_LOGIC_VECTOR (511 downto 0);
        in_sub_max_V_V_empty_n : IN STD_LOGIC;
        in_sub_max_V_V_read : OUT STD_LOGIC;
        in_proc_1_V_V_din : OUT STD_LOGIC_VECTOR (511 downto 0);
        in_proc_1_V_V_full_n : IN STD_LOGIC;
        in_proc_1_V_V_write : OUT STD_LOGIC );
    end component;


    component process_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_proc_1_iter_c_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_proc_1_iter_c_V_V_empty_n : IN STD_LOGIC;
        in_proc_1_iter_c_V_V_read : OUT STD_LOGIC;
        in_proc_1_iter_r_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_proc_1_iter_r_V_V_empty_n : IN STD_LOGIC;
        in_proc_1_iter_r_V_V_read : OUT STD_LOGIC;
        in_quant_iter_r_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        in_quant_iter_r_V_V_full_n : IN STD_LOGIC;
        in_quant_iter_r_V_V_write : OUT STD_LOGIC;
        in_quant_iter_c_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        in_quant_iter_c_V_V_full_n : IN STD_LOGIC;
        in_quant_iter_c_V_V_write : OUT STD_LOGIC;
        in_proc_1_V_V_dout : IN STD_LOGIC_VECTOR (511 downto 0);
        in_proc_1_V_V_empty_n : IN STD_LOGIC;
        in_proc_1_V_V_read : OUT STD_LOGIC;
        in_quant_V_V_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
        in_quant_V_V_full_n : IN STD_LOGIC;
        in_quant_V_V_write : OUT STD_LOGIC );
    end component;


    component QuantAct_1_channel_m IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_quant_iter_c_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_quant_iter_c_V_V_empty_n : IN STD_LOGIC;
        in_quant_iter_c_V_V_read : OUT STD_LOGIC;
        in_quant_iter_r_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_quant_iter_r_V_V_empty_n : IN STD_LOGIC;
        in_quant_iter_r_V_V_read : OUT STD_LOGIC;
        in_proc_2_iter_r_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        in_proc_2_iter_r_V_V_full_n : IN STD_LOGIC;
        in_proc_2_iter_r_V_V_write : OUT STD_LOGIC;
        in_proc_2_iter_c_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        in_proc_2_iter_c_V_V_full_n : IN STD_LOGIC;
        in_proc_2_iter_c_V_V_write : OUT STD_LOGIC;
        sum_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        sum_V_V_full_n : IN STD_LOGIC;
        sum_V_V_write : OUT STD_LOGIC;
        in_quant_V_V_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
        in_quant_V_V_empty_n : IN STD_LOGIC;
        in_quant_V_V_read : OUT STD_LOGIC;
        in_proc_2_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        in_proc_2_V_V_full_n : IN STD_LOGIC;
        in_proc_2_V_V_write : OUT STD_LOGIC );
    end component;


    component softmax_divide_preci IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_proc_2_iter_c_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_proc_2_iter_c_V_V_empty_n : IN STD_LOGIC;
        in_proc_2_iter_c_V_V_read : OUT STD_LOGIC;
        in_proc_2_iter_r_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_proc_2_iter_r_V_V_empty_n : IN STD_LOGIC;
        in_proc_2_iter_r_V_V_read : OUT STD_LOGIC;
        in_write_iter_c_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        in_write_iter_c_V_V_full_n : IN STD_LOGIC;
        in_write_iter_c_V_V_write : OUT STD_LOGIC;
        sum_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        sum_V_V_empty_n : IN STD_LOGIC;
        sum_V_V_read : OUT STD_LOGIC;
        in_proc_2_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        in_proc_2_V_V_empty_n : IN STD_LOGIC;
        in_proc_2_V_V_read : OUT STD_LOGIC;
        in_write_V_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        in_write_V_V_full_n : IN STD_LOGIC;
        in_write_V_V_write : OUT STD_LOGIC );
    end component;


    component write_r IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_TDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        out_r_TVALID : OUT STD_LOGIC;
        out_r_TREADY : IN STD_LOGIC;
        out_r_TID : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_TDEST : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_TUSER : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        in_write_n_V_V_dout : IN STD_LOGIC_VECTOR (95 downto 0);
        in_write_n_V_V_empty_n : IN STD_LOGIC;
        in_write_n_V_V_read : OUT STD_LOGIC;
        in_write_iter_c_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_write_iter_c_V_V_empty_n : IN STD_LOGIC;
        in_write_iter_c_V_V_read : OUT STD_LOGIC;
        in_write_V_V_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        in_write_V_V_empty_n : IN STD_LOGIC;
        in_write_V_V_read : OUT STD_LOGIC );
    end component;


    component fifo_w96_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (95 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (95 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w512_d32_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (511 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (511 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w512_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (511 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (511 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w1024_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (1023 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (1023 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w256_d32_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (255 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (255 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w128_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (127 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (127 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_subtraceOg IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_write_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_processfYi IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_QuantAcg8j IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_softmaxhbi IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    read_data_U0 : component read_data
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => read_data_U0_ap_start,
        start_full_n => read_data_U0_start_full_n,
        ap_done => read_data_U0_ap_done,
        ap_continue => read_data_U0_ap_continue,
        ap_idle => read_data_U0_ap_idle,
        ap_ready => read_data_U0_ap_ready,
        start_out => read_data_U0_start_out,
        start_write => read_data_U0_start_write,
        in_r_TDATA => in_r_TDATA,
        in_r_TVALID => in_r_TVALID,
        in_r_TREADY => read_data_U0_in_r_TREADY,
        in_r_TID => in_r_TID,
        in_r_TDEST => in_r_TDEST,
        in_r_TUSER => in_r_TUSER,
        in_r_TLAST => in_r_TLAST,
        in_write_n_V_V_din => read_data_U0_in_write_n_V_V_din,
        in_write_n_V_V_full_n => in_write_n_V_V_full_n,
        in_write_n_V_V_write => read_data_U0_in_write_n_V_V_write,
        in_sub_max_r_V_V_din => read_data_U0_in_sub_max_r_V_V_din,
        in_sub_max_r_V_V_full_n => in_sub_max_r_V_V_full_n,
        in_sub_max_r_V_V_write => read_data_U0_in_sub_max_r_V_V_write,
        in_sub_max_c_V_V_din => read_data_U0_in_sub_max_c_V_V_din,
        in_sub_max_c_V_V_full_n => in_sub_max_c_V_V_full_n,
        in_sub_max_c_V_V_write => read_data_U0_in_sub_max_c_V_V_write,
        max_input_V_V_din => read_data_U0_max_input_V_V_din,
        max_input_V_V_full_n => max_input_V_V_full_n,
        max_input_V_V_write => read_data_U0_max_input_V_V_write,
        in_sub_max_V_V_din => read_data_U0_in_sub_max_V_V_din,
        in_sub_max_V_V_full_n => in_sub_max_V_V_full_n,
        in_sub_max_V_V_write => read_data_U0_in_sub_max_V_V_write);

    subtract_max_U0 : component subtract_max
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => subtract_max_U0_ap_start,
        start_full_n => start_for_process_1_U0_full_n,
        ap_done => subtract_max_U0_ap_done,
        ap_continue => subtract_max_U0_ap_continue,
        ap_idle => subtract_max_U0_ap_idle,
        ap_ready => subtract_max_U0_ap_ready,
        start_out => subtract_max_U0_start_out,
        start_write => subtract_max_U0_start_write,
        in_sub_max_c_V_V_dout => in_sub_max_c_V_V_dout,
        in_sub_max_c_V_V_empty_n => in_sub_max_c_V_V_empty_n,
        in_sub_max_c_V_V_read => subtract_max_U0_in_sub_max_c_V_V_read,
        in_sub_max_r_V_V_dout => in_sub_max_r_V_V_dout,
        in_sub_max_r_V_V_empty_n => in_sub_max_r_V_V_empty_n,
        in_sub_max_r_V_V_read => subtract_max_U0_in_sub_max_r_V_V_read,
        in_proc_1_iter_r_V_V_din => subtract_max_U0_in_proc_1_iter_r_V_V_din,
        in_proc_1_iter_r_V_V_full_n => in_proc_1_iter_r_V_V_full_n,
        in_proc_1_iter_r_V_V_write => subtract_max_U0_in_proc_1_iter_r_V_V_write,
        in_proc_1_iter_c_V_V_din => subtract_max_U0_in_proc_1_iter_c_V_V_din,
        in_proc_1_iter_c_V_V_full_n => in_proc_1_iter_c_V_V_full_n,
        in_proc_1_iter_c_V_V_write => subtract_max_U0_in_proc_1_iter_c_V_V_write,
        max_input_V_V_dout => max_input_V_V_dout,
        max_input_V_V_empty_n => max_input_V_V_empty_n,
        max_input_V_V_read => subtract_max_U0_max_input_V_V_read,
        in_sub_max_V_V_dout => in_sub_max_V_V_dout,
        in_sub_max_V_V_empty_n => in_sub_max_V_V_empty_n,
        in_sub_max_V_V_read => subtract_max_U0_in_sub_max_V_V_read,
        in_proc_1_V_V_din => subtract_max_U0_in_proc_1_V_V_din,
        in_proc_1_V_V_full_n => in_proc_1_V_V_full_n,
        in_proc_1_V_V_write => subtract_max_U0_in_proc_1_V_V_write);

    process_1_U0 : component process_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => process_1_U0_ap_start,
        start_full_n => start_for_QuantAct_1_channel_m_U0_full_n,
        ap_done => process_1_U0_ap_done,
        ap_continue => process_1_U0_ap_continue,
        ap_idle => process_1_U0_ap_idle,
        ap_ready => process_1_U0_ap_ready,
        start_out => process_1_U0_start_out,
        start_write => process_1_U0_start_write,
        in_proc_1_iter_c_V_V_dout => in_proc_1_iter_c_V_V_dout,
        in_proc_1_iter_c_V_V_empty_n => in_proc_1_iter_c_V_V_empty_n,
        in_proc_1_iter_c_V_V_read => process_1_U0_in_proc_1_iter_c_V_V_read,
        in_proc_1_iter_r_V_V_dout => in_proc_1_iter_r_V_V_dout,
        in_proc_1_iter_r_V_V_empty_n => in_proc_1_iter_r_V_V_empty_n,
        in_proc_1_iter_r_V_V_read => process_1_U0_in_proc_1_iter_r_V_V_read,
        in_quant_iter_r_V_V_din => process_1_U0_in_quant_iter_r_V_V_din,
        in_quant_iter_r_V_V_full_n => in_quant_iter_r_V_V_full_n,
        in_quant_iter_r_V_V_write => process_1_U0_in_quant_iter_r_V_V_write,
        in_quant_iter_c_V_V_din => process_1_U0_in_quant_iter_c_V_V_din,
        in_quant_iter_c_V_V_full_n => in_quant_iter_c_V_V_full_n,
        in_quant_iter_c_V_V_write => process_1_U0_in_quant_iter_c_V_V_write,
        in_proc_1_V_V_dout => in_proc_1_V_V_dout,
        in_proc_1_V_V_empty_n => in_proc_1_V_V_empty_n,
        in_proc_1_V_V_read => process_1_U0_in_proc_1_V_V_read,
        in_quant_V_V_din => process_1_U0_in_quant_V_V_din,
        in_quant_V_V_full_n => in_quant_V_V_full_n,
        in_quant_V_V_write => process_1_U0_in_quant_V_V_write);

    QuantAct_1_channel_m_U0 : component QuantAct_1_channel_m
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => QuantAct_1_channel_m_U0_ap_start,
        start_full_n => start_for_softmax_divide_preci_U0_full_n,
        ap_done => QuantAct_1_channel_m_U0_ap_done,
        ap_continue => QuantAct_1_channel_m_U0_ap_continue,
        ap_idle => QuantAct_1_channel_m_U0_ap_idle,
        ap_ready => QuantAct_1_channel_m_U0_ap_ready,
        start_out => QuantAct_1_channel_m_U0_start_out,
        start_write => QuantAct_1_channel_m_U0_start_write,
        in_quant_iter_c_V_V_dout => in_quant_iter_c_V_V_dout,
        in_quant_iter_c_V_V_empty_n => in_quant_iter_c_V_V_empty_n,
        in_quant_iter_c_V_V_read => QuantAct_1_channel_m_U0_in_quant_iter_c_V_V_read,
        in_quant_iter_r_V_V_dout => in_quant_iter_r_V_V_dout,
        in_quant_iter_r_V_V_empty_n => in_quant_iter_r_V_V_empty_n,
        in_quant_iter_r_V_V_read => QuantAct_1_channel_m_U0_in_quant_iter_r_V_V_read,
        in_proc_2_iter_r_V_V_din => QuantAct_1_channel_m_U0_in_proc_2_iter_r_V_V_din,
        in_proc_2_iter_r_V_V_full_n => in_proc_2_iter_r_V_V_full_n,
        in_proc_2_iter_r_V_V_write => QuantAct_1_channel_m_U0_in_proc_2_iter_r_V_V_write,
        in_proc_2_iter_c_V_V_din => QuantAct_1_channel_m_U0_in_proc_2_iter_c_V_V_din,
        in_proc_2_iter_c_V_V_full_n => in_proc_2_iter_c_V_V_full_n,
        in_proc_2_iter_c_V_V_write => QuantAct_1_channel_m_U0_in_proc_2_iter_c_V_V_write,
        sum_V_V_din => QuantAct_1_channel_m_U0_sum_V_V_din,
        sum_V_V_full_n => sum_V_V_full_n,
        sum_V_V_write => QuantAct_1_channel_m_U0_sum_V_V_write,
        in_quant_V_V_dout => in_quant_V_V_dout,
        in_quant_V_V_empty_n => in_quant_V_V_empty_n,
        in_quant_V_V_read => QuantAct_1_channel_m_U0_in_quant_V_V_read,
        in_proc_2_V_V_din => QuantAct_1_channel_m_U0_in_proc_2_V_V_din,
        in_proc_2_V_V_full_n => in_proc_2_V_V_full_n,
        in_proc_2_V_V_write => QuantAct_1_channel_m_U0_in_proc_2_V_V_write);

    softmax_divide_preci_U0 : component softmax_divide_preci
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => softmax_divide_preci_U0_ap_start,
        ap_done => softmax_divide_preci_U0_ap_done,
        ap_continue => softmax_divide_preci_U0_ap_continue,
        ap_idle => softmax_divide_preci_U0_ap_idle,
        ap_ready => softmax_divide_preci_U0_ap_ready,
        in_proc_2_iter_c_V_V_dout => in_proc_2_iter_c_V_V_dout,
        in_proc_2_iter_c_V_V_empty_n => in_proc_2_iter_c_V_V_empty_n,
        in_proc_2_iter_c_V_V_read => softmax_divide_preci_U0_in_proc_2_iter_c_V_V_read,
        in_proc_2_iter_r_V_V_dout => in_proc_2_iter_r_V_V_dout,
        in_proc_2_iter_r_V_V_empty_n => in_proc_2_iter_r_V_V_empty_n,
        in_proc_2_iter_r_V_V_read => softmax_divide_preci_U0_in_proc_2_iter_r_V_V_read,
        in_write_iter_c_V_V_din => softmax_divide_preci_U0_in_write_iter_c_V_V_din,
        in_write_iter_c_V_V_full_n => in_write_iter_c_V_V_full_n,
        in_write_iter_c_V_V_write => softmax_divide_preci_U0_in_write_iter_c_V_V_write,
        sum_V_V_dout => sum_V_V_dout,
        sum_V_V_empty_n => sum_V_V_empty_n,
        sum_V_V_read => softmax_divide_preci_U0_sum_V_V_read,
        in_proc_2_V_V_dout => in_proc_2_V_V_dout,
        in_proc_2_V_V_empty_n => in_proc_2_V_V_empty_n,
        in_proc_2_V_V_read => softmax_divide_preci_U0_in_proc_2_V_V_read,
        in_write_V_V_din => softmax_divide_preci_U0_in_write_V_V_din,
        in_write_V_V_full_n => in_write_V_V_full_n,
        in_write_V_V_write => softmax_divide_preci_U0_in_write_V_V_write);

    write_U0 : component write_r
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => write_U0_ap_start,
        ap_done => write_U0_ap_done,
        ap_continue => write_U0_ap_continue,
        ap_idle => write_U0_ap_idle,
        ap_ready => write_U0_ap_ready,
        out_r_TDATA => write_U0_out_r_TDATA,
        out_r_TVALID => write_U0_out_r_TVALID,
        out_r_TREADY => out_r_TREADY,
        out_r_TID => write_U0_out_r_TID,
        out_r_TDEST => write_U0_out_r_TDEST,
        out_r_TUSER => write_U0_out_r_TUSER,
        out_r_TLAST => write_U0_out_r_TLAST,
        in_write_n_V_V_dout => in_write_n_V_V_dout,
        in_write_n_V_V_empty_n => in_write_n_V_V_empty_n,
        in_write_n_V_V_read => write_U0_in_write_n_V_V_read,
        in_write_iter_c_V_V_dout => in_write_iter_c_V_V_dout,
        in_write_iter_c_V_V_empty_n => in_write_iter_c_V_V_empty_n,
        in_write_iter_c_V_V_read => write_U0_in_write_iter_c_V_V_read,
        in_write_V_V_dout => in_write_V_V_dout,
        in_write_V_V_empty_n => in_write_V_V_empty_n,
        in_write_V_V_read => write_U0_in_write_V_V_read);

    in_write_n_V_V_U : component fifo_w96_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_in_write_n_V_V_din,
        if_full_n => in_write_n_V_V_full_n,
        if_write => read_data_U0_in_write_n_V_V_write,
        if_dout => in_write_n_V_V_dout,
        if_empty_n => in_write_n_V_V_empty_n,
        if_read => write_U0_in_write_n_V_V_read);

    in_sub_max_r_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_in_sub_max_r_V_V_din,
        if_full_n => in_sub_max_r_V_V_full_n,
        if_write => read_data_U0_in_sub_max_r_V_V_write,
        if_dout => in_sub_max_r_V_V_dout,
        if_empty_n => in_sub_max_r_V_V_empty_n,
        if_read => subtract_max_U0_in_sub_max_r_V_V_read);

    in_sub_max_c_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_in_sub_max_c_V_V_din,
        if_full_n => in_sub_max_c_V_V_full_n,
        if_write => read_data_U0_in_sub_max_c_V_V_write,
        if_dout => in_sub_max_c_V_V_dout,
        if_empty_n => in_sub_max_c_V_V_empty_n,
        if_read => subtract_max_U0_in_sub_max_c_V_V_read);

    max_input_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_max_input_V_V_din,
        if_full_n => max_input_V_V_full_n,
        if_write => read_data_U0_max_input_V_V_write,
        if_dout => max_input_V_V_dout,
        if_empty_n => max_input_V_V_empty_n,
        if_read => subtract_max_U0_max_input_V_V_read);

    in_sub_max_V_V_U : component fifo_w512_d32_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_in_sub_max_V_V_din,
        if_full_n => in_sub_max_V_V_full_n,
        if_write => read_data_U0_in_sub_max_V_V_write,
        if_dout => in_sub_max_V_V_dout,
        if_empty_n => in_sub_max_V_V_empty_n,
        if_read => subtract_max_U0_in_sub_max_V_V_read);

    in_proc_1_iter_r_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => subtract_max_U0_in_proc_1_iter_r_V_V_din,
        if_full_n => in_proc_1_iter_r_V_V_full_n,
        if_write => subtract_max_U0_in_proc_1_iter_r_V_V_write,
        if_dout => in_proc_1_iter_r_V_V_dout,
        if_empty_n => in_proc_1_iter_r_V_V_empty_n,
        if_read => process_1_U0_in_proc_1_iter_r_V_V_read);

    in_proc_1_iter_c_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => subtract_max_U0_in_proc_1_iter_c_V_V_din,
        if_full_n => in_proc_1_iter_c_V_V_full_n,
        if_write => subtract_max_U0_in_proc_1_iter_c_V_V_write,
        if_dout => in_proc_1_iter_c_V_V_dout,
        if_empty_n => in_proc_1_iter_c_V_V_empty_n,
        if_read => process_1_U0_in_proc_1_iter_c_V_V_read);

    in_proc_1_V_V_U : component fifo_w512_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => subtract_max_U0_in_proc_1_V_V_din,
        if_full_n => in_proc_1_V_V_full_n,
        if_write => subtract_max_U0_in_proc_1_V_V_write,
        if_dout => in_proc_1_V_V_dout,
        if_empty_n => in_proc_1_V_V_empty_n,
        if_read => process_1_U0_in_proc_1_V_V_read);

    in_quant_iter_r_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => process_1_U0_in_quant_iter_r_V_V_din,
        if_full_n => in_quant_iter_r_V_V_full_n,
        if_write => process_1_U0_in_quant_iter_r_V_V_write,
        if_dout => in_quant_iter_r_V_V_dout,
        if_empty_n => in_quant_iter_r_V_V_empty_n,
        if_read => QuantAct_1_channel_m_U0_in_quant_iter_r_V_V_read);

    in_quant_iter_c_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => process_1_U0_in_quant_iter_c_V_V_din,
        if_full_n => in_quant_iter_c_V_V_full_n,
        if_write => process_1_U0_in_quant_iter_c_V_V_write,
        if_dout => in_quant_iter_c_V_V_dout,
        if_empty_n => in_quant_iter_c_V_V_empty_n,
        if_read => QuantAct_1_channel_m_U0_in_quant_iter_c_V_V_read);

    in_quant_V_V_U : component fifo_w1024_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => process_1_U0_in_quant_V_V_din,
        if_full_n => in_quant_V_V_full_n,
        if_write => process_1_U0_in_quant_V_V_write,
        if_dout => in_quant_V_V_dout,
        if_empty_n => in_quant_V_V_empty_n,
        if_read => QuantAct_1_channel_m_U0_in_quant_V_V_read);

    in_proc_2_iter_r_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => QuantAct_1_channel_m_U0_in_proc_2_iter_r_V_V_din,
        if_full_n => in_proc_2_iter_r_V_V_full_n,
        if_write => QuantAct_1_channel_m_U0_in_proc_2_iter_r_V_V_write,
        if_dout => in_proc_2_iter_r_V_V_dout,
        if_empty_n => in_proc_2_iter_r_V_V_empty_n,
        if_read => softmax_divide_preci_U0_in_proc_2_iter_r_V_V_read);

    in_proc_2_iter_c_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => QuantAct_1_channel_m_U0_in_proc_2_iter_c_V_V_din,
        if_full_n => in_proc_2_iter_c_V_V_full_n,
        if_write => QuantAct_1_channel_m_U0_in_proc_2_iter_c_V_V_write,
        if_dout => in_proc_2_iter_c_V_V_dout,
        if_empty_n => in_proc_2_iter_c_V_V_empty_n,
        if_read => softmax_divide_preci_U0_in_proc_2_iter_c_V_V_read);

    sum_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => QuantAct_1_channel_m_U0_sum_V_V_din,
        if_full_n => sum_V_V_full_n,
        if_write => QuantAct_1_channel_m_U0_sum_V_V_write,
        if_dout => sum_V_V_dout,
        if_empty_n => sum_V_V_empty_n,
        if_read => softmax_divide_preci_U0_sum_V_V_read);

    in_proc_2_V_V_U : component fifo_w256_d32_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => QuantAct_1_channel_m_U0_in_proc_2_V_V_din,
        if_full_n => in_proc_2_V_V_full_n,
        if_write => QuantAct_1_channel_m_U0_in_proc_2_V_V_write,
        if_dout => in_proc_2_V_V_dout,
        if_empty_n => in_proc_2_V_V_empty_n,
        if_read => softmax_divide_preci_U0_in_proc_2_V_V_read);

    in_write_iter_c_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => softmax_divide_preci_U0_in_write_iter_c_V_V_din,
        if_full_n => in_write_iter_c_V_V_full_n,
        if_write => softmax_divide_preci_U0_in_write_iter_c_V_V_write,
        if_dout => in_write_iter_c_V_V_dout,
        if_empty_n => in_write_iter_c_V_V_empty_n,
        if_read => write_U0_in_write_iter_c_V_V_read);

    in_write_V_V_U : component fifo_w128_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => softmax_divide_preci_U0_in_write_V_V_din,
        if_full_n => in_write_V_V_full_n,
        if_write => softmax_divide_preci_U0_in_write_V_V_write,
        if_dout => in_write_V_V_dout,
        if_empty_n => in_write_V_V_empty_n,
        if_read => write_U0_in_write_V_V_read);

    start_for_subtraceOg_U : component start_for_subtraceOg
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_subtract_max_U0_din,
        if_full_n => start_for_subtract_max_U0_full_n,
        if_write => read_data_U0_start_write,
        if_dout => start_for_subtract_max_U0_dout,
        if_empty_n => start_for_subtract_max_U0_empty_n,
        if_read => subtract_max_U0_ap_ready);

    start_for_write_U0_U : component start_for_write_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_write_U0_din,
        if_full_n => start_for_write_U0_full_n,
        if_write => read_data_U0_start_write,
        if_dout => start_for_write_U0_dout,
        if_empty_n => start_for_write_U0_empty_n,
        if_read => write_U0_ap_ready);

    start_for_processfYi_U : component start_for_processfYi
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_process_1_U0_din,
        if_full_n => start_for_process_1_U0_full_n,
        if_write => subtract_max_U0_start_write,
        if_dout => start_for_process_1_U0_dout,
        if_empty_n => start_for_process_1_U0_empty_n,
        if_read => process_1_U0_ap_ready);

    start_for_QuantAcg8j_U : component start_for_QuantAcg8j
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_QuantAct_1_channel_m_U0_din,
        if_full_n => start_for_QuantAct_1_channel_m_U0_full_n,
        if_write => process_1_U0_start_write,
        if_dout => start_for_QuantAct_1_channel_m_U0_dout,
        if_empty_n => start_for_QuantAct_1_channel_m_U0_empty_n,
        if_read => QuantAct_1_channel_m_U0_ap_ready);

    start_for_softmaxhbi_U : component start_for_softmaxhbi
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_softmax_divide_preci_U0_din,
        if_full_n => start_for_softmax_divide_preci_U0_full_n,
        if_write => QuantAct_1_channel_m_U0_start_write,
        if_dout => start_for_softmax_divide_preci_U0_dout,
        if_empty_n => start_for_softmax_divide_preci_U0_empty_n,
        if_read => softmax_divide_preci_U0_ap_ready);




    QuantAct_1_channel_m_U0_ap_continue <= ap_const_logic_1;
    QuantAct_1_channel_m_U0_ap_start <= start_for_QuantAct_1_channel_m_U0_empty_n;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_continue <= ap_const_logic_0;
    in_r_TREADY <= read_data_U0_in_r_TREADY;
    out_r_TDATA <= write_U0_out_r_TDATA;
    out_r_TDEST <= write_U0_out_r_TDEST;
    out_r_TID <= write_U0_out_r_TID;
    out_r_TLAST <= write_U0_out_r_TLAST;
    out_r_TUSER <= write_U0_out_r_TUSER;
    out_r_TVALID <= write_U0_out_r_TVALID;
    process_1_U0_ap_continue <= ap_const_logic_1;
    process_1_U0_ap_start <= start_for_process_1_U0_empty_n;
    read_data_U0_ap_continue <= ap_const_logic_1;
    read_data_U0_ap_start <= ap_const_logic_1;
    read_data_U0_start_full_n <= (start_for_write_U0_full_n and start_for_subtract_max_U0_full_n);
    softmax_divide_preci_U0_ap_continue <= ap_const_logic_1;
    softmax_divide_preci_U0_ap_start <= start_for_softmax_divide_preci_U0_empty_n;
    softmax_divide_preci_U0_start_full_n <= ap_const_logic_1;
    softmax_divide_preci_U0_start_write <= ap_const_logic_0;
    start_for_QuantAct_1_channel_m_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_process_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_softmax_divide_preci_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_subtract_max_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_write_U0_din <= (0=>ap_const_logic_1, others=>'-');
    subtract_max_U0_ap_continue <= ap_const_logic_1;
    subtract_max_U0_ap_start <= start_for_subtract_max_U0_empty_n;
    write_U0_ap_continue <= ap_const_logic_1;
    write_U0_ap_start <= start_for_write_U0_empty_n;
    write_U0_start_full_n <= ap_const_logic_1;
    write_U0_start_write <= ap_const_logic_0;
end behav;
