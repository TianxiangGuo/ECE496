// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _write_r_HH_
#define _write_r_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "softmax_mul_mul_1dEe.h"

namespace ap_rtl {

struct write_r : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<512> > out_r_TDATA;
    sc_out< sc_logic > out_r_TVALID;
    sc_in< sc_logic > out_r_TREADY;
    sc_out< sc_lv<8> > out_r_TID;
    sc_out< sc_lv<8> > out_r_TDEST;
    sc_out< sc_lv<16> > out_r_TUSER;
    sc_out< sc_lv<1> > out_r_TLAST;
    sc_in< sc_lv<96> > in_write_n_V_V_dout;
    sc_in< sc_logic > in_write_n_V_V_empty_n;
    sc_out< sc_logic > in_write_n_V_V_read;
    sc_in< sc_lv<32> > in_write_iter_c_V_V_dout;
    sc_in< sc_logic > in_write_iter_c_V_V_empty_n;
    sc_out< sc_logic > in_write_iter_c_V_V_read;
    sc_in< sc_lv<128> > in_write_V_V_dout;
    sc_in< sc_logic > in_write_V_V_empty_n;
    sc_out< sc_logic > in_write_V_V_read;


    // Module declarations
    write_r(sc_module_name name);
    SC_HAS_PROCESS(write_r);

    ~write_r();

    sc_trace_file* mVcdFile;

    softmax_mul_mul_1dEe<1,1,12,16,28>* softmax_mul_mul_1dEe_U71;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<512> > out_V_data_V_1_data_in;
    sc_signal< sc_lv<512> > out_V_data_V_1_data_out;
    sc_signal< sc_logic > out_V_data_V_1_vld_in;
    sc_signal< sc_logic > out_V_data_V_1_vld_out;
    sc_signal< sc_logic > out_V_data_V_1_ack_in;
    sc_signal< sc_logic > out_V_data_V_1_ack_out;
    sc_signal< sc_lv<512> > out_V_data_V_1_payload_A;
    sc_signal< sc_lv<512> > out_V_data_V_1_payload_B;
    sc_signal< sc_logic > out_V_data_V_1_sel_rd;
    sc_signal< sc_logic > out_V_data_V_1_sel_wr;
    sc_signal< sc_logic > out_V_data_V_1_sel;
    sc_signal< sc_logic > out_V_data_V_1_load_A;
    sc_signal< sc_logic > out_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > out_V_data_V_1_state;
    sc_signal< sc_logic > out_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<8> > out_V_id_V_1_data_out;
    sc_signal< sc_logic > out_V_id_V_1_vld_in;
    sc_signal< sc_logic > out_V_id_V_1_vld_out;
    sc_signal< sc_logic > out_V_id_V_1_ack_in;
    sc_signal< sc_logic > out_V_id_V_1_ack_out;
    sc_signal< sc_logic > out_V_id_V_1_sel_rd;
    sc_signal< sc_logic > out_V_id_V_1_sel;
    sc_signal< sc_lv<2> > out_V_id_V_1_state;
    sc_signal< sc_lv<8> > out_V_dest_V_1_data_out;
    sc_signal< sc_logic > out_V_dest_V_1_vld_in;
    sc_signal< sc_logic > out_V_dest_V_1_vld_out;
    sc_signal< sc_logic > out_V_dest_V_1_ack_in;
    sc_signal< sc_logic > out_V_dest_V_1_ack_out;
    sc_signal< sc_logic > out_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > out_V_dest_V_1_sel;
    sc_signal< sc_lv<2> > out_V_dest_V_1_state;
    sc_signal< sc_lv<16> > out_V_user_V_1_data_in;
    sc_signal< sc_lv<16> > out_V_user_V_1_data_out;
    sc_signal< sc_logic > out_V_user_V_1_vld_in;
    sc_signal< sc_logic > out_V_user_V_1_vld_out;
    sc_signal< sc_logic > out_V_user_V_1_ack_in;
    sc_signal< sc_logic > out_V_user_V_1_ack_out;
    sc_signal< sc_lv<16> > out_V_user_V_1_payload_A;
    sc_signal< sc_lv<16> > out_V_user_V_1_payload_B;
    sc_signal< sc_logic > out_V_user_V_1_sel_rd;
    sc_signal< sc_logic > out_V_user_V_1_sel_wr;
    sc_signal< sc_logic > out_V_user_V_1_sel;
    sc_signal< sc_logic > out_V_user_V_1_load_A;
    sc_signal< sc_logic > out_V_user_V_1_load_B;
    sc_signal< sc_lv<2> > out_V_user_V_1_state;
    sc_signal< sc_logic > out_V_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > out_V_last_V_1_data_in;
    sc_signal< sc_lv<1> > out_V_last_V_1_data_out;
    sc_signal< sc_logic > out_V_last_V_1_vld_in;
    sc_signal< sc_logic > out_V_last_V_1_vld_out;
    sc_signal< sc_logic > out_V_last_V_1_ack_in;
    sc_signal< sc_logic > out_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > out_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > out_V_last_V_1_payload_B;
    sc_signal< sc_logic > out_V_last_V_1_sel_rd;
    sc_signal< sc_logic > out_V_last_V_1_sel_wr;
    sc_signal< sc_logic > out_V_last_V_1_sel;
    sc_signal< sc_logic > out_V_last_V_1_load_A;
    sc_signal< sc_logic > out_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > out_V_last_V_1_state;
    sc_signal< sc_logic > out_V_last_V_1_state_cmp_full;
    sc_signal< sc_logic > out_r_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > or_cond1_i_reg_713;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > or_cond1_i_reg_713_pp0_iter1_reg;
    sc_signal< sc_logic > in_write_n_V_V_blk_n;
    sc_signal< sc_logic > in_write_iter_c_V_V_blk_n;
    sc_signal< sc_logic > in_write_V_V_blk_n;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_692;
    sc_signal< sc_lv<28> > indvar_flatten_reg_194;
    sc_signal< sc_lv<12> > t_V_reg_205;
    sc_signal< sc_lv<512> > p_Result_s_fu_334_p5;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<16> > out_data_user_V_fu_357_p2;
    sc_signal< sc_lv<16> > out_data_user_V_reg_661;
    sc_signal< sc_lv<16> > tmp_5_fu_364_p1;
    sc_signal< sc_lv<16> > tmp_5_reg_666;
    sc_signal< sc_lv<28> > tmp_2_reg_671;
    sc_signal< sc_lv<12> > tmp_reg_676;
    sc_signal< sc_lv<29> > op2_assign_fu_391_p2;
    sc_signal< sc_lv<29> > op2_assign_reg_682;
    sc_signal< sc_lv<28> > bound_fu_626_p2;
    sc_signal< sc_lv<28> > bound_reg_687;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_403_p2;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_io;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_io;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<28> > indvar_flatten_next_fu_408_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<2> > ret_V_fu_427_p1;
    sc_signal< sc_lv<2> > ret_V_reg_701;
    sc_signal< sc_lv<1> > out_data_last_V_fu_453_p2;
    sc_signal< sc_lv<1> > out_data_last_V_reg_708;
    sc_signal< sc_lv<1> > or_cond1_i_fu_458_p2;
    sc_signal< sc_lv<12> > i_V_fu_464_p2;
    sc_signal< sc_lv<512> > tmp_data_V_1_fu_613_p5;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_lv<128> > temp_V_0_1_i_fu_138;
    sc_signal< sc_lv<128> > temp_V_0_3_i_fu_585_p3;
    sc_signal< sc_lv<128> > temp_V_1_1_i_fu_142;
    sc_signal< sc_lv<128> > temp_V_1_3_i_fu_577_p3;
    sc_signal< sc_lv<128> > temp_V_2_1_i_fu_146;
    sc_signal< sc_lv<128> > temp_V_2_3_i_fu_561_p3;
    sc_signal< sc_lv<128> > temp_V_3_1_i_fu_150;
    sc_signal< sc_lv<128> > temp_V_3_3_i_fu_537_p3;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<26> > tmp_4_fu_250_p4;
    sc_signal< sc_lv<6> > NN_c_2_cast_i_fu_230_p4;
    sc_signal< sc_lv<32> > NN_c_2_fu_220_p4;
    sc_signal< sc_lv<32> > tmp_3_i_fu_272_p2;
    sc_signal< sc_lv<26> > tmp_1_fu_278_p4;
    sc_signal< sc_lv<1> > icmp_fu_260_p2;
    sc_signal< sc_lv<32> > NN_c_fu_288_p3;
    sc_signal< sc_lv<1> > tmp_2_i_fu_266_p2;
    sc_signal< sc_lv<1> > sel_tmp5_fu_304_p2;
    sc_signal< sc_lv<1> > sel_tmp6_fu_310_p2;
    sc_signal< sc_lv<32> > sel_tmp4_fu_296_p3;
    sc_signal< sc_lv<32> > unquant_N_fu_240_p4;
    sc_signal< sc_lv<32> > val_assign_fu_316_p3;
    sc_signal< sc_lv<32> > N_r_fu_216_p1;
    sc_signal< sc_lv<96> > tmp_9_i_fu_324_p4;
    sc_signal< sc_lv<16> > tmp_6_i_fu_347_p4;
    sc_signal< sc_lv<29> > tmp_cast_i_fu_388_p1;
    sc_signal< sc_lv<1> > exitcond2_fu_414_p2;
    sc_signal< sc_lv<12> > t_V_1_mid2_fu_419_p3;
    sc_signal< sc_lv<1> > tmp_12_i_fu_431_p2;
    sc_signal< sc_lv<1> > tmp_13_i_fu_437_p2;
    sc_signal< sc_lv<29> > tmp_14_cast_i_fu_449_p1;
    sc_signal< sc_lv<1> > or_cond_i_fu_443_p2;
    sc_signal< sc_lv<1> > tmp_7_i_fu_482_p2;
    sc_signal< sc_lv<1> > sel_tmp_fu_511_p2;
    sc_signal< sc_lv<128> > p_temp_V_3_1_i_fu_487_p3;
    sc_signal< sc_lv<1> > sel_tmp2_fu_524_p2;
    sc_signal< sc_lv<128> > sel_tmp1_fu_516_p3;
    sc_signal< sc_lv<128> > sel_tmp3_fu_529_p3;
    sc_signal< sc_lv<128> > p_temp_V_2_1_i_fu_495_p3;
    sc_signal< sc_lv<128> > sel_tmp7_fu_545_p3;
    sc_signal< sc_lv<128> > sel_tmp9_fu_553_p3;
    sc_signal< sc_lv<128> > p_temp_V_1_1_i_fu_503_p3;
    sc_signal< sc_lv<128> > sel_tmp8_fu_569_p3;
    sc_signal< sc_lv<12> > bound_fu_626_p0;
    sc_signal< sc_lv<16> > bound_fu_626_p1;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< bool > ap_block_state6;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<28> > bound_fu_626_p00;
    sc_signal< sc_lv<28> > bound_fu_626_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<28> ap_const_lv28_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_25;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_5F;
    static const sc_lv<32> ap_const_lv32_26;
    static const sc_lv<26> ap_const_lv26_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<512> ap_const_lv512_lc_1;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<32> ap_const_lv32_24;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<29> ap_const_lv29_1FFFFFFF;
    static const sc_lv<28> ap_const_lv28_1;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<128> ap_const_lv128_lc_1;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_NN_c_2_cast_i_fu_230_p4();
    void thread_NN_c_2_fu_220_p4();
    void thread_NN_c_fu_288_p3();
    void thread_N_r_fu_216_p1();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_io();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_io();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state6();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_bound_fu_626_p0();
    void thread_bound_fu_626_p00();
    void thread_bound_fu_626_p1();
    void thread_bound_fu_626_p10();
    void thread_exitcond2_fu_414_p2();
    void thread_exitcond_flatten_fu_403_p2();
    void thread_i_V_fu_464_p2();
    void thread_icmp_fu_260_p2();
    void thread_in_write_V_V_blk_n();
    void thread_in_write_V_V_read();
    void thread_in_write_iter_c_V_V_blk_n();
    void thread_in_write_iter_c_V_V_read();
    void thread_in_write_n_V_V_blk_n();
    void thread_in_write_n_V_V_read();
    void thread_indvar_flatten_next_fu_408_p2();
    void thread_op2_assign_fu_391_p2();
    void thread_or_cond1_i_fu_458_p2();
    void thread_or_cond_i_fu_443_p2();
    void thread_out_V_data_V_1_ack_in();
    void thread_out_V_data_V_1_ack_out();
    void thread_out_V_data_V_1_data_in();
    void thread_out_V_data_V_1_data_out();
    void thread_out_V_data_V_1_load_A();
    void thread_out_V_data_V_1_load_B();
    void thread_out_V_data_V_1_sel();
    void thread_out_V_data_V_1_state_cmp_full();
    void thread_out_V_data_V_1_vld_in();
    void thread_out_V_data_V_1_vld_out();
    void thread_out_V_dest_V_1_ack_in();
    void thread_out_V_dest_V_1_ack_out();
    void thread_out_V_dest_V_1_data_out();
    void thread_out_V_dest_V_1_sel();
    void thread_out_V_dest_V_1_vld_in();
    void thread_out_V_dest_V_1_vld_out();
    void thread_out_V_id_V_1_ack_in();
    void thread_out_V_id_V_1_ack_out();
    void thread_out_V_id_V_1_data_out();
    void thread_out_V_id_V_1_sel();
    void thread_out_V_id_V_1_vld_in();
    void thread_out_V_id_V_1_vld_out();
    void thread_out_V_last_V_1_ack_in();
    void thread_out_V_last_V_1_ack_out();
    void thread_out_V_last_V_1_data_in();
    void thread_out_V_last_V_1_data_out();
    void thread_out_V_last_V_1_load_A();
    void thread_out_V_last_V_1_load_B();
    void thread_out_V_last_V_1_sel();
    void thread_out_V_last_V_1_state_cmp_full();
    void thread_out_V_last_V_1_vld_in();
    void thread_out_V_last_V_1_vld_out();
    void thread_out_V_user_V_1_ack_in();
    void thread_out_V_user_V_1_ack_out();
    void thread_out_V_user_V_1_data_in();
    void thread_out_V_user_V_1_data_out();
    void thread_out_V_user_V_1_load_A();
    void thread_out_V_user_V_1_load_B();
    void thread_out_V_user_V_1_sel();
    void thread_out_V_user_V_1_state_cmp_full();
    void thread_out_V_user_V_1_vld_in();
    void thread_out_V_user_V_1_vld_out();
    void thread_out_data_last_V_fu_453_p2();
    void thread_out_data_user_V_fu_357_p2();
    void thread_out_r_TDATA();
    void thread_out_r_TDATA_blk_n();
    void thread_out_r_TDEST();
    void thread_out_r_TID();
    void thread_out_r_TLAST();
    void thread_out_r_TUSER();
    void thread_out_r_TVALID();
    void thread_p_Result_s_fu_334_p5();
    void thread_p_temp_V_1_1_i_fu_503_p3();
    void thread_p_temp_V_2_1_i_fu_495_p3();
    void thread_p_temp_V_3_1_i_fu_487_p3();
    void thread_ret_V_fu_427_p1();
    void thread_sel_tmp1_fu_516_p3();
    void thread_sel_tmp2_fu_524_p2();
    void thread_sel_tmp3_fu_529_p3();
    void thread_sel_tmp4_fu_296_p3();
    void thread_sel_tmp5_fu_304_p2();
    void thread_sel_tmp6_fu_310_p2();
    void thread_sel_tmp7_fu_545_p3();
    void thread_sel_tmp8_fu_569_p3();
    void thread_sel_tmp9_fu_553_p3();
    void thread_sel_tmp_fu_511_p2();
    void thread_t_V_1_mid2_fu_419_p3();
    void thread_temp_V_0_3_i_fu_585_p3();
    void thread_temp_V_1_3_i_fu_577_p3();
    void thread_temp_V_2_3_i_fu_561_p3();
    void thread_temp_V_3_3_i_fu_537_p3();
    void thread_tmp_12_i_fu_431_p2();
    void thread_tmp_13_i_fu_437_p2();
    void thread_tmp_14_cast_i_fu_449_p1();
    void thread_tmp_1_fu_278_p4();
    void thread_tmp_2_i_fu_266_p2();
    void thread_tmp_3_i_fu_272_p2();
    void thread_tmp_4_fu_250_p4();
    void thread_tmp_5_fu_364_p1();
    void thread_tmp_6_i_fu_347_p4();
    void thread_tmp_7_i_fu_482_p2();
    void thread_tmp_9_i_fu_324_p4();
    void thread_tmp_cast_i_fu_388_p1();
    void thread_tmp_data_V_1_fu_613_p5();
    void thread_unquant_N_fu_240_p4();
    void thread_val_assign_fu_316_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
